/*!
 * coinentry.js - coin entry object for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */'use strict';function cov_k6iea48bt(){var path="E:\\Projects\\Test\\bcoin\\lib\\coins\\coinentry.js";var hash="7f2038a1421d7cf1c76b7f77c1e5a51c89745981";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\Projects\\Test\\bcoin\\lib\\coins\\coinentry.js",statementMap:{"0":{start:{line:9,column:15},end:{line:9,column:31}},"1":{start:{line:10,column:12},end:{line:10,column:28}},"2":{start:{line:11,column:13},end:{line:11,column:42}},"3":{start:{line:12,column:15},end:{line:12,column:46}},"4":{start:{line:13,column:17},end:{line:13,column:38}},"5":{start:{line:14,column:19},end:{line:14,column:22}},"6":{start:{line:20,column:18},end:{line:20,column:19}},"7":{start:{line:21,column:19},end:{line:21,column:54}},"8":{start:{line:43,column:4},end:{line:43,column:21}},"9":{start:{line:44,column:4},end:{line:44,column:21}},"10":{start:{line:45,column:4},end:{line:45,column:26}},"11":{start:{line:46,column:4},end:{line:46,column:31}},"12":{start:{line:47,column:4},end:{line:47,column:23}},"13":{start:{line:48,column:4},end:{line:48,column:20}},"14":{start:{line:57,column:4},end:{line:57,column:23}},"15":{start:{line:67,column:17},end:{line:67,column:27}},"16":{start:{line:68,column:4},end:{line:68,column:32}},"17":{start:{line:69,column:4},end:{line:69,column:30}},"18":{start:{line:70,column:4},end:{line:70,column:34}},"19":{start:{line:71,column:4},end:{line:71,column:37}},"20":{start:{line:72,column:4},end:{line:72,column:35}},"21":{start:{line:73,column:4},end:{line:73,column:29}},"22":{start:{line:74,column:4},end:{line:74,column:31}},"23":{start:{line:75,column:4},end:{line:75,column:16}},"24":{start:{line:85,column:4},end:{line:85,column:25}},"25":{start:{line:86,column:4},end:{line:86,column:16}},"26":{start:{line:97,column:4},end:{line:97,column:41}},"27":{start:{line:107,column:4},end:{line:107,column:32}},"28":{start:{line:108,column:4},end:{line:108,column:30}},"29":{start:{line:109,column:4},end:{line:109,column:34}},"30":{start:{line:110,column:4},end:{line:110,column:37}},"31":{start:{line:111,column:4},end:{line:111,column:35}},"32":{start:{line:112,column:4},end:{line:112,column:16}},"33":{start:{line:123,column:4},end:{line:123,column:37}},"34":{start:{line:133,column:4},end:{line:133,column:38}},"35":{start:{line:134,column:4},end:{line:134,column:39}},"36":{start:{line:135,column:4},end:{line:135,column:52}},"37":{start:{line:136,column:4},end:{line:136,column:30}},"38":{start:{line:137,column:4},end:{line:137,column:25}},"39":{start:{line:138,column:4},end:{line:138,column:36}},"40":{start:{line:139,column:4},end:{line:139,column:36}},"41":{start:{line:140,column:4},end:{line:140,column:16}},"42":{start:{line:151,column:4},end:{line:151,column:48}},"43":{start:{line:160,column:4},end:{line:161,column:29}},"44":{start:{line:161,column:6},end:{line:161,column:29}},"45":{start:{line:163,column:15},end:{line:163,column:16}},"46":{start:{line:164,column:4},end:{line:164,column:46}},"47":{start:{line:165,column:4},end:{line:165,column:14}},"48":{start:{line:166,column:4},end:{line:166,column:39}},"49":{start:{line:168,column:4},end:{line:168,column:16}},"50":{start:{line:177,column:4},end:{line:180,column:5}},"51":{start:{line:178,column:6},end:{line:178,column:30}},"52":{start:{line:179,column:6},end:{line:179,column:16}},"53":{start:{line:182,column:17},end:{line:182,column:28}},"54":{start:{line:183,column:16},end:{line:183,column:17}},"55":{start:{line:185,column:4},end:{line:186,column:17}},"56":{start:{line:186,column:6},end:{line:186,column:17}},"57":{start:{line:188,column:4},end:{line:189,column:26}},"58":{start:{line:189,column:6},end:{line:189,column:26}},"59":{start:{line:191,column:4},end:{line:191,column:33}},"60":{start:{line:193,column:4},end:{line:193,column:33}},"61":{start:{line:194,column:4},end:{line:194,column:23}},"62":{start:{line:195,column:4},end:{line:195,column:35}},"63":{start:{line:197,column:4},end:{line:197,column:14}},"64":{start:{line:206,column:4},end:{line:207,column:22}},"65":{start:{line:207,column:6},end:{line:207,column:22}},"66":{start:{line:209,column:17},end:{line:209,column:31}},"67":{start:{line:210,column:15},end:{line:210,column:30}},"68":{start:{line:212,column:4},end:{line:212,column:22}},"69":{start:{line:214,column:4},end:{line:214,column:27}},"70":{start:{line:216,column:4},end:{line:216,column:20}},"71":{start:{line:226,column:20},end:{line:226,column:35}},"72":{start:{line:227,column:18},end:{line:227,column:30}},"73":{start:{line:229,column:17},end:{line:229,column:36}},"74":{start:{line:231,column:4},end:{line:232,column:18}},"75":{start:{line:232,column:6},end:{line:232,column:18}},"76":{start:{line:234,column:4},end:{line:234,column:27}},"77":{start:{line:235,column:4},end:{line:235,column:38}},"78":{start:{line:236,column:4},end:{line:236,column:25}},"79":{start:{line:238,column:4},end:{line:238,column:37}},"80":{start:{line:240,column:4},end:{line:240,column:16}},"81":{start:{line:250,column:4},end:{line:250,column:39}},"82":{start:{line:260,column:4},end:{line:260,column:36}},"83":{start:{line:261,column:4},end:{line:261,column:20}},"84":{start:{line:262,column:4},end:{line:262,column:16}},"85":{start:{line:272,column:4},end:{line:272,column:36}},"86":{start:{line:280,column:0},end:{line:280,column:27}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:42,column:2},end:{line:42,column:3}},loc:{start:{line:42,column:16},end:{line:49,column:3}},line:42},"1":{name:"(anonymous_1)",decl:{start:{line:56,column:2},end:{line:56,column:3}},loc:{start:{line:56,column:13},end:{line:58,column:3}},line:56},"2":{name:"(anonymous_2)",decl:{start:{line:66,column:2},end:{line:66,column:3}},loc:{start:{line:66,column:18},end:{line:76,column:3}},line:66},"3":{name:"(anonymous_3)",decl:{start:{line:84,column:2},end:{line:84,column:3}},loc:{start:{line:84,column:21},end:{line:87,column:3}},line:84},"4":{name:"(anonymous_4)",decl:{start:{line:96,column:2},end:{line:96,column:3}},loc:{start:{line:96,column:28},end:{line:98,column:3}},line:96},"5":{name:"(anonymous_5)",decl:{start:{line:106,column:2},end:{line:106,column:3}},loc:{start:{line:106,column:17},end:{line:113,column:3}},line:106},"6":{name:"(anonymous_6)",decl:{start:{line:122,column:2},end:{line:122,column:3}},loc:{start:{line:122,column:24},end:{line:124,column:3}},line:122},"7":{name:"(anonymous_7)",decl:{start:{line:132,column:2},end:{line:132,column:3}},loc:{start:{line:132,column:28},end:{line:141,column:3}},line:132},"8":{name:"(anonymous_8)",decl:{start:{line:150,column:2},end:{line:150,column:3}},loc:{start:{line:150,column:35},end:{line:152,column:3}},line:150},"9":{name:"(anonymous_9)",decl:{start:{line:159,column:2},end:{line:159,column:3}},loc:{start:{line:159,column:12},end:{line:169,column:3}},line:159},"10":{name:"(anonymous_10)",decl:{start:{line:176,column:2},end:{line:176,column:3}},loc:{start:{line:176,column:15},end:{line:198,column:3}},line:176},"11":{name:"(anonymous_11)",decl:{start:{line:205,column:2},end:{line:205,column:3}},loc:{start:{line:205,column:10},end:{line:217,column:3}},line:205},"12":{name:"(anonymous_12)",decl:{start:{line:225,column:2},end:{line:225,column:3}},loc:{start:{line:225,column:17},end:{line:241,column:3}},line:225},"13":{name:"(anonymous_13)",decl:{start:{line:249,column:2},end:{line:249,column:3}},loc:{start:{line:249,column:26},end:{line:251,column:3}},line:249},"14":{name:"(anonymous_14)",decl:{start:{line:259,column:2},end:{line:259,column:3}},loc:{start:{line:259,column:16},end:{line:263,column:3}},line:259},"15":{name:"(anonymous_15)",decl:{start:{line:271,column:2},end:{line:271,column:3}},loc:{start:{line:271,column:23},end:{line:273,column:3}},line:271}},branchMap:{"0":{loc:{start:{line:135,column:11},end:{line:135,column:50}},type:"binary-expr",locations:[{start:{line:135,column:11},end:{line:135,column:21}},{start:{line:135,column:25},end:{line:135,column:50}}],line:135},"1":{loc:{start:{line:160,column:4},end:{line:161,column:29}},type:"if",locations:[{start:{line:160,column:4},end:{line:161,column:29}},{start:{line:160,column:4},end:{line:161,column:29}}],line:160},"2":{loc:{start:{line:177,column:4},end:{line:180,column:5}},type:"if",locations:[{start:{line:177,column:4},end:{line:180,column:5}},{start:{line:177,column:4},end:{line:180,column:5}}],line:177},"3":{loc:{start:{line:185,column:4},end:{line:186,column:17}},type:"if",locations:[{start:{line:185,column:4},end:{line:186,column:17}},{start:{line:185,column:4},end:{line:186,column:17}}],line:185},"4":{loc:{start:{line:188,column:4},end:{line:189,column:26}},type:"if",locations:[{start:{line:188,column:4},end:{line:189,column:26}},{start:{line:188,column:4},end:{line:189,column:26}}],line:188},"5":{loc:{start:{line:206,column:4},end:{line:207,column:22}},type:"if",locations:[{start:{line:206,column:4},end:{line:207,column:22}},{start:{line:206,column:4},end:{line:207,column:22}}],line:206},"6":{loc:{start:{line:231,column:4},end:{line:232,column:18}},type:"if",locations:[{start:{line:231,column:4},end:{line:232,column:18}},{start:{line:231,column:4},end:{line:232,column:18}}],line:231}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"7f2038a1421d7cf1c76b7f77c1e5a51c89745981"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_k6iea48bt=function(){return actualCoverage;};}return actualCoverage;}cov_k6iea48bt();const assert=(cov_k6iea48bt().s[0]++,require('bsert'));const bio=(cov_k6iea48bt().s[1]++,require('bufio'));const Coin=(cov_k6iea48bt().s[2]++,require('../primitives/coin'));const Output=(cov_k6iea48bt().s[3]++,require('../primitives/output'));const compress=(cov_k6iea48bt().s[4]++,require('./compress'));const{encoding}=(cov_k6iea48bt().s[5]++,bio);/*
 * Constants
 */const NUM_FLAGS=(cov_k6iea48bt().s[6]++,1);const MAX_HEIGHT=(cov_k6iea48bt().s[7]++,(1<<32-NUM_FLAGS>>>0)-1);/**
 * Coin Entry
 * Represents an unspent output.
 * @alias module:coins.CoinEntry
 * @property {Number} version - Transaction version.
 * @property {Number} height - Transaction height (-1 if unconfirmed).
 * @property {Boolean} coinbase - Whether the containing
 * transaction is a coinbase.
 * @property {Output} output
 * @property {Boolean} spent
 * @property {Buffer} raw
 */class CoinEntry{/**
   * Create a coin entry.
   * @constructor
   */constructor(){cov_k6iea48bt().f[0]++;cov_k6iea48bt().s[8]++;this.version=1;cov_k6iea48bt().s[9]++;this.height=-1;cov_k6iea48bt().s[10]++;this.coinbase=false;cov_k6iea48bt().s[11]++;this.output=new Output();cov_k6iea48bt().s[12]++;this.spent=false;cov_k6iea48bt().s[13]++;this.raw=null;}/**
   * Convert coin entry to an output.
   * @returns {Output}
   */toOutput(){cov_k6iea48bt().f[1]++;cov_k6iea48bt().s[14]++;return this.output;}/**
   * Convert coin entry to a coin.
   * @param {Outpoint} prevout
   * @returns {Coin}
   */toCoin(prevout){cov_k6iea48bt().f[2]++;const coin=(cov_k6iea48bt().s[15]++,new Coin());cov_k6iea48bt().s[16]++;coin.version=this.version;cov_k6iea48bt().s[17]++;coin.height=this.height;cov_k6iea48bt().s[18]++;coin.coinbase=this.coinbase;cov_k6iea48bt().s[19]++;coin.script=this.output.script;cov_k6iea48bt().s[20]++;coin.value=this.output.value;cov_k6iea48bt().s[21]++;coin.hash=prevout.hash;cov_k6iea48bt().s[22]++;coin.index=prevout.index;cov_k6iea48bt().s[23]++;return coin;}/**
   * Inject properties from TX.
   * @param {TX} tx
   * @param {Number} index
   */fromOutput(output){cov_k6iea48bt().f[3]++;cov_k6iea48bt().s[24]++;this.output=output;cov_k6iea48bt().s[25]++;return this;}/**
   * Instantiate a coin from a TX
   * @param {TX} tx
   * @param {Number} index - Output index.
   * @returns {CoinEntry}
   */static fromOutput(output){cov_k6iea48bt().f[4]++;cov_k6iea48bt().s[26]++;return new this().fromOutput(output);}/**
   * Inject properties from TX.
   * @param {TX} tx
   * @param {Number} index
   */fromCoin(coin){cov_k6iea48bt().f[5]++;cov_k6iea48bt().s[27]++;this.version=coin.version;cov_k6iea48bt().s[28]++;this.height=coin.height;cov_k6iea48bt().s[29]++;this.coinbase=coin.coinbase;cov_k6iea48bt().s[30]++;this.output.script=coin.script;cov_k6iea48bt().s[31]++;this.output.value=coin.value;cov_k6iea48bt().s[32]++;return this;}/**
   * Instantiate a coin from a TX
   * @param {TX} tx
   * @param {Number} index - Output index.
   * @returns {CoinEntry}
   */static fromCoin(coin){cov_k6iea48bt().f[6]++;cov_k6iea48bt().s[33]++;return new this().fromCoin(coin);}/**
   * Inject properties from TX.
   * @param {TX} tx
   * @param {Number} index
   */fromTX(tx,index,height){cov_k6iea48bt().f[7]++;cov_k6iea48bt().s[34]++;assert(typeof index==='number');cov_k6iea48bt().s[35]++;assert(typeof height==='number');cov_k6iea48bt().s[36]++;assert((cov_k6iea48bt().b[0][0]++,index>=0)&&(cov_k6iea48bt().b[0][1]++,index<tx.outputs.length));cov_k6iea48bt().s[37]++;this.version=tx.version;cov_k6iea48bt().s[38]++;this.height=height;cov_k6iea48bt().s[39]++;this.coinbase=tx.isCoinbase();cov_k6iea48bt().s[40]++;this.output=tx.outputs[index];cov_k6iea48bt().s[41]++;return this;}/**
   * Instantiate a coin from a TX
   * @param {TX} tx
   * @param {Number} index - Output index.
   * @returns {CoinEntry}
   */static fromTX(tx,index,height){cov_k6iea48bt().f[8]++;cov_k6iea48bt().s[42]++;return new this().fromTX(tx,index,height);}/**
   * Calculate size of coin.
   * @returns {Number}
   */getSize(){cov_k6iea48bt().f[9]++;cov_k6iea48bt().s[43]++;if(this.raw){cov_k6iea48bt().b[1][0]++;cov_k6iea48bt().s[44]++;return this.raw.length;}else{cov_k6iea48bt().b[1][1]++;}let size=(cov_k6iea48bt().s[45]++,0);cov_k6iea48bt().s[46]++;size+=encoding.sizeVarint(this.version);cov_k6iea48bt().s[47]++;size+=4;cov_k6iea48bt().s[48]++;size+=compress.size(this.output);cov_k6iea48bt().s[49]++;return size;}/**
   * Write the coin to a buffer writer.
   * @param {BufferWriter} bw
   */toWriter(bw){cov_k6iea48bt().f[10]++;cov_k6iea48bt().s[50]++;if(this.raw){cov_k6iea48bt().b[2][0]++;cov_k6iea48bt().s[51]++;bw.writeBytes(this.raw);cov_k6iea48bt().s[52]++;return bw;}else{cov_k6iea48bt().b[2][1]++;}let height=(cov_k6iea48bt().s[53]++,this.height);let field=(cov_k6iea48bt().s[54]++,0);cov_k6iea48bt().s[55]++;if(this.coinbase){cov_k6iea48bt().b[3][0]++;cov_k6iea48bt().s[56]++;field|=1;}else{cov_k6iea48bt().b[3][1]++;}cov_k6iea48bt().s[57]++;if(height===-1){cov_k6iea48bt().b[4][0]++;cov_k6iea48bt().s[58]++;height=MAX_HEIGHT;}else{cov_k6iea48bt().b[4][1]++;}cov_k6iea48bt().s[59]++;field|=height<<NUM_FLAGS;cov_k6iea48bt().s[60]++;bw.writeVarint(this.version);cov_k6iea48bt().s[61]++;bw.writeU32(field);cov_k6iea48bt().s[62]++;compress.pack(this.output,bw);cov_k6iea48bt().s[63]++;return bw;}/**
   * Serialize the coin.
   * @returns {Buffer}
   */toRaw(){cov_k6iea48bt().f[11]++;cov_k6iea48bt().s[64]++;if(this.raw){cov_k6iea48bt().b[5][0]++;cov_k6iea48bt().s[65]++;return this.raw;}else{cov_k6iea48bt().b[5][1]++;}const size=(cov_k6iea48bt().s[66]++,this.getSize());const bw=(cov_k6iea48bt().s[67]++,bio.write(size));cov_k6iea48bt().s[68]++;this.toWriter(bw);cov_k6iea48bt().s[69]++;this.raw=bw.render();cov_k6iea48bt().s[70]++;return this.raw;}/**
   * Inject properties from serialized buffer writer.
   * @private
   * @param {BufferReader} br
   */fromReader(br){cov_k6iea48bt().f[12]++;const version=(cov_k6iea48bt().s[71]++,br.readVarint());const field=(cov_k6iea48bt().s[72]++,br.readU32());let height=(cov_k6iea48bt().s[73]++,field>>>NUM_FLAGS);cov_k6iea48bt().s[74]++;if(height===MAX_HEIGHT){cov_k6iea48bt().b[6][0]++;cov_k6iea48bt().s[75]++;height=-1;}else{cov_k6iea48bt().b[6][1]++;}cov_k6iea48bt().s[76]++;this.version=version;cov_k6iea48bt().s[77]++;this.coinbase=(field&1)!==0;cov_k6iea48bt().s[78]++;this.height=height;cov_k6iea48bt().s[79]++;compress.unpack(this.output,br);cov_k6iea48bt().s[80]++;return this;}/**
   * Instantiate a coin from a serialized Buffer.
   * @param {Buffer} data
   * @returns {CoinEntry}
   */static fromReader(data){cov_k6iea48bt().f[13]++;cov_k6iea48bt().s[81]++;return new this().fromReader(data);}/**
   * Inject properties from serialized data.
   * @private
   * @param {Buffer} data
   */fromRaw(data){cov_k6iea48bt().f[14]++;cov_k6iea48bt().s[82]++;this.fromReader(bio.read(data));cov_k6iea48bt().s[83]++;this.raw=data;cov_k6iea48bt().s[84]++;return this;}/**
   * Instantiate a coin from a serialized Buffer.
   * @param {Buffer} data
   * @returns {CoinEntry}
   */static fromRaw(data){cov_k6iea48bt().f[15]++;cov_k6iea48bt().s[85]++;return new this().fromRaw(data);}}/*
 * Expose
 */cov_k6iea48bt().s[86]++;module.exports=CoinEntry;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
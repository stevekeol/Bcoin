/*!
 * chain.js - blockchain management for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */'use strict';function cov_2hsadq1dzp(){var path="E:\\Projects\\Test\\bcoin\\lib\\blockchain\\chain.js";var hash="d3f827dbf9d97d57d07c2d56d32be4f18864480e";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\Projects\\Test\\bcoin\\lib\\blockchain\\chain.js",statementMap:{"0":{start:{line:10,column:15},end:{line:10,column:31}},"1":{start:{line:11,column:13},end:{line:11,column:28}},"2":{start:{line:12,column:21},end:{line:12,column:38}},"3":{start:{line:13,column:15},end:{line:13,column:30}},"4":{start:{line:14,column:15},end:{line:14,column:32}},"5":{start:{line:15,column:12},end:{line:15,column:27}},"6":{start:{line:16,column:20},end:{line:16,column:41}},"7":{start:{line:17,column:16},end:{line:17,column:46}},"8":{start:{line:18,column:16},end:{line:18,column:36}},"9":{start:{line:19,column:15},end:{line:19,column:34}},"10":{start:{line:20,column:18},end:{line:20,column:50}},"11":{start:{line:21,column:13},end:{line:21,column:37}},"12":{start:{line:22,column:19},end:{line:22,column:42}},"13":{start:{line:23,column:17},end:{line:23,column:45}},"14":{start:{line:24,column:15},end:{line:24,column:42}},"15":{start:{line:25,column:22},end:{line:25,column:51}},"16":{start:{line:26,column:24},end:{line:26,column:46}},"17":{start:{line:45,column:4},end:{line:45,column:12}},"18":{start:{line:47,column:4},end:{line:47,column:24}},"19":{start:{line:48,column:4},end:{line:48,column:45}},"20":{start:{line:50,column:4},end:{line:50,column:40}},"21":{start:{line:51,column:4},end:{line:51,column:55}},"22":{start:{line:52,column:4},end:{line:52,column:38}},"23":{start:{line:53,column:4},end:{line:53,column:40}},"24":{start:{line:55,column:4},end:{line:55,column:40}},"25":{start:{line:57,column:4},end:{line:57,column:44}},"26":{start:{line:58,column:4},end:{line:58,column:49}},"27":{start:{line:59,column:4},end:{line:59,column:39}},"28":{start:{line:61,column:4},end:{line:61,column:32}},"29":{start:{line:62,column:4},end:{line:62,column:21}},"30":{start:{line:63,column:4},end:{line:63,column:24}},"31":{start:{line:65,column:4},end:{line:65,column:37}},"32":{start:{line:66,column:4},end:{line:66,column:38}},"33":{start:{line:75,column:4},end:{line:75,column:51}},"34":{start:{line:76,column:4},end:{line:76,column:23}},"35":{start:{line:78,column:4},end:{line:78,column:42}},"36":{start:{line:80,column:4},end:{line:81,column:51}},"37":{start:{line:81,column:6},end:{line:81,column:51}},"38":{start:{line:83,column:4},end:{line:84,column:72}},"39":{start:{line:84,column:6},end:{line:84,column:72}},"40":{start:{line:86,column:4},end:{line:87,column:68}},"41":{start:{line:87,column:6},end:{line:87,column:68}},"42":{start:{line:89,column:4},end:{line:89,column:25}},"43":{start:{line:91,column:16},end:{line:91,column:38}},"44":{start:{line:93,column:4},end:{line:93,column:16}},"45":{start:{line:95,column:4},end:{line:95,column:19}},"46":{start:{line:96,column:4},end:{line:96,column:29}},"47":{start:{line:98,column:4},end:{line:98,column:53}},"48":{start:{line:100,column:4},end:{line:100,column:25}},"49":{start:{line:102,column:18},end:{line:102,column:49}},"50":{start:{line:104,column:4},end:{line:104,column:35}},"51":{start:{line:106,column:4},end:{line:106,column:25}},"52":{start:{line:108,column:4},end:{line:108,column:26}},"53":{start:{line:110,column:4},end:{line:110,column:21}},"54":{start:{line:119,column:4},end:{line:119,column:46}},"55":{start:{line:120,column:4},end:{line:120,column:24}},"56":{start:{line:121,column:4},end:{line:121,column:27}},"57":{start:{line:135,column:18},end:{line:135,column:55}},"58":{start:{line:138,column:4},end:{line:141,column:5}},"59":{start:{line:139,column:19},end:{line:139,column:33}},"60":{start:{line:140,column:6},end:{line:140,column:27}},"61":{start:{line:144,column:4},end:{line:147,column:5}},"62":{start:{line:145,column:19},end:{line:145,column:55}},"63":{start:{line:146,column:6},end:{line:146,column:27}},"64":{start:{line:152,column:4},end:{line:153,column:47}},"65":{start:{line:153,column:6},end:{line:153,column:47}},"66":{start:{line:156,column:17},end:{line:156,column:60}},"67":{start:{line:158,column:4},end:{line:158,column:25}},"68":{start:{line:169,column:19},end:{line:169,column:43}},"69":{start:{line:170,column:4},end:{line:174,column:5}},"70":{start:{line:171,column:6},end:{line:171,column:44}},"71":{start:{line:173,column:6},end:{line:173,column:15}},"72":{start:{line:186,column:18},end:{line:186,column:71}},"73":{start:{line:187,column:4},end:{line:187,column:54}},"74":{start:{line:197,column:4},end:{line:197,column:36}},"75":{start:{line:207,column:4},end:{line:207,column:38}},"76":{start:{line:218,column:4},end:{line:218,column:46}},"77":{start:{line:228,column:4},end:{line:228,column:38}},"78":{start:{line:238,column:4},end:{line:238,column:39}},"79":{start:{line:248,column:4},end:{line:248,column:34}},"80":{start:{line:258,column:4},end:{line:258,column:39}},"81":{start:{line:269,column:19},end:{line:269,column:44}},"82":{start:{line:271,column:19},end:{line:271,column:21}},"83":{start:{line:276,column:4},end:{line:279,column:5}},"84":{start:{line:277,column:6},end:{line:277,column:24}},"85":{start:{line:278,column:6},end:{line:278,column:20}},"86":{start:{line:281,column:16},end:{line:281,column:20}},"87":{start:{line:283,column:4},end:{line:292,column:5}},"88":{start:{line:283,column:17},end:{line:283,column:18}},"89":{start:{line:284,column:6},end:{line:284,column:30}},"90":{start:{line:286,column:20},end:{line:286,column:44}},"91":{start:{line:288,column:6},end:{line:291,column:46}},"92":{start:{line:289,column:8},end:{line:289,column:22}},"93":{start:{line:291,column:8},end:{line:291,column:46}},"94":{start:{line:294,column:4},end:{line:294,column:21}},"95":{start:{line:296,column:4},end:{line:296,column:39}},"96":{start:{line:307,column:4},end:{line:310,column:5}},"97":{start:{line:308,column:6},end:{line:309,column:20}},"98":{start:{line:309,column:8},end:{line:309,column:20}},"99":{start:{line:311,column:4},end:{line:311,column:17}},"100":{start:{line:326,column:4},end:{line:326,column:38}},"101":{start:{line:329,column:4},end:{line:330,column:64}},"102":{start:{line:330,column:6},end:{line:330,column:64}},"103":{start:{line:333,column:17},end:{line:333,column:29}},"104":{start:{line:334,column:4},end:{line:339,column:5}},"105":{start:{line:335,column:6},end:{line:338,column:13}},"106":{start:{line:345,column:4},end:{line:370,column:5}},"107":{start:{line:346,column:6},end:{line:347,column:26}},"108":{start:{line:347,column:8},end:{line:347,column:26}},"109":{start:{line:350,column:6},end:{line:364,column:7}},"110":{start:{line:351,column:8},end:{line:351,column:61}},"111":{start:{line:353,column:21},end:{line:353,column:45}},"112":{start:{line:355,column:8},end:{line:361,column:9}},"113":{start:{line:356,column:10},end:{line:360,column:18}},"114":{start:{line:363,column:8},end:{line:363,column:43}},"115":{start:{line:368,column:6},end:{line:369,column:37}},"116":{start:{line:369,column:8},end:{line:369,column:37}},"117":{start:{line:373,column:4},end:{line:378,column:5}},"118":{start:{line:374,column:37},end:{line:374,column:54}},"119":{start:{line:376,column:6},end:{line:377,column:69}},"120":{start:{line:377,column:8},end:{line:377,column:69}},"121":{start:{line:381,column:17},end:{line:381,column:55}},"122":{start:{line:383,column:4},end:{line:388,column:5}},"123":{start:{line:384,column:6},end:{line:387,column:13}},"124":{start:{line:392,column:4},end:{line:393,column:24}},"125":{start:{line:393,column:6},end:{line:393,column:24}},"126":{start:{line:396,column:16},end:{line:396,column:46}},"127":{start:{line:398,column:4},end:{line:403,column:5}},"128":{start:{line:399,column:6},end:{line:402,column:11}},"129":{start:{line:408,column:4},end:{line:414,column:5}},"130":{start:{line:409,column:6},end:{line:413,column:14}},"131":{start:{line:417,column:19},end:{line:417,column:34}},"132":{start:{line:421,column:4},end:{line:422,column:65}},"133":{start:{line:422,column:6},end:{line:422,column:65}},"134":{start:{line:426,column:4},end:{line:427,column:65}},"135":{start:{line:427,column:6},end:{line:427,column:65}},"136":{start:{line:431,column:4},end:{line:432,column:65}},"137":{start:{line:432,column:6},end:{line:432,column:65}},"138":{start:{line:435,column:18},end:{line:435,column:61}},"139":{start:{line:438,column:4},end:{line:442,column:5}},"140":{start:{line:439,column:23},end:{line:439,column:47}},"141":{start:{line:440,column:6},end:{line:441,column:68}},"142":{start:{line:441,column:8},end:{line:441,column:68}},"143":{start:{line:445,column:17},end:{line:445,column:50}},"144":{start:{line:449,column:4},end:{line:456,column:5}},"145":{start:{line:450,column:6},end:{line:455,column:7}},"146":{start:{line:451,column:8},end:{line:454,column:14}},"147":{start:{line:460,column:4},end:{line:467,column:5}},"148":{start:{line:461,column:6},end:{line:466,column:7}},"149":{start:{line:462,column:8},end:{line:465,column:15}},"150":{start:{line:470,column:17},end:{line:470,column:21}},"151":{start:{line:471,column:4},end:{line:496,column:5}},"152":{start:{line:472,column:6},end:{line:472,column:41}},"153":{start:{line:473,column:6},end:{line:495,column:7}},"154":{start:{line:480,column:8},end:{line:486,column:9}},"155":{start:{line:481,column:10},end:{line:485,column:18}},"156":{start:{line:488,column:8},end:{line:494,column:9}},"157":{start:{line:489,column:10},end:{line:493,column:18}},"158":{start:{line:500,column:4},end:{line:508,column:5}},"159":{start:{line:501,column:6},end:{line:507,column:7}},"160":{start:{line:502,column:8},end:{line:506,column:16}},"161":{start:{line:512,column:4},end:{line:517,column:5}},"162":{start:{line:513,column:6},end:{line:516,column:13}},"163":{start:{line:519,column:4},end:{line:519,column:17}},"164":{start:{line:530,column:24},end:{line:530,column:48}},"165":{start:{line:531,column:19},end:{line:531,column:34}},"166":{start:{line:532,column:18},end:{line:532,column:39}},"167":{start:{line:542,column:4},end:{line:543,column:46}},"168":{start:{line:543,column:6},end:{line:543,column:46}},"169":{start:{line:546,column:4},end:{line:547,column:25}},"170":{start:{line:547,column:6},end:{line:547,column:25}},"171":{start:{line:550,column:4},end:{line:551,column:48}},"172":{start:{line:551,column:6},end:{line:551,column:48}},"173":{start:{line:554,column:4},end:{line:555,column:61}},"174":{start:{line:555,column:6},end:{line:555,column:61}},"175":{start:{line:559,column:4},end:{line:563,column:5}},"176":{start:{line:560,column:6},end:{line:560,column:61}},"177":{start:{line:561,column:6},end:{line:561,column:58}},"178":{start:{line:562,column:6},end:{line:562,column:59}},"179":{start:{line:566,column:20},end:{line:566,column:65}},"180":{start:{line:570,column:4},end:{line:573,column:5}},"181":{start:{line:571,column:6},end:{line:571,column:49}},"182":{start:{line:572,column:6},end:{line:572,column:51}},"183":{start:{line:576,column:4},end:{line:581,column:5}},"184":{start:{line:577,column:6},end:{line:580,column:7}},"185":{start:{line:578,column:8},end:{line:579,column:29}},"186":{start:{line:579,column:10},end:{line:579,column:29}},"187":{start:{line:584,column:4},end:{line:598,column:5}},"188":{start:{line:585,column:6},end:{line:597,column:7}},"189":{start:{line:594,column:20},end:{line:594,column:56}},"190":{start:{line:595,column:8},end:{line:596,column:30}},"191":{start:{line:596,column:10},end:{line:596,column:30}},"192":{start:{line:600,column:4},end:{line:600,column:17}},"193":{start:{line:609,column:4},end:{line:612,column:5}},"194":{start:{line:610,column:6},end:{line:610,column:25}},"195":{start:{line:611,column:6},end:{line:611,column:13}},"196":{start:{line:614,column:4},end:{line:615,column:54}},"197":{start:{line:615,column:6},end:{line:615,column:54}},"198":{start:{line:617,column:4},end:{line:618,column:55}},"199":{start:{line:618,column:6},end:{line:618,column:55}},"200":{start:{line:620,column:4},end:{line:621,column:55}},"201":{start:{line:621,column:6},end:{line:621,column:55}},"202":{start:{line:623,column:4},end:{line:624,column:55}},"203":{start:{line:624,column:6},end:{line:624,column:55}},"204":{start:{line:626,column:4},end:{line:627,column:53}},"205":{start:{line:627,column:6},end:{line:627,column:53}},"206":{start:{line:629,column:4},end:{line:630,column:56}},"207":{start:{line:630,column:6},end:{line:630,column:56}},"208":{start:{line:632,column:4},end:{line:633,column:55}},"209":{start:{line:633,column:6},end:{line:633,column:55}},"210":{start:{line:635,column:4},end:{line:636,column:56}},"211":{start:{line:636,column:6},end:{line:636,column:56}},"212":{start:{line:638,column:4},end:{line:638,column:23}},"213":{start:{line:653,column:4},end:{line:665,column:5}},"214":{start:{line:654,column:6},end:{line:655,column:17}},"215":{start:{line:655,column:8},end:{line:655,column:17}},"216":{start:{line:657,column:21},end:{line:657,column:36}},"217":{start:{line:658,column:19},end:{line:658,column:45}},"218":{start:{line:663,column:6},end:{line:664,column:71}},"219":{start:{line:664,column:8},end:{line:664,column:71}},"220":{start:{line:677,column:17},end:{line:677,column:31}},"221":{start:{line:678,column:19},end:{line:678,column:34}},"222":{start:{line:679,column:15},end:{line:679,column:27}},"223":{start:{line:681,column:4},end:{line:681,column:27}},"224":{start:{line:683,column:4},end:{line:690,column:5}},"225":{start:{line:683,column:17},end:{line:683,column:18}},"226":{start:{line:684,column:17},end:{line:684,column:29}},"227":{start:{line:686,column:6},end:{line:687,column:49}},"228":{start:{line:689,column:6},end:{line:689,column:29}},"229":{start:{line:692,column:4},end:{line:692,column:16}},"230":{start:{line:714,column:17},end:{line:714,column:31}},"231":{start:{line:715,column:19},end:{line:715,column:34}},"232":{start:{line:716,column:21},end:{line:716,column:49}},"233":{start:{line:718,column:17},end:{line:718,column:18}},"234":{start:{line:719,column:17},end:{line:719,column:18}},"235":{start:{line:722,column:4},end:{line:780,column:5}},"236":{start:{line:722,column:17},end:{line:722,column:18}},"237":{start:{line:723,column:17},end:{line:723,column:29}},"238":{start:{line:726,column:6},end:{line:733,column:7}},"239":{start:{line:727,column:8},end:{line:732,column:9}},"240":{start:{line:728,column:10},end:{line:731,column:17}},"241":{start:{line:736,column:6},end:{line:745,column:7}},"242":{start:{line:737,column:22},end:{line:737,column:77}},"243":{start:{line:739,column:8},end:{line:744,column:9}},"244":{start:{line:740,column:10},end:{line:743,column:17}},"245":{start:{line:748,column:6},end:{line:748,column:52}},"246":{start:{line:750,column:6},end:{line:755,column:7}},"247":{start:{line:751,column:8},end:{line:754,column:15}},"248":{start:{line:758,column:6},end:{line:776,column:7}},"249":{start:{line:759,column:37},end:{line:759,column:65}},"250":{start:{line:761,column:8},end:{line:766,column:9}},"251":{start:{line:762,column:10},end:{line:765,column:19}},"252":{start:{line:768,column:8},end:{line:768,column:22}},"253":{start:{line:770,column:8},end:{line:775,column:9}},"254":{start:{line:771,column:10},end:{line:774,column:17}},"255":{start:{line:779,column:6},end:{line:779,column:29}},"256":{start:{line:783,column:4},end:{line:783,column:52}},"257":{start:{line:785,column:4},end:{line:790,column:5}},"258":{start:{line:786,column:6},end:{line:789,column:13}},"259":{start:{line:793,column:17},end:{line:793,column:19}},"260":{start:{line:794,column:4},end:{line:797,column:5}},"261":{start:{line:794,column:17},end:{line:794,column:18}},"262":{start:{line:795,column:17},end:{line:795,column:29}},"263":{start:{line:796,column:6},end:{line:796,column:65}},"264":{start:{line:800,column:20},end:{line:800,column:43}},"265":{start:{line:802,column:4},end:{line:809,column:5}},"266":{start:{line:803,column:6},end:{line:808,column:7}},"267":{start:{line:804,column:8},end:{line:807,column:15}},"268":{start:{line:811,column:4},end:{line:811,column:16}},"269":{start:{line:823,column:4},end:{line:837,column:5}},"270":{start:{line:824,column:6},end:{line:828,column:7}},"271":{start:{line:825,column:8},end:{line:825,column:48}},"272":{start:{line:826,column:8},end:{line:827,column:60}},"273":{start:{line:827,column:10},end:{line:827,column:60}},"274":{start:{line:830,column:6},end:{line:831,column:20}},"275":{start:{line:831,column:8},end:{line:831,column:20}},"276":{start:{line:833,column:6},end:{line:833,column:42}},"277":{start:{line:835,column:6},end:{line:836,column:58}},"278":{start:{line:836,column:8},end:{line:836,column:58}},"279":{start:{line:839,column:4},end:{line:839,column:16}},"280":{start:{line:852,column:16},end:{line:852,column:24}},"281":{start:{line:853,column:17},end:{line:853,column:53}},"282":{start:{line:855,column:4},end:{line:855,column:54}},"283":{start:{line:858,column:23},end:{line:858,column:25}},"284":{start:{line:859,column:16},end:{line:859,column:19}},"285":{start:{line:860,column:4},end:{line:864,column:5}},"286":{start:{line:861,column:6},end:{line:861,column:29}},"287":{start:{line:862,column:6},end:{line:862,column:44}},"288":{start:{line:863,column:6},end:{line:863,column:20}},"289":{start:{line:867,column:20},end:{line:867,column:22}},"290":{start:{line:868,column:4},end:{line:868,column:23}},"291":{start:{line:869,column:4},end:{line:873,column:5}},"292":{start:{line:870,column:6},end:{line:870,column:26}},"293":{start:{line:871,column:6},end:{line:871,column:44}},"294":{start:{line:872,column:6},end:{line:872,column:20}},"295":{start:{line:876,column:4},end:{line:879,column:5}},"296":{start:{line:876,column:17},end:{line:876,column:18}},"297":{start:{line:877,column:20},end:{line:877,column:33}},"298":{start:{line:878,column:6},end:{line:878,column:35}},"299":{start:{line:884,column:4},end:{line:887,column:5}},"300":{start:{line:884,column:17},end:{line:884,column:35}},"301":{start:{line:885,column:20},end:{line:885,column:30}},"302":{start:{line:886,column:6},end:{line:886,column:34}},"303":{start:{line:889,column:4},end:{line:895,column:6}},"304":{start:{line:897,column:4},end:{line:897,column:56}},"305":{start:{line:909,column:16},end:{line:909,column:24}},"306":{start:{line:910,column:17},end:{line:910,column:53}},"307":{start:{line:912,column:4},end:{line:912,column:54}},"308":{start:{line:915,column:23},end:{line:915,column:25}},"309":{start:{line:916,column:16},end:{line:916,column:19}},"310":{start:{line:917,column:4},end:{line:921,column:5}},"311":{start:{line:918,column:6},end:{line:918,column:29}},"312":{start:{line:919,column:6},end:{line:919,column:44}},"313":{start:{line:920,column:6},end:{line:920,column:20}},"314":{start:{line:927,column:4},end:{line:927,column:39}},"315":{start:{line:931,column:4},end:{line:935,column:5}},"316":{start:{line:932,column:22},end:{line:932,column:39}},"317":{start:{line:933,column:19},end:{line:933,column:33}},"318":{start:{line:934,column:6},end:{line:934,column:63}},"319":{start:{line:937,column:4},end:{line:943,column:6}},"320":{start:{line:945,column:4},end:{line:947,column:19}},"321":{start:{line:949,column:4},end:{line:949,column:57}},"322":{start:{line:959,column:16},end:{line:959,column:47}},"323":{start:{line:961,column:4},end:{line:965,column:5}},"324":{start:{line:962,column:6},end:{line:963,column:44}},"325":{start:{line:963,column:8},end:{line:963,column:44}},"326":{start:{line:964,column:6},end:{line:964,column:32}},"327":{start:{line:967,column:17},end:{line:967,column:46}},"328":{start:{line:968,column:17},end:{line:968,column:55}},"329":{start:{line:970,column:4},end:{line:970,column:17}},"330":{start:{line:972,column:4},end:{line:972,column:20}},"331":{start:{line:973,column:4},end:{line:973,column:30}},"332":{start:{line:975,column:4},end:{line:975,column:27}},"333":{start:{line:977,column:4},end:{line:977,column:60}},"334":{start:{line:991,column:18},end:{line:991,column:42}},"335":{start:{line:993,column:16},end:{line:993,column:47}},"336":{start:{line:995,column:4},end:{line:999,column:5}},"337":{start:{line:996,column:6},end:{line:997,column:44}},"338":{start:{line:997,column:8},end:{line:997,column:44}},"339":{start:{line:998,column:6},end:{line:998,column:32}},"340":{start:{line:1001,column:17},end:{line:1001,column:46}},"341":{start:{line:1002,column:4},end:{line:1002,column:17}},"342":{start:{line:1005,column:4},end:{line:1016,column:5}},"343":{start:{line:1006,column:6},end:{line:1006,column:67}},"344":{start:{line:1008,column:6},end:{line:1014,column:7}},"345":{start:{line:1009,column:8},end:{line:1010,column:38}},"346":{start:{line:1010,column:10},end:{line:1010,column:38}},"347":{start:{line:1011,column:8},end:{line:1013,column:36}},"348":{start:{line:1015,column:6},end:{line:1015,column:16}},"349":{start:{line:1018,column:4},end:{line:1018,column:48}},"350":{start:{line:1020,column:4},end:{line:1020,column:21}},"351":{start:{line:1021,column:4},end:{line:1021,column:31}},"352":{start:{line:1022,column:4},end:{line:1022,column:35}},"353":{start:{line:1024,column:4},end:{line:1024,column:28}},"354":{start:{line:1025,column:4},end:{line:1025,column:41}},"355":{start:{line:1027,column:4},end:{line:1027,column:57}},"356":{start:{line:1046,column:4},end:{line:1055,column:5}},"357":{start:{line:1047,column:6},end:{line:1047,column:58}},"358":{start:{line:1051,column:6},end:{line:1052,column:41}},"359":{start:{line:1052,column:8},end:{line:1052,column:41}},"360":{start:{line:1054,column:6},end:{line:1054,column:35}},"361":{start:{line:1058,column:4},end:{line:1062,column:5}},"362":{start:{line:1059,column:6},end:{line:1061,column:50}},"363":{start:{line:1069,column:4},end:{line:1080,column:5}},"364":{start:{line:1070,column:6},end:{line:1070,column:67}},"365":{start:{line:1072,column:6},end:{line:1078,column:7}},"366":{start:{line:1073,column:8},end:{line:1074,column:38}},"367":{start:{line:1074,column:10},end:{line:1074,column:38}},"368":{start:{line:1075,column:8},end:{line:1077,column:36}},"369":{start:{line:1079,column:6},end:{line:1079,column:16}},"370":{start:{line:1083,column:4},end:{line:1083,column:43}},"371":{start:{line:1086,column:4},end:{line:1086,column:21}},"372":{start:{line:1087,column:4},end:{line:1087,column:31}},"373":{start:{line:1088,column:4},end:{line:1088,column:35}},"374":{start:{line:1090,column:4},end:{line:1090,column:28}},"375":{start:{line:1091,column:4},end:{line:1091,column:37}},"376":{start:{line:1093,column:4},end:{line:1093,column:57}},"377":{start:{line:1109,column:4},end:{line:1115,column:5}},"378":{start:{line:1110,column:6},end:{line:1114,column:15}},"379":{start:{line:1111,column:8},end:{line:1114,column:15}},"380":{start:{line:1117,column:4},end:{line:1130,column:5}},"381":{start:{line:1120,column:6},end:{line:1120,column:44}},"382":{start:{line:1122,column:6},end:{line:1128,column:7}},"383":{start:{line:1123,column:8},end:{line:1124,column:38}},"384":{start:{line:1124,column:10},end:{line:1124,column:38}},"385":{start:{line:1125,column:8},end:{line:1127,column:36}},"386":{start:{line:1129,column:6},end:{line:1129,column:16}},"387":{start:{line:1133,column:4},end:{line:1137,column:5}},"388":{start:{line:1134,column:6},end:{line:1136,column:50}},"389":{start:{line:1139,column:4},end:{line:1139,column:37}},"390":{start:{line:1141,column:4},end:{line:1153,column:58}},"391":{start:{line:1156,column:4},end:{line:1156,column:42}},"392":{start:{line:1168,column:19},end:{line:1168,column:43}},"393":{start:{line:1169,column:4},end:{line:1173,column:5}},"394":{start:{line:1170,column:6},end:{line:1170,column:45}},"395":{start:{line:1172,column:6},end:{line:1172,column:15}},"396":{start:{line:1184,column:16},end:{line:1184,column:42}},"397":{start:{line:1187,column:4},end:{line:1187,column:19}},"398":{start:{line:1188,column:4},end:{line:1188,column:29}},"399":{start:{line:1189,column:4},end:{line:1189,column:24}},"400":{start:{line:1191,column:18},end:{line:1191,column:49}},"401":{start:{line:1193,column:4},end:{line:1193,column:35}},"402":{start:{line:1195,column:4},end:{line:1195,column:26}},"403":{start:{line:1197,column:4},end:{line:1198,column:41}},"404":{start:{line:1198,column:6},end:{line:1198,column:41}},"405":{start:{line:1203,column:4},end:{line:1203,column:24}},"406":{start:{line:1205,column:4},end:{line:1205,column:21}},"407":{start:{line:1216,column:19},end:{line:1216,column:43}},"408":{start:{line:1217,column:4},end:{line:1221,column:5}},"409":{start:{line:1218,column:6},end:{line:1218,column:45}},"410":{start:{line:1220,column:6},end:{line:1220,column:15}},"411":{start:{line:1233,column:18},end:{line:1233,column:44}},"412":{start:{line:1235,column:4},end:{line:1236,column:42}},"413":{start:{line:1236,column:6},end:{line:1236,column:42}},"414":{start:{line:1238,column:4},end:{line:1239,column:58}},"415":{start:{line:1239,column:6},end:{line:1239,column:58}},"416":{start:{line:1241,column:4},end:{line:1244,column:5}},"417":{start:{line:1242,column:6},end:{line:1242,column:44}},"418":{start:{line:1243,column:6},end:{line:1243,column:13}},"419":{start:{line:1246,column:4},end:{line:1246,column:47}},"420":{start:{line:1256,column:19},end:{line:1256,column:43}},"421":{start:{line:1257,column:4},end:{line:1261,column:5}},"422":{start:{line:1258,column:6},end:{line:1258,column:42}},"423":{start:{line:1260,column:6},end:{line:1260,column:15}},"424":{start:{line:1271,column:4},end:{line:1271,column:36}},"425":{start:{line:1272,column:4},end:{line:1272,column:26}},"426":{start:{line:1281,column:19},end:{line:1281,column:43}},"427":{start:{line:1282,column:4},end:{line:1286,column:5}},"428":{start:{line:1283,column:6},end:{line:1283,column:35}},"429":{start:{line:1285,column:6},end:{line:1285,column:15}},"430":{start:{line:1298,column:19},end:{line:1298,column:43}},"431":{start:{line:1299,column:4},end:{line:1303,column:5}},"432":{start:{line:1300,column:6},end:{line:1300,column:53}},"433":{start:{line:1302,column:6},end:{line:1302,column:15}},"434":{start:{line:1315,column:17},end:{line:1315,column:29}},"435":{start:{line:1316,column:19},end:{line:1316,column:47}},"436":{start:{line:1317,column:4},end:{line:1321,column:5}},"437":{start:{line:1318,column:6},end:{line:1318,column:47}},"438":{start:{line:1320,column:6},end:{line:1320,column:15}},"439":{start:{line:1334,column:17},end:{line:1334,column:29}},"440":{start:{line:1336,column:4},end:{line:1337,column:41}},"441":{start:{line:1337,column:6},end:{line:1337,column:41}},"442":{start:{line:1339,column:4},end:{line:1340,column:14}},"443":{start:{line:1340,column:6},end:{line:1340,column:14}},"444":{start:{line:1343,column:4},end:{line:1346,column:5}},"445":{start:{line:1344,column:6},end:{line:1344,column:64}},"446":{start:{line:1345,column:6},end:{line:1345,column:64}},"447":{start:{line:1349,column:4},end:{line:1352,column:5}},"448":{start:{line:1350,column:6},end:{line:1350,column:73}},"449":{start:{line:1351,column:6},end:{line:1351,column:64}},"450":{start:{line:1356,column:4},end:{line:1359,column:5}},"451":{start:{line:1357,column:6},end:{line:1357,column:72}},"452":{start:{line:1358,column:6},end:{line:1358,column:64}},"453":{start:{line:1362,column:4},end:{line:1365,column:5}},"454":{start:{line:1363,column:6},end:{line:1363,column:74}},"455":{start:{line:1364,column:6},end:{line:1364,column:66}},"456":{start:{line:1368,column:4},end:{line:1371,column:5}},"457":{start:{line:1369,column:6},end:{line:1370,column:65}},"458":{start:{line:1370,column:8},end:{line:1370,column:65}},"459":{start:{line:1374,column:4},end:{line:1377,column:5}},"460":{start:{line:1375,column:6},end:{line:1375,column:65}},"461":{start:{line:1376,column:6},end:{line:1376,column:64}},"462":{start:{line:1380,column:17},end:{line:1380,column:53}},"463":{start:{line:1384,column:4},end:{line:1387,column:5}},"464":{start:{line:1385,column:6},end:{line:1385,column:41}},"465":{start:{line:1386,column:6},end:{line:1386,column:18}},"466":{start:{line:1390,column:18},end:{line:1390,column:56}},"467":{start:{line:1393,column:4},end:{line:1394,column:38}},"468":{start:{line:1394,column:6},end:{line:1394,column:38}},"469":{start:{line:1396,column:4},end:{line:1396,column:17}},"470":{start:{line:1409,column:18},end:{line:1409,column:30}},"471":{start:{line:1412,column:4},end:{line:1412,column:46}},"472":{start:{line:1424,column:4},end:{line:1435,column:5}},"473":{start:{line:1425,column:6},end:{line:1434,column:7}},"474":{start:{line:1426,column:8},end:{line:1426,column:32}},"475":{start:{line:1428,column:8},end:{line:1428,column:29}},"476":{start:{line:1429,column:8},end:{line:1433,column:16}},"477":{start:{line:1438,column:18},end:{line:1438,column:51}},"478":{start:{line:1444,column:4},end:{line:1450,column:5}},"479":{start:{line:1446,column:6},end:{line:1446,column:58}},"480":{start:{line:1449,column:6},end:{line:1449,column:57}},"481":{start:{line:1453,column:4},end:{line:1453,column:40}},"482":{start:{line:1456,column:4},end:{line:1456,column:21}},"483":{start:{line:1458,column:4},end:{line:1458,column:17}},"484":{start:{line:1469,column:17},end:{line:1469,column:47}},"485":{start:{line:1471,column:4},end:{line:1496,column:5}},"486":{start:{line:1472,column:33},end:{line:1472,column:39}},"487":{start:{line:1474,column:6},end:{line:1487,column:7}},"488":{start:{line:1475,column:8},end:{line:1475,column:56}},"489":{start:{line:1477,column:8},end:{line:1485,column:9}},"490":{start:{line:1478,column:10},end:{line:1480,column:39}},"491":{start:{line:1482,column:10},end:{line:1482,column:43}},"492":{start:{line:1484,column:10},end:{line:1484,column:16}},"493":{start:{line:1486,column:8},end:{line:1486,column:18}},"494":{start:{line:1489,column:6},end:{line:1491,column:36}},"495":{start:{line:1493,column:6},end:{line:1493,column:42}},"496":{start:{line:1495,column:6},end:{line:1495,column:46}},"497":{start:{line:1506,column:4},end:{line:1507,column:19}},"498":{start:{line:1507,column:6},end:{line:1507,column:19}},"499":{start:{line:1509,column:4},end:{line:1510,column:18}},"500":{start:{line:1510,column:6},end:{line:1510,column:18}},"501":{start:{line:1512,column:4},end:{line:1513,column:18}},"502":{start:{line:1513,column:6},end:{line:1513,column:18}},"503":{start:{line:1515,column:4},end:{line:1516,column:18}},"504":{start:{line:1516,column:6},end:{line:1516,column:18}},"505":{start:{line:1518,column:4},end:{line:1518,column:17}},"506":{start:{line:1531,column:4},end:{line:1532,column:13}},"507":{start:{line:1532,column:6},end:{line:1532,column:13}},"508":{start:{line:1535,column:4},end:{line:1535,column:25}},"509":{start:{line:1537,column:20},end:{line:1537,column:37}},"510":{start:{line:1539,column:4},end:{line:1545,column:15}},"511":{start:{line:1557,column:4},end:{line:1558,column:18}},"512":{start:{line:1558,column:6},end:{line:1558,column:18}},"513":{start:{line:1560,column:19},end:{line:1560,column:34}},"514":{start:{line:1561,column:23},end:{line:1561,column:57}},"515":{start:{line:1563,column:4},end:{line:1564,column:18}},"516":{start:{line:1564,column:6},end:{line:1564,column:18}},"517":{start:{line:1566,column:4},end:{line:1571,column:5}},"518":{start:{line:1567,column:6},end:{line:1568,column:22}},"519":{start:{line:1569,column:6},end:{line:1569,column:44}},"520":{start:{line:1570,column:6},end:{line:1570,column:18}},"521":{start:{line:1577,column:4},end:{line:1582,column:6}},"522":{start:{line:1584,column:4},end:{line:1584,column:24}},"523":{start:{line:1586,column:4},end:{line:1586,column:17}},"524":{start:{line:1598,column:19},end:{line:1598,column:44}},"525":{start:{line:1599,column:19},end:{line:1599,column:55}},"526":{start:{line:1602,column:4},end:{line:1611,column:5}},"527":{start:{line:1603,column:6},end:{line:1603,column:56}},"528":{start:{line:1604,column:6},end:{line:1604,column:61}},"529":{start:{line:1606,column:6},end:{line:1608,column:37}},"530":{start:{line:1610,column:6},end:{line:1610,column:32}},"531":{start:{line:1613,column:4},end:{line:1613,column:24}},"532":{start:{line:1614,column:4},end:{line:1614,column:49}},"533":{start:{line:1616,column:4},end:{line:1618,column:28}},"534":{start:{line:1620,column:4},end:{line:1620,column:31}},"535":{start:{line:1631,column:18},end:{line:1631,column:30}},"536":{start:{line:1632,column:17},end:{line:1632,column:29}},"537":{start:{line:1634,column:4},end:{line:1634,column:38}},"538":{start:{line:1635,column:4},end:{line:1635,column:50}},"539":{start:{line:1636,column:4},end:{line:1636,column:37}},"540":{start:{line:1638,column:4},end:{line:1638,column:37}},"541":{start:{line:1639,column:4},end:{line:1639,column:49}},"542":{start:{line:1641,column:4},end:{line:1641,column:18}},"543":{start:{line:1652,column:18},end:{line:1652,column:30}},"544":{start:{line:1653,column:17},end:{line:1653,column:29}},"545":{start:{line:1655,column:4},end:{line:1655,column:37}},"546":{start:{line:1656,column:4},end:{line:1656,column:49}},"547":{start:{line:1657,column:4},end:{line:1657,column:36}},"548":{start:{line:1659,column:4},end:{line:1659,column:32}},"549":{start:{line:1660,column:4},end:{line:1660,column:44}},"550":{start:{line:1662,column:4},end:{line:1662,column:18}},"551":{start:{line:1673,column:4},end:{line:1673,column:37}},"552":{start:{line:1684,column:19},end:{line:1684,column:44}},"553":{start:{line:1686,column:4},end:{line:1687,column:18}},"554":{start:{line:1687,column:6},end:{line:1687,column:18}},"555":{start:{line:1689,column:4},end:{line:1689,column:37}},"556":{start:{line:1697,column:18},end:{line:1697,column:37}},"557":{start:{line:1699,column:4},end:{line:1700,column:13}},"558":{start:{line:1700,column:6},end:{line:1700,column:13}},"559":{start:{line:1702,column:4},end:{line:1702,column:27}},"560":{start:{line:1703,column:4},end:{line:1703,column:28}},"561":{start:{line:1705,column:4},end:{line:1705,column:51}},"562":{start:{line:1714,column:16},end:{line:1714,column:26}},"563":{start:{line:1716,column:17},end:{line:1716,column:21}},"564":{start:{line:1717,column:4},end:{line:1725,column:5}},"565":{start:{line:1718,column:6},end:{line:1722,column:7}},"566":{start:{line:1719,column:8},end:{line:1720,column:26}},"567":{start:{line:1720,column:10},end:{line:1720,column:26}},"568":{start:{line:1721,column:8},end:{line:1721,column:17}},"569":{start:{line:1724,column:6},end:{line:1724,column:32}},"570":{start:{line:1727,column:4},end:{line:1728,column:13}},"571":{start:{line:1728,column:6},end:{line:1728,column:13}},"572":{start:{line:1730,column:4},end:{line:1731,column:13}},"573":{start:{line:1731,column:6},end:{line:1731,column:13}},"574":{start:{line:1733,column:4},end:{line:1733,column:30}},"575":{start:{line:1744,column:17},end:{line:1744,column:29}},"576":{start:{line:1746,column:4},end:{line:1747,column:18}},"577":{start:{line:1747,column:6},end:{line:1747,column:18}},"578":{start:{line:1749,column:4},end:{line:1752,column:5}},"579":{start:{line:1750,column:6},end:{line:1750,column:28}},"580":{start:{line:1751,column:6},end:{line:1751,column:18}},"581":{start:{line:1754,column:4},end:{line:1754,column:17}},"582":{start:{line:1764,column:4},end:{line:1764,column:33}},"583":{start:{line:1774,column:4},end:{line:1774,column:30}},"584":{start:{line:1785,column:4},end:{line:1786,column:18}},"585":{start:{line:1786,column:6},end:{line:1786,column:18}},"586":{start:{line:1788,column:4},end:{line:1789,column:18}},"587":{start:{line:1789,column:6},end:{line:1789,column:18}},"588":{start:{line:1791,column:4},end:{line:1792,column:18}},"589":{start:{line:1792,column:6},end:{line:1792,column:18}},"590":{start:{line:1794,column:4},end:{line:1794,column:31}},"591":{start:{line:1804,column:4},end:{line:1804,column:34}},"592":{start:{line:1814,column:4},end:{line:1814,column:44}},"593":{start:{line:1824,column:4},end:{line:1824,column:40}},"594":{start:{line:1835,column:4},end:{line:1835,column:35}},"595":{start:{line:1845,column:4},end:{line:1845,column:35}},"596":{start:{line:1855,column:4},end:{line:1855,column:34}},"597":{start:{line:1865,column:4},end:{line:1865,column:37}},"598":{start:{line:1876,column:4},end:{line:1876,column:32}},"599":{start:{line:1885,column:4},end:{line:1885,column:29}},"600":{start:{line:1896,column:4},end:{line:1896,column:41}},"601":{start:{line:1907,column:4},end:{line:1907,column:37}},"602":{start:{line:1918,column:4},end:{line:1918,column:40}},"603":{start:{line:1928,column:4},end:{line:1928,column:34}},"604":{start:{line:1938,column:4},end:{line:1938,column:38}},"605":{start:{line:1948,column:4},end:{line:1948,column:39}},"606":{start:{line:1958,column:4},end:{line:1958,column:44}},"607":{start:{line:1968,column:4},end:{line:1968,column:36}},"608":{start:{line:1978,column:4},end:{line:1978,column:37}},"609":{start:{line:1988,column:4},end:{line:1988,column:35}},"610":{start:{line:1997,column:4},end:{line:1997,column:23}},"611":{start:{line:2006,column:4},end:{line:2007,column:13}},"612":{start:{line:2007,column:6},end:{line:2007,column:13}},"613":{start:{line:2009,column:4},end:{line:2012,column:5}},"614":{start:{line:2010,column:6},end:{line:2011,column:15}},"615":{start:{line:2011,column:8},end:{line:2011,column:15}},"616":{start:{line:2014,column:4},end:{line:2015,column:13}},"617":{start:{line:2015,column:6},end:{line:2015,column:13}},"618":{start:{line:2017,column:4},end:{line:2018,column:13}},"619":{start:{line:2018,column:6},end:{line:2018,column:13}},"620":{start:{line:2020,column:4},end:{line:2020,column:23}},"621":{start:{line:2021,column:4},end:{line:2021,column:22}},"622":{start:{line:2032,column:4},end:{line:2032,column:62}},"623":{start:{line:2041,column:18},end:{line:2041,column:43}},"624":{start:{line:2042,column:20},end:{line:2042,column:41}},"625":{start:{line:2043,column:16},end:{line:2043,column:44}},"626":{start:{line:2044,column:4},end:{line:2044,column:38}},"627":{start:{line:2056,column:19},end:{line:2056,column:43}},"628":{start:{line:2057,column:4},end:{line:2061,column:5}},"629":{start:{line:2058,column:6},end:{line:2058,column:43}},"630":{start:{line:2060,column:6},end:{line:2060,column:15}},"631":{start:{line:2072,column:4},end:{line:2073,column:28}},"632":{start:{line:2073,column:6},end:{line:2073,column:28}},"633":{start:{line:2075,column:4},end:{line:2075,column:35}},"634":{start:{line:2077,column:16},end:{line:2077,column:42}},"635":{start:{line:2079,column:19},end:{line:2079,column:21}},"636":{start:{line:2081,column:4},end:{line:2084,column:5}},"637":{start:{line:2082,column:6},end:{line:2082,column:23}},"638":{start:{line:2083,column:6},end:{line:2083,column:25}},"639":{start:{line:2086,column:15},end:{line:2086,column:44}},"640":{start:{line:2087,column:15},end:{line:2087,column:25}},"641":{start:{line:2088,column:17},end:{line:2088,column:29}},"642":{start:{line:2089,column:15},end:{line:2089,column:16}},"643":{start:{line:2091,column:4},end:{line:2091,column:22}},"644":{start:{line:2093,column:4},end:{line:2115,column:5}},"645":{start:{line:2094,column:6},end:{line:2094,column:21}},"646":{start:{line:2096,column:6},end:{line:2097,column:19}},"647":{start:{line:2097,column:8},end:{line:2097,column:19}},"648":{start:{line:2099,column:6},end:{line:2100,column:18}},"649":{start:{line:2100,column:8},end:{line:2100,column:18}},"650":{start:{line:2102,column:6},end:{line:2112,column:7}},"651":{start:{line:2105,column:8},end:{line:2105,column:42}},"652":{start:{line:2106,column:8},end:{line:2106,column:21}},"653":{start:{line:2108,column:25},end:{line:2108,column:62}},"654":{start:{line:2109,column:8},end:{line:2109,column:25}},"655":{start:{line:2110,column:8},end:{line:2110,column:48}},"656":{start:{line:2111,column:8},end:{line:2111,column:29}},"657":{start:{line:2114,column:6},end:{line:2114,column:24}},"658":{start:{line:2117,column:4},end:{line:2117,column:18}},"659":{start:{line:2127,column:15},end:{line:2127,column:19}},"660":{start:{line:2129,column:4},end:{line:2129,column:17}},"661":{start:{line:2131,column:4},end:{line:2139,column:5}},"662":{start:{line:2132,column:21},end:{line:2132,column:45}},"663":{start:{line:2134,column:6},end:{line:2135,column:14}},"664":{start:{line:2135,column:8},end:{line:2135,column:14}},"665":{start:{line:2137,column:6},end:{line:2137,column:18}},"666":{start:{line:2138,column:6},end:{line:2138,column:36}},"667":{start:{line:2141,column:4},end:{line:2141,column:16}},"668":{start:{line:2153,column:16},end:{line:2153,column:32}},"669":{start:{line:2156,column:4},end:{line:2162,column:5}},"670":{start:{line:2157,column:6},end:{line:2157,column:46}},"671":{start:{line:2158,column:6},end:{line:2158,column:15}},"672":{start:{line:2160,column:6},end:{line:2160,column:46}},"673":{start:{line:2161,column:6},end:{line:2161,column:16}},"674":{start:{line:2164,column:4},end:{line:2164,column:41}},"675":{start:{line:2165,column:4},end:{line:2165,column:41}},"676":{start:{line:2167,column:4},end:{line:2168,column:44}},"677":{start:{line:2168,column:6},end:{line:2168,column:44}},"678":{start:{line:2170,column:4},end:{line:2170,column:34}},"679":{start:{line:2180,column:4},end:{line:2180,column:56}},"680":{start:{line:2192,column:16},end:{line:2192,column:32}},"681":{start:{line:2195,column:4},end:{line:2198,column:5}},"682":{start:{line:2196,column:6},end:{line:2196,column:49}},"683":{start:{line:2197,column:6},end:{line:2197,column:22}},"684":{start:{line:2201,column:4},end:{line:2221,column:5}},"685":{start:{line:2202,column:6},end:{line:2219,column:7}},"686":{start:{line:2204,column:8},end:{line:2205,column:26}},"687":{start:{line:2205,column:10},end:{line:2205,column:26}},"688":{start:{line:2207,column:8},end:{line:2218,column:9}},"689":{start:{line:2210,column:24},end:{line:2210,column:47}},"690":{start:{line:2212,column:10},end:{line:2215,column:48}},"691":{start:{line:2213,column:12},end:{line:2213,column:25}},"692":{start:{line:2215,column:12},end:{line:2215,column:48}},"693":{start:{line:2217,column:10},end:{line:2217,column:23}},"694":{start:{line:2220,column:6},end:{line:2220,column:23}},"695":{start:{line:2224,column:19},end:{line:2224,column:59}},"696":{start:{line:2225,column:4},end:{line:2225,column:24}},"697":{start:{line:2227,column:18},end:{line:2227,column:54}},"698":{start:{line:2228,column:4},end:{line:2228,column:18}},"699":{start:{line:2230,column:4},end:{line:2230,column:38}},"700":{start:{line:2242,column:16},end:{line:2242,column:32}},"701":{start:{line:2243,column:27},end:{line:2243,column:45}},"702":{start:{line:2245,column:4},end:{line:2246,column:23}},"703":{start:{line:2246,column:6},end:{line:2246,column:23}},"704":{start:{line:2248,column:19},end:{line:2248,column:51}},"705":{start:{line:2250,column:25},end:{line:2250,column:47}},"706":{start:{line:2252,column:4},end:{line:2253,column:46}},"707":{start:{line:2253,column:6},end:{line:2253,column:46}},"708":{start:{line:2255,column:4},end:{line:2256,column:42}},"709":{start:{line:2256,column:6},end:{line:2256,column:42}},"710":{start:{line:2258,column:4},end:{line:2258,column:33}},"711":{start:{line:2259,column:4},end:{line:2259,column:33}},"712":{start:{line:2261,column:4},end:{line:2262,column:22}},"713":{start:{line:2262,column:6},end:{line:2262,column:22}},"714":{start:{line:2264,column:4},end:{line:2264,column:39}},"715":{start:{line:2275,column:4},end:{line:2278,column:5}},"716":{start:{line:2276,column:6},end:{line:2277,column:20}},"717":{start:{line:2277,column:8},end:{line:2277,column:20}},"718":{start:{line:2280,column:4},end:{line:2280,column:37}},"719":{start:{line:2294,column:18},end:{line:2294,column:55}},"720":{start:{line:2295,column:4},end:{line:2295,column:44}},"721":{start:{line:2309,column:16},end:{line:2309,column:30}},"722":{start:{line:2311,column:4},end:{line:2312,column:36}},"723":{start:{line:2312,column:6},end:{line:2312,column:36}},"724":{start:{line:2314,column:17},end:{line:2314,column:41}},"725":{start:{line:2315,column:20},end:{line:2315,column:52}},"726":{start:{line:2317,column:4},end:{line:2318,column:39}},"727":{start:{line:2318,column:6},end:{line:2318,column:39}},"728":{start:{line:2320,column:4},end:{line:2321,column:33}},"729":{start:{line:2321,column:6},end:{line:2321,column:33}},"730":{start:{line:2323,column:4},end:{line:2333,column:5}},"731":{start:{line:2324,column:21},end:{line:2324,column:63}},"732":{start:{line:2326,column:6},end:{line:2326,column:50}},"733":{start:{line:2328,column:6},end:{line:2329,column:39}},"734":{start:{line:2329,column:8},end:{line:2329,column:39}},"735":{start:{line:2331,column:6},end:{line:2331,column:37}},"736":{start:{line:2332,column:6},end:{line:2332,column:49}},"737":{start:{line:2335,column:16},end:{line:2335,column:20}},"738":{start:{line:2336,column:16},end:{line:2336,column:39}},"739":{start:{line:2338,column:20},end:{line:2338,column:22}},"740":{start:{line:2340,column:4},end:{line:2361,column:5}},"741":{start:{line:2341,column:21},end:{line:2341,column:55}},"742":{start:{line:2343,column:6},end:{line:2346,column:7}},"743":{start:{line:2344,column:8},end:{line:2344,column:23}},"744":{start:{line:2345,column:8},end:{line:2345,column:14}},"745":{start:{line:2348,column:19},end:{line:2348,column:50}},"746":{start:{line:2350,column:6},end:{line:2354,column:7}},"747":{start:{line:2351,column:8},end:{line:2351,column:40}},"748":{start:{line:2352,column:8},end:{line:2352,column:50}},"749":{start:{line:2353,column:8},end:{line:2353,column:14}},"750":{start:{line:2356,column:6},end:{line:2356,column:26}},"751":{start:{line:2358,column:21},end:{line:2358,column:42}},"752":{start:{line:2360,column:6},end:{line:2360,column:52}},"753":{start:{line:2363,column:4},end:{line:2423,column:5}},"754":{start:{line:2364,column:20},end:{line:2364,column:33}},"755":{start:{line:2366,column:6},end:{line:2420,column:7}},"756":{start:{line:2368,column:23},end:{line:2368,column:54}},"757":{start:{line:2370,column:10},end:{line:2373,column:11}},"758":{start:{line:2371,column:12},end:{line:2371,column:43}},"759":{start:{line:2372,column:12},end:{line:2372,column:18}},"760":{start:{line:2375,column:10},end:{line:2378,column:11}},"761":{start:{line:2376,column:12},end:{line:2376,column:44}},"762":{start:{line:2377,column:12},end:{line:2377,column:18}},"763":{start:{line:2380,column:10},end:{line:2380,column:16}},"764":{start:{line:2383,column:23},end:{line:2383,column:54}},"765":{start:{line:2385,column:10},end:{line:2388,column:11}},"766":{start:{line:2386,column:12},end:{line:2386,column:43}},"767":{start:{line:2387,column:12},end:{line:2387,column:18}},"768":{start:{line:2390,column:22},end:{line:2390,column:27}},"769":{start:{line:2391,column:22},end:{line:2391,column:23}},"770":{start:{line:2393,column:10},end:{line:2404,column:11}},"771":{start:{line:2393,column:23},end:{line:2393,column:24}},"772":{start:{line:2394,column:12},end:{line:2395,column:22}},"773":{start:{line:2395,column:14},end:{line:2395,column:22}},"774":{start:{line:2397,column:12},end:{line:2400,column:13}},"775":{start:{line:2398,column:14},end:{line:2398,column:48}},"776":{start:{line:2399,column:14},end:{line:2399,column:20}},"777":{start:{line:2402,column:12},end:{line:2402,column:50}},"778":{start:{line:2403,column:12},end:{line:2403,column:26}},"779":{start:{line:2406,column:10},end:{line:2406,column:16}},"780":{start:{line:2409,column:10},end:{line:2409,column:41}},"781":{start:{line:2410,column:10},end:{line:2410,column:16}},"782":{start:{line:2414,column:10},end:{line:2414,column:16}},"783":{start:{line:2417,column:10},end:{line:2417,column:38}},"784":{start:{line:2418,column:10},end:{line:2418,column:16}},"785":{start:{line:2422,column:6},end:{line:2422,column:48}},"786":{start:{line:2425,column:4},end:{line:2425,column:17}},"787":{start:{line:2436,column:18},end:{line:2436,column:19}},"788":{start:{line:2438,column:4},end:{line:2445,column:5}},"789":{start:{line:2439,column:20},end:{line:2439,column:57}},"790":{start:{line:2441,column:6},end:{line:2444,column:7}},"791":{start:{line:2443,column:8},end:{line:2443,column:39}},"792":{start:{line:2447,column:4},end:{line:2447,column:42}},"793":{start:{line:2448,column:4},end:{line:2448,column:19}},"794":{start:{line:2450,column:4},end:{line:2450,column:19}},"795":{start:{line:2460,column:17},end:{line:2460,column:49}},"796":{start:{line:2462,column:4},end:{line:2465,column:5}},"797":{start:{line:2463,column:6},end:{line:2463,column:35}},"798":{start:{line:2464,column:6},end:{line:2464,column:24}},"799":{start:{line:2467,column:4},end:{line:2468,column:24}},"800":{start:{line:2468,column:6},end:{line:2468,column:24}},"801":{start:{line:2470,column:4},end:{line:2470,column:52}},"802":{start:{line:2483,column:19},end:{line:2483,column:34}},"803":{start:{line:2486,column:4},end:{line:2487,column:36}},"804":{start:{line:2487,column:6},end:{line:2487,column:36}},"805":{start:{line:2489,column:4},end:{line:2492,column:5}},"806":{start:{line:2490,column:19},end:{line:2490,column:49}},"807":{start:{line:2491,column:6},end:{line:2491,column:38}},"808":{start:{line:2494,column:4},end:{line:2494,column:50}},"809":{start:{line:2507,column:24},end:{line:2507,column:54}},"810":{start:{line:2508,column:25},end:{line:2508,column:56}},"811":{start:{line:2509,column:22},end:{line:2509,column:50}},"812":{start:{line:2510,column:17},end:{line:2510,column:40}},"813":{start:{line:2512,column:4},end:{line:2513,column:22}},"814":{start:{line:2513,column:6},end:{line:2513,column:22}},"815":{start:{line:2515,column:4},end:{line:2516,column:22}},"816":{start:{line:2516,column:6},end:{line:2516,column:22}},"817":{start:{line:2518,column:20},end:{line:2518,column:22}},"818":{start:{line:2519,column:18},end:{line:2519,column:20}},"819":{start:{line:2521,column:4},end:{line:2544,column:5}},"820":{start:{line:2522,column:6},end:{line:2523,column:17}},"821":{start:{line:2523,column:8},end:{line:2523,column:17}},"822":{start:{line:2525,column:19},end:{line:2525,column:42}},"823":{start:{line:2527,column:6},end:{line:2528,column:33}},"824":{start:{line:2528,column:8},end:{line:2528,column:33}},"825":{start:{line:2530,column:6},end:{line:2534,column:7}},"826":{start:{line:2531,column:8},end:{line:2531,column:40}},"827":{start:{line:2532,column:8},end:{line:2532,column:48}},"828":{start:{line:2533,column:8},end:{line:2533,column:17}},"829":{start:{line:2536,column:6},end:{line:2536,column:39}},"830":{start:{line:2538,column:20},end:{line:2538,column:56}},"831":{start:{line:2539,column:6},end:{line:2539,column:44}},"832":{start:{line:2541,column:17},end:{line:2541,column:48}},"833":{start:{line:2542,column:6},end:{line:2542,column:53}},"834":{start:{line:2543,column:6},end:{line:2543,column:40}},"835":{start:{line:2546,column:4},end:{line:2546,column:32}},"836":{start:{line:2559,column:27},end:{line:2559,column:69}},"837":{start:{line:2561,column:4},end:{line:2564,column:5}},"838":{start:{line:2562,column:6},end:{line:2563,column:21}},"839":{start:{line:2563,column:8},end:{line:2563,column:21}},"840":{start:{line:2566,column:4},end:{line:2571,column:5}},"841":{start:{line:2567,column:18},end:{line:2567,column:48}},"842":{start:{line:2569,column:6},end:{line:2570,column:21}},"843":{start:{line:2570,column:8},end:{line:2570,column:21}},"844":{start:{line:2573,column:4},end:{line:2573,column:16}},"845":{start:{line:2590,column:4},end:{line:2590,column:35}},"846":{start:{line:2591,column:4},end:{line:2591,column:32}},"847":{start:{line:2592,column:4},end:{line:2592,column:23}},"848":{start:{line:2593,column:4},end:{line:2593,column:24}},"849":{start:{line:2595,column:4},end:{line:2595,column:23}},"850":{start:{line:2596,column:4},end:{line:2596,column:25}},"851":{start:{line:2597,column:4},end:{line:2597,column:23}},"852":{start:{line:2598,column:4},end:{line:2598,column:23}},"853":{start:{line:2599,column:4},end:{line:2599,column:30}},"854":{start:{line:2600,column:4},end:{line:2600,column:28}},"855":{start:{line:2602,column:4},end:{line:2602,column:21}},"856":{start:{line:2603,column:4},end:{line:2603,column:23}},"857":{start:{line:2604,column:4},end:{line:2604,column:24}},"858":{start:{line:2605,column:4},end:{line:2605,column:23}},"859":{start:{line:2606,column:4},end:{line:2606,column:28}},"860":{start:{line:2608,column:4},end:{line:2608,column:27}},"861":{start:{line:2609,column:4},end:{line:2609,column:25}},"862":{start:{line:2610,column:4},end:{line:2610,column:28}},"863":{start:{line:2612,column:4},end:{line:2613,column:32}},"864":{start:{line:2613,column:6},end:{line:2613,column:32}},"865":{start:{line:2624,column:4},end:{line:2627,column:5}},"866":{start:{line:2625,column:6},end:{line:2626,column:45}},"867":{start:{line:2629,column:4},end:{line:2629,column:33}},"868":{start:{line:2631,column:4},end:{line:2632,column:50}},"869":{start:{line:2632,column:6},end:{line:2632,column:50}},"870":{start:{line:2634,column:4},end:{line:2637,column:5}},"871":{start:{line:2635,column:6},end:{line:2635,column:49}},"872":{start:{line:2636,column:6},end:{line:2636,column:35}},"873":{start:{line:2639,column:4},end:{line:2642,column:5}},"874":{start:{line:2640,column:6},end:{line:2640,column:50}},"875":{start:{line:2641,column:6},end:{line:2641,column:37}},"876":{start:{line:2644,column:4},end:{line:2647,column:5}},"877":{start:{line:2645,column:6},end:{line:2645,column:47}},"878":{start:{line:2646,column:6},end:{line:2646,column:29}},"879":{start:{line:2649,column:4},end:{line:2655,column:5}},"880":{start:{line:2650,column:6},end:{line:2650,column:49}},"881":{start:{line:2651,column:6},end:{line:2651,column:35}},"882":{start:{line:2652,column:6},end:{line:2654,column:42}},"883":{start:{line:2657,column:4},end:{line:2660,column:5}},"884":{start:{line:2658,column:6},end:{line:2658,column:51}},"885":{start:{line:2659,column:6},end:{line:2659,column:39}},"886":{start:{line:2662,column:4},end:{line:2665,column:5}},"887":{start:{line:2663,column:6},end:{line:2663,column:50}},"888":{start:{line:2664,column:6},end:{line:2664,column:35}},"889":{start:{line:2667,column:4},end:{line:2670,column:5}},"890":{start:{line:2668,column:6},end:{line:2668,column:60}},"891":{start:{line:2669,column:6},end:{line:2669,column:39}},"892":{start:{line:2672,column:4},end:{line:2676,column:5}},"893":{start:{line:2673,column:6},end:{line:2673,column:54}},"894":{start:{line:2674,column:6},end:{line:2674,column:37}},"895":{start:{line:2675,column:6},end:{line:2675,column:41}},"896":{start:{line:2678,column:4},end:{line:2681,column:5}},"897":{start:{line:2679,column:6},end:{line:2679,column:55}},"898":{start:{line:2680,column:6},end:{line:2680,column:45}},"899":{start:{line:2683,column:4},end:{line:2686,column:5}},"900":{start:{line:2684,column:6},end:{line:2684,column:49}},"901":{start:{line:2685,column:6},end:{line:2685,column:33}},"902":{start:{line:2688,column:4},end:{line:2691,column:5}},"903":{start:{line:2689,column:6},end:{line:2689,column:54}},"904":{start:{line:2690,column:6},end:{line:2690,column:43}},"905":{start:{line:2693,column:4},end:{line:2696,column:5}},"906":{start:{line:2694,column:6},end:{line:2694,column:49}},"907":{start:{line:2695,column:6},end:{line:2695,column:33}},"908":{start:{line:2698,column:4},end:{line:2701,column:5}},"909":{start:{line:2699,column:6},end:{line:2699,column:50}},"910":{start:{line:2700,column:6},end:{line:2700,column:35}},"911":{start:{line:2703,column:4},end:{line:2706,column:5}},"912":{start:{line:2704,column:6},end:{line:2704,column:64}},"913":{start:{line:2705,column:6},end:{line:2705,column:43}},"914":{start:{line:2708,column:4},end:{line:2711,column:5}},"915":{start:{line:2709,column:6},end:{line:2709,column:64}},"916":{start:{line:2710,column:6},end:{line:2710,column:43}},"917":{start:{line:2713,column:4},end:{line:2716,column:5}},"918":{start:{line:2714,column:6},end:{line:2714,column:55}},"919":{start:{line:2715,column:6},end:{line:2715,column:45}},"920":{start:{line:2718,column:4},end:{line:2718,column:16}},"921":{start:{line:2728,column:4},end:{line:2728,column:51}},"922":{start:{line:2747,column:4},end:{line:2747,column:53}},"923":{start:{line:2748,column:4},end:{line:2748,column:44}},"924":{start:{line:2749,column:4},end:{line:2749,column:63}},"925":{start:{line:2750,column:4},end:{line:2750,column:23}},"926":{start:{line:2751,column:4},end:{line:2751,column:23}},"927":{start:{line:2752,column:4},end:{line:2752,column:24}},"928":{start:{line:2761,column:4},end:{line:2761,column:57}},"929":{start:{line:2770,column:4},end:{line:2770,column:22}},"930":{start:{line:2779,column:4},end:{line:2779,column:59}},"931":{start:{line:2788,column:4},end:{line:2788,column:72}},"932":{start:{line:2797,column:4},end:{line:2797,column:70}},"933":{start:{line:2806,column:4},end:{line:2806,column:72}},"934":{start:{line:2815,column:4},end:{line:2815,column:60}},"935":{start:{line:2824,column:4},end:{line:2824,column:22}},"936":{start:{line:2833,column:4},end:{line:2833,column:23}},"937":{start:{line:2849,column:4},end:{line:2849,column:23}},"938":{start:{line:2850,column:4},end:{line:2850,column:23}},"939":{start:{line:2851,column:4},end:{line:2851,column:17}},"940":{start:{line:2852,column:4},end:{line:2852,column:27}},"941":{start:{line:2861,column:2},end:{line:2861,column:15}},"942":{start:{line:2868,column:0},end:{line:2868,column:23}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:44,column:2},end:{line:44,column:3}},loc:{start:{line:44,column:23},end:{line:67,column:3}},line:44},"1":{name:"(anonymous_1)",decl:{start:{line:74,column:2},end:{line:74,column:3}},loc:{start:{line:74,column:15},end:{line:111,column:3}},line:74},"2":{name:"(anonymous_2)",decl:{start:{line:118,column:2},end:{line:118,column:3}},loc:{start:{line:118,column:16},end:{line:122,column:3}},line:118},"3":{name:"(anonymous_3)",decl:{start:{line:133,column:2},end:{line:133,column:3}},loc:{start:{line:133,column:42},end:{line:159,column:3}},line:133},"4":{name:"(anonymous_4)",decl:{start:{line:168,column:2},end:{line:168,column:3}},loc:{start:{line:168,column:27},end:{line:175,column:3}},line:168},"5":{name:"(anonymous_5)",decl:{start:{line:185,column:2},end:{line:185,column:3}},loc:{start:{line:185,column:28},end:{line:188,column:3}},line:185},"6":{name:"(anonymous_6)",decl:{start:{line:196,column:2},end:{line:196,column:3}},loc:{start:{line:196,column:19},end:{line:198,column:3}},line:196},"7":{name:"(anonymous_7)",decl:{start:{line:206,column:2},end:{line:206,column:3}},loc:{start:{line:206,column:21},end:{line:208,column:3}},line:206},"8":{name:"(anonymous_8)",decl:{start:{line:217,column:2},end:{line:217,column:3}},loc:{start:{line:217,column:29},end:{line:219,column:3}},line:217},"9":{name:"(anonymous_9)",decl:{start:{line:227,column:2},end:{line:227,column:3}},loc:{start:{line:227,column:21},end:{line:229,column:3}},line:227},"10":{name:"(anonymous_10)",decl:{start:{line:237,column:2},end:{line:237,column:3}},loc:{start:{line:237,column:22},end:{line:239,column:3}},line:237},"11":{name:"(anonymous_11)",decl:{start:{line:247,column:2},end:{line:247,column:3}},loc:{start:{line:247,column:17},end:{line:249,column:3}},line:247},"12":{name:"(anonymous_12)",decl:{start:{line:257,column:2},end:{line:257,column:3}},loc:{start:{line:257,column:22},end:{line:259,column:3}},line:257},"13":{name:"(anonymous_13)",decl:{start:{line:268,column:2},end:{line:268,column:3}},loc:{start:{line:268,column:34},end:{line:297,column:3}},line:268},"14":{name:"(anonymous_14)",decl:{start:{line:306,column:2},end:{line:306,column:3}},loc:{start:{line:306,column:21},end:{line:312,column:3}},line:306},"15":{name:"(anonymous_15)",decl:{start:{line:325,column:2},end:{line:325,column:3}},loc:{start:{line:325,column:35},end:{line:520,column:3}},line:325},"16":{name:"(anonymous_16)",decl:{start:{line:529,column:2},end:{line:529,column:3}},loc:{start:{line:529,column:35},end:{line:601,column:3}},line:529},"17":{name:"(anonymous_17)",decl:{start:{line:608,column:2},end:{line:608,column:3}},loc:{start:{line:608,column:28},end:{line:639,column:3}},line:608},"18":{name:"(anonymous_18)",decl:{start:{line:652,column:2},end:{line:652,column:3}},loc:{start:{line:652,column:38},end:{line:666,column:3}},line:652},"19":{name:"(anonymous_19)",decl:{start:{line:676,column:2},end:{line:676,column:3}},loc:{start:{line:676,column:34},end:{line:693,column:3}},line:676},"20":{name:"(anonymous_20)",decl:{start:{line:713,column:2},end:{line:713,column:3}},loc:{start:{line:713,column:41},end:{line:812,column:3}},line:713},"21":{name:"(anonymous_21)",decl:{start:{line:822,column:2},end:{line:822,column:3}},loc:{start:{line:822,column:31},end:{line:840,column:3}},line:822},"22":{name:"(anonymous_22)",decl:{start:{line:851,column:2},end:{line:851,column:3}},loc:{start:{line:851,column:31},end:{line:898,column:3}},line:851},"23":{name:"(anonymous_23)",decl:{start:{line:908,column:2},end:{line:908,column:3}},loc:{start:{line:908,column:34},end:{line:950,column:3}},line:908},"24":{name:"(anonymous_24)",decl:{start:{line:958,column:2},end:{line:958,column:3}},loc:{start:{line:958,column:26},end:{line:978,column:3}},line:958},"25":{name:"(anonymous_25)",decl:{start:{line:990,column:2},end:{line:990,column:3}},loc:{start:{line:990,column:25},end:{line:1028,column:3}},line:990},"26":{name:"(anonymous_26)",decl:{start:{line:1043,column:2},end:{line:1043,column:3}},loc:{start:{line:1043,column:48},end:{line:1094,column:3}},line:1043},"27":{name:"(anonymous_27)",decl:{start:{line:1106,column:2},end:{line:1106,column:3}},loc:{start:{line:1106,column:49},end:{line:1157,column:3}},line:1106},"28":{name:"(anonymous_28)",decl:{start:{line:1167,column:2},end:{line:1167,column:3}},loc:{start:{line:1167,column:21},end:{line:1174,column:3}},line:1167},"29":{name:"(anonymous_29)",decl:{start:{line:1183,column:2},end:{line:1183,column:3}},loc:{start:{line:1183,column:30},end:{line:1206,column:3}},line:1183},"30":{name:"(anonymous_30)",decl:{start:{line:1215,column:2},end:{line:1215,column:3}},loc:{start:{line:1215,column:22},end:{line:1222,column:3}},line:1215},"31":{name:"(anonymous_31)",decl:{start:{line:1232,column:2},end:{line:1232,column:3}},loc:{start:{line:1232,column:31},end:{line:1247,column:3}},line:1232},"32":{name:"(anonymous_32)",decl:{start:{line:1255,column:2},end:{line:1255,column:3}},loc:{start:{line:1255,column:25},end:{line:1262,column:3}},line:1255},"33":{name:"(anonymous_33)",decl:{start:{line:1270,column:2},end:{line:1270,column:3}},loc:{start:{line:1270,column:26},end:{line:1273,column:3}},line:1270},"34":{name:"(anonymous_34)",decl:{start:{line:1280,column:2},end:{line:1280,column:3}},loc:{start:{line:1280,column:16},end:{line:1287,column:3}},line:1280},"35":{name:"(anonymous_35)",decl:{start:{line:1297,column:2},end:{line:1297,column:3}},loc:{start:{line:1297,column:34},end:{line:1304,column:3}},line:1297},"36":{name:"(anonymous_36)",decl:{start:{line:1314,column:2},end:{line:1314,column:3}},loc:{start:{line:1314,column:30},end:{line:1322,column:3}},line:1314},"37":{name:"(anonymous_37)",decl:{start:{line:1333,column:2},end:{line:1333,column:3}},loc:{start:{line:1333,column:31},end:{line:1397,column:3}},line:1333},"38":{name:"(anonymous_38)",decl:{start:{line:1408,column:2},end:{line:1408,column:3}},loc:{start:{line:1408,column:36},end:{line:1459,column:3}},line:1408},"39":{name:"(anonymous_39)",decl:{start:{line:1468,column:2},end:{line:1468,column:3}},loc:{start:{line:1468,column:29},end:{line:1497,column:3}},line:1468},"40":{name:"(anonymous_40)",decl:{start:{line:1505,column:2},end:{line:1505,column:3}},loc:{start:{line:1505,column:11},end:{line:1519,column:3}},line:1505},"41":{name:"(anonymous_41)",decl:{start:{line:1530,column:2},end:{line:1530,column:3}},loc:{start:{line:1530,column:33},end:{line:1546,column:3}},line:1530},"42":{name:"(anonymous_42)",decl:{start:{line:1556,column:2},end:{line:1556,column:3}},loc:{start:{line:1556,column:31},end:{line:1587,column:3}},line:1556},"43":{name:"(anonymous_43)",decl:{start:{line:1597,column:2},end:{line:1597,column:3}},loc:{start:{line:1597,column:32},end:{line:1621,column:3}},line:1597},"44":{name:"(anonymous_44)",decl:{start:{line:1630,column:2},end:{line:1630,column:3}},loc:{start:{line:1630,column:20},end:{line:1642,column:3}},line:1630},"45":{name:"(anonymous_45)",decl:{start:{line:1651,column:2},end:{line:1651,column:3}},loc:{start:{line:1651,column:23},end:{line:1663,column:3}},line:1651},"46":{name:"(anonymous_46)",decl:{start:{line:1672,column:2},end:{line:1672,column:3}},loc:{start:{line:1672,column:22},end:{line:1674,column:3}},line:1672},"47":{name:"(anonymous_47)",decl:{start:{line:1683,column:2},end:{line:1683,column:3}},loc:{start:{line:1683,column:22},end:{line:1690,column:3}},line:1683},"48":{name:"(anonymous_48)",decl:{start:{line:1696,column:2},end:{line:1696,column:3}},loc:{start:{line:1696,column:17},end:{line:1706,column:3}},line:1696},"49":{name:"(anonymous_49)",decl:{start:{line:1713,column:2},end:{line:1713,column:3}},loc:{start:{line:1713,column:17},end:{line:1734,column:3}},line:1713},"50":{name:"(anonymous_50)",decl:{start:{line:1743,column:2},end:{line:1743,column:3}},loc:{start:{line:1743,column:20},end:{line:1755,column:3}},line:1743},"51":{name:"(anonymous_51)",decl:{start:{line:1763,column:2},end:{line:1763,column:3}},loc:{start:{line:1763,column:19},end:{line:1765,column:3}},line:1763},"52":{name:"(anonymous_52)",decl:{start:{line:1773,column:2},end:{line:1773,column:3}},loc:{start:{line:1773,column:22},end:{line:1775,column:3}},line:1773},"53":{name:"(anonymous_53)",decl:{start:{line:1784,column:2},end:{line:1784,column:3}},loc:{start:{line:1784,column:18},end:{line:1795,column:3}},line:1784},"54":{name:"(anonymous_54)",decl:{start:{line:1803,column:2},end:{line:1803,column:3}},loc:{start:{line:1803,column:17},end:{line:1805,column:3}},line:1803},"55":{name:"(anonymous_55)",decl:{start:{line:1813,column:2},end:{line:1813,column:3}},loc:{start:{line:1813,column:27},end:{line:1815,column:3}},line:1813},"56":{name:"(anonymous_56)",decl:{start:{line:1823,column:2},end:{line:1823,column:3}},loc:{start:{line:1823,column:23},end:{line:1825,column:3}},line:1823},"57":{name:"(anonymous_57)",decl:{start:{line:1834,column:2},end:{line:1834,column:3}},loc:{start:{line:1834,column:18},end:{line:1836,column:3}},line:1834},"58":{name:"(anonymous_58)",decl:{start:{line:1844,column:2},end:{line:1844,column:3}},loc:{start:{line:1844,column:18},end:{line:1846,column:3}},line:1844},"59":{name:"(anonymous_59)",decl:{start:{line:1854,column:2},end:{line:1854,column:3}},loc:{start:{line:1854,column:17},end:{line:1856,column:3}},line:1854},"60":{name:"(anonymous_60)",decl:{start:{line:1864,column:2},end:{line:1864,column:3}},loc:{start:{line:1864,column:20},end:{line:1866,column:3}},line:1864},"61":{name:"(anonymous_61)",decl:{start:{line:1875,column:2},end:{line:1875,column:3}},loc:{start:{line:1875,column:15},end:{line:1877,column:3}},line:1875},"62":{name:"(anonymous_62)",decl:{start:{line:1884,column:2},end:{line:1884,column:3}},loc:{start:{line:1884,column:12},end:{line:1886,column:3}},line:1884},"63":{name:"(anonymous_63)",decl:{start:{line:1895,column:2},end:{line:1895,column:3}},loc:{start:{line:1895,column:34},end:{line:1897,column:3}},line:1895},"64":{name:"(anonymous_64)",decl:{start:{line:1906,column:2},end:{line:1906,column:3}},loc:{start:{line:1906,column:20},end:{line:1908,column:3}},line:1906},"65":{name:"(anonymous_65)",decl:{start:{line:1917,column:2},end:{line:1917,column:3}},loc:{start:{line:1917,column:23},end:{line:1919,column:3}},line:1917},"66":{name:"(anonymous_66)",decl:{start:{line:1927,column:2},end:{line:1927,column:3}},loc:{start:{line:1927,column:17},end:{line:1929,column:3}},line:1927},"67":{name:"(anonymous_67)",decl:{start:{line:1937,column:2},end:{line:1937,column:3}},loc:{start:{line:1937,column:21},end:{line:1939,column:3}},line:1937},"68":{name:"(anonymous_68)",decl:{start:{line:1947,column:2},end:{line:1947,column:3}},loc:{start:{line:1947,column:22},end:{line:1949,column:3}},line:1947},"69":{name:"(anonymous_69)",decl:{start:{line:1957,column:2},end:{line:1957,column:3}},loc:{start:{line:1957,column:18},end:{line:1959,column:3}},line:1957},"70":{name:"(anonymous_70)",decl:{start:{line:1967,column:2},end:{line:1967,column:3}},loc:{start:{line:1967,column:18},end:{line:1969,column:3}},line:1967},"71":{name:"(anonymous_71)",decl:{start:{line:1977,column:2},end:{line:1977,column:3}},loc:{start:{line:1977,column:19},end:{line:1979,column:3}},line:1977},"72":{name:"(anonymous_72)",decl:{start:{line:1987,column:2},end:{line:1987,column:3}},loc:{start:{line:1987,column:18},end:{line:1989,column:3}},line:1987},"73":{name:"(anonymous_73)",decl:{start:{line:1996,column:2},end:{line:1996,column:3}},loc:{start:{line:1996,column:11},end:{line:1998,column:3}},line:1996},"74":{name:"(anonymous_74)",decl:{start:{line:2005,column:2},end:{line:2005,column:3}},loc:{start:{line:2005,column:14},end:{line:2022,column:3}},line:2005},"75":{name:"(anonymous_75)",decl:{start:{line:2031,column:2},end:{line:2031,column:3}},loc:{start:{line:2031,column:17},end:{line:2033,column:3}},line:2031},"76":{name:"(anonymous_76)",decl:{start:{line:2040,column:2},end:{line:2040,column:3}},loc:{start:{line:2040,column:16},end:{line:2045,column:3}},line:2040},"77":{name:"(anonymous_77)",decl:{start:{line:2055,column:2},end:{line:2055,column:3}},loc:{start:{line:2055,column:26},end:{line:2062,column:3}},line:2055},"78":{name:"(anonymous_78)",decl:{start:{line:2071,column:2},end:{line:2071,column:3}},loc:{start:{line:2071,column:27},end:{line:2118,column:3}},line:2071},"79":{name:"(anonymous_79)",decl:{start:{line:2126,column:2},end:{line:2126,column:3}},loc:{start:{line:2126,column:22},end:{line:2142,column:3}},line:2126},"80":{name:"(anonymous_80)",decl:{start:{line:2152,column:2},end:{line:2152,column:3}},loc:{start:{line:2152,column:25},end:{line:2171,column:3}},line:2152},"81":{name:"(anonymous_81)",decl:{start:{line:2179,column:2},end:{line:2179,column:3}},loc:{start:{line:2179,column:27},end:{line:2181,column:3}},line:2179},"82":{name:"(anonymous_82)",decl:{start:{line:2191,column:2},end:{line:2191,column:3}},loc:{start:{line:2191,column:30},end:{line:2231,column:3}},line:2191},"83":{name:"(anonymous_83)",decl:{start:{line:2241,column:2},end:{line:2241,column:3}},loc:{start:{line:2241,column:24},end:{line:2265,column:3}},line:2241},"84":{name:"(anonymous_84)",decl:{start:{line:2274,column:2},end:{line:2274,column:3}},loc:{start:{line:2274,column:29},end:{line:2281,column:3}},line:2274},"85":{name:"(anonymous_85)",decl:{start:{line:2293,column:2},end:{line:2293,column:3}},loc:{start:{line:2293,column:35},end:{line:2296,column:3}},line:2293},"86":{name:"(anonymous_86)",decl:{start:{line:2308,column:2},end:{line:2308,column:3}},loc:{start:{line:2308,column:35},end:{line:2426,column:3}},line:2308},"87":{name:"(anonymous_87)",decl:{start:{line:2435,column:2},end:{line:2435,column:3}},loc:{start:{line:2435,column:34},end:{line:2451,column:3}},line:2435},"88":{name:"(anonymous_88)",decl:{start:{line:2459,column:2},end:{line:2459,column:3}},loc:{start:{line:2459,column:29},end:{line:2471,column:3}},line:2459},"89":{name:"(anonymous_89)",decl:{start:{line:2482,column:2},end:{line:2482,column:3}},loc:{start:{line:2482,column:37},end:{line:2495,column:3}},line:2482},"90":{name:"(anonymous_90)",decl:{start:{line:2506,column:2},end:{line:2506,column:3}},loc:{start:{line:2506,column:40},end:{line:2547,column:3}},line:2506},"91":{name:"(anonymous_91)",decl:{start:{line:2558,column:2},end:{line:2558,column:3}},loc:{start:{line:2558,column:43},end:{line:2574,column:3}},line:2558},"92":{name:"(anonymous_92)",decl:{start:{line:2589,column:2},end:{line:2589,column:3}},loc:{start:{line:2589,column:23},end:{line:2614,column:3}},line:2589},"93":{name:"(anonymous_93)",decl:{start:{line:2623,column:2},end:{line:2623,column:3}},loc:{start:{line:2623,column:23},end:{line:2719,column:3}},line:2623},"94":{name:"(anonymous_94)",decl:{start:{line:2727,column:2},end:{line:2727,column:3}},loc:{start:{line:2727,column:30},end:{line:2729,column:3}},line:2727},"95":{name:"(anonymous_95)",decl:{start:{line:2746,column:2},end:{line:2746,column:3}},loc:{start:{line:2746,column:16},end:{line:2753,column:3}},line:2746},"96":{name:"(anonymous_96)",decl:{start:{line:2760,column:2},end:{line:2760,column:3}},loc:{start:{line:2760,column:12},end:{line:2762,column:3}},line:2760},"97":{name:"(anonymous_97)",decl:{start:{line:2769,column:2},end:{line:2769,column:3}},loc:{start:{line:2769,column:13},end:{line:2771,column:3}},line:2769},"98":{name:"(anonymous_98)",decl:{start:{line:2778,column:2},end:{line:2778,column:3}},loc:{start:{line:2778,column:13},end:{line:2780,column:3}},line:2778},"99":{name:"(anonymous_99)",decl:{start:{line:2787,column:2},end:{line:2787,column:3}},loc:{start:{line:2787,column:12},end:{line:2789,column:3}},line:2787},"100":{name:"(anonymous_100)",decl:{start:{line:2796,column:2},end:{line:2796,column:3}},loc:{start:{line:2796,column:11},end:{line:2798,column:3}},line:2796},"101":{name:"(anonymous_101)",decl:{start:{line:2805,column:2},end:{line:2805,column:3}},loc:{start:{line:2805,column:11},end:{line:2807,column:3}},line:2805},"102":{name:"(anonymous_102)",decl:{start:{line:2814,column:2},end:{line:2814,column:3}},loc:{start:{line:2814,column:15},end:{line:2816,column:3}},line:2814},"103":{name:"(anonymous_103)",decl:{start:{line:2823,column:2},end:{line:2823,column:3}},loc:{start:{line:2823,column:13},end:{line:2825,column:3}},line:2823},"104":{name:"(anonymous_104)",decl:{start:{line:2832,column:2},end:{line:2832,column:3}},loc:{start:{line:2832,column:14},end:{line:2834,column:3}},line:2832},"105":{name:"(anonymous_105)",decl:{start:{line:2848,column:2},end:{line:2848,column:3}},loc:{start:{line:2848,column:32},end:{line:2853,column:3}},line:2848},"106":{name:"cmp",decl:{start:{line:2860,column:9},end:{line:2860,column:12}},loc:{start:{line:2860,column:19},end:{line:2862,column:1}},line:2860}},branchMap:{"0":{loc:{start:{line:80,column:4},end:{line:81,column:51}},type:"if",locations:[{start:{line:80,column:4},end:{line:81,column:51}},{start:{line:80,column:4},end:{line:81,column:51}}],line:80},"1":{loc:{start:{line:83,column:4},end:{line:84,column:72}},type:"if",locations:[{start:{line:83,column:4},end:{line:84,column:72}},{start:{line:83,column:4},end:{line:84,column:72}}],line:83},"2":{loc:{start:{line:86,column:4},end:{line:87,column:68}},type:"if",locations:[{start:{line:86,column:4},end:{line:87,column:68}},{start:{line:86,column:4},end:{line:87,column:68}}],line:86},"3":{loc:{start:{line:138,column:4},end:{line:141,column:5}},type:"if",locations:[{start:{line:138,column:4},end:{line:141,column:5}},{start:{line:138,column:4},end:{line:141,column:5}}],line:138},"4":{loc:{start:{line:144,column:4},end:{line:147,column:5}},type:"if",locations:[{start:{line:144,column:4},end:{line:147,column:5}},{start:{line:144,column:4},end:{line:147,column:5}}],line:144},"5":{loc:{start:{line:152,column:4},end:{line:153,column:47}},type:"if",locations:[{start:{line:152,column:4},end:{line:153,column:47}},{start:{line:152,column:4},end:{line:153,column:47}}],line:152},"6":{loc:{start:{line:276,column:4},end:{line:279,column:5}},type:"if",locations:[{start:{line:276,column:4},end:{line:279,column:5}},{start:{line:276,column:4},end:{line:279,column:5}}],line:276},"7":{loc:{start:{line:283,column:20},end:{line:283,column:41}},type:"binary-expr",locations:[{start:{line:283,column:20},end:{line:283,column:32}},{start:{line:283,column:36},end:{line:283,column:41}}],line:283},"8":{loc:{start:{line:288,column:6},end:{line:291,column:46}},type:"if",locations:[{start:{line:288,column:6},end:{line:291,column:46}},{start:{line:288,column:6},end:{line:291,column:46}}],line:288},"9":{loc:{start:{line:307,column:4},end:{line:310,column:5}},type:"if",locations:[{start:{line:307,column:4},end:{line:310,column:5}},{start:{line:307,column:4},end:{line:310,column:5}}],line:307},"10":{loc:{start:{line:308,column:6},end:{line:309,column:20}},type:"if",locations:[{start:{line:308,column:6},end:{line:309,column:20}},{start:{line:308,column:6},end:{line:309,column:20}}],line:308},"11":{loc:{start:{line:329,column:4},end:{line:330,column:64}},type:"if",locations:[{start:{line:329,column:4},end:{line:330,column:64}},{start:{line:329,column:4},end:{line:330,column:64}}],line:329},"12":{loc:{start:{line:334,column:4},end:{line:339,column:5}},type:"if",locations:[{start:{line:334,column:4},end:{line:339,column:5}},{start:{line:334,column:4},end:{line:339,column:5}}],line:334},"13":{loc:{start:{line:345,column:4},end:{line:370,column:5}},type:"if",locations:[{start:{line:345,column:4},end:{line:370,column:5}},{start:{line:345,column:4},end:{line:370,column:5}}],line:345},"14":{loc:{start:{line:346,column:6},end:{line:347,column:26}},type:"if",locations:[{start:{line:346,column:6},end:{line:347,column:26}},{start:{line:346,column:6},end:{line:347,column:26}}],line:346},"15":{loc:{start:{line:350,column:6},end:{line:364,column:7}},type:"if",locations:[{start:{line:350,column:6},end:{line:364,column:7}},{start:{line:350,column:6},end:{line:364,column:7}}],line:350},"16":{loc:{start:{line:355,column:8},end:{line:361,column:9}},type:"if",locations:[{start:{line:355,column:8},end:{line:361,column:9}},{start:{line:355,column:8},end:{line:361,column:9}}],line:355},"17":{loc:{start:{line:355,column:12},end:{line:355,column:51}},type:"binary-expr",locations:[{start:{line:355,column:12},end:{line:355,column:17}},{start:{line:355,column:21},end:{line:355,column:51}}],line:355},"18":{loc:{start:{line:368,column:6},end:{line:369,column:37}},type:"if",locations:[{start:{line:368,column:6},end:{line:369,column:37}},{start:{line:368,column:6},end:{line:369,column:37}}],line:368},"19":{loc:{start:{line:368,column:10},end:{line:368,column:59}},type:"binary-expr",locations:[{start:{line:368,column:10},end:{line:368,column:29}},{start:{line:368,column:33},end:{line:368,column:59}}],line:368},"20":{loc:{start:{line:373,column:4},end:{line:378,column:5}},type:"if",locations:[{start:{line:373,column:4},end:{line:378,column:5}},{start:{line:373,column:4},end:{line:378,column:5}}],line:373},"21":{loc:{start:{line:376,column:6},end:{line:377,column:69}},type:"if",locations:[{start:{line:376,column:6},end:{line:377,column:69}},{start:{line:376,column:6},end:{line:377,column:69}}],line:376},"22":{loc:{start:{line:383,column:4},end:{line:388,column:5}},type:"if",locations:[{start:{line:383,column:4},end:{line:388,column:5}},{start:{line:383,column:4},end:{line:388,column:5}}],line:383},"23":{loc:{start:{line:392,column:4},end:{line:393,column:24}},type:"if",locations:[{start:{line:392,column:4},end:{line:393,column:24}},{start:{line:392,column:4},end:{line:393,column:24}}],line:392},"24":{loc:{start:{line:398,column:4},end:{line:403,column:5}},type:"if",locations:[{start:{line:398,column:4},end:{line:403,column:5}},{start:{line:398,column:4},end:{line:403,column:5}}],line:398},"25":{loc:{start:{line:408,column:4},end:{line:414,column:5}},type:"if",locations:[{start:{line:408,column:4},end:{line:414,column:5}},{start:{line:408,column:4},end:{line:414,column:5}}],line:408},"26":{loc:{start:{line:421,column:4},end:{line:422,column:65}},type:"if",locations:[{start:{line:421,column:4},end:{line:422,column:65}},{start:{line:421,column:4},end:{line:422,column:65}}],line:421},"27":{loc:{start:{line:421,column:8},end:{line:421,column:69}},type:"binary-expr",locations:[{start:{line:421,column:8},end:{line:421,column:25}},{start:{line:421,column:29},end:{line:421,column:69}}],line:421},"28":{loc:{start:{line:426,column:4},end:{line:427,column:65}},type:"if",locations:[{start:{line:426,column:4},end:{line:427,column:65}},{start:{line:426,column:4},end:{line:427,column:65}}],line:426},"29":{loc:{start:{line:426,column:8},end:{line:426,column:69}},type:"binary-expr",locations:[{start:{line:426,column:8},end:{line:426,column:25}},{start:{line:426,column:29},end:{line:426,column:69}}],line:426},"30":{loc:{start:{line:431,column:4},end:{line:432,column:65}},type:"if",locations:[{start:{line:431,column:4},end:{line:432,column:65}},{start:{line:431,column:4},end:{line:432,column:65}}],line:431},"31":{loc:{start:{line:431,column:8},end:{line:431,column:69}},type:"binary-expr",locations:[{start:{line:431,column:8},end:{line:431,column:25}},{start:{line:431,column:29},end:{line:431,column:69}}],line:431},"32":{loc:{start:{line:438,column:4},end:{line:442,column:5}},type:"if",locations:[{start:{line:438,column:4},end:{line:442,column:5}},{start:{line:438,column:4},end:{line:442,column:5}}],line:438},"33":{loc:{start:{line:438,column:8},end:{line:438,column:45}},type:"binary-expr",locations:[{start:{line:438,column:8},end:{line:438,column:24}},{start:{line:438,column:28},end:{line:438,column:45}}],line:438},"34":{loc:{start:{line:440,column:6},end:{line:441,column:68}},type:"if",locations:[{start:{line:440,column:6},end:{line:441,column:68}},{start:{line:440,column:6},end:{line:441,column:68}}],line:440},"35":{loc:{start:{line:445,column:17},end:{line:445,column:50}},type:"cond-expr",locations:[{start:{line:445,column:34},end:{line:445,column:37}},{start:{line:445,column:40},end:{line:445,column:50}}],line:445},"36":{loc:{start:{line:450,column:6},end:{line:455,column:7}},type:"if",locations:[{start:{line:450,column:6},end:{line:455,column:7}},{start:{line:450,column:6},end:{line:455,column:7}}],line:450},"37":{loc:{start:{line:460,column:4},end:{line:467,column:5}},type:"if",locations:[{start:{line:460,column:4},end:{line:467,column:5}},{start:{line:460,column:4},end:{line:467,column:5}}],line:460},"38":{loc:{start:{line:461,column:6},end:{line:466,column:7}},type:"if",locations:[{start:{line:461,column:6},end:{line:466,column:7}},{start:{line:461,column:6},end:{line:466,column:7}}],line:461},"39":{loc:{start:{line:471,column:4},end:{line:496,column:5}},type:"if",locations:[{start:{line:471,column:4},end:{line:496,column:5}},{start:{line:471,column:4},end:{line:496,column:5}}],line:471},"40":{loc:{start:{line:473,column:6},end:{line:495,column:7}},type:"if",locations:[{start:{line:473,column:6},end:{line:495,column:7}},{start:{line:473,column:6},end:{line:495,column:7}}],line:473},"41":{loc:{start:{line:480,column:8},end:{line:486,column:9}},type:"if",locations:[{start:{line:480,column:8},end:{line:486,column:9}},{start:{line:480,column:8},end:{line:486,column:9}}],line:480},"42":{loc:{start:{line:488,column:8},end:{line:494,column:9}},type:"if",locations:[{start:{line:488,column:8},end:{line:494,column:9}},{start:{line:488,column:8},end:{line:494,column:9}}],line:488},"43":{loc:{start:{line:500,column:4},end:{line:508,column:5}},type:"if",locations:[{start:{line:500,column:4},end:{line:508,column:5}},{start:{line:500,column:4},end:{line:508,column:5}}],line:500},"44":{loc:{start:{line:501,column:6},end:{line:507,column:7}},type:"if",locations:[{start:{line:501,column:6},end:{line:507,column:7}},{start:{line:501,column:6},end:{line:507,column:7}}],line:501},"45":{loc:{start:{line:512,column:4},end:{line:517,column:5}},type:"if",locations:[{start:{line:512,column:4},end:{line:517,column:5}},{start:{line:512,column:4},end:{line:517,column:5}}],line:512},"46":{loc:{start:{line:542,column:4},end:{line:543,column:46}},type:"if",locations:[{start:{line:542,column:4},end:{line:543,column:46}},{start:{line:542,column:4},end:{line:543,column:46}}],line:542},"47":{loc:{start:{line:546,column:4},end:{line:547,column:25}},type:"if",locations:[{start:{line:546,column:4},end:{line:547,column:25}},{start:{line:546,column:4},end:{line:547,column:25}}],line:546},"48":{loc:{start:{line:550,column:4},end:{line:551,column:48}},type:"if",locations:[{start:{line:550,column:4},end:{line:551,column:48}},{start:{line:550,column:4},end:{line:551,column:48}}],line:550},"49":{loc:{start:{line:554,column:4},end:{line:555,column:61}},type:"if",locations:[{start:{line:554,column:4},end:{line:555,column:61}},{start:{line:554,column:4},end:{line:555,column:61}}],line:554},"50":{loc:{start:{line:559,column:4},end:{line:563,column:5}},type:"if",locations:[{start:{line:559,column:4},end:{line:563,column:5}},{start:{line:559,column:4},end:{line:563,column:5}}],line:559},"51":{loc:{start:{line:570,column:4},end:{line:573,column:5}},type:"if",locations:[{start:{line:570,column:4},end:{line:573,column:5}},{start:{line:570,column:4},end:{line:573,column:5}}],line:570},"52":{loc:{start:{line:576,column:4},end:{line:581,column:5}},type:"if",locations:[{start:{line:576,column:4},end:{line:581,column:5}},{start:{line:576,column:4},end:{line:581,column:5}}],line:576},"53":{loc:{start:{line:577,column:6},end:{line:580,column:7}},type:"if",locations:[{start:{line:577,column:6},end:{line:580,column:7}},{start:{line:577,column:6},end:{line:580,column:7}}],line:577},"54":{loc:{start:{line:578,column:8},end:{line:579,column:29}},type:"if",locations:[{start:{line:578,column:8},end:{line:579,column:29}},{start:{line:578,column:8},end:{line:579,column:29}}],line:578},"55":{loc:{start:{line:584,column:4},end:{line:598,column:5}},type:"if",locations:[{start:{line:584,column:4},end:{line:598,column:5}},{start:{line:584,column:4},end:{line:598,column:5}}],line:584},"56":{loc:{start:{line:584,column:8},end:{line:584,column:60}},type:"binary-expr",locations:[{start:{line:584,column:8},end:{line:584,column:27}},{start:{line:584,column:31},end:{line:584,column:60}}],line:584},"57":{loc:{start:{line:585,column:6},end:{line:597,column:7}},type:"if",locations:[{start:{line:585,column:6},end:{line:597,column:7}},{start:{line:585,column:6},end:{line:597,column:7}}],line:585},"58":{loc:{start:{line:585,column:10},end:{line:586,column:47}},type:"binary-expr",locations:[{start:{line:585,column:10},end:{line:585,column:47}},{start:{line:586,column:13},end:{line:586,column:47}}],line:585},"59":{loc:{start:{line:595,column:8},end:{line:596,column:30}},type:"if",locations:[{start:{line:595,column:8},end:{line:596,column:30}},{start:{line:595,column:8},end:{line:596,column:30}}],line:595},"60":{loc:{start:{line:595,column:12},end:{line:595,column:50}},type:"binary-expr",locations:[{start:{line:595,column:12},end:{line:595,column:29}},{start:{line:595,column:33},end:{line:595,column:50}}],line:595},"61":{loc:{start:{line:609,column:4},end:{line:612,column:5}},type:"if",locations:[{start:{line:609,column:4},end:{line:612,column:5}},{start:{line:609,column:4},end:{line:612,column:5}}],line:609},"62":{loc:{start:{line:609,column:8},end:{line:609,column:77}},type:"binary-expr",locations:[{start:{line:609,column:8},end:{line:609,column:32}},{start:{line:609,column:36},end:{line:609,column:77}}],line:609},"63":{loc:{start:{line:614,column:4},end:{line:615,column:54}},type:"if",locations:[{start:{line:614,column:4},end:{line:615,column:54}},{start:{line:614,column:4},end:{line:615,column:54}}],line:614},"64":{loc:{start:{line:614,column:8},end:{line:614,column:48}},type:"binary-expr",locations:[{start:{line:614,column:8},end:{line:614,column:29}},{start:{line:614,column:33},end:{line:614,column:48}}],line:614},"65":{loc:{start:{line:617,column:4},end:{line:618,column:55}},type:"if",locations:[{start:{line:617,column:4},end:{line:618,column:55}},{start:{line:617,column:4},end:{line:618,column:55}}],line:617},"66":{loc:{start:{line:617,column:8},end:{line:617,column:50}},type:"binary-expr",locations:[{start:{line:617,column:8},end:{line:617,column:30}},{start:{line:617,column:34},end:{line:617,column:50}}],line:617},"67":{loc:{start:{line:620,column:4},end:{line:621,column:55}},type:"if",locations:[{start:{line:620,column:4},end:{line:621,column:55}},{start:{line:620,column:4},end:{line:621,column:55}}],line:620},"68":{loc:{start:{line:620,column:8},end:{line:620,column:50}},type:"binary-expr",locations:[{start:{line:620,column:8},end:{line:620,column:30}},{start:{line:620,column:34},end:{line:620,column:50}}],line:620},"69":{loc:{start:{line:623,column:4},end:{line:624,column:55}},type:"if",locations:[{start:{line:623,column:4},end:{line:624,column:55}},{start:{line:623,column:4},end:{line:624,column:55}}],line:623},"70":{loc:{start:{line:623,column:8},end:{line:623,column:48}},type:"binary-expr",locations:[{start:{line:623,column:8},end:{line:623,column:29}},{start:{line:623,column:33},end:{line:623,column:48}}],line:623},"71":{loc:{start:{line:626,column:4},end:{line:627,column:53}},type:"if",locations:[{start:{line:626,column:4},end:{line:627,column:53}},{start:{line:626,column:4},end:{line:627,column:53}}],line:626},"72":{loc:{start:{line:626,column:8},end:{line:626,column:46}},type:"binary-expr",locations:[{start:{line:626,column:8},end:{line:626,column:28}},{start:{line:626,column:32},end:{line:626,column:46}}],line:626},"73":{loc:{start:{line:629,column:4},end:{line:630,column:56}},type:"if",locations:[{start:{line:629,column:4},end:{line:630,column:56}},{start:{line:629,column:4},end:{line:630,column:56}}],line:629},"74":{loc:{start:{line:629,column:8},end:{line:629,column:54}},type:"binary-expr",locations:[{start:{line:629,column:8},end:{line:629,column:32}},{start:{line:629,column:36},end:{line:629,column:54}}],line:629},"75":{loc:{start:{line:632,column:4},end:{line:633,column:55}},type:"if",locations:[{start:{line:632,column:4},end:{line:633,column:55}},{start:{line:632,column:4},end:{line:633,column:55}}],line:632},"76":{loc:{start:{line:632,column:8},end:{line:632,column:50}},type:"binary-expr",locations:[{start:{line:632,column:8},end:{line:632,column:30}},{start:{line:632,column:34},end:{line:632,column:50}}],line:632},"77":{loc:{start:{line:635,column:4},end:{line:636,column:56}},type:"if",locations:[{start:{line:635,column:4},end:{line:636,column:56}},{start:{line:635,column:4},end:{line:636,column:56}}],line:635},"78":{loc:{start:{line:635,column:8},end:{line:635,column:52}},type:"binary-expr",locations:[{start:{line:635,column:8},end:{line:635,column:31}},{start:{line:635,column:35},end:{line:635,column:52}}],line:635},"79":{loc:{start:{line:654,column:6},end:{line:655,column:17}},type:"if",locations:[{start:{line:654,column:6},end:{line:655,column:17}},{start:{line:654,column:6},end:{line:655,column:17}}],line:654},"80":{loc:{start:{line:663,column:6},end:{line:664,column:71}},type:"if",locations:[{start:{line:663,column:6},end:{line:664,column:71}},{start:{line:663,column:6},end:{line:664,column:71}}],line:663},"81":{loc:{start:{line:663,column:10},end:{line:663,column:45}},type:"binary-expr",locations:[{start:{line:663,column:10},end:{line:663,column:15}},{start:{line:663,column:19},end:{line:663,column:45}}],line:663},"82":{loc:{start:{line:726,column:6},end:{line:733,column:7}},type:"if",locations:[{start:{line:726,column:6},end:{line:733,column:7}},{start:{line:726,column:6},end:{line:733,column:7}}],line:726},"83":{loc:{start:{line:727,column:8},end:{line:732,column:9}},type:"if",locations:[{start:{line:727,column:8},end:{line:732,column:9}},{start:{line:727,column:8},end:{line:732,column:9}}],line:727},"84":{loc:{start:{line:736,column:6},end:{line:745,column:7}},type:"if",locations:[{start:{line:736,column:6},end:{line:745,column:7}},{start:{line:736,column:6},end:{line:745,column:7}}],line:736},"85":{loc:{start:{line:736,column:10},end:{line:736,column:34}},type:"binary-expr",locations:[{start:{line:736,column:10},end:{line:736,column:15}},{start:{line:736,column:19},end:{line:736,column:34}}],line:736},"86":{loc:{start:{line:739,column:8},end:{line:744,column:9}},type:"if",locations:[{start:{line:739,column:8},end:{line:744,column:9}},{start:{line:739,column:8},end:{line:744,column:9}}],line:739},"87":{loc:{start:{line:750,column:6},end:{line:755,column:7}},type:"if",locations:[{start:{line:750,column:6},end:{line:755,column:7}},{start:{line:750,column:6},end:{line:755,column:7}}],line:750},"88":{loc:{start:{line:758,column:6},end:{line:776,column:7}},type:"if",locations:[{start:{line:758,column:6},end:{line:776,column:7}},{start:{line:758,column:6},end:{line:776,column:7}}],line:758},"89":{loc:{start:{line:761,column:8},end:{line:766,column:9}},type:"if",locations:[{start:{line:761,column:8},end:{line:766,column:9}},{start:{line:761,column:8},end:{line:766,column:9}}],line:761},"90":{loc:{start:{line:770,column:8},end:{line:775,column:9}},type:"if",locations:[{start:{line:770,column:8},end:{line:775,column:9}},{start:{line:770,column:8},end:{line:775,column:9}}],line:770},"91":{loc:{start:{line:785,column:4},end:{line:790,column:5}},type:"if",locations:[{start:{line:785,column:4},end:{line:790,column:5}},{start:{line:785,column:4},end:{line:790,column:5}}],line:785},"92":{loc:{start:{line:803,column:6},end:{line:808,column:7}},type:"if",locations:[{start:{line:803,column:6},end:{line:808,column:7}},{start:{line:803,column:6},end:{line:808,column:7}}],line:803},"93":{loc:{start:{line:826,column:8},end:{line:827,column:60}},type:"if",locations:[{start:{line:826,column:8},end:{line:827,column:60}},{start:{line:826,column:8},end:{line:827,column:60}}],line:826},"94":{loc:{start:{line:830,column:6},end:{line:831,column:20}},type:"if",locations:[{start:{line:830,column:6},end:{line:831,column:20}},{start:{line:830,column:6},end:{line:831,column:20}}],line:830},"95":{loc:{start:{line:835,column:6},end:{line:836,column:58}},type:"if",locations:[{start:{line:835,column:6},end:{line:836,column:58}},{start:{line:835,column:6},end:{line:836,column:58}}],line:835},"96":{loc:{start:{line:961,column:4},end:{line:965,column:5}},type:"if",locations:[{start:{line:961,column:4},end:{line:965,column:5}},{start:{line:961,column:4},end:{line:965,column:5}}],line:961},"97":{loc:{start:{line:962,column:6},end:{line:963,column:44}},type:"if",locations:[{start:{line:962,column:6},end:{line:963,column:44}},{start:{line:962,column:6},end:{line:963,column:44}}],line:962},"98":{loc:{start:{line:995,column:4},end:{line:999,column:5}},type:"if",locations:[{start:{line:995,column:4},end:{line:999,column:5}},{start:{line:995,column:4},end:{line:999,column:5}}],line:995},"99":{loc:{start:{line:996,column:6},end:{line:997,column:44}},type:"if",locations:[{start:{line:996,column:6},end:{line:997,column:44}},{start:{line:996,column:6},end:{line:997,column:44}}],line:996},"100":{loc:{start:{line:1008,column:6},end:{line:1014,column:7}},type:"if",locations:[{start:{line:1008,column:6},end:{line:1014,column:7}},{start:{line:1008,column:6},end:{line:1014,column:7}}],line:1008},"101":{loc:{start:{line:1009,column:8},end:{line:1010,column:38}},type:"if",locations:[{start:{line:1009,column:8},end:{line:1010,column:38}},{start:{line:1009,column:8},end:{line:1010,column:38}}],line:1009},"102":{loc:{start:{line:1046,column:4},end:{line:1055,column:5}},type:"if",locations:[{start:{line:1046,column:4},end:{line:1055,column:5}},{start:{line:1046,column:4},end:{line:1055,column:5}}],line:1046},"103":{loc:{start:{line:1051,column:6},end:{line:1052,column:41}},type:"if",locations:[{start:{line:1051,column:6},end:{line:1052,column:41}},{start:{line:1051,column:6},end:{line:1052,column:41}}],line:1051},"104":{loc:{start:{line:1058,column:4},end:{line:1062,column:5}},type:"if",locations:[{start:{line:1058,column:4},end:{line:1062,column:5}},{start:{line:1058,column:4},end:{line:1062,column:5}}],line:1058},"105":{loc:{start:{line:1072,column:6},end:{line:1078,column:7}},type:"if",locations:[{start:{line:1072,column:6},end:{line:1078,column:7}},{start:{line:1072,column:6},end:{line:1078,column:7}}],line:1072},"106":{loc:{start:{line:1073,column:8},end:{line:1074,column:38}},type:"if",locations:[{start:{line:1073,column:8},end:{line:1074,column:38}},{start:{line:1073,column:8},end:{line:1074,column:38}}],line:1073},"107":{loc:{start:{line:1109,column:4},end:{line:1115,column:5}},type:"if",locations:[{start:{line:1109,column:4},end:{line:1115,column:5}},{start:{line:1109,column:4},end:{line:1115,column:5}}],line:1109},"108":{loc:{start:{line:1110,column:6},end:{line:1114,column:15}},type:"if",locations:[{start:{line:1110,column:6},end:{line:1114,column:15}},{start:{line:1110,column:6},end:{line:1114,column:15}}],line:1110},"109":{loc:{start:{line:1122,column:6},end:{line:1128,column:7}},type:"if",locations:[{start:{line:1122,column:6},end:{line:1128,column:7}},{start:{line:1122,column:6},end:{line:1128,column:7}}],line:1122},"110":{loc:{start:{line:1123,column:8},end:{line:1124,column:38}},type:"if",locations:[{start:{line:1123,column:8},end:{line:1124,column:38}},{start:{line:1123,column:8},end:{line:1124,column:38}}],line:1123},"111":{loc:{start:{line:1133,column:4},end:{line:1137,column:5}},type:"if",locations:[{start:{line:1133,column:4},end:{line:1137,column:5}},{start:{line:1133,column:4},end:{line:1137,column:5}}],line:1133},"112":{loc:{start:{line:1197,column:4},end:{line:1198,column:41}},type:"if",locations:[{start:{line:1197,column:4},end:{line:1198,column:41}},{start:{line:1197,column:4},end:{line:1198,column:41}}],line:1197},"113":{loc:{start:{line:1235,column:4},end:{line:1236,column:42}},type:"if",locations:[{start:{line:1235,column:4},end:{line:1236,column:42}},{start:{line:1235,column:4},end:{line:1236,column:42}}],line:1235},"114":{loc:{start:{line:1238,column:4},end:{line:1239,column:58}},type:"if",locations:[{start:{line:1238,column:4},end:{line:1239,column:58}},{start:{line:1238,column:4},end:{line:1239,column:58}}],line:1238},"115":{loc:{start:{line:1241,column:4},end:{line:1244,column:5}},type:"if",locations:[{start:{line:1241,column:4},end:{line:1244,column:5}},{start:{line:1241,column:4},end:{line:1244,column:5}}],line:1241},"116":{loc:{start:{line:1336,column:4},end:{line:1337,column:41}},type:"if",locations:[{start:{line:1336,column:4},end:{line:1337,column:41}},{start:{line:1336,column:4},end:{line:1337,column:41}}],line:1336},"117":{loc:{start:{line:1339,column:4},end:{line:1340,column:14}},type:"if",locations:[{start:{line:1339,column:4},end:{line:1340,column:14}},{start:{line:1339,column:4},end:{line:1340,column:14}}],line:1339},"118":{loc:{start:{line:1343,column:4},end:{line:1346,column:5}},type:"if",locations:[{start:{line:1343,column:4},end:{line:1346,column:5}},{start:{line:1343,column:4},end:{line:1346,column:5}}],line:1343},"119":{loc:{start:{line:1349,column:4},end:{line:1352,column:5}},type:"if",locations:[{start:{line:1349,column:4},end:{line:1352,column:5}},{start:{line:1349,column:4},end:{line:1352,column:5}}],line:1349},"120":{loc:{start:{line:1356,column:4},end:{line:1359,column:5}},type:"if",locations:[{start:{line:1356,column:4},end:{line:1359,column:5}},{start:{line:1356,column:4},end:{line:1359,column:5}}],line:1356},"121":{loc:{start:{line:1362,column:4},end:{line:1365,column:5}},type:"if",locations:[{start:{line:1362,column:4},end:{line:1365,column:5}},{start:{line:1362,column:4},end:{line:1365,column:5}}],line:1362},"122":{loc:{start:{line:1368,column:4},end:{line:1371,column:5}},type:"if",locations:[{start:{line:1368,column:4},end:{line:1371,column:5}},{start:{line:1368,column:4},end:{line:1371,column:5}}],line:1368},"123":{loc:{start:{line:1369,column:6},end:{line:1370,column:65}},type:"if",locations:[{start:{line:1369,column:6},end:{line:1370,column:65}},{start:{line:1369,column:6},end:{line:1370,column:65}}],line:1369},"124":{loc:{start:{line:1374,column:4},end:{line:1377,column:5}},type:"if",locations:[{start:{line:1374,column:4},end:{line:1377,column:5}},{start:{line:1374,column:4},end:{line:1377,column:5}}],line:1374},"125":{loc:{start:{line:1384,column:4},end:{line:1387,column:5}},type:"if",locations:[{start:{line:1384,column:4},end:{line:1387,column:5}},{start:{line:1384,column:4},end:{line:1387,column:5}}],line:1384},"126":{loc:{start:{line:1393,column:4},end:{line:1394,column:38}},type:"if",locations:[{start:{line:1393,column:4},end:{line:1394,column:38}},{start:{line:1393,column:4},end:{line:1394,column:38}}],line:1393},"127":{loc:{start:{line:1424,column:4},end:{line:1435,column:5}},type:"if",locations:[{start:{line:1424,column:4},end:{line:1435,column:5}},{start:{line:1424,column:4},end:{line:1435,column:5}}],line:1424},"128":{loc:{start:{line:1444,column:4},end:{line:1450,column:5}},type:"if",locations:[{start:{line:1444,column:4},end:{line:1450,column:5}},{start:{line:1444,column:4},end:{line:1450,column:5}}],line:1444},"129":{loc:{start:{line:1477,column:8},end:{line:1485,column:9}},type:"if",locations:[{start:{line:1477,column:8},end:{line:1485,column:9}},{start:{line:1477,column:8},end:{line:1485,column:9}}],line:1477},"130":{loc:{start:{line:1506,column:4},end:{line:1507,column:19}},type:"if",locations:[{start:{line:1506,column:4},end:{line:1507,column:19}},{start:{line:1506,column:4},end:{line:1507,column:19}}],line:1506},"131":{loc:{start:{line:1509,column:4},end:{line:1510,column:18}},type:"if",locations:[{start:{line:1509,column:4},end:{line:1510,column:18}},{start:{line:1509,column:4},end:{line:1510,column:18}}],line:1509},"132":{loc:{start:{line:1512,column:4},end:{line:1513,column:18}},type:"if",locations:[{start:{line:1512,column:4},end:{line:1513,column:18}},{start:{line:1512,column:4},end:{line:1513,column:18}}],line:1512},"133":{loc:{start:{line:1512,column:8},end:{line:1512,column:51}},type:"binary-expr",locations:[{start:{line:1512,column:8},end:{line:1512,column:25}},{start:{line:1512,column:29},end:{line:1512,column:51}}],line:1512},"134":{loc:{start:{line:1515,column:4},end:{line:1516,column:18}},type:"if",locations:[{start:{line:1515,column:4},end:{line:1516,column:18}},{start:{line:1515,column:4},end:{line:1516,column:18}}],line:1515},"135":{loc:{start:{line:1531,column:4},end:{line:1532,column:13}},type:"if",locations:[{start:{line:1531,column:4},end:{line:1532,column:13}},{start:{line:1531,column:4},end:{line:1532,column:13}}],line:1531},"136":{loc:{start:{line:1557,column:4},end:{line:1558,column:18}},type:"if",locations:[{start:{line:1557,column:4},end:{line:1558,column:18}},{start:{line:1557,column:4},end:{line:1558,column:18}}],line:1557},"137":{loc:{start:{line:1563,column:4},end:{line:1564,column:18}},type:"if",locations:[{start:{line:1563,column:4},end:{line:1564,column:18}},{start:{line:1563,column:4},end:{line:1564,column:18}}],line:1563},"138":{loc:{start:{line:1566,column:4},end:{line:1571,column:5}},type:"if",locations:[{start:{line:1566,column:4},end:{line:1571,column:5}},{start:{line:1566,column:4},end:{line:1571,column:5}}],line:1566},"139":{loc:{start:{line:1602,column:4},end:{line:1611,column:5}},type:"if",locations:[{start:{line:1602,column:4},end:{line:1611,column:5}},{start:{line:1602,column:4},end:{line:1611,column:5}}],line:1602},"140":{loc:{start:{line:1686,column:4},end:{line:1687,column:18}},type:"if",locations:[{start:{line:1686,column:4},end:{line:1687,column:18}},{start:{line:1686,column:4},end:{line:1687,column:18}}],line:1686},"141":{loc:{start:{line:1699,column:4},end:{line:1700,column:13}},type:"if",locations:[{start:{line:1699,column:4},end:{line:1700,column:13}},{start:{line:1699,column:4},end:{line:1700,column:13}}],line:1699},"142":{loc:{start:{line:1718,column:6},end:{line:1722,column:7}},type:"if",locations:[{start:{line:1718,column:6},end:{line:1722,column:7}},{start:{line:1718,column:6},end:{line:1722,column:7}}],line:1718},"143":{loc:{start:{line:1719,column:8},end:{line:1720,column:26}},type:"if",locations:[{start:{line:1719,column:8},end:{line:1720,column:26}},{start:{line:1719,column:8},end:{line:1720,column:26}}],line:1719},"144":{loc:{start:{line:1719,column:12},end:{line:1719,column:48}},type:"binary-expr",locations:[{start:{line:1719,column:12},end:{line:1719,column:19}},{start:{line:1719,column:23},end:{line:1719,column:48}}],line:1719},"145":{loc:{start:{line:1727,column:4},end:{line:1728,column:13}},type:"if",locations:[{start:{line:1727,column:4},end:{line:1728,column:13}},{start:{line:1727,column:4},end:{line:1728,column:13}}],line:1727},"146":{loc:{start:{line:1730,column:4},end:{line:1731,column:13}},type:"if",locations:[{start:{line:1730,column:4},end:{line:1731,column:13}},{start:{line:1730,column:4},end:{line:1731,column:13}}],line:1730},"147":{loc:{start:{line:1746,column:4},end:{line:1747,column:18}},type:"if",locations:[{start:{line:1746,column:4},end:{line:1747,column:18}},{start:{line:1746,column:4},end:{line:1747,column:18}}],line:1746},"148":{loc:{start:{line:1749,column:4},end:{line:1752,column:5}},type:"if",locations:[{start:{line:1749,column:4},end:{line:1752,column:5}},{start:{line:1749,column:4},end:{line:1752,column:5}}],line:1749},"149":{loc:{start:{line:1785,column:4},end:{line:1786,column:18}},type:"if",locations:[{start:{line:1785,column:4},end:{line:1786,column:18}},{start:{line:1785,column:4},end:{line:1786,column:18}}],line:1785},"150":{loc:{start:{line:1788,column:4},end:{line:1789,column:18}},type:"if",locations:[{start:{line:1788,column:4},end:{line:1789,column:18}},{start:{line:1788,column:4},end:{line:1789,column:18}}],line:1788},"151":{loc:{start:{line:1791,column:4},end:{line:1792,column:18}},type:"if",locations:[{start:{line:1791,column:4},end:{line:1792,column:18}},{start:{line:1791,column:4},end:{line:1792,column:18}}],line:1791},"152":{loc:{start:{line:1895,column:12},end:{line:1895,column:22}},type:"default-arg",locations:[{start:{line:1895,column:20},end:{line:1895,column:22}}],line:1895},"153":{loc:{start:{line:1895,column:24},end:{line:1895,column:32}},type:"default-arg",locations:[{start:{line:1895,column:30},end:{line:1895,column:32}}],line:1895},"154":{loc:{start:{line:1958,column:11},end:{line:1958,column:43}},type:"binary-expr",locations:[{start:{line:1958,column:11},end:{line:1958,column:35}},{start:{line:1958,column:39},end:{line:1958,column:43}}],line:1958},"155":{loc:{start:{line:2006,column:4},end:{line:2007,column:13}},type:"if",locations:[{start:{line:2006,column:4},end:{line:2007,column:13}},{start:{line:2006,column:4},end:{line:2007,column:13}}],line:2006},"156":{loc:{start:{line:2009,column:4},end:{line:2012,column:5}},type:"if",locations:[{start:{line:2009,column:4},end:{line:2012,column:5}},{start:{line:2009,column:4},end:{line:2012,column:5}}],line:2009},"157":{loc:{start:{line:2010,column:6},end:{line:2011,column:15}},type:"if",locations:[{start:{line:2010,column:6},end:{line:2011,column:15}},{start:{line:2010,column:6},end:{line:2011,column:15}}],line:2010},"158":{loc:{start:{line:2014,column:4},end:{line:2015,column:13}},type:"if",locations:[{start:{line:2014,column:4},end:{line:2015,column:13}},{start:{line:2014,column:4},end:{line:2015,column:13}}],line:2014},"159":{loc:{start:{line:2017,column:4},end:{line:2018,column:13}},type:"if",locations:[{start:{line:2017,column:4},end:{line:2018,column:13}},{start:{line:2017,column:4},end:{line:2018,column:13}}],line:2017},"160":{loc:{start:{line:2072,column:4},end:{line:2073,column:28}},type:"if",locations:[{start:{line:2072,column:4},end:{line:2073,column:28}},{start:{line:2072,column:4},end:{line:2073,column:28}}],line:2072},"161":{loc:{start:{line:2081,column:4},end:{line:2084,column:5}},type:"if",locations:[{start:{line:2081,column:4},end:{line:2084,column:5}},{start:{line:2081,column:4},end:{line:2084,column:5}}],line:2081},"162":{loc:{start:{line:2096,column:6},end:{line:2097,column:19}},type:"if",locations:[{start:{line:2096,column:6},end:{line:2097,column:19}},{start:{line:2096,column:6},end:{line:2097,column:19}}],line:2096},"163":{loc:{start:{line:2099,column:6},end:{line:2100,column:18}},type:"if",locations:[{start:{line:2099,column:6},end:{line:2100,column:18}},{start:{line:2099,column:6},end:{line:2100,column:18}}],line:2099},"164":{loc:{start:{line:2102,column:6},end:{line:2112,column:7}},type:"if",locations:[{start:{line:2102,column:6},end:{line:2112,column:7}},{start:{line:2102,column:6},end:{line:2112,column:7}}],line:2102},"165":{loc:{start:{line:2134,column:6},end:{line:2135,column:14}},type:"if",locations:[{start:{line:2134,column:6},end:{line:2135,column:14}},{start:{line:2134,column:6},end:{line:2135,column:14}}],line:2134},"166":{loc:{start:{line:2156,column:4},end:{line:2162,column:5}},type:"if",locations:[{start:{line:2156,column:4},end:{line:2162,column:5}},{start:{line:2156,column:4},end:{line:2162,column:5}}],line:2156},"167":{loc:{start:{line:2167,column:4},end:{line:2168,column:44}},type:"if",locations:[{start:{line:2167,column:4},end:{line:2168,column:44}},{start:{line:2167,column:4},end:{line:2168,column:44}}],line:2167},"168":{loc:{start:{line:2195,column:4},end:{line:2198,column:5}},type:"if",locations:[{start:{line:2195,column:4},end:{line:2198,column:5}},{start:{line:2195,column:4},end:{line:2198,column:5}}],line:2195},"169":{loc:{start:{line:2201,column:4},end:{line:2221,column:5}},type:"if",locations:[{start:{line:2201,column:4},end:{line:2221,column:5}},{start:{line:2201,column:4},end:{line:2221,column:5}}],line:2201},"170":{loc:{start:{line:2202,column:6},end:{line:2219,column:7}},type:"if",locations:[{start:{line:2202,column:6},end:{line:2219,column:7}},{start:{line:2202,column:6},end:{line:2219,column:7}}],line:2202},"171":{loc:{start:{line:2204,column:8},end:{line:2205,column:26}},type:"if",locations:[{start:{line:2204,column:8},end:{line:2205,column:26}},{start:{line:2204,column:8},end:{line:2205,column:26}}],line:2204},"172":{loc:{start:{line:2207,column:15},end:{line:2209,column:35}},type:"binary-expr",locations:[{start:{line:2207,column:15},end:{line:2207,column:32}},{start:{line:2208,column:13},end:{line:2208,column:53}},{start:{line:2209,column:13},end:{line:2209,column:35}}],line:2207},"173":{loc:{start:{line:2212,column:10},end:{line:2215,column:48}},type:"if",locations:[{start:{line:2212,column:10},end:{line:2215,column:48}},{start:{line:2212,column:10},end:{line:2215,column:48}}],line:2212},"174":{loc:{start:{line:2245,column:4},end:{line:2246,column:23}},type:"if",locations:[{start:{line:2245,column:4},end:{line:2246,column:23}},{start:{line:2245,column:4},end:{line:2246,column:23}}],line:2245},"175":{loc:{start:{line:2252,column:4},end:{line:2253,column:46}},type:"if",locations:[{start:{line:2252,column:4},end:{line:2253,column:46}},{start:{line:2252,column:4},end:{line:2253,column:46}}],line:2252},"176":{loc:{start:{line:2255,column:4},end:{line:2256,column:42}},type:"if",locations:[{start:{line:2255,column:4},end:{line:2256,column:42}},{start:{line:2255,column:4},end:{line:2256,column:42}}],line:2255},"177":{loc:{start:{line:2261,column:4},end:{line:2262,column:22}},type:"if",locations:[{start:{line:2261,column:4},end:{line:2262,column:22}},{start:{line:2261,column:4},end:{line:2262,column:22}}],line:2261},"178":{loc:{start:{line:2276,column:6},end:{line:2277,column:20}},type:"if",locations:[{start:{line:2276,column:6},end:{line:2277,column:20}},{start:{line:2276,column:6},end:{line:2277,column:20}}],line:2276},"179":{loc:{start:{line:2311,column:4},end:{line:2312,column:36}},type:"if",locations:[{start:{line:2311,column:4},end:{line:2312,column:36}},{start:{line:2311,column:4},end:{line:2312,column:36}}],line:2311},"180":{loc:{start:{line:2317,column:4},end:{line:2318,column:39}},type:"if",locations:[{start:{line:2317,column:4},end:{line:2318,column:39}},{start:{line:2317,column:4},end:{line:2318,column:39}}],line:2317},"181":{loc:{start:{line:2320,column:4},end:{line:2321,column:33}},type:"if",locations:[{start:{line:2320,column:4},end:{line:2321,column:33}},{start:{line:2320,column:4},end:{line:2321,column:33}}],line:2320},"182":{loc:{start:{line:2323,column:4},end:{line:2333,column:5}},type:"if",locations:[{start:{line:2323,column:4},end:{line:2333,column:5}},{start:{line:2323,column:4},end:{line:2333,column:5}}],line:2323},"183":{loc:{start:{line:2328,column:6},end:{line:2329,column:39}},type:"if",locations:[{start:{line:2328,column:6},end:{line:2329,column:39}},{start:{line:2328,column:6},end:{line:2329,column:39}}],line:2328},"184":{loc:{start:{line:2343,column:6},end:{line:2346,column:7}},type:"if",locations:[{start:{line:2343,column:6},end:{line:2346,column:7}},{start:{line:2343,column:6},end:{line:2346,column:7}}],line:2343},"185":{loc:{start:{line:2350,column:6},end:{line:2354,column:7}},type:"if",locations:[{start:{line:2350,column:6},end:{line:2354,column:7}},{start:{line:2350,column:6},end:{line:2354,column:7}}],line:2350},"186":{loc:{start:{line:2366,column:6},end:{line:2420,column:7}},type:"switch",locations:[{start:{line:2367,column:8},end:{line:2381,column:9}},{start:{line:2382,column:8},end:{line:2407,column:9}},{start:{line:2408,column:8},end:{line:2411,column:9}},{start:{line:2412,column:8},end:{line:2412,column:36}},{start:{line:2413,column:8},end:{line:2415,column:9}},{start:{line:2416,column:8},end:{line:2419,column:9}}],line:2366},"187":{loc:{start:{line:2370,column:10},end:{line:2373,column:11}},type:"if",locations:[{start:{line:2370,column:10},end:{line:2373,column:11}},{start:{line:2370,column:10},end:{line:2373,column:11}}],line:2370},"188":{loc:{start:{line:2375,column:10},end:{line:2378,column:11}},type:"if",locations:[{start:{line:2375,column:10},end:{line:2378,column:11}},{start:{line:2375,column:10},end:{line:2378,column:11}}],line:2375},"189":{loc:{start:{line:2385,column:10},end:{line:2388,column:11}},type:"if",locations:[{start:{line:2385,column:10},end:{line:2388,column:11}},{start:{line:2385,column:10},end:{line:2388,column:11}}],line:2385},"190":{loc:{start:{line:2394,column:12},end:{line:2395,column:22}},type:"if",locations:[{start:{line:2394,column:12},end:{line:2395,column:22}},{start:{line:2394,column:12},end:{line:2395,column:22}}],line:2394},"191":{loc:{start:{line:2397,column:12},end:{line:2400,column:13}},type:"if",locations:[{start:{line:2397,column:12},end:{line:2400,column:13}},{start:{line:2397,column:12},end:{line:2400,column:13}}],line:2397},"192":{loc:{start:{line:2441,column:6},end:{line:2444,column:7}},type:"if",locations:[{start:{line:2441,column:6},end:{line:2444,column:7}},{start:{line:2441,column:6},end:{line:2444,column:7}}],line:2441},"193":{loc:{start:{line:2441,column:10},end:{line:2442,column:46}},type:"binary-expr",locations:[{start:{line:2441,column:10},end:{line:2441,column:45}},{start:{line:2442,column:13},end:{line:2442,column:46}}],line:2441},"194":{loc:{start:{line:2462,column:4},end:{line:2465,column:5}},type:"if",locations:[{start:{line:2462,column:4},end:{line:2465,column:5}},{start:{line:2462,column:4},end:{line:2465,column:5}}],line:2462},"195":{loc:{start:{line:2467,column:4},end:{line:2468,column:24}},type:"if",locations:[{start:{line:2467,column:4},end:{line:2468,column:24}},{start:{line:2467,column:4},end:{line:2468,column:24}}],line:2467},"196":{loc:{start:{line:2486,column:4},end:{line:2487,column:36}},type:"if",locations:[{start:{line:2486,column:4},end:{line:2487,column:36}},{start:{line:2486,column:4},end:{line:2487,column:36}}],line:2486},"197":{loc:{start:{line:2489,column:4},end:{line:2492,column:5}},type:"if",locations:[{start:{line:2489,column:4},end:{line:2492,column:5}},{start:{line:2489,column:4},end:{line:2492,column:5}}],line:2489},"198":{loc:{start:{line:2512,column:4},end:{line:2513,column:22}},type:"if",locations:[{start:{line:2512,column:4},end:{line:2513,column:22}},{start:{line:2512,column:4},end:{line:2513,column:22}}],line:2512},"199":{loc:{start:{line:2515,column:4},end:{line:2516,column:22}},type:"if",locations:[{start:{line:2515,column:4},end:{line:2516,column:22}},{start:{line:2515,column:4},end:{line:2516,column:22}}],line:2515},"200":{loc:{start:{line:2515,column:8},end:{line:2515,column:41}},type:"binary-expr",locations:[{start:{line:2515,column:8},end:{line:2515,column:23}},{start:{line:2515,column:27},end:{line:2515,column:41}}],line:2515},"201":{loc:{start:{line:2522,column:6},end:{line:2523,column:17}},type:"if",locations:[{start:{line:2522,column:6},end:{line:2523,column:17}},{start:{line:2522,column:6},end:{line:2523,column:17}}],line:2522},"202":{loc:{start:{line:2527,column:6},end:{line:2528,column:33}},type:"if",locations:[{start:{line:2527,column:6},end:{line:2528,column:33}},{start:{line:2527,column:6},end:{line:2528,column:33}}],line:2527},"203":{loc:{start:{line:2530,column:6},end:{line:2534,column:7}},type:"if",locations:[{start:{line:2530,column:6},end:{line:2534,column:7}},{start:{line:2530,column:6},end:{line:2534,column:7}}],line:2530},"204":{loc:{start:{line:2561,column:4},end:{line:2564,column:5}},type:"if",locations:[{start:{line:2561,column:4},end:{line:2564,column:5}},{start:{line:2561,column:4},end:{line:2564,column:5}}],line:2561},"205":{loc:{start:{line:2562,column:6},end:{line:2563,column:21}},type:"if",locations:[{start:{line:2562,column:6},end:{line:2563,column:21}},{start:{line:2562,column:6},end:{line:2563,column:21}}],line:2562},"206":{loc:{start:{line:2566,column:4},end:{line:2571,column:5}},type:"if",locations:[{start:{line:2566,column:4},end:{line:2571,column:5}},{start:{line:2566,column:4},end:{line:2571,column:5}}],line:2566},"207":{loc:{start:{line:2569,column:6},end:{line:2570,column:21}},type:"if",locations:[{start:{line:2569,column:6},end:{line:2570,column:21}},{start:{line:2569,column:6},end:{line:2570,column:21}}],line:2569},"208":{loc:{start:{line:2612,column:4},end:{line:2613,column:32}},type:"if",locations:[{start:{line:2612,column:4},end:{line:2613,column:32}},{start:{line:2612,column:4},end:{line:2613,column:32}}],line:2612},"209":{loc:{start:{line:2624,column:4},end:{line:2627,column:5}},type:"if",locations:[{start:{line:2624,column:4},end:{line:2627,column:5}},{start:{line:2624,column:4},end:{line:2627,column:5}}],line:2624},"210":{loc:{start:{line:2625,column:13},end:{line:2625,column:65}},type:"binary-expr",locations:[{start:{line:2625,column:13},end:{line:2625,column:27}},{start:{line:2625,column:31},end:{line:2625,column:65}}],line:2625},"211":{loc:{start:{line:2631,column:4},end:{line:2632,column:50}},type:"if",locations:[{start:{line:2631,column:4},end:{line:2632,column:50}},{start:{line:2631,column:4},end:{line:2632,column:50}}],line:2631},"212":{loc:{start:{line:2634,column:4},end:{line:2637,column:5}},type:"if",locations:[{start:{line:2634,column:4},end:{line:2637,column:5}},{start:{line:2634,column:4},end:{line:2637,column:5}}],line:2634},"213":{loc:{start:{line:2639,column:4},end:{line:2642,column:5}},type:"if",locations:[{start:{line:2639,column:4},end:{line:2642,column:5}},{start:{line:2639,column:4},end:{line:2642,column:5}}],line:2639},"214":{loc:{start:{line:2644,column:4},end:{line:2647,column:5}},type:"if",locations:[{start:{line:2644,column:4},end:{line:2647,column:5}},{start:{line:2644,column:4},end:{line:2647,column:5}}],line:2644},"215":{loc:{start:{line:2649,column:4},end:{line:2655,column:5}},type:"if",locations:[{start:{line:2649,column:4},end:{line:2655,column:5}},{start:{line:2649,column:4},end:{line:2655,column:5}}],line:2649},"216":{loc:{start:{line:2652,column:22},end:{line:2654,column:41}},type:"cond-expr",locations:[{start:{line:2653,column:10},end:{line:2653,column:44}},{start:{line:2654,column:10},end:{line:2654,column:41}}],line:2652},"217":{loc:{start:{line:2657,column:4},end:{line:2660,column:5}},type:"if",locations:[{start:{line:2657,column:4},end:{line:2660,column:5}},{start:{line:2657,column:4},end:{line:2660,column:5}}],line:2657},"218":{loc:{start:{line:2662,column:4},end:{line:2665,column:5}},type:"if",locations:[{start:{line:2662,column:4},end:{line:2665,column:5}},{start:{line:2662,column:4},end:{line:2665,column:5}}],line:2662},"219":{loc:{start:{line:2667,column:4},end:{line:2670,column:5}},type:"if",locations:[{start:{line:2667,column:4},end:{line:2670,column:5}},{start:{line:2667,column:4},end:{line:2670,column:5}}],line:2667},"220":{loc:{start:{line:2672,column:4},end:{line:2676,column:5}},type:"if",locations:[{start:{line:2672,column:4},end:{line:2676,column:5}},{start:{line:2672,column:4},end:{line:2676,column:5}}],line:2672},"221":{loc:{start:{line:2678,column:4},end:{line:2681,column:5}},type:"if",locations:[{start:{line:2678,column:4},end:{line:2681,column:5}},{start:{line:2678,column:4},end:{line:2681,column:5}}],line:2678},"222":{loc:{start:{line:2683,column:4},end:{line:2686,column:5}},type:"if",locations:[{start:{line:2683,column:4},end:{line:2686,column:5}},{start:{line:2683,column:4},end:{line:2686,column:5}}],line:2683},"223":{loc:{start:{line:2688,column:4},end:{line:2691,column:5}},type:"if",locations:[{start:{line:2688,column:4},end:{line:2691,column:5}},{start:{line:2688,column:4},end:{line:2691,column:5}}],line:2688},"224":{loc:{start:{line:2693,column:4},end:{line:2696,column:5}},type:"if",locations:[{start:{line:2693,column:4},end:{line:2696,column:5}},{start:{line:2693,column:4},end:{line:2696,column:5}}],line:2693},"225":{loc:{start:{line:2698,column:4},end:{line:2701,column:5}},type:"if",locations:[{start:{line:2698,column:4},end:{line:2701,column:5}},{start:{line:2698,column:4},end:{line:2701,column:5}}],line:2698},"226":{loc:{start:{line:2703,column:4},end:{line:2706,column:5}},type:"if",locations:[{start:{line:2703,column:4},end:{line:2706,column:5}},{start:{line:2703,column:4},end:{line:2706,column:5}}],line:2703},"227":{loc:{start:{line:2708,column:4},end:{line:2711,column:5}},type:"if",locations:[{start:{line:2708,column:4},end:{line:2711,column:5}},{start:{line:2708,column:4},end:{line:2711,column:5}}],line:2708},"228":{loc:{start:{line:2713,column:4},end:{line:2716,column:5}},type:"if",locations:[{start:{line:2713,column:4},end:{line:2716,column:5}},{start:{line:2713,column:4},end:{line:2716,column:5}}],line:2713}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":0,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":0,"820":0,"821":0,"822":0,"823":0,"824":0,"825":0,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"836":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":0,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"866":0,"867":0,"868":0,"869":0,"870":0,"871":0,"872":0,"873":0,"874":0,"875":0,"876":0,"877":0,"878":0,"879":0,"880":0,"881":0,"882":0,"883":0,"884":0,"885":0,"886":0,"887":0,"888":0,"889":0,"890":0,"891":0,"892":0,"893":0,"894":0,"895":0,"896":0,"897":0,"898":0,"899":0,"900":0,"901":0,"902":0,"903":0,"904":0,"905":0,"906":0,"907":0,"908":0,"909":0,"910":0,"911":0,"912":0,"913":0,"914":0,"915":0,"916":0,"917":0,"918":0,"919":0,"920":0,"921":0,"922":0,"923":0,"924":0,"925":0,"926":0,"927":0,"928":0,"929":0,"930":0,"931":0,"932":0,"933":0,"934":0,"935":0,"936":0,"937":0,"938":0,"939":0,"940":0,"941":0,"942":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0],"153":[0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0,0,0,0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0],"215":[0,0],"216":[0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"d3f827dbf9d97d57d07c2d56d32be4f18864480e"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2hsadq1dzp=function(){return actualCoverage;};}return actualCoverage;}cov_2hsadq1dzp();const assert=(cov_2hsadq1dzp().s[0]++,require('bsert'));const path=(cov_2hsadq1dzp().s[1]++,require('path'));const AsyncEmitter=(cov_2hsadq1dzp().s[2]++,require('bevent'));const Logger=(cov_2hsadq1dzp().s[3]++,require('blgr'));const{Lock}=(cov_2hsadq1dzp().s[4]++,require('bmutex'));const LRU=(cov_2hsadq1dzp().s[5]++,require('blru'));const{BufferMap}=(cov_2hsadq1dzp().s[6]++,require('buffer-map'));const Network=(cov_2hsadq1dzp().s[7]++,require('../protocol/network'));const ChainDB=(cov_2hsadq1dzp().s[8]++,require('./chaindb'));const common=(cov_2hsadq1dzp().s[9]++,require('./common'));const consensus=(cov_2hsadq1dzp().s[10]++,require('../protocol/consensus'));const util=(cov_2hsadq1dzp().s[11]++,require('../utils/util'));const ChainEntry=(cov_2hsadq1dzp().s[12]++,require('./chainentry'));const CoinView=(cov_2hsadq1dzp().s[13]++,require('../coins/coinview'));const Script=(cov_2hsadq1dzp().s[14]++,require('../script/script'));const{VerifyError}=(cov_2hsadq1dzp().s[15]++,require('../protocol/errors'));const thresholdStates=(cov_2hsadq1dzp().s[16]++,common.thresholdStates);/**
 * Blockchain
 * @alias module:blockchain.Chain
 * @property {ChainDB} db
 * @property {ChainEntry?} tip
 * @property {Number} height
 * @property {DeploymentState} state
 */class Chain extends AsyncEmitter{/**
   * Create a blockchain.
   * @constructor
   * @param {Object} options
   */constructor(options){cov_2hsadq1dzp().f[0]++;cov_2hsadq1dzp().s[17]++;super();cov_2hsadq1dzp().s[18]++;this.opened=false;cov_2hsadq1dzp().s[19]++;this.options=new ChainOptions(options);cov_2hsadq1dzp().s[20]++;this.network=this.options.network;cov_2hsadq1dzp().s[21]++;this.logger=this.options.logger.context('chain');cov_2hsadq1dzp().s[22]++;this.blocks=this.options.blocks;cov_2hsadq1dzp().s[23]++;this.workers=this.options.workers;cov_2hsadq1dzp().s[24]++;this.db=new ChainDB(this.options);cov_2hsadq1dzp().s[25]++;this.locker=new Lock(true,BufferMap);cov_2hsadq1dzp().s[26]++;this.invalid=new LRU(100,null,BufferMap);cov_2hsadq1dzp().s[27]++;this.state=new DeploymentState();cov_2hsadq1dzp().s[28]++;this.tip=new ChainEntry();cov_2hsadq1dzp().s[29]++;this.height=-1;cov_2hsadq1dzp().s[30]++;this.synced=false;cov_2hsadq1dzp().s[31]++;this.orphanMap=new BufferMap();cov_2hsadq1dzp().s[32]++;this.orphanPrev=new BufferMap();}/**
   * Open the chain, wait for the database to load.
   * @returns {Promise}
   */async open(){cov_2hsadq1dzp().f[1]++;cov_2hsadq1dzp().s[33]++;assert(!this.opened,'Chain is already open.');cov_2hsadq1dzp().s[34]++;this.opened=true;cov_2hsadq1dzp().s[35]++;this.logger.info('Chain is loading.');cov_2hsadq1dzp().s[36]++;if(this.options.checkpoints){cov_2hsadq1dzp().b[0][0]++;cov_2hsadq1dzp().s[37]++;this.logger.info('Checkpoints are enabled.');}else{cov_2hsadq1dzp().b[0][1]++;}cov_2hsadq1dzp().s[38]++;if(this.options.bip91){cov_2hsadq1dzp().b[1][0]++;cov_2hsadq1dzp().s[39]++;this.logger.warning('BIP91 enabled. Segsignal will be enforced.');}else{cov_2hsadq1dzp().b[1][1]++;}cov_2hsadq1dzp().s[40]++;if(this.options.bip148){cov_2hsadq1dzp().b[2][0]++;cov_2hsadq1dzp().s[41]++;this.logger.warning('BIP148 enabled. UASF will be enforced.');}else{cov_2hsadq1dzp().b[2][1]++;}cov_2hsadq1dzp().s[42]++;await this.db.open();const tip=(cov_2hsadq1dzp().s[43]++,await this.db.getTip());cov_2hsadq1dzp().s[44]++;assert(tip);cov_2hsadq1dzp().s[45]++;this.tip=tip;cov_2hsadq1dzp().s[46]++;this.height=tip.height;cov_2hsadq1dzp().s[47]++;this.logger.info('Chain Height: %d',tip.height);cov_2hsadq1dzp().s[48]++;this.logger.memory();const state=(cov_2hsadq1dzp().s[49]++,await this.getDeploymentState());cov_2hsadq1dzp().s[50]++;this.setDeploymentState(state);cov_2hsadq1dzp().s[51]++;this.logger.memory();cov_2hsadq1dzp().s[52]++;this.emit('tip',tip);cov_2hsadq1dzp().s[53]++;this.maybeSync();}/**
   * Close the chain, wait for the database to close.
   * @returns {Promise}
   */async close(){cov_2hsadq1dzp().f[2]++;cov_2hsadq1dzp().s[54]++;assert(this.opened,'Chain is not open.');cov_2hsadq1dzp().s[55]++;this.opened=false;cov_2hsadq1dzp().s[56]++;return this.db.close();}/**
   * Perform all necessary contextual verification on a block.
   * @private
   * @param {Block} block
   * @param {ChainEntry} prev
   * @param {Number} flags
   * @returns {Promise} - Returns {@link ContextResult}.
   */async verifyContext(block,prev,flags){cov_2hsadq1dzp().f[3]++;// Initial non-contextual verification.
const state=(cov_2hsadq1dzp().s[57]++,await this.verify(block,prev,flags));// Skip everything if we're in SPV mode.
cov_2hsadq1dzp().s[58]++;if(this.options.spv){cov_2hsadq1dzp().b[3][0]++;const view=(cov_2hsadq1dzp().s[59]++,new CoinView());cov_2hsadq1dzp().s[60]++;return[view,state];}else{cov_2hsadq1dzp().b[3][1]++;}// Skip everything if we're using checkpoints.
cov_2hsadq1dzp().s[61]++;if(this.isHistorical(prev)){cov_2hsadq1dzp().b[4][0]++;const view=(cov_2hsadq1dzp().s[62]++,await this.updateInputs(block,prev));cov_2hsadq1dzp().s[63]++;return[view,state];}else{cov_2hsadq1dzp().b[4][1]++;}// BIP30 - Verify there are no duplicate txids.
// Note that BIP34 made it impossible to create
// duplicate txids.
cov_2hsadq1dzp().s[64]++;if(!state.hasBIP34()){cov_2hsadq1dzp().b[5][0]++;cov_2hsadq1dzp().s[65]++;await this.verifyDuplicates(block,prev);}else{cov_2hsadq1dzp().b[5][1]++;}// Verify scripts, spend and add coins.
const view=(cov_2hsadq1dzp().s[66]++,await this.verifyInputs(block,prev,state));cov_2hsadq1dzp().s[67]++;return[view,state];}/**
   * Perform all necessary contextual verification
   * on a block, without POW check.
   * @param {Block} block
   * @returns {Promise}
   */async verifyBlock(block){cov_2hsadq1dzp().f[4]++;const unlock=(cov_2hsadq1dzp().s[68]++,await this.locker.lock());cov_2hsadq1dzp().s[69]++;try{cov_2hsadq1dzp().s[70]++;return await this._verifyBlock(block);}finally{cov_2hsadq1dzp().s[71]++;unlock();}}/**
   * Perform all necessary contextual verification
   * on a block, without POW check (no lock).
   * @private
   * @param {Block} block
   * @returns {Promise}
   */async _verifyBlock(block){cov_2hsadq1dzp().f[5]++;const flags=(cov_2hsadq1dzp().s[72]++,common.flags.DEFAULT_FLAGS&~common.flags.VERIFY_POW);cov_2hsadq1dzp().s[73]++;return this.verifyContext(block,this.tip,flags);}/**
   * Test whether the hash is in the main chain.
   * @param {Hash} hash
   * @returns {Promise} - Returns Boolean.
   */isMainHash(hash){cov_2hsadq1dzp().f[6]++;cov_2hsadq1dzp().s[74]++;return this.db.isMainHash(hash);}/**
   * Test whether the entry is in the main chain.
   * @param {ChainEntry} entry
   * @returns {Promise} - Returns Boolean.
   */isMainChain(entry){cov_2hsadq1dzp().f[7]++;cov_2hsadq1dzp().s[75]++;return this.db.isMainChain(entry);}/**
   * Get ancestor by `height`.
   * @param {ChainEntry} entry
   * @param {Number} height
   * @returns {Promise} - Returns ChainEntry.
   */getAncestor(entry,height){cov_2hsadq1dzp().f[8]++;cov_2hsadq1dzp().s[76]++;return this.db.getAncestor(entry,height);}/**
   * Get previous entry.
   * @param {ChainEntry} entry
   * @returns {Promise} - Returns ChainEntry.
   */getPrevious(entry){cov_2hsadq1dzp().f[9]++;cov_2hsadq1dzp().s[77]++;return this.db.getPrevious(entry);}/**
   * Get previous cached entry.
   * @param {ChainEntry} entry
   * @returns {ChainEntry|null}
   */getPrevCache(entry){cov_2hsadq1dzp().f[10]++;cov_2hsadq1dzp().s[78]++;return this.db.getPrevCache(entry);}/**
   * Get next entry.
   * @param {ChainEntry} entry
   * @returns {Promise} - Returns ChainEntry.
   */getNext(entry){cov_2hsadq1dzp().f[11]++;cov_2hsadq1dzp().s[79]++;return this.db.getNext(entry);}/**
   * Get next entry.
   * @param {ChainEntry} entry
   * @returns {Promise} - Returns ChainEntry.
   */getNextEntry(entry){cov_2hsadq1dzp().f[12]++;cov_2hsadq1dzp().s[80]++;return this.db.getNextEntry(entry);}/**
   * Calculate median time past.
   * @param {ChainEntry} prev
   * @param {Number?} time
   * @returns {Promise} - Returns Number.
   */async getMedianTime(prev,time){cov_2hsadq1dzp().f[13]++;let timespan=(cov_2hsadq1dzp().s[81]++,consensus.MEDIAN_TIMESPAN);const median=(cov_2hsadq1dzp().s[82]++,[]);// In case we ever want to check
// the MTP of the _current_ block
// (necessary for BIP148).
cov_2hsadq1dzp().s[83]++;if(time!=null){cov_2hsadq1dzp().b[6][0]++;cov_2hsadq1dzp().s[84]++;median.push(time);cov_2hsadq1dzp().s[85]++;timespan-=1;}else{cov_2hsadq1dzp().b[6][1]++;}let entry=(cov_2hsadq1dzp().s[86]++,prev);cov_2hsadq1dzp().s[87]++;for(let i=(cov_2hsadq1dzp().s[88]++,0);(cov_2hsadq1dzp().b[7][0]++,i<timespan)&&(cov_2hsadq1dzp().b[7][1]++,entry);i++){cov_2hsadq1dzp().s[89]++;median.push(entry.time);const cache=(cov_2hsadq1dzp().s[90]++,this.getPrevCache(entry));cov_2hsadq1dzp().s[91]++;if(cache){cov_2hsadq1dzp().b[8][0]++;cov_2hsadq1dzp().s[92]++;entry=cache;}else{cov_2hsadq1dzp().b[8][1]++;cov_2hsadq1dzp().s[93]++;entry=await this.getPrevious(entry);}}cov_2hsadq1dzp().s[94]++;median.sort(cmp);cov_2hsadq1dzp().s[95]++;return median[median.length>>>1];}/**
   * Test whether the entry is potentially
   * an ancestor of a checkpoint.
   * @param {ChainEntry} prev
   * @returns {Boolean}
   */isHistorical(prev){cov_2hsadq1dzp().f[14]++;cov_2hsadq1dzp().s[96]++;if(this.options.checkpoints){cov_2hsadq1dzp().b[9][0]++;cov_2hsadq1dzp().s[97]++;if(prev.height+1<=this.network.lastCheckpoint){cov_2hsadq1dzp().b[10][0]++;cov_2hsadq1dzp().s[98]++;return true;}else{cov_2hsadq1dzp().b[10][1]++;}}else{cov_2hsadq1dzp().b[9][1]++;}cov_2hsadq1dzp().s[99]++;return false;}/**
   * Contextual verification for a block, including
   * version deployments (IsSuperMajority), versionbits,
   * coinbase height, finality checks.
   * @private
   * @param {Block} block
   * @param {ChainEntry} prev
   * @param {Number} flags
   * @returns {Promise} - Returns {@link DeploymentState}.
   */async verify(block,prev,flags){cov_2hsadq1dzp().f[15]++;cov_2hsadq1dzp().s[100]++;assert(typeof flags==='number');// Extra sanity check.
cov_2hsadq1dzp().s[101]++;if(!block.prevBlock.equals(prev.hash)){cov_2hsadq1dzp().b[11][0]++;cov_2hsadq1dzp().s[102]++;throw new VerifyError(block,'invalid','bad-prevblk',0);}else{cov_2hsadq1dzp().b[11][1]++;}// Verify a checkpoint if there is one.
const hash=(cov_2hsadq1dzp().s[103]++,block.hash());cov_2hsadq1dzp().s[104]++;if(!this.verifyCheckpoint(prev,hash)){cov_2hsadq1dzp().b[12][0]++;cov_2hsadq1dzp().s[105]++;throw new VerifyError(block,'checkpoint','checkpoint mismatch',100);}else{cov_2hsadq1dzp().b[12][1]++;}// Skip everything when using checkpoints.
// We can do this safely because every
// block in between each checkpoint was
// validated outside in the header chain.
cov_2hsadq1dzp().s[106]++;if(this.isHistorical(prev)){cov_2hsadq1dzp().b[13][0]++;cov_2hsadq1dzp().s[107]++;if(this.options.spv){cov_2hsadq1dzp().b[14][0]++;cov_2hsadq1dzp().s[108]++;return this.state;}else{cov_2hsadq1dzp().b[14][1]++;}// Check merkle root.
cov_2hsadq1dzp().s[109]++;if(flags&common.flags.VERIFY_BODY){cov_2hsadq1dzp().b[15][0]++;cov_2hsadq1dzp().s[110]++;assert(typeof block.createMerkleRoot==='function');const root=(cov_2hsadq1dzp().s[111]++,block.createMerkleRoot());cov_2hsadq1dzp().s[112]++;if((cov_2hsadq1dzp().b[17][0]++,!root)||(cov_2hsadq1dzp().b[17][1]++,!block.merkleRoot.equals(root))){cov_2hsadq1dzp().b[16][0]++;cov_2hsadq1dzp().s[113]++;throw new VerifyError(block,'invalid','bad-txnmrklroot',100,true);}else{cov_2hsadq1dzp().b[16][1]++;}cov_2hsadq1dzp().s[114]++;flags&=~common.flags.VERIFY_BODY;}else{cov_2hsadq1dzp().b[15][1]++;}// Once segwit is active, we will still
// need to check for block mutability.
cov_2hsadq1dzp().s[115]++;if((cov_2hsadq1dzp().b[19][0]++,!block.hasWitness())&&(cov_2hsadq1dzp().b[19][1]++,!block.getCommitmentHash())){cov_2hsadq1dzp().b[18][0]++;cov_2hsadq1dzp().s[116]++;return new DeploymentState();}else{cov_2hsadq1dzp().b[18][1]++;}}else{cov_2hsadq1dzp().b[13][1]++;}// Non-contextual checks.
cov_2hsadq1dzp().s[117]++;if(flags&common.flags.VERIFY_BODY){cov_2hsadq1dzp().b[20][0]++;const[valid,reason,score]=(cov_2hsadq1dzp().s[118]++,block.checkBody());cov_2hsadq1dzp().s[119]++;if(!valid){cov_2hsadq1dzp().b[21][0]++;cov_2hsadq1dzp().s[120]++;throw new VerifyError(block,'invalid',reason,score,true);}else{cov_2hsadq1dzp().b[21][1]++;}}else{cov_2hsadq1dzp().b[20][1]++;}// Ensure the POW is what we expect.
const bits=(cov_2hsadq1dzp().s[121]++,await this.getTarget(block.time,prev));cov_2hsadq1dzp().s[122]++;if(block.bits!==bits){cov_2hsadq1dzp().b[22][0]++;cov_2hsadq1dzp().s[123]++;throw new VerifyError(block,'invalid','bad-diffbits',100);}else{cov_2hsadq1dzp().b[22][1]++;}// Skip all blocks in spv mode once
// we've verified the network target.
cov_2hsadq1dzp().s[124]++;if(this.options.spv){cov_2hsadq1dzp().b[23][0]++;cov_2hsadq1dzp().s[125]++;return this.state;}else{cov_2hsadq1dzp().b[23][1]++;}// Ensure the timestamp is correct.
const mtp=(cov_2hsadq1dzp().s[126]++,await this.getMedianTime(prev));cov_2hsadq1dzp().s[127]++;if(block.time<=mtp){cov_2hsadq1dzp().b[24][0]++;cov_2hsadq1dzp().s[128]++;throw new VerifyError(block,'invalid','time-too-old',0);}else{cov_2hsadq1dzp().b[24][1]++;}// Check timestamp against adj-time+2hours.
// If this fails we may be able to accept
// the block later.
cov_2hsadq1dzp().s[129]++;if(block.time>this.network.now()+2*60*60){cov_2hsadq1dzp().b[25][0]++;cov_2hsadq1dzp().s[130]++;throw new VerifyError(block,'invalid','time-too-new',0,true);}else{cov_2hsadq1dzp().b[25][1]++;}// Calculate height of current block.
const height=(cov_2hsadq1dzp().s[131]++,prev.height+1);// Only allow version 2 blocks (coinbase height)
// once the majority of blocks are using it.
cov_2hsadq1dzp().s[132]++;if((cov_2hsadq1dzp().b[27][0]++,block.version<2)&&(cov_2hsadq1dzp().b[27][1]++,height>=this.network.block.bip34height)){cov_2hsadq1dzp().b[26][0]++;cov_2hsadq1dzp().s[133]++;throw new VerifyError(block,'obsolete','bad-version',0);}else{cov_2hsadq1dzp().b[26][1]++;}// Only allow version 3 blocks (sig validation)
// once the majority of blocks are using it.
cov_2hsadq1dzp().s[134]++;if((cov_2hsadq1dzp().b[29][0]++,block.version<3)&&(cov_2hsadq1dzp().b[29][1]++,height>=this.network.block.bip66height)){cov_2hsadq1dzp().b[28][0]++;cov_2hsadq1dzp().s[135]++;throw new VerifyError(block,'obsolete','bad-version',0);}else{cov_2hsadq1dzp().b[28][1]++;}// Only allow version 4 blocks (checklocktimeverify)
// once the majority of blocks are using it.
cov_2hsadq1dzp().s[136]++;if((cov_2hsadq1dzp().b[31][0]++,block.version<4)&&(cov_2hsadq1dzp().b[31][1]++,height>=this.network.block.bip65height)){cov_2hsadq1dzp().b[30][0]++;cov_2hsadq1dzp().s[137]++;throw new VerifyError(block,'obsolete','bad-version',0);}else{cov_2hsadq1dzp().b[30][1]++;}// Get the new deployment state.
const state=(cov_2hsadq1dzp().s[138]++,await this.getDeployments(block.time,prev));// Enforce BIP91/BIP148.
cov_2hsadq1dzp().s[139]++;if((cov_2hsadq1dzp().b[33][0]++,state.hasBIP91())||(cov_2hsadq1dzp().b[33][1]++,state.hasBIP148())){cov_2hsadq1dzp().b[32][0]++;const{segwit}=(cov_2hsadq1dzp().s[140]++,this.network.deployments);cov_2hsadq1dzp().s[141]++;if(!consensus.hasBit(block.version,segwit.bit)){cov_2hsadq1dzp().b[34][0]++;cov_2hsadq1dzp().s[142]++;throw new VerifyError(block,'invalid','bad-no-segwit',0);}else{cov_2hsadq1dzp().b[34][1]++;}}else{cov_2hsadq1dzp().b[32][1]++;}// Get timestamp for tx.isFinal().
const time=(cov_2hsadq1dzp().s[143]++,state.hasMTP()?(cov_2hsadq1dzp().b[35][0]++,mtp):(cov_2hsadq1dzp().b[35][1]++,block.time));// Transactions must be finalized with
// regards to nSequence and nLockTime.
cov_2hsadq1dzp().s[144]++;for(const tx of block.txs){cov_2hsadq1dzp().s[145]++;if(!tx.isFinal(height,time)){cov_2hsadq1dzp().b[36][0]++;cov_2hsadq1dzp().s[146]++;throw new VerifyError(block,'invalid','bad-txns-nonfinal',10);}else{cov_2hsadq1dzp().b[36][1]++;}}// Make sure the height contained
// in the coinbase is correct.
cov_2hsadq1dzp().s[147]++;if(state.hasBIP34()){cov_2hsadq1dzp().b[37][0]++;cov_2hsadq1dzp().s[148]++;if(block.getCoinbaseHeight()!==height){cov_2hsadq1dzp().b[38][0]++;cov_2hsadq1dzp().s[149]++;throw new VerifyError(block,'invalid','bad-cb-height',100);}else{cov_2hsadq1dzp().b[38][1]++;}}else{cov_2hsadq1dzp().b[37][1]++;}// Check the commitment hash for segwit.
let commit=(cov_2hsadq1dzp().s[150]++,null);cov_2hsadq1dzp().s[151]++;if(state.hasWitness()){cov_2hsadq1dzp().b[39][0]++;cov_2hsadq1dzp().s[152]++;commit=block.getCommitmentHash();cov_2hsadq1dzp().s[153]++;if(commit){cov_2hsadq1dzp().b[40][0]++;cov_2hsadq1dzp().s[154]++;// These are totally malleable. Someone
// may have even accidentally sent us
// the non-witness version of the block.
// We don't want to consider this block
// "invalid" if either of these checks
// fail.
if(!block.getWitnessNonce()){cov_2hsadq1dzp().b[41][0]++;cov_2hsadq1dzp().s[155]++;throw new VerifyError(block,'invalid','bad-witness-nonce-size',100,true);}else{cov_2hsadq1dzp().b[41][1]++;}cov_2hsadq1dzp().s[156]++;if(!commit.equals(block.createCommitmentHash())){cov_2hsadq1dzp().b[42][0]++;cov_2hsadq1dzp().s[157]++;throw new VerifyError(block,'invalid','bad-witness-merkle-match',100,true);}else{cov_2hsadq1dzp().b[42][1]++;}}else{cov_2hsadq1dzp().b[40][1]++;}}else{cov_2hsadq1dzp().b[39][1]++;}// Blocks that do not commit to
// witness data cannot contain it.
cov_2hsadq1dzp().s[158]++;if(!commit){cov_2hsadq1dzp().b[43][0]++;cov_2hsadq1dzp().s[159]++;if(block.hasWitness()){cov_2hsadq1dzp().b[44][0]++;cov_2hsadq1dzp().s[160]++;throw new VerifyError(block,'invalid','unexpected-witness',100,true);}else{cov_2hsadq1dzp().b[44][1]++;}}else{cov_2hsadq1dzp().b[43][1]++;}// Check block weight (different from block size
// check in non-contextual verification).
cov_2hsadq1dzp().s[161]++;if(block.getWeight()>consensus.MAX_BLOCK_WEIGHT){cov_2hsadq1dzp().b[45][0]++;cov_2hsadq1dzp().s[162]++;throw new VerifyError(block,'invalid','bad-blk-weight',100);}else{cov_2hsadq1dzp().b[45][1]++;}cov_2hsadq1dzp().s[163]++;return state;}/**
   * Check all deployments on a chain, ranging from p2sh to segwit.
   * @param {Number} time
   * @param {ChainEntry} prev
   * @returns {Promise} - Returns {@link DeploymentState}.
   */async getDeployments(time,prev){cov_2hsadq1dzp().f[16]++;const deployments=(cov_2hsadq1dzp().s[164]++,this.network.deployments);const height=(cov_2hsadq1dzp().s[165]++,prev.height+1);const state=(cov_2hsadq1dzp().s[166]++,new DeploymentState());// For some reason bitcoind has p2sh in the
// mandatory flags by default, when in reality
// it wasn't activated until march 30th 2012.
// The first p2sh output and redeem script
// appeared on march 7th 2012, only it did
// not have a signature. See:
// 6a26d2ecb67f27d1fa5524763b49029d7106e91e3cc05743073461a719776192
// 9c08a4d78931342b37fd5f72900fb9983087e6f46c4a097d8a1f52c74e28eaf6
cov_2hsadq1dzp().s[167]++;if(time>=consensus.BIP16_TIME){cov_2hsadq1dzp().b[46][0]++;cov_2hsadq1dzp().s[168]++;state.flags|=Script.flags.VERIFY_P2SH;}else{cov_2hsadq1dzp().b[46][1]++;}// Coinbase heights are now enforced (bip34).
cov_2hsadq1dzp().s[169]++;if(height>=this.network.block.bip34height){cov_2hsadq1dzp().b[47][0]++;cov_2hsadq1dzp().s[170]++;state.bip34=true;}else{cov_2hsadq1dzp().b[47][1]++;}// Signature validation is now enforced (bip66).
cov_2hsadq1dzp().s[171]++;if(height>=this.network.block.bip66height){cov_2hsadq1dzp().b[48][0]++;cov_2hsadq1dzp().s[172]++;state.flags|=Script.flags.VERIFY_DERSIG;}else{cov_2hsadq1dzp().b[48][1]++;}// CHECKLOCKTIMEVERIFY is now usable (bip65).
cov_2hsadq1dzp().s[173]++;if(height>=this.network.block.bip65height){cov_2hsadq1dzp().b[49][0]++;cov_2hsadq1dzp().s[174]++;state.flags|=Script.flags.VERIFY_CHECKLOCKTIMEVERIFY;}else{cov_2hsadq1dzp().b[49][1]++;}// CHECKSEQUENCEVERIFY and median time
// past locktimes are now usable (bip9 & bip113).
cov_2hsadq1dzp().s[175]++;if(await this.isActive(prev,deployments.csv)){cov_2hsadq1dzp().b[50][0]++;cov_2hsadq1dzp().s[176]++;state.flags|=Script.flags.VERIFY_CHECKSEQUENCEVERIFY;cov_2hsadq1dzp().s[177]++;state.lockFlags|=common.lockFlags.VERIFY_SEQUENCE;cov_2hsadq1dzp().s[178]++;state.lockFlags|=common.lockFlags.MEDIAN_TIME_PAST;}else{cov_2hsadq1dzp().b[50][1]++;}// Check the state of the segwit deployment.
const witness=(cov_2hsadq1dzp().s[179]++,await this.getState(prev,deployments.segwit));// Segregrated witness (bip141) is now usable
// along with SCRIPT_VERIFY_NULLDUMMY (bip147).
cov_2hsadq1dzp().s[180]++;if(witness===thresholdStates.ACTIVE){cov_2hsadq1dzp().b[51][0]++;cov_2hsadq1dzp().s[181]++;state.flags|=Script.flags.VERIFY_WITNESS;cov_2hsadq1dzp().s[182]++;state.flags|=Script.flags.VERIFY_NULLDUMMY;}else{cov_2hsadq1dzp().b[51][1]++;}// Segsignal is now enforced (bip91).
cov_2hsadq1dzp().s[183]++;if(this.options.bip91){cov_2hsadq1dzp().b[52][0]++;cov_2hsadq1dzp().s[184]++;if(witness===thresholdStates.STARTED){cov_2hsadq1dzp().b[53][0]++;cov_2hsadq1dzp().s[185]++;if(await this.isActive(prev,deployments.segsignal)){cov_2hsadq1dzp().b[54][0]++;cov_2hsadq1dzp().s[186]++;state.bip91=true;}else{cov_2hsadq1dzp().b[54][1]++;}}else{cov_2hsadq1dzp().b[53][1]++;}}else{cov_2hsadq1dzp().b[52][1]++;}// UASF is now enforced (bip148) (mainnet-only).
cov_2hsadq1dzp().s[187]++;if((cov_2hsadq1dzp().b[56][0]++,this.options.bip148)&&(cov_2hsadq1dzp().b[56][1]++,this.network===Network.main)){cov_2hsadq1dzp().b[55][0]++;cov_2hsadq1dzp().s[188]++;if((cov_2hsadq1dzp().b[58][0]++,witness!==thresholdStates.LOCKED_IN)&&(cov_2hsadq1dzp().b[58][1]++,witness!==thresholdStates.ACTIVE)){cov_2hsadq1dzp().b[57][0]++;// The BIP148 MTP check is nonsensical in
// that it includes the _current_ entry's
// timestamp. This requires some hackery,
// since bcoin only operates on the sane
// assumption that deployment checks should
// only ever examine the values of the
// previous block (necessary for mining).
const mtp=(cov_2hsadq1dzp().s[189]++,await this.getMedianTime(prev,time));cov_2hsadq1dzp().s[190]++;if((cov_2hsadq1dzp().b[60][0]++,mtp>=1501545600)&&(cov_2hsadq1dzp().b[60][1]++,mtp<=1510704000)){cov_2hsadq1dzp().b[59][0]++;cov_2hsadq1dzp().s[191]++;state.bip148=true;}else{cov_2hsadq1dzp().b[59][1]++;}}else{cov_2hsadq1dzp().b[57][1]++;}}else{cov_2hsadq1dzp().b[55][1]++;}cov_2hsadq1dzp().s[192]++;return state;}/**
   * Set a new deployment state.
   * @param {DeploymentState} state
   */setDeploymentState(state){cov_2hsadq1dzp().f[17]++;cov_2hsadq1dzp().s[193]++;if((cov_2hsadq1dzp().b[62][0]++,this.options.checkpoints)&&(cov_2hsadq1dzp().b[62][1]++,this.height<this.network.lastCheckpoint)){cov_2hsadq1dzp().b[61][0]++;cov_2hsadq1dzp().s[194]++;this.state=state;cov_2hsadq1dzp().s[195]++;return;}else{cov_2hsadq1dzp().b[61][1]++;}cov_2hsadq1dzp().s[196]++;if((cov_2hsadq1dzp().b[64][0]++,!this.state.hasP2SH())&&(cov_2hsadq1dzp().b[64][1]++,state.hasP2SH())){cov_2hsadq1dzp().b[63][0]++;cov_2hsadq1dzp().s[197]++;this.logger.warning('P2SH has been activated.');}else{cov_2hsadq1dzp().b[63][1]++;}cov_2hsadq1dzp().s[198]++;if((cov_2hsadq1dzp().b[66][0]++,!this.state.hasBIP34())&&(cov_2hsadq1dzp().b[66][1]++,state.hasBIP34())){cov_2hsadq1dzp().b[65][0]++;cov_2hsadq1dzp().s[199]++;this.logger.warning('BIP34 has been activated.');}else{cov_2hsadq1dzp().b[65][1]++;}cov_2hsadq1dzp().s[200]++;if((cov_2hsadq1dzp().b[68][0]++,!this.state.hasBIP66())&&(cov_2hsadq1dzp().b[68][1]++,state.hasBIP66())){cov_2hsadq1dzp().b[67][0]++;cov_2hsadq1dzp().s[201]++;this.logger.warning('BIP66 has been activated.');}else{cov_2hsadq1dzp().b[67][1]++;}cov_2hsadq1dzp().s[202]++;if((cov_2hsadq1dzp().b[70][0]++,!this.state.hasCLTV())&&(cov_2hsadq1dzp().b[70][1]++,state.hasCLTV())){cov_2hsadq1dzp().b[69][0]++;cov_2hsadq1dzp().s[203]++;this.logger.warning('BIP65 has been activated.');}else{cov_2hsadq1dzp().b[69][1]++;}cov_2hsadq1dzp().s[204]++;if((cov_2hsadq1dzp().b[72][0]++,!this.state.hasCSV())&&(cov_2hsadq1dzp().b[72][1]++,state.hasCSV())){cov_2hsadq1dzp().b[71][0]++;cov_2hsadq1dzp().s[205]++;this.logger.warning('CSV has been activated.');}else{cov_2hsadq1dzp().b[71][1]++;}cov_2hsadq1dzp().s[206]++;if((cov_2hsadq1dzp().b[74][0]++,!this.state.hasWitness())&&(cov_2hsadq1dzp().b[74][1]++,state.hasWitness())){cov_2hsadq1dzp().b[73][0]++;cov_2hsadq1dzp().s[207]++;this.logger.warning('Segwit has been activated.');}else{cov_2hsadq1dzp().b[73][1]++;}cov_2hsadq1dzp().s[208]++;if((cov_2hsadq1dzp().b[76][0]++,!this.state.hasBIP91())&&(cov_2hsadq1dzp().b[76][1]++,state.hasBIP91())){cov_2hsadq1dzp().b[75][0]++;cov_2hsadq1dzp().s[209]++;this.logger.warning('BIP91 has been activated.');}else{cov_2hsadq1dzp().b[75][1]++;}cov_2hsadq1dzp().s[210]++;if((cov_2hsadq1dzp().b[78][0]++,!this.state.hasBIP148())&&(cov_2hsadq1dzp().b[78][1]++,state.hasBIP148())){cov_2hsadq1dzp().b[77][0]++;cov_2hsadq1dzp().s[211]++;this.logger.warning('BIP148 has been activated.');}else{cov_2hsadq1dzp().b[77][1]++;}cov_2hsadq1dzp().s[212]++;this.state=state;}/**
   * Determine whether to check block for duplicate txids in blockchain
   * history (BIP30). If we're on a chain that has bip34 activated, we
   * can skip this.
   * @private
   * @see https://github.com/bitcoin/bips/blob/master/bip-0030.mediawiki
   * @param {Block} block
   * @param {ChainEntry} prev
   * @returns {Promise}
   */async verifyDuplicates(block,prev){cov_2hsadq1dzp().f[18]++;cov_2hsadq1dzp().s[213]++;for(const tx of block.txs){cov_2hsadq1dzp().s[214]++;if(!(await this.hasCoins(tx))){cov_2hsadq1dzp().b[79][0]++;cov_2hsadq1dzp().s[215]++;continue;}else{cov_2hsadq1dzp().b[79][1]++;}const height=(cov_2hsadq1dzp().s[216]++,prev.height+1);const hash=(cov_2hsadq1dzp().s[217]++,this.network.bip30[height]);// Blocks 91842 and 91880 created duplicate
// txids by using the same exact output script
// and extraNonce.
cov_2hsadq1dzp().s[218]++;if((cov_2hsadq1dzp().b[81][0]++,!hash)||(cov_2hsadq1dzp().b[81][1]++,!block.hash().equals(hash))){cov_2hsadq1dzp().b[80][0]++;cov_2hsadq1dzp().s[219]++;throw new VerifyError(block,'invalid','bad-txns-BIP30',100);}else{cov_2hsadq1dzp().b[80][1]++;}}}/**
   * Spend and update inputs (checkpoints only).
   * @private
   * @param {Block} block
   * @param {ChainEntry} prev
   * @returns {Promise} - Returns {@link CoinView}.
   */async updateInputs(block,prev){cov_2hsadq1dzp().f[19]++;const view=(cov_2hsadq1dzp().s[220]++,new CoinView());const height=(cov_2hsadq1dzp().s[221]++,prev.height+1);const cb=(cov_2hsadq1dzp().s[222]++,block.txs[0]);cov_2hsadq1dzp().s[223]++;view.addTX(cb,height);cov_2hsadq1dzp().s[224]++;for(let i=(cov_2hsadq1dzp().s[225]++,1);i<block.txs.length;i++){const tx=(cov_2hsadq1dzp().s[226]++,block.txs[i]);cov_2hsadq1dzp().s[227]++;assert(await view.spendInputs(this.db,tx),'BUG: Spent inputs in historical data!');cov_2hsadq1dzp().s[228]++;view.addTX(tx,height);}cov_2hsadq1dzp().s[229]++;return view;}/**
   * Check block transactions for all things pertaining
   * to inputs. This function is important because it is
   * what actually fills the coins into the block. This
   * function will check the block reward, the sigops,
   * the tx values, and execute and verify the scripts (it
   * will attempt to do this on the worker pool). If
   * `checkpoints` is enabled, it will skip verification
   * for historical data.
   * @private
   * @see TX#verifyInputs
   * @see TX#verify
   * @param {Block} block
   * @param {ChainEntry} prev
   * @param {DeploymentState} state
   * @returns {Promise} - Returns {@link CoinView}.
   */async verifyInputs(block,prev,state){cov_2hsadq1dzp().f[20]++;const view=(cov_2hsadq1dzp().s[230]++,new CoinView());const height=(cov_2hsadq1dzp().s[231]++,prev.height+1);const interval=(cov_2hsadq1dzp().s[232]++,this.network.halvingInterval);let sigops=(cov_2hsadq1dzp().s[233]++,0);let reward=(cov_2hsadq1dzp().s[234]++,0);// Check all transactions
cov_2hsadq1dzp().s[235]++;for(let i=(cov_2hsadq1dzp().s[236]++,0);i<block.txs.length;i++){const tx=(cov_2hsadq1dzp().s[237]++,block.txs[i]);// Ensure tx is not double spending an output.
cov_2hsadq1dzp().s[238]++;if(i>0){cov_2hsadq1dzp().b[82][0]++;cov_2hsadq1dzp().s[239]++;if(!(await view.spendInputs(this.db,tx))){cov_2hsadq1dzp().b[83][0]++;cov_2hsadq1dzp().s[240]++;throw new VerifyError(block,'invalid','bad-txns-inputs-missingorspent',100);}else{cov_2hsadq1dzp().b[83][1]++;}}else{cov_2hsadq1dzp().b[82][1]++;}// Verify sequence locks.
cov_2hsadq1dzp().s[241]++;if((cov_2hsadq1dzp().b[85][0]++,i>0)&&(cov_2hsadq1dzp().b[85][1]++,tx.version>=2)){cov_2hsadq1dzp().b[84][0]++;const valid=(cov_2hsadq1dzp().s[242]++,await this.verifyLocks(prev,tx,view,state.lockFlags));cov_2hsadq1dzp().s[243]++;if(!valid){cov_2hsadq1dzp().b[86][0]++;cov_2hsadq1dzp().s[244]++;throw new VerifyError(block,'invalid','bad-txns-nonfinal',100);}else{cov_2hsadq1dzp().b[86][1]++;}}else{cov_2hsadq1dzp().b[84][1]++;}// Count sigops (legacy + scripthash? + witness?)
cov_2hsadq1dzp().s[245]++;sigops+=tx.getSigopsCost(view,state.flags);cov_2hsadq1dzp().s[246]++;if(sigops>consensus.MAX_BLOCK_SIGOPS_COST){cov_2hsadq1dzp().b[87][0]++;cov_2hsadq1dzp().s[247]++;throw new VerifyError(block,'invalid','bad-blk-sigops',100);}else{cov_2hsadq1dzp().b[87][1]++;}// Contextual sanity checks.
cov_2hsadq1dzp().s[248]++;if(i>0){cov_2hsadq1dzp().b[88][0]++;const[fee,reason,score]=(cov_2hsadq1dzp().s[249]++,tx.checkInputs(view,height));cov_2hsadq1dzp().s[250]++;if(fee===-1){cov_2hsadq1dzp().b[89][0]++;cov_2hsadq1dzp().s[251]++;throw new VerifyError(block,'invalid',reason,score);}else{cov_2hsadq1dzp().b[89][1]++;}cov_2hsadq1dzp().s[252]++;reward+=fee;cov_2hsadq1dzp().s[253]++;if(reward>consensus.MAX_MONEY){cov_2hsadq1dzp().b[90][0]++;cov_2hsadq1dzp().s[254]++;throw new VerifyError(block,'invalid','bad-txns-accumulated-fee-outofrange',100);}else{cov_2hsadq1dzp().b[90][1]++;}}else{cov_2hsadq1dzp().b[88][1]++;}// Add new coins.
cov_2hsadq1dzp().s[255]++;view.addTX(tx,height);}// Make sure the miner isn't trying to conjure more coins.
cov_2hsadq1dzp().s[256]++;reward+=consensus.getReward(height,interval);cov_2hsadq1dzp().s[257]++;if(block.getClaimed()>reward){cov_2hsadq1dzp().b[91][0]++;cov_2hsadq1dzp().s[258]++;throw new VerifyError(block,'invalid','bad-cb-amount',100);}else{cov_2hsadq1dzp().b[91][1]++;}// Push onto verification queue.
const jobs=(cov_2hsadq1dzp().s[259]++,[]);cov_2hsadq1dzp().s[260]++;for(let i=(cov_2hsadq1dzp().s[261]++,1);i<block.txs.length;i++){const tx=(cov_2hsadq1dzp().s[262]++,block.txs[i]);cov_2hsadq1dzp().s[263]++;jobs.push(tx.verifyAsync(view,state.flags,this.workers));}// Verify all txs in parallel.
const results=(cov_2hsadq1dzp().s[264]++,await Promise.all(jobs));cov_2hsadq1dzp().s[265]++;for(const result of results){cov_2hsadq1dzp().s[266]++;if(!result){cov_2hsadq1dzp().b[92][0]++;cov_2hsadq1dzp().s[267]++;throw new VerifyError(block,'invalid','mandatory-script-verify-flag-failed',100);}else{cov_2hsadq1dzp().b[92][1]++;}}cov_2hsadq1dzp().s[268]++;return view;}/**
   * Find the block at which a fork occurred.
   * @private
   * @param {ChainEntry} fork - The current chain.
   * @param {ChainEntry} longer - The competing chain.
   * @returns {Promise}
   */async findFork(fork,longer){cov_2hsadq1dzp().f[21]++;cov_2hsadq1dzp().s[269]++;while(!fork.hash.equals(longer.hash)){cov_2hsadq1dzp().s[270]++;while(longer.height>fork.height){cov_2hsadq1dzp().s[271]++;longer=await this.getPrevious(longer);cov_2hsadq1dzp().s[272]++;if(!longer){cov_2hsadq1dzp().b[93][0]++;cov_2hsadq1dzp().s[273]++;throw new Error('No previous entry for new tip.');}else{cov_2hsadq1dzp().b[93][1]++;}}cov_2hsadq1dzp().s[274]++;if(fork.hash.equals(longer.hash)){cov_2hsadq1dzp().b[94][0]++;cov_2hsadq1dzp().s[275]++;return fork;}else{cov_2hsadq1dzp().b[94][1]++;}cov_2hsadq1dzp().s[276]++;fork=await this.getPrevious(fork);cov_2hsadq1dzp().s[277]++;if(!fork){cov_2hsadq1dzp().b[95][0]++;cov_2hsadq1dzp().s[278]++;throw new Error('No previous entry for old tip.');}else{cov_2hsadq1dzp().b[95][1]++;}}cov_2hsadq1dzp().s[279]++;return fork;}/**
   * Reorganize the blockchain (connect and disconnect inputs).
   * Called when a competing chain with a higher chainwork
   * is received.
   * @private
   * @param {ChainEntry} competitor - The competing chain's tip.
   * @returns {Promise}
   */async reorganize(competitor){cov_2hsadq1dzp().f[22]++;const tip=(cov_2hsadq1dzp().s[280]++,this.tip);const fork=(cov_2hsadq1dzp().s[281]++,await this.findFork(tip,competitor));cov_2hsadq1dzp().s[282]++;assert(fork,'No free space or data corruption.');// Blocks to disconnect.
const disconnect=(cov_2hsadq1dzp().s[283]++,[]);let entry=(cov_2hsadq1dzp().s[284]++,tip);cov_2hsadq1dzp().s[285]++;while(!entry.hash.equals(fork.hash)){cov_2hsadq1dzp().s[286]++;disconnect.push(entry);cov_2hsadq1dzp().s[287]++;entry=await this.getPrevious(entry);cov_2hsadq1dzp().s[288]++;assert(entry);}// Blocks to connect.
const connect=(cov_2hsadq1dzp().s[289]++,[]);cov_2hsadq1dzp().s[290]++;entry=competitor;cov_2hsadq1dzp().s[291]++;while(!entry.hash.equals(fork.hash)){cov_2hsadq1dzp().s[292]++;connect.push(entry);cov_2hsadq1dzp().s[293]++;entry=await this.getPrevious(entry);cov_2hsadq1dzp().s[294]++;assert(entry);}// Disconnect blocks/txs.
cov_2hsadq1dzp().s[295]++;for(let i=(cov_2hsadq1dzp().s[296]++,0);i<disconnect.length;i++){const entry=(cov_2hsadq1dzp().s[297]++,disconnect[i]);cov_2hsadq1dzp().s[298]++;await this.disconnect(entry);}// Connect blocks/txs.
// We don't want to connect the new tip here.
// That will be done outside in setBestChain.
cov_2hsadq1dzp().s[299]++;for(let i=(cov_2hsadq1dzp().s[300]++,connect.length-1);i>=1;i--){const entry=(cov_2hsadq1dzp().s[301]++,connect[i]);cov_2hsadq1dzp().s[302]++;await this.reconnect(entry);}cov_2hsadq1dzp().s[303]++;this.logger.warning('Chain reorganization: old=%h(%d) new=%h(%d)',tip.hash,tip.height,competitor.hash,competitor.height);cov_2hsadq1dzp().s[304]++;await this.emitAsync('reorganize',tip,competitor);}/**
   * Reorganize the blockchain for SPV. This
   * will reset the chain to the fork block.
   * @private
   * @param {ChainEntry} competitor - The competing chain's tip.
   * @returns {Promise}
   */async reorganizeSPV(competitor){cov_2hsadq1dzp().f[23]++;const tip=(cov_2hsadq1dzp().s[305]++,this.tip);const fork=(cov_2hsadq1dzp().s[306]++,await this.findFork(tip,competitor));cov_2hsadq1dzp().s[307]++;assert(fork,'No free space or data corruption.');// Buffer disconnected blocks.
const disconnect=(cov_2hsadq1dzp().s[308]++,[]);let entry=(cov_2hsadq1dzp().s[309]++,tip);cov_2hsadq1dzp().s[310]++;while(!entry.hash.equals(fork.hash)){cov_2hsadq1dzp().s[311]++;disconnect.push(entry);cov_2hsadq1dzp().s[312]++;entry=await this.getPrevious(entry);cov_2hsadq1dzp().s[313]++;assert(entry);}// Reset the main chain back
// to the fork block, causing
// us to redownload the blocks
// on the new main chain.
cov_2hsadq1dzp().s[314]++;await this._reset(fork.hash,true);// Emit disconnection events now that
// the chain has successfully reset.
cov_2hsadq1dzp().s[315]++;for(const entry of disconnect){const headers=(cov_2hsadq1dzp().s[316]++,entry.toHeaders());const view=(cov_2hsadq1dzp().s[317]++,new CoinView());cov_2hsadq1dzp().s[318]++;await this.emitAsync('disconnect',entry,headers,view);}cov_2hsadq1dzp().s[319]++;this.logger.warning('SPV reorganization: old=%h(%d) new=%h(%d)',tip.hash,tip.height,competitor.hash,competitor.height);cov_2hsadq1dzp().s[320]++;this.logger.warning('Chain replay from height %d necessary.',fork.height);cov_2hsadq1dzp().s[321]++;return this.emitAsync('reorganize',tip,competitor);}/**
   * Disconnect an entry from the chain (updates the tip).
   * @param {ChainEntry} entry
   * @returns {Promise}
   */async disconnect(entry){cov_2hsadq1dzp().f[24]++;let block=(cov_2hsadq1dzp().s[322]++,await this.getBlock(entry.hash));cov_2hsadq1dzp().s[323]++;if(!block){cov_2hsadq1dzp().b[96][0]++;cov_2hsadq1dzp().s[324]++;if(!this.options.spv){cov_2hsadq1dzp().b[97][0]++;cov_2hsadq1dzp().s[325]++;throw new Error('Block not found.');}else{cov_2hsadq1dzp().b[97][1]++;}cov_2hsadq1dzp().s[326]++;block=entry.toHeaders();}else{cov_2hsadq1dzp().b[96][1]++;}const prev=(cov_2hsadq1dzp().s[327]++,await this.getPrevious(entry));const view=(cov_2hsadq1dzp().s[328]++,await this.db.disconnect(entry,block));cov_2hsadq1dzp().s[329]++;assert(prev);cov_2hsadq1dzp().s[330]++;this.tip=prev;cov_2hsadq1dzp().s[331]++;this.height=prev.height;cov_2hsadq1dzp().s[332]++;this.emit('tip',prev);cov_2hsadq1dzp().s[333]++;return this.emitAsync('disconnect',entry,block,view);}/**
   * Reconnect an entry to the chain (updates the tip).
   * This will do contextual-verification on the block
   * (necessary because we cannot validate the inputs
   * in alternate chains when they come in).
   * @param {ChainEntry} entry
   * @param {Number} flags
   * @returns {Promise}
   */async reconnect(entry){cov_2hsadq1dzp().f[25]++;const flags=(cov_2hsadq1dzp().s[334]++,common.flags.VERIFY_NONE);let block=(cov_2hsadq1dzp().s[335]++,await this.getBlock(entry.hash));cov_2hsadq1dzp().s[336]++;if(!block){cov_2hsadq1dzp().b[98][0]++;cov_2hsadq1dzp().s[337]++;if(!this.options.spv){cov_2hsadq1dzp().b[99][0]++;cov_2hsadq1dzp().s[338]++;throw new Error('Block not found.');}else{cov_2hsadq1dzp().b[99][1]++;}cov_2hsadq1dzp().s[339]++;block=entry.toHeaders();}else{cov_2hsadq1dzp().b[98][1]++;}const prev=(cov_2hsadq1dzp().s[340]++,await this.getPrevious(entry));cov_2hsadq1dzp().s[341]++;assert(prev);let view,state;cov_2hsadq1dzp().s[342]++;try{cov_2hsadq1dzp().s[343]++;[view,state]=await this.verifyContext(block,prev,flags);}catch(err){cov_2hsadq1dzp().s[344]++;if(err.type==='VerifyError'){cov_2hsadq1dzp().b[100][0]++;cov_2hsadq1dzp().s[345]++;if(!err.malleated){cov_2hsadq1dzp().b[101][0]++;cov_2hsadq1dzp().s[346]++;this.setInvalid(entry.hash);}else{cov_2hsadq1dzp().b[101][1]++;}cov_2hsadq1dzp().s[347]++;this.logger.warning('Tried to reconnect invalid block: %h (%d).',entry.hash,entry.height);}else{cov_2hsadq1dzp().b[100][1]++;}cov_2hsadq1dzp().s[348]++;throw err;}cov_2hsadq1dzp().s[349]++;await this.db.reconnect(entry,block,view);cov_2hsadq1dzp().s[350]++;this.tip=entry;cov_2hsadq1dzp().s[351]++;this.height=entry.height;cov_2hsadq1dzp().s[352]++;this.setDeploymentState(state);cov_2hsadq1dzp().s[353]++;this.emit('tip',entry);cov_2hsadq1dzp().s[354]++;this.emit('reconnect',entry,block);cov_2hsadq1dzp().s[355]++;return this.emitAsync('connect',entry,block,view);}/**
   * Set the best chain. This is called on every valid block
   * that comes in. It may add and connect the block (main chain),
   * save the block without connection (alternate chain), or
   * reorganize the chain (a higher fork).
   * @private
   * @param {ChainEntry} entry
   * @param {Block} block
   * @param {ChainEntry} prev
   * @param {Number} flags
   * @returns {Promise}
   */async setBestChain(entry,block,prev,flags){cov_2hsadq1dzp().f[26]++;cov_2hsadq1dzp().s[356]++;// A higher fork has arrived.
// Time to reorganize the chain.
if(!entry.prevBlock.equals(this.tip.hash)){cov_2hsadq1dzp().b[102][0]++;cov_2hsadq1dzp().s[357]++;this.logger.warning('WARNING: Reorganizing chain.');// In spv-mode, we reset the
// chain and redownload the blocks.
cov_2hsadq1dzp().s[358]++;if(this.options.spv){cov_2hsadq1dzp().b[103][0]++;cov_2hsadq1dzp().s[359]++;return this.reorganizeSPV(entry);}else{cov_2hsadq1dzp().b[103][1]++;}cov_2hsadq1dzp().s[360]++;await this.reorganize(entry);}else{cov_2hsadq1dzp().b[102][1]++;}// Warn of unknown versionbits.
cov_2hsadq1dzp().s[361]++;if(entry.hasUnknown(this.network)){cov_2hsadq1dzp().b[104][0]++;cov_2hsadq1dzp().s[362]++;this.logger.warning('Unknown version bits in block %d: %s.',entry.height,entry.version.toString(16));}else{cov_2hsadq1dzp().b[104][1]++;}// Otherwise, everything is in order.
// Do "contextual" verification on our block
// now that we're certain its previous
// block is in the chain.
let view,state;cov_2hsadq1dzp().s[363]++;try{cov_2hsadq1dzp().s[364]++;[view,state]=await this.verifyContext(block,prev,flags);}catch(err){cov_2hsadq1dzp().s[365]++;if(err.type==='VerifyError'){cov_2hsadq1dzp().b[105][0]++;cov_2hsadq1dzp().s[366]++;if(!err.malleated){cov_2hsadq1dzp().b[106][0]++;cov_2hsadq1dzp().s[367]++;this.setInvalid(entry.hash);}else{cov_2hsadq1dzp().b[106][1]++;}cov_2hsadq1dzp().s[368]++;this.logger.warning('Tried to connect invalid block: %h (%d).',entry.hash,entry.height);}else{cov_2hsadq1dzp().b[105][1]++;}cov_2hsadq1dzp().s[369]++;throw err;}// Save block and connect inputs.
cov_2hsadq1dzp().s[370]++;await this.db.save(entry,block,view);// Expose the new state.
cov_2hsadq1dzp().s[371]++;this.tip=entry;cov_2hsadq1dzp().s[372]++;this.height=entry.height;cov_2hsadq1dzp().s[373]++;this.setDeploymentState(state);cov_2hsadq1dzp().s[374]++;this.emit('tip',entry);cov_2hsadq1dzp().s[375]++;this.emit('block',block,entry);cov_2hsadq1dzp().s[376]++;return this.emitAsync('connect',entry,block,view);}/**
   * Save block on an alternate chain.
   * @private
   * @param {ChainEntry} entry
   * @param {Block} block
   * @param {ChainEntry} prev
   * @param {Number} flags
   * @returns {Promise}
   */async saveAlternate(entry,block,prev,flags){cov_2hsadq1dzp().f[27]++;cov_2hsadq1dzp().s[377]++;// Do not accept forked chain older than the
// last checkpoint.
if(this.options.checkpoints){cov_2hsadq1dzp().b[107][0]++;cov_2hsadq1dzp().s[378]++;if(prev.height+1<this.network.lastCheckpoint){cov_2hsadq1dzp().b[108][0]++;cov_2hsadq1dzp().s[379]++;throw new VerifyError(block,'checkpoint','bad-fork-prior-to-checkpoint',100);}else{cov_2hsadq1dzp().b[108][1]++;}}else{cov_2hsadq1dzp().b[107][1]++;}cov_2hsadq1dzp().s[380]++;try{cov_2hsadq1dzp().s[381]++;// Do as much verification
// as we can before saving.
await this.verify(block,prev,flags);}catch(err){cov_2hsadq1dzp().s[382]++;if(err.type==='VerifyError'){cov_2hsadq1dzp().b[109][0]++;cov_2hsadq1dzp().s[383]++;if(!err.malleated){cov_2hsadq1dzp().b[110][0]++;cov_2hsadq1dzp().s[384]++;this.setInvalid(entry.hash);}else{cov_2hsadq1dzp().b[110][1]++;}cov_2hsadq1dzp().s[385]++;this.logger.warning('Invalid block on alternate chain: %h (%d).',entry.hash,entry.height);}else{cov_2hsadq1dzp().b[109][1]++;}cov_2hsadq1dzp().s[386]++;throw err;}// Warn of unknown versionbits.
cov_2hsadq1dzp().s[387]++;if(entry.hasUnknown(this.network)){cov_2hsadq1dzp().b[111][0]++;cov_2hsadq1dzp().s[388]++;this.logger.warning('Unknown version bits in block %d: %s.',entry.height,entry.version.toString(16));}else{cov_2hsadq1dzp().b[111][1]++;}cov_2hsadq1dzp().s[389]++;await this.db.save(entry,block);cov_2hsadq1dzp().s[390]++;this.logger.warning('Heads up: Competing chain at height %d:'+' tip-height=%d competitor-height=%d'+' tip-hash=%h competitor-hash=%h'+' tip-chainwork=%s competitor-chainwork=%s'+' chainwork-diff=%s',entry.height,this.tip.height,entry.height,this.tip.hash,entry.hash,this.tip.chainwork.toString(),entry.chainwork.toString(),this.tip.chainwork.sub(entry.chainwork).toString());// Emit as a "competitor" block.
cov_2hsadq1dzp().s[391]++;this.emit('competitor',block,entry);}/**
   * Reset the chain to the desired block. This
   * is useful for replaying the blockchain download
   * for SPV.
   * @param {Hash|Number} block
   * @returns {Promise}
   */async reset(block){cov_2hsadq1dzp().f[28]++;const unlock=(cov_2hsadq1dzp().s[392]++,await this.locker.lock());cov_2hsadq1dzp().s[393]++;try{cov_2hsadq1dzp().s[394]++;return await this._reset(block,false);}finally{cov_2hsadq1dzp().s[395]++;unlock();}}/**
   * Reset the chain to the desired block without a lock.
   * @private
   * @param {Hash|Number} block
   * @returns {Promise}
   */async _reset(block,silent){cov_2hsadq1dzp().f[29]++;const tip=(cov_2hsadq1dzp().s[396]++,await this.db.reset(block));// Reset state.
cov_2hsadq1dzp().s[397]++;this.tip=tip;cov_2hsadq1dzp().s[398]++;this.height=tip.height;cov_2hsadq1dzp().s[399]++;this.synced=false;const state=(cov_2hsadq1dzp().s[400]++,await this.getDeploymentState());cov_2hsadq1dzp().s[401]++;this.setDeploymentState(state);cov_2hsadq1dzp().s[402]++;this.emit('tip',tip);cov_2hsadq1dzp().s[403]++;if(!silent){cov_2hsadq1dzp().b[112][0]++;cov_2hsadq1dzp().s[404]++;await this.emitAsync('reset',tip);}else{cov_2hsadq1dzp().b[112][1]++;}// Reset the orphan map completely. There may
// have been some orphans on a forked chain we
// no longer need.
cov_2hsadq1dzp().s[405]++;this.purgeOrphans();cov_2hsadq1dzp().s[406]++;this.maybeSync();}/**
   * Reset the chain to a height or hash. Useful for replaying
   * the blockchain download for SPV.
   * @param {Hash|Number} block - hash/height
   * @returns {Promise}
   */async replay(block){cov_2hsadq1dzp().f[30]++;const unlock=(cov_2hsadq1dzp().s[407]++,await this.locker.lock());cov_2hsadq1dzp().s[408]++;try{cov_2hsadq1dzp().s[409]++;return await this._replay(block,true);}finally{cov_2hsadq1dzp().s[410]++;unlock();}}/**
   * Reset the chain without a lock.
   * @private
   * @param {Hash|Number} block - hash/height
   * @param {Boolean?} silent
   * @returns {Promise}
   */async _replay(block,silent){cov_2hsadq1dzp().f[31]++;const entry=(cov_2hsadq1dzp().s[411]++,await this.getEntry(block));cov_2hsadq1dzp().s[412]++;if(!entry){cov_2hsadq1dzp().b[113][0]++;cov_2hsadq1dzp().s[413]++;throw new Error('Block not found.');}else{cov_2hsadq1dzp().b[113][1]++;}cov_2hsadq1dzp().s[414]++;if(!(await this.isMainChain(entry))){cov_2hsadq1dzp().b[114][0]++;cov_2hsadq1dzp().s[415]++;throw new Error('Cannot reset on alternate chain.');}else{cov_2hsadq1dzp().b[114][1]++;}cov_2hsadq1dzp().s[416]++;if(entry.isGenesis()){cov_2hsadq1dzp().b[115][0]++;cov_2hsadq1dzp().s[417]++;await this._reset(entry.hash,silent);cov_2hsadq1dzp().s[418]++;return;}else{cov_2hsadq1dzp().b[115][1]++;}cov_2hsadq1dzp().s[419]++;await this._reset(entry.prevBlock,silent);}/**
   * Invalidate block.
   * @param {Hash} hash
   * @returns {Promise}
   */async invalidate(hash){cov_2hsadq1dzp().f[32]++;const unlock=(cov_2hsadq1dzp().s[420]++,await this.locker.lock());cov_2hsadq1dzp().s[421]++;try{cov_2hsadq1dzp().s[422]++;return await this._invalidate(hash);}finally{cov_2hsadq1dzp().s[423]++;unlock();}}/**
   * Invalidate block (no lock).
   * @param {Hash} hash
   * @returns {Promise}
   */async _invalidate(hash){cov_2hsadq1dzp().f[33]++;cov_2hsadq1dzp().s[424]++;await this._replay(hash,false);cov_2hsadq1dzp().s[425]++;this.setInvalid(hash);}/**
   * Retroactively prune the database.
   * @returns {Promise}
   */async prune(){cov_2hsadq1dzp().f[34]++;const unlock=(cov_2hsadq1dzp().s[426]++,await this.locker.lock());cov_2hsadq1dzp().s[427]++;try{cov_2hsadq1dzp().s[428]++;return await this.db.prune();}finally{cov_2hsadq1dzp().s[429]++;unlock();}}/**
   * Scan the blockchain for transactions containing specified address hashes.
   * @param {Hash} start - Block hash to start at.
   * @param {Bloom} filter - Bloom filter containing tx and address hashes.
   * @param {Function} iter - Iterator.
   * @returns {Promise}
   */async scan(start,filter,iter){cov_2hsadq1dzp().f[35]++;const unlock=(cov_2hsadq1dzp().s[430]++,await this.locker.lock());cov_2hsadq1dzp().s[431]++;try{cov_2hsadq1dzp().s[432]++;return await this.db.scan(start,filter,iter);}finally{cov_2hsadq1dzp().s[433]++;unlock();}}/**
   * Add a block to the chain, perform all necessary verification.
   * @param {Block} block
   * @param {Number?} flags
   * @param {Number?} id
   * @returns {Promise}
   */async add(block,flags,id){cov_2hsadq1dzp().f[36]++;const hash=(cov_2hsadq1dzp().s[434]++,block.hash());const unlock=(cov_2hsadq1dzp().s[435]++,await this.locker.lock(hash));cov_2hsadq1dzp().s[436]++;try{cov_2hsadq1dzp().s[437]++;return await this._add(block,flags,id);}finally{cov_2hsadq1dzp().s[438]++;unlock();}}/**
   * Add a block to the chain without a lock.
   * @private
   * @param {Block} block
   * @param {Number?} flags
   * @param {Number?} id
   * @returns {Promise}
   */async _add(block,flags,id){cov_2hsadq1dzp().f[37]++;const hash=(cov_2hsadq1dzp().s[439]++,block.hash());cov_2hsadq1dzp().s[440]++;if(flags==null){cov_2hsadq1dzp().b[116][0]++;cov_2hsadq1dzp().s[441]++;flags=common.flags.DEFAULT_FLAGS;}else{cov_2hsadq1dzp().b[116][1]++;}cov_2hsadq1dzp().s[442]++;if(id==null){cov_2hsadq1dzp().b[117][0]++;cov_2hsadq1dzp().s[443]++;id=-1;}else{cov_2hsadq1dzp().b[117][1]++;}// Special case for genesis block.
cov_2hsadq1dzp().s[444]++;if(hash.equals(this.network.genesis.hash)){cov_2hsadq1dzp().b[118][0]++;cov_2hsadq1dzp().s[445]++;this.logger.debug('Saw genesis block: %h.',block.hash());cov_2hsadq1dzp().s[446]++;throw new VerifyError(block,'duplicate','duplicate',0);}else{cov_2hsadq1dzp().b[118][1]++;}// Do we already have this block in the queue?
cov_2hsadq1dzp().s[447]++;if(this.hasPending(hash)){cov_2hsadq1dzp().b[119][0]++;cov_2hsadq1dzp().s[448]++;this.logger.debug('Already have pending block: %h.',block.hash());cov_2hsadq1dzp().s[449]++;throw new VerifyError(block,'duplicate','duplicate',0);}else{cov_2hsadq1dzp().b[119][1]++;}// If the block is already known to be
// an orphan, ignore it.
cov_2hsadq1dzp().s[450]++;if(this.hasOrphan(hash)){cov_2hsadq1dzp().b[120][0]++;cov_2hsadq1dzp().s[451]++;this.logger.debug('Already have orphan block: %h.',block.hash());cov_2hsadq1dzp().s[452]++;throw new VerifyError(block,'duplicate','duplicate',0);}else{cov_2hsadq1dzp().b[120][1]++;}// Do not revalidate known invalid blocks.
cov_2hsadq1dzp().s[453]++;if(this.hasInvalid(block)){cov_2hsadq1dzp().b[121][0]++;cov_2hsadq1dzp().s[454]++;this.logger.debug('Invalid ancestors for block: %h.',block.hash());cov_2hsadq1dzp().s[455]++;throw new VerifyError(block,'duplicate','duplicate',100);}else{cov_2hsadq1dzp().b[121][1]++;}// Check the POW before doing anything.
cov_2hsadq1dzp().s[456]++;if(flags&common.flags.VERIFY_POW){cov_2hsadq1dzp().b[122][0]++;cov_2hsadq1dzp().s[457]++;if(!block.verifyPOW()){cov_2hsadq1dzp().b[123][0]++;cov_2hsadq1dzp().s[458]++;throw new VerifyError(block,'invalid','high-hash',50);}else{cov_2hsadq1dzp().b[123][1]++;}}else{cov_2hsadq1dzp().b[122][1]++;}// Do we already have this block?
cov_2hsadq1dzp().s[459]++;if(await this.hasEntry(hash)){cov_2hsadq1dzp().b[124][0]++;cov_2hsadq1dzp().s[460]++;this.logger.debug('Already have block: %h.',block.hash());cov_2hsadq1dzp().s[461]++;throw new VerifyError(block,'duplicate','duplicate',0);}else{cov_2hsadq1dzp().b[124][1]++;}// Find the previous block entry.
const prev=(cov_2hsadq1dzp().s[462]++,await this.getEntry(block.prevBlock));// If previous block wasn't ever seen,
// add it current to orphans and return.
cov_2hsadq1dzp().s[463]++;if(!prev){cov_2hsadq1dzp().b[125][0]++;cov_2hsadq1dzp().s[464]++;this.storeOrphan(block,flags,id);cov_2hsadq1dzp().s[465]++;return null;}else{cov_2hsadq1dzp().b[125][1]++;}// Connect the block.
const entry=(cov_2hsadq1dzp().s[466]++,await this.connect(prev,block,flags));// Handle any orphans.
cov_2hsadq1dzp().s[467]++;if(this.hasNextOrphan(hash)){cov_2hsadq1dzp().b[126][0]++;cov_2hsadq1dzp().s[468]++;await this.handleOrphans(entry);}else{cov_2hsadq1dzp().b[126][1]++;}cov_2hsadq1dzp().s[469]++;return entry;}/**
   * Connect block to chain.
   * @private
   * @param {ChainEntry} prev
   * @param {Block} block
   * @param {Number} flags
   * @returns {Promise}
   */async connect(prev,block,flags){cov_2hsadq1dzp().f[38]++;const start=(cov_2hsadq1dzp().s[470]++,util.bench());// Sanity check.
cov_2hsadq1dzp().s[471]++;assert(block.prevBlock.equals(prev.hash));// Explanation: we try to keep as much data
// off the javascript heap as possible. Blocks
// in the future may be 8mb or 20mb, who knows.
// In fullnode-mode we store the blocks in
// "compact" form (the headers plus the raw
// Buffer object) until they're ready to be
// fully validated here. They are deserialized,
// validated, and connected. Hopefully the
// deserialized blocks get cleaned up by the
// GC quickly.
cov_2hsadq1dzp().s[472]++;if(block.isMemory()){cov_2hsadq1dzp().b[127][0]++;cov_2hsadq1dzp().s[473]++;try{cov_2hsadq1dzp().s[474]++;block=block.toBlock();}catch(e){cov_2hsadq1dzp().s[475]++;this.logger.error(e);cov_2hsadq1dzp().s[476]++;throw new VerifyError(block,'malformed','error parsing message',10,true);}}else{cov_2hsadq1dzp().b[127][1]++;}// Create a new chain entry.
const entry=(cov_2hsadq1dzp().s[477]++,ChainEntry.fromBlock(block,prev));// The block is on a alternate chain if the
// chainwork is less than or equal to
// our tip's. Add the block but do _not_
// connect the inputs.
cov_2hsadq1dzp().s[478]++;if(entry.chainwork.lte(this.tip.chainwork)){cov_2hsadq1dzp().b[128][0]++;cov_2hsadq1dzp().s[479]++;// Save block to an alternate chain.
await this.saveAlternate(entry,block,prev,flags);}else{cov_2hsadq1dzp().b[128][1]++;cov_2hsadq1dzp().s[480]++;// Attempt to add block to the chain index.
await this.setBestChain(entry,block,prev,flags);}// Keep track of stats.
cov_2hsadq1dzp().s[481]++;this.logStatus(start,block,entry);// Check sync state.
cov_2hsadq1dzp().s[482]++;this.maybeSync();cov_2hsadq1dzp().s[483]++;return entry;}/**
   * Handle orphans.
   * @private
   * @param {ChainEntry} entry
   * @returns {Promise}
   */async handleOrphans(entry){cov_2hsadq1dzp().f[39]++;let orphan=(cov_2hsadq1dzp().s[484]++,this.resolveOrphan(entry.hash));cov_2hsadq1dzp().s[485]++;while(orphan){const{block,flags,id}=(cov_2hsadq1dzp().s[486]++,orphan);cov_2hsadq1dzp().s[487]++;try{cov_2hsadq1dzp().s[488]++;entry=await this.connect(entry,block,flags);}catch(err){cov_2hsadq1dzp().s[489]++;if(err.type==='VerifyError'){cov_2hsadq1dzp().b[129][0]++;cov_2hsadq1dzp().s[490]++;this.logger.warning('Could not resolve orphan block %h: %s.',block.hash(),err.message);cov_2hsadq1dzp().s[491]++;this.emit('bad orphan',err,id);cov_2hsadq1dzp().s[492]++;break;}else{cov_2hsadq1dzp().b[129][1]++;}cov_2hsadq1dzp().s[493]++;throw err;}cov_2hsadq1dzp().s[494]++;this.logger.debug('Orphan block was resolved: %h (%d).',block.hash(),entry.height);cov_2hsadq1dzp().s[495]++;this.emit('resolved',block,entry);cov_2hsadq1dzp().s[496]++;orphan=this.resolveOrphan(entry.hash);}}/**
   * Test whether the chain has reached its slow height.
   * @private
   * @returns {Boolean}
   */isSlow(){cov_2hsadq1dzp().f[40]++;cov_2hsadq1dzp().s[497]++;if(this.options.spv){cov_2hsadq1dzp().b[130][0]++;cov_2hsadq1dzp().s[498]++;return false;}else{cov_2hsadq1dzp().b[130][1]++;}cov_2hsadq1dzp().s[499]++;if(this.synced){cov_2hsadq1dzp().b[131][0]++;cov_2hsadq1dzp().s[500]++;return true;}else{cov_2hsadq1dzp().b[131][1]++;}cov_2hsadq1dzp().s[501]++;if((cov_2hsadq1dzp().b[133][0]++,this.height===1)||(cov_2hsadq1dzp().b[133][1]++,this.height%20===0)){cov_2hsadq1dzp().b[132][0]++;cov_2hsadq1dzp().s[502]++;return true;}else{cov_2hsadq1dzp().b[132][1]++;}cov_2hsadq1dzp().s[503]++;if(this.height>=this.network.block.slowHeight){cov_2hsadq1dzp().b[134][0]++;cov_2hsadq1dzp().s[504]++;return true;}else{cov_2hsadq1dzp().b[134][1]++;}cov_2hsadq1dzp().s[505]++;return false;}/**
   * Calculate the time difference from
   * start time and log block.
   * @private
   * @param {Array} start
   * @param {Block} block
   * @param {ChainEntry} entry
   */logStatus(start,block,entry){cov_2hsadq1dzp().f[41]++;cov_2hsadq1dzp().s[506]++;if(!this.isSlow()){cov_2hsadq1dzp().b[135][0]++;cov_2hsadq1dzp().s[507]++;return;}else{cov_2hsadq1dzp().b[135][1]++;}// Report memory for debugging.
cov_2hsadq1dzp().s[508]++;this.logger.memory();const elapsed=(cov_2hsadq1dzp().s[509]++,util.bench(start));cov_2hsadq1dzp().s[510]++;this.logger.info('Block %h (%d) added to chain (size=%d txs=%d time=%d).',entry.hash,entry.height,block.getSize(),block.txs.length,elapsed);}/**
   * Verify a block hash and height against the checkpoints.
   * @private
   * @param {ChainEntry} prev
   * @param {Hash} hash
   * @returns {Boolean}
   */verifyCheckpoint(prev,hash){cov_2hsadq1dzp().f[42]++;cov_2hsadq1dzp().s[511]++;if(!this.options.checkpoints){cov_2hsadq1dzp().b[136][0]++;cov_2hsadq1dzp().s[512]++;return true;}else{cov_2hsadq1dzp().b[136][1]++;}const height=(cov_2hsadq1dzp().s[513]++,prev.height+1);const checkpoint=(cov_2hsadq1dzp().s[514]++,this.network.checkpointMap[height]);cov_2hsadq1dzp().s[515]++;if(!checkpoint){cov_2hsadq1dzp().b[137][0]++;cov_2hsadq1dzp().s[516]++;return true;}else{cov_2hsadq1dzp().b[137][1]++;}cov_2hsadq1dzp().s[517]++;if(hash.equals(checkpoint)){cov_2hsadq1dzp().b[138][0]++;cov_2hsadq1dzp().s[518]++;this.logger.debug('Hit checkpoint block %h (%d).',hash,height);cov_2hsadq1dzp().s[519]++;this.emit('checkpoint',hash,height);cov_2hsadq1dzp().s[520]++;return true;}else{cov_2hsadq1dzp().b[138][1]++;}// Someone is either mining on top of
// an old block for no reason, or the
// consensus protocol is broken and
// there was a 20k+ block reorg.
cov_2hsadq1dzp().s[521]++;this.logger.warning('Checkpoint mismatch at height %d: expected=%h received=%h',height,checkpoint,hash);cov_2hsadq1dzp().s[522]++;this.purgeOrphans();cov_2hsadq1dzp().s[523]++;return false;}/**
   * Store an orphan.
   * @private
   * @param {Block} block
   * @param {Number?} flags
   * @param {Number?} id
   */storeOrphan(block,flags,id){cov_2hsadq1dzp().f[43]++;const height=(cov_2hsadq1dzp().s[524]++,block.getCoinbaseHeight());const orphan=(cov_2hsadq1dzp().s[525]++,this.orphanPrev.get(block.prevBlock));// The orphan chain forked.
cov_2hsadq1dzp().s[526]++;if(orphan){cov_2hsadq1dzp().b[139][0]++;cov_2hsadq1dzp().s[527]++;assert(!orphan.block.hash().equals(block.hash()));cov_2hsadq1dzp().s[528]++;assert(orphan.block.prevBlock.equals(block.prevBlock));cov_2hsadq1dzp().s[529]++;this.logger.warning('Removing forked orphan block: %h (%d).',orphan.block.hash(),height);cov_2hsadq1dzp().s[530]++;this.removeOrphan(orphan);}else{cov_2hsadq1dzp().b[139][1]++;}cov_2hsadq1dzp().s[531]++;this.limitOrphans();cov_2hsadq1dzp().s[532]++;this.addOrphan(new Orphan(block,flags,id));cov_2hsadq1dzp().s[533]++;this.logger.debug('Storing orphan block: %h (%d).',block.hash(),height);cov_2hsadq1dzp().s[534]++;this.emit('orphan',block);}/**
   * Add an orphan.
   * @private
   * @param {Orphan} orphan
   * @returns {Orphan}
   */addOrphan(orphan){cov_2hsadq1dzp().f[44]++;const block=(cov_2hsadq1dzp().s[535]++,orphan.block);const hash=(cov_2hsadq1dzp().s[536]++,block.hash());cov_2hsadq1dzp().s[537]++;assert(!this.orphanMap.has(hash));cov_2hsadq1dzp().s[538]++;assert(!this.orphanPrev.has(block.prevBlock));cov_2hsadq1dzp().s[539]++;assert(this.orphanMap.size>=0);cov_2hsadq1dzp().s[540]++;this.orphanMap.set(hash,orphan);cov_2hsadq1dzp().s[541]++;this.orphanPrev.set(block.prevBlock,orphan);cov_2hsadq1dzp().s[542]++;return orphan;}/**
   * Remove an orphan.
   * @private
   * @param {Orphan} orphan
   * @returns {Orphan}
   */removeOrphan(orphan){cov_2hsadq1dzp().f[45]++;const block=(cov_2hsadq1dzp().s[543]++,orphan.block);const hash=(cov_2hsadq1dzp().s[544]++,block.hash());cov_2hsadq1dzp().s[545]++;assert(this.orphanMap.has(hash));cov_2hsadq1dzp().s[546]++;assert(this.orphanPrev.has(block.prevBlock));cov_2hsadq1dzp().s[547]++;assert(this.orphanMap.size>0);cov_2hsadq1dzp().s[548]++;this.orphanMap.delete(hash);cov_2hsadq1dzp().s[549]++;this.orphanPrev.delete(block.prevBlock);cov_2hsadq1dzp().s[550]++;return orphan;}/**
   * Test whether a hash would resolve the next orphan.
   * @private
   * @param {Hash} hash - Previous block hash.
   * @returns {Boolean}
   */hasNextOrphan(hash){cov_2hsadq1dzp().f[46]++;cov_2hsadq1dzp().s[551]++;return this.orphanPrev.has(hash);}/**
   * Resolve an orphan.
   * @private
   * @param {Hash} hash - Previous block hash.
   * @returns {Orphan}
   */resolveOrphan(hash){cov_2hsadq1dzp().f[47]++;const orphan=(cov_2hsadq1dzp().s[552]++,this.orphanPrev.get(hash));cov_2hsadq1dzp().s[553]++;if(!orphan){cov_2hsadq1dzp().b[140][0]++;cov_2hsadq1dzp().s[554]++;return null;}else{cov_2hsadq1dzp().b[140][1]++;}cov_2hsadq1dzp().s[555]++;return this.removeOrphan(orphan);}/**
   * Purge any waiting orphans.
   */purgeOrphans(){cov_2hsadq1dzp().f[48]++;const count=(cov_2hsadq1dzp().s[556]++,this.orphanMap.size);cov_2hsadq1dzp().s[557]++;if(count===0){cov_2hsadq1dzp().b[141][0]++;cov_2hsadq1dzp().s[558]++;return;}else{cov_2hsadq1dzp().b[141][1]++;}cov_2hsadq1dzp().s[559]++;this.orphanMap.clear();cov_2hsadq1dzp().s[560]++;this.orphanPrev.clear();cov_2hsadq1dzp().s[561]++;this.logger.debug('Purged %d orphans.',count);}/**
   * Prune orphans, only keep the orphan with the highest
   * coinbase height (likely to be the peer's tip).
   */limitOrphans(){cov_2hsadq1dzp().f[49]++;const now=(cov_2hsadq1dzp().s[562]++,util.now());let oldest=(cov_2hsadq1dzp().s[563]++,null);cov_2hsadq1dzp().s[564]++;for(const orphan of this.orphanMap.values()){cov_2hsadq1dzp().s[565]++;if(now<orphan.time+60*60){cov_2hsadq1dzp().b[142][0]++;cov_2hsadq1dzp().s[566]++;if((cov_2hsadq1dzp().b[144][0]++,!oldest)||(cov_2hsadq1dzp().b[144][1]++,orphan.time<oldest.time)){cov_2hsadq1dzp().b[143][0]++;cov_2hsadq1dzp().s[567]++;oldest=orphan;}else{cov_2hsadq1dzp().b[143][1]++;}cov_2hsadq1dzp().s[568]++;continue;}else{cov_2hsadq1dzp().b[142][1]++;}cov_2hsadq1dzp().s[569]++;this.removeOrphan(orphan);}cov_2hsadq1dzp().s[570]++;if(this.orphanMap.size<this.options.maxOrphans){cov_2hsadq1dzp().b[145][0]++;cov_2hsadq1dzp().s[571]++;return;}else{cov_2hsadq1dzp().b[145][1]++;}cov_2hsadq1dzp().s[572]++;if(!oldest){cov_2hsadq1dzp().b[146][0]++;cov_2hsadq1dzp().s[573]++;return;}else{cov_2hsadq1dzp().b[146][1]++;}cov_2hsadq1dzp().s[574]++;this.removeOrphan(oldest);}/**
   * Test whether an invalid block hash has been seen.
   * @private
   * @param {Block} block
   * @returns {Boolean}
   */hasInvalid(block){cov_2hsadq1dzp().f[50]++;const hash=(cov_2hsadq1dzp().s[575]++,block.hash());cov_2hsadq1dzp().s[576]++;if(this.invalid.has(hash)){cov_2hsadq1dzp().b[147][0]++;cov_2hsadq1dzp().s[577]++;return true;}else{cov_2hsadq1dzp().b[147][1]++;}cov_2hsadq1dzp().s[578]++;if(this.invalid.has(block.prevBlock)){cov_2hsadq1dzp().b[148][0]++;cov_2hsadq1dzp().s[579]++;this.setInvalid(hash);cov_2hsadq1dzp().s[580]++;return true;}else{cov_2hsadq1dzp().b[148][1]++;}cov_2hsadq1dzp().s[581]++;return false;}/**
   * Mark a block as invalid.
   * @private
   * @param {Hash} hash
   */setInvalid(hash){cov_2hsadq1dzp().f[51]++;cov_2hsadq1dzp().s[582]++;this.invalid.set(hash,true);}/**
   * Forget an invalid block hash.
   * @private
   * @param {Hash} hash
   */removeInvalid(hash){cov_2hsadq1dzp().f[52]++;cov_2hsadq1dzp().s[583]++;this.invalid.remove(hash);}/**
   * Test the chain to see if it contains
   * a block, or has recently seen a block.
   * @param {Hash} hash
   * @returns {Promise} - Returns Boolean.
   */async has(hash){cov_2hsadq1dzp().f[53]++;cov_2hsadq1dzp().s[584]++;if(this.hasOrphan(hash)){cov_2hsadq1dzp().b[149][0]++;cov_2hsadq1dzp().s[585]++;return true;}else{cov_2hsadq1dzp().b[149][1]++;}cov_2hsadq1dzp().s[586]++;if(this.locker.has(hash)){cov_2hsadq1dzp().b[150][0]++;cov_2hsadq1dzp().s[587]++;return true;}else{cov_2hsadq1dzp().b[150][1]++;}cov_2hsadq1dzp().s[588]++;if(this.invalid.has(hash)){cov_2hsadq1dzp().b[151][0]++;cov_2hsadq1dzp().s[589]++;return true;}else{cov_2hsadq1dzp().b[151][1]++;}cov_2hsadq1dzp().s[590]++;return this.hasEntry(hash);}/**
   * Find the corresponding block entry by hash or height.
   * @param {Hash|Number} hash/height
   * @returns {Promise} - Returns {@link ChainEntry}.
   */getEntry(hash){cov_2hsadq1dzp().f[54]++;cov_2hsadq1dzp().s[591]++;return this.db.getEntry(hash);}/**
   * Retrieve a chain entry by height.
   * @param {Number} height
   * @returns {Promise} - Returns {@link ChainEntry}.
   */getEntryByHeight(height){cov_2hsadq1dzp().f[55]++;cov_2hsadq1dzp().s[592]++;return this.db.getEntryByHeight(height);}/**
   * Retrieve a chain entry by hash.
   * @param {Hash} hash
   * @returns {Promise} - Returns {@link ChainEntry}.
   */getEntryByHash(hash){cov_2hsadq1dzp().f[56]++;cov_2hsadq1dzp().s[593]++;return this.db.getEntryByHash(hash);}/**
   * Get the hash of a block by height. Note that this
   * will only return hashes in the main chain.
   * @param {Number} height
   * @returns {Promise} - Returns {@link Hash}.
   */getHash(height){cov_2hsadq1dzp().f[57]++;cov_2hsadq1dzp().s[594]++;return this.db.getHash(height);}/**
   * Get the height of a block by hash.
   * @param {Hash} hash
   * @returns {Promise} - Returns Number.
   */getHeight(hash){cov_2hsadq1dzp().f[58]++;cov_2hsadq1dzp().s[595]++;return this.db.getHeight(hash);}/**
   * Test the chain to see if it contains a block.
   * @param {Hash} hash
   * @returns {Promise} - Returns Boolean.
   */hasEntry(hash){cov_2hsadq1dzp().f[59]++;cov_2hsadq1dzp().s[596]++;return this.db.hasEntry(hash);}/**
   * Get the _next_ block hash (does not work by height).
   * @param {Hash} hash
   * @returns {Promise} - Returns {@link Hash}.
   */getNextHash(hash){cov_2hsadq1dzp().f[60]++;cov_2hsadq1dzp().s[597]++;return this.db.getNextHash(hash);}/**
   * Check whether coins are still unspent. Necessary for bip30.
   * @see https://bitcointalk.org/index.php?topic=67738.0
   * @param {TX} tx
   * @returns {Promise} - Returns Boolean.
   */hasCoins(tx){cov_2hsadq1dzp().f[61]++;cov_2hsadq1dzp().s[598]++;return this.db.hasCoins(tx);}/**
   * Get all tip hashes.
   * @returns {Promise} - Returns {@link Hash}[].
   */getTips(){cov_2hsadq1dzp().f[62]++;cov_2hsadq1dzp().s[599]++;return this.db.getTips();}/**
   * Get range of hashes.
   * @param {Number} [start=-1]
   * @param {Number} [end=-1]
   * @returns {Promise}
   */getHashes(start=(cov_2hsadq1dzp().b[152][0]++,-1),end=(cov_2hsadq1dzp().b[153][0]++,-1)){cov_2hsadq1dzp().f[63]++;cov_2hsadq1dzp().s[600]++;return this.db.getHashes(start,end);}/**
   * Get a coin (unspents only).
   * @private
   * @param {Outpoint} prevout
   * @returns {Promise} - Returns {@link CoinEntry}.
   */readCoin(prevout){cov_2hsadq1dzp().f[64]++;cov_2hsadq1dzp().s[601]++;return this.db.readCoin(prevout);}/**
   * Get a coin (unspents only).
   * @param {Hash} hash
   * @param {Number} index
   * @returns {Promise} - Returns {@link Coin}.
   */getCoin(hash,index){cov_2hsadq1dzp().f[65]++;cov_2hsadq1dzp().s[602]++;return this.db.getCoin(hash,index);}/**
   * Retrieve a block from the database (not filled with coins).
   * @param {Hash} hash
   * @returns {Promise} - Returns {@link Block}.
   */getBlock(hash){cov_2hsadq1dzp().f[66]++;cov_2hsadq1dzp().s[603]++;return this.db.getBlock(hash);}/**
   * Retrieve a block from the database (not filled with coins).
   * @param {Hash} hash
   * @returns {Promise} - Returns {@link Block}.
   */getRawBlock(block){cov_2hsadq1dzp().f[67]++;cov_2hsadq1dzp().s[604]++;return this.db.getRawBlock(block);}/**
   * Get a historical block coin viewpoint.
   * @param {Block} hash
   * @returns {Promise} - Returns {@link CoinView}.
   */getBlockView(block){cov_2hsadq1dzp().f[68]++;cov_2hsadq1dzp().s[605]++;return this.db.getBlockView(block);}/**
   * Get an orphan block.
   * @param {Hash} hash
   * @returns {Block}
   */getOrphan(hash){cov_2hsadq1dzp().f[69]++;cov_2hsadq1dzp().s[606]++;return(cov_2hsadq1dzp().b[154][0]++,this.orphanMap.get(hash))||(cov_2hsadq1dzp().b[154][1]++,null);}/**
   * Test the chain to see if it contains an orphan.
   * @param {Hash} hash
   * @returns {Promise} - Returns Boolean.
   */hasOrphan(hash){cov_2hsadq1dzp().f[70]++;cov_2hsadq1dzp().s[607]++;return this.orphanMap.has(hash);}/**
   * Test the chain to see if it contains a pending block in its queue.
   * @param {Hash} hash
   * @returns {Promise} - Returns Boolean.
   */hasPending(hash){cov_2hsadq1dzp().f[71]++;cov_2hsadq1dzp().s[608]++;return this.locker.pending(hash);}/**
   * Get coin viewpoint.
   * @param {TX} tx
   * @returns {Promise} - Returns {@link CoinView}.
   */getCoinView(tx){cov_2hsadq1dzp().f[72]++;cov_2hsadq1dzp().s[609]++;return this.db.getCoinView(tx);}/**
   * Test the chain to see if it is synced.
   * @returns {Boolean}
   */isFull(){cov_2hsadq1dzp().f[73]++;cov_2hsadq1dzp().s[610]++;return this.synced;}/**
   * Potentially emit a `full` event.
   * @private
   */maybeSync(){cov_2hsadq1dzp().f[74]++;cov_2hsadq1dzp().s[611]++;if(this.synced){cov_2hsadq1dzp().b[155][0]++;cov_2hsadq1dzp().s[612]++;return;}else{cov_2hsadq1dzp().b[155][1]++;}cov_2hsadq1dzp().s[613]++;if(this.options.checkpoints){cov_2hsadq1dzp().b[156][0]++;cov_2hsadq1dzp().s[614]++;if(this.height<this.network.lastCheckpoint){cov_2hsadq1dzp().b[157][0]++;cov_2hsadq1dzp().s[615]++;return;}else{cov_2hsadq1dzp().b[157][1]++;}}else{cov_2hsadq1dzp().b[156][1]++;}cov_2hsadq1dzp().s[616]++;if(this.tip.time<util.now()-this.network.block.maxTipAge){cov_2hsadq1dzp().b[158][0]++;cov_2hsadq1dzp().s[617]++;return;}else{cov_2hsadq1dzp().b[158][1]++;}cov_2hsadq1dzp().s[618]++;if(!this.hasChainwork()){cov_2hsadq1dzp().b[159][0]++;cov_2hsadq1dzp().s[619]++;return;}else{cov_2hsadq1dzp().b[159][1]++;}cov_2hsadq1dzp().s[620]++;this.synced=true;cov_2hsadq1dzp().s[621]++;this.emit('full');}/**
   * Test the chain to see if it has the
   * minimum required chainwork for the
   * network.
   * @returns {Boolean}
   */hasChainwork(){cov_2hsadq1dzp().f[75]++;cov_2hsadq1dzp().s[622]++;return this.tip.chainwork.gte(this.network.pow.chainwork);}/**
   * Get the fill percentage.
   * @returns {Number} percent - Ranges from 0.0 to 1.0.
   */getProgress(){cov_2hsadq1dzp().f[76]++;const start=(cov_2hsadq1dzp().s[623]++,this.network.genesis.time);const current=(cov_2hsadq1dzp().s[624]++,this.tip.time-start);const end=(cov_2hsadq1dzp().s[625]++,util.now()-start-40*60);cov_2hsadq1dzp().s[626]++;return Math.min(1,current/end);}/**
   * Calculate chain locator (an array of hashes).
   * @param {Hash?} start - Height or hash to treat as the tip.
   * The current tip will be used if not present. Note that this can be a
   * non-existent hash, which is useful for headers-first locators.
   * @returns {Promise} - Returns {@link Hash}[].
   */async getLocator(start){cov_2hsadq1dzp().f[77]++;const unlock=(cov_2hsadq1dzp().s[627]++,await this.locker.lock());cov_2hsadq1dzp().s[628]++;try{cov_2hsadq1dzp().s[629]++;return await this._getLocator(start);}finally{cov_2hsadq1dzp().s[630]++;unlock();}}/**
   * Calculate chain locator without a lock.
   * @private
   * @param {Hash?} start
   * @returns {Promise}
   */async _getLocator(start){cov_2hsadq1dzp().f[78]++;cov_2hsadq1dzp().s[631]++;if(start==null){cov_2hsadq1dzp().b[160][0]++;cov_2hsadq1dzp().s[632]++;start=this.tip.hash;}else{cov_2hsadq1dzp().b[160][1]++;}cov_2hsadq1dzp().s[633]++;assert(Buffer.isBuffer(start));let entry=(cov_2hsadq1dzp().s[634]++,await this.getEntry(start));const hashes=(cov_2hsadq1dzp().s[635]++,[]);cov_2hsadq1dzp().s[636]++;if(!entry){cov_2hsadq1dzp().b[161][0]++;cov_2hsadq1dzp().s[637]++;entry=this.tip;cov_2hsadq1dzp().s[638]++;hashes.push(start);}else{cov_2hsadq1dzp().b[161][1]++;}let main=(cov_2hsadq1dzp().s[639]++,await this.isMainChain(entry));let hash=(cov_2hsadq1dzp().s[640]++,entry.hash);let height=(cov_2hsadq1dzp().s[641]++,entry.height);let step=(cov_2hsadq1dzp().s[642]++,1);cov_2hsadq1dzp().s[643]++;hashes.push(hash);cov_2hsadq1dzp().s[644]++;while(height>0){cov_2hsadq1dzp().s[645]++;height-=step;cov_2hsadq1dzp().s[646]++;if(height<0){cov_2hsadq1dzp().b[162][0]++;cov_2hsadq1dzp().s[647]++;height=0;}else{cov_2hsadq1dzp().b[162][1]++;}cov_2hsadq1dzp().s[648]++;if(hashes.length>10){cov_2hsadq1dzp().b[163][0]++;cov_2hsadq1dzp().s[649]++;step*=2;}else{cov_2hsadq1dzp().b[163][1]++;}cov_2hsadq1dzp().s[650]++;if(main){cov_2hsadq1dzp().b[164][0]++;cov_2hsadq1dzp().s[651]++;// If we're on the main chain, we can
// do a fast lookup of the hash.
hash=await this.getHash(height);cov_2hsadq1dzp().s[652]++;assert(hash);}else{cov_2hsadq1dzp().b[164][1]++;const ancestor=(cov_2hsadq1dzp().s[653]++,await this.getAncestor(entry,height));cov_2hsadq1dzp().s[654]++;assert(ancestor);cov_2hsadq1dzp().s[655]++;main=await this.isMainChain(ancestor);cov_2hsadq1dzp().s[656]++;hash=ancestor.hash;}cov_2hsadq1dzp().s[657]++;hashes.push(hash);}cov_2hsadq1dzp().s[658]++;return hashes;}/**
   * Calculate the orphan root of the hash (if it is an orphan).
   * @param {Hash} hash
   * @returns {Hash}
   */getOrphanRoot(hash){cov_2hsadq1dzp().f[79]++;let root=(cov_2hsadq1dzp().s[659]++,null);cov_2hsadq1dzp().s[660]++;assert(hash);cov_2hsadq1dzp().s[661]++;for(;;){const orphan=(cov_2hsadq1dzp().s[662]++,this.orphanMap.get(hash));cov_2hsadq1dzp().s[663]++;if(!orphan){cov_2hsadq1dzp().b[165][0]++;cov_2hsadq1dzp().s[664]++;break;}else{cov_2hsadq1dzp().b[165][1]++;}cov_2hsadq1dzp().s[665]++;root=hash;cov_2hsadq1dzp().s[666]++;hash=orphan.block.prevBlock;}cov_2hsadq1dzp().s[667]++;return root;}/**
   * Calculate the time difference (in seconds)
   * between two blocks by examining chainworks.
   * @param {ChainEntry} to
   * @param {ChainEntry} from
   * @returns {Number}
   */getProofTime(to,from){cov_2hsadq1dzp().f[80]++;const pow=(cov_2hsadq1dzp().s[668]++,this.network.pow);let sign,work;cov_2hsadq1dzp().s[669]++;if(to.chainwork.gt(from.chainwork)){cov_2hsadq1dzp().b[166][0]++;cov_2hsadq1dzp().s[670]++;work=to.chainwork.sub(from.chainwork);cov_2hsadq1dzp().s[671]++;sign=1;}else{cov_2hsadq1dzp().b[166][1]++;cov_2hsadq1dzp().s[672]++;work=from.chainwork.sub(to.chainwork);cov_2hsadq1dzp().s[673]++;sign=-1;}cov_2hsadq1dzp().s[674]++;work=work.imuln(pow.targetSpacing);cov_2hsadq1dzp().s[675]++;work=work.div(this.tip.getProof());cov_2hsadq1dzp().s[676]++;if(work.bitLength()>53){cov_2hsadq1dzp().b[167][0]++;cov_2hsadq1dzp().s[677]++;return sign*Number.MAX_SAFE_INTEGER;}else{cov_2hsadq1dzp().b[167][1]++;}cov_2hsadq1dzp().s[678]++;return sign*work.toNumber();}/**
   * Calculate the next target based on the chain tip.
   * @returns {Promise} - returns Number
   * (target is in compact/mantissa form).
   */async getCurrentTarget(){cov_2hsadq1dzp().f[81]++;cov_2hsadq1dzp().s[679]++;return this.getTarget(this.network.now(),this.tip);}/**
   * Calculate the next target.
   * @param {Number} time - Next block timestamp.
   * @param {ChainEntry} prev - Previous entry.
   * @returns {Promise} - returns Number
   * (target is in compact/mantissa form).
   */async getTarget(time,prev){cov_2hsadq1dzp().f[82]++;const pow=(cov_2hsadq1dzp().s[680]++,this.network.pow);// Genesis
cov_2hsadq1dzp().s[681]++;if(!prev){cov_2hsadq1dzp().b[168][0]++;cov_2hsadq1dzp().s[682]++;assert(time===this.network.genesis.time);cov_2hsadq1dzp().s[683]++;return pow.bits;}else{cov_2hsadq1dzp().b[168][1]++;}// Do not retarget
cov_2hsadq1dzp().s[684]++;if((prev.height+1)%pow.retargetInterval!==0){cov_2hsadq1dzp().b[169][0]++;cov_2hsadq1dzp().s[685]++;if(pow.targetReset){cov_2hsadq1dzp().b[170][0]++;cov_2hsadq1dzp().s[686]++;// Special behavior for testnet:
if(time>prev.time+pow.targetSpacing*2){cov_2hsadq1dzp().b[171][0]++;cov_2hsadq1dzp().s[687]++;return pow.bits;}else{cov_2hsadq1dzp().b[171][1]++;}cov_2hsadq1dzp().s[688]++;while((cov_2hsadq1dzp().b[172][0]++,prev.height!==0)&&(cov_2hsadq1dzp().b[172][1]++,prev.height%pow.retargetInterval!==0)&&(cov_2hsadq1dzp().b[172][2]++,prev.bits===pow.bits)){const cache=(cov_2hsadq1dzp().s[689]++,this.getPrevCache(prev));cov_2hsadq1dzp().s[690]++;if(cache){cov_2hsadq1dzp().b[173][0]++;cov_2hsadq1dzp().s[691]++;prev=cache;}else{cov_2hsadq1dzp().b[173][1]++;cov_2hsadq1dzp().s[692]++;prev=await this.getPrevious(prev);}cov_2hsadq1dzp().s[693]++;assert(prev);}}else{cov_2hsadq1dzp().b[170][1]++;}cov_2hsadq1dzp().s[694]++;return prev.bits;}else{cov_2hsadq1dzp().b[169][1]++;}// Back 2 weeks
const height=(cov_2hsadq1dzp().s[695]++,prev.height-(pow.retargetInterval-1));cov_2hsadq1dzp().s[696]++;assert(height>=0);const first=(cov_2hsadq1dzp().s[697]++,await this.getAncestor(prev,height));cov_2hsadq1dzp().s[698]++;assert(first);cov_2hsadq1dzp().s[699]++;return this.retarget(prev,first);}/**
   * Retarget. This is called when the chain height
   * hits a retarget diff interval.
   * @param {ChainEntry} prev - Previous entry.
   * @param {ChainEntry} first - Chain entry from 2 weeks prior.
   * @returns {Number} target - Target in compact/mantissa form.
   */retarget(prev,first){cov_2hsadq1dzp().f[83]++;const pow=(cov_2hsadq1dzp().s[700]++,this.network.pow);const targetTimespan=(cov_2hsadq1dzp().s[701]++,pow.targetTimespan);cov_2hsadq1dzp().s[702]++;if(pow.noRetargeting){cov_2hsadq1dzp().b[174][0]++;cov_2hsadq1dzp().s[703]++;return prev.bits;}else{cov_2hsadq1dzp().b[174][1]++;}const target=(cov_2hsadq1dzp().s[704]++,consensus.fromCompact(prev.bits));let actualTimespan=(cov_2hsadq1dzp().s[705]++,prev.time-first.time);cov_2hsadq1dzp().s[706]++;if(actualTimespan<targetTimespan/4|0){cov_2hsadq1dzp().b[175][0]++;cov_2hsadq1dzp().s[707]++;actualTimespan=targetTimespan/4|0;}else{cov_2hsadq1dzp().b[175][1]++;}cov_2hsadq1dzp().s[708]++;if(actualTimespan>targetTimespan*4){cov_2hsadq1dzp().b[176][0]++;cov_2hsadq1dzp().s[709]++;actualTimespan=targetTimespan*4;}else{cov_2hsadq1dzp().b[176][1]++;}cov_2hsadq1dzp().s[710]++;target.imuln(actualTimespan);cov_2hsadq1dzp().s[711]++;target.idivn(targetTimespan);cov_2hsadq1dzp().s[712]++;if(target.gt(pow.limit)){cov_2hsadq1dzp().b[177][0]++;cov_2hsadq1dzp().s[713]++;return pow.bits;}else{cov_2hsadq1dzp().b[177][1]++;}cov_2hsadq1dzp().s[714]++;return consensus.toCompact(target);}/**
   * Find a locator. Analagous to bitcoind's `FindForkInGlobalIndex()`.
   * @param {Hash[]} locator - Hashes.
   * @returns {Promise} - Returns {@link Hash} (the
   * hash of the latest known block).
   */async findLocator(locator){cov_2hsadq1dzp().f[84]++;cov_2hsadq1dzp().s[715]++;for(const hash of locator){cov_2hsadq1dzp().s[716]++;if(await this.isMainHash(hash)){cov_2hsadq1dzp().b[178][0]++;cov_2hsadq1dzp().s[717]++;return hash;}else{cov_2hsadq1dzp().b[178][1]++;}}cov_2hsadq1dzp().s[718]++;return this.network.genesis.hash;}/**
   * Check whether a versionbits deployment is active (BIP9: versionbits).
   * @example
   * await chain.isActive(tip, deployments.segwit);
   * @see https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki
   * @param {ChainEntry} prev - Previous chain entry.
   * @param {String} id - Deployment id.
   * @returns {Promise} - Returns Number.
   */async isActive(prev,deployment){cov_2hsadq1dzp().f[85]++;const state=(cov_2hsadq1dzp().s[719]++,await this.getState(prev,deployment));cov_2hsadq1dzp().s[720]++;return state===thresholdStates.ACTIVE;}/**
   * Get chain entry state for a deployment (BIP9: versionbits).
   * @example
   * await chain.getState(tip, deployments.segwit);
   * @see https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki
   * @param {ChainEntry} prev - Previous chain entry.
   * @param {String} id - Deployment id.
   * @returns {Promise} - Returns Number.
   */async getState(prev,deployment){cov_2hsadq1dzp().f[86]++;const bit=(cov_2hsadq1dzp().s[721]++,deployment.bit);cov_2hsadq1dzp().s[722]++;if(deployment.startTime===-1){cov_2hsadq1dzp().b[179][0]++;cov_2hsadq1dzp().s[723]++;return thresholdStates.ACTIVE;}else{cov_2hsadq1dzp().b[179][1]++;}let window=(cov_2hsadq1dzp().s[724]++,this.network.minerWindow);let threshold=(cov_2hsadq1dzp().s[725]++,this.network.activationThreshold);cov_2hsadq1dzp().s[726]++;if(deployment.threshold!==-1){cov_2hsadq1dzp().b[180][0]++;cov_2hsadq1dzp().s[727]++;threshold=deployment.threshold;}else{cov_2hsadq1dzp().b[180][1]++;}cov_2hsadq1dzp().s[728]++;if(deployment.window!==-1){cov_2hsadq1dzp().b[181][0]++;cov_2hsadq1dzp().s[729]++;window=deployment.window;}else{cov_2hsadq1dzp().b[181][1]++;}cov_2hsadq1dzp().s[730]++;if((prev.height+1)%window!==0){cov_2hsadq1dzp().b[182][0]++;const height=(cov_2hsadq1dzp().s[731]++,prev.height-(prev.height+1)%window);cov_2hsadq1dzp().s[732]++;prev=await this.getAncestor(prev,height);cov_2hsadq1dzp().s[733]++;if(!prev){cov_2hsadq1dzp().b[183][0]++;cov_2hsadq1dzp().s[734]++;return thresholdStates.DEFINED;}else{cov_2hsadq1dzp().b[183][1]++;}cov_2hsadq1dzp().s[735]++;assert(prev.height===height);cov_2hsadq1dzp().s[736]++;assert((prev.height+1)%window===0);}else{cov_2hsadq1dzp().b[182][1]++;}let entry=(cov_2hsadq1dzp().s[737]++,prev);let state=(cov_2hsadq1dzp().s[738]++,thresholdStates.DEFINED);const compute=(cov_2hsadq1dzp().s[739]++,[]);cov_2hsadq1dzp().s[740]++;while(entry){const cached=(cov_2hsadq1dzp().s[741]++,this.db.stateCache.get(bit,entry));cov_2hsadq1dzp().s[742]++;if(cached!==-1){cov_2hsadq1dzp().b[184][0]++;cov_2hsadq1dzp().s[743]++;state=cached;cov_2hsadq1dzp().s[744]++;break;}else{cov_2hsadq1dzp().b[184][1]++;}const time=(cov_2hsadq1dzp().s[745]++,await this.getMedianTime(entry));cov_2hsadq1dzp().s[746]++;if(time<deployment.startTime){cov_2hsadq1dzp().b[185][0]++;cov_2hsadq1dzp().s[747]++;state=thresholdStates.DEFINED;cov_2hsadq1dzp().s[748]++;this.db.stateCache.set(bit,entry,state);cov_2hsadq1dzp().s[749]++;break;}else{cov_2hsadq1dzp().b[185][1]++;}cov_2hsadq1dzp().s[750]++;compute.push(entry);const height=(cov_2hsadq1dzp().s[751]++,entry.height-window);cov_2hsadq1dzp().s[752]++;entry=await this.getAncestor(entry,height);}cov_2hsadq1dzp().s[753]++;while(compute.length){const entry=(cov_2hsadq1dzp().s[754]++,compute.pop());cov_2hsadq1dzp().s[755]++;switch(state){case thresholdStates.DEFINED:cov_2hsadq1dzp().b[186][0]++;{const time=(cov_2hsadq1dzp().s[756]++,await this.getMedianTime(entry));cov_2hsadq1dzp().s[757]++;if(time>=deployment.timeout){cov_2hsadq1dzp().b[187][0]++;cov_2hsadq1dzp().s[758]++;state=thresholdStates.FAILED;cov_2hsadq1dzp().s[759]++;break;}else{cov_2hsadq1dzp().b[187][1]++;}cov_2hsadq1dzp().s[760]++;if(time>=deployment.startTime){cov_2hsadq1dzp().b[188][0]++;cov_2hsadq1dzp().s[761]++;state=thresholdStates.STARTED;cov_2hsadq1dzp().s[762]++;break;}else{cov_2hsadq1dzp().b[188][1]++;}cov_2hsadq1dzp().s[763]++;break;}case thresholdStates.STARTED:cov_2hsadq1dzp().b[186][1]++;{const time=(cov_2hsadq1dzp().s[764]++,await this.getMedianTime(entry));cov_2hsadq1dzp().s[765]++;if(time>=deployment.timeout){cov_2hsadq1dzp().b[189][0]++;cov_2hsadq1dzp().s[766]++;state=thresholdStates.FAILED;cov_2hsadq1dzp().s[767]++;break;}else{cov_2hsadq1dzp().b[189][1]++;}let block=(cov_2hsadq1dzp().s[768]++,entry);let count=(cov_2hsadq1dzp().s[769]++,0);cov_2hsadq1dzp().s[770]++;for(let i=(cov_2hsadq1dzp().s[771]++,0);i<window;i++){cov_2hsadq1dzp().s[772]++;if(block.hasBit(bit)){cov_2hsadq1dzp().b[190][0]++;cov_2hsadq1dzp().s[773]++;count++;}else{cov_2hsadq1dzp().b[190][1]++;}cov_2hsadq1dzp().s[774]++;if(count>=threshold){cov_2hsadq1dzp().b[191][0]++;cov_2hsadq1dzp().s[775]++;state=thresholdStates.LOCKED_IN;cov_2hsadq1dzp().s[776]++;break;}else{cov_2hsadq1dzp().b[191][1]++;}cov_2hsadq1dzp().s[777]++;block=await this.getPrevious(block);cov_2hsadq1dzp().s[778]++;assert(block);}cov_2hsadq1dzp().s[779]++;break;}case thresholdStates.LOCKED_IN:cov_2hsadq1dzp().b[186][2]++;{cov_2hsadq1dzp().s[780]++;state=thresholdStates.ACTIVE;cov_2hsadq1dzp().s[781]++;break;}case thresholdStates.FAILED:cov_2hsadq1dzp().b[186][3]++;case thresholdStates.ACTIVE:cov_2hsadq1dzp().b[186][4]++;{cov_2hsadq1dzp().s[782]++;break;}default:cov_2hsadq1dzp().b[186][5]++;{cov_2hsadq1dzp().s[783]++;assert(false,'Bad state.');cov_2hsadq1dzp().s[784]++;break;}}cov_2hsadq1dzp().s[785]++;this.db.stateCache.set(bit,entry,state);}cov_2hsadq1dzp().s[786]++;return state;}/**
   * Compute the version for a new block (BIP9: versionbits).
   * @see https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki
   * @param {ChainEntry} prev - Previous chain entry (usually the tip).
   * @returns {Promise} - Returns Number.
   */async computeBlockVersion(prev){cov_2hsadq1dzp().f[87]++;let version=(cov_2hsadq1dzp().s[787]++,0);cov_2hsadq1dzp().s[788]++;for(const deployment of this.network.deploys){const state=(cov_2hsadq1dzp().s[789]++,await this.getState(prev,deployment));cov_2hsadq1dzp().s[790]++;if((cov_2hsadq1dzp().b[193][0]++,state===thresholdStates.LOCKED_IN)||(cov_2hsadq1dzp().b[193][1]++,state===thresholdStates.STARTED)){cov_2hsadq1dzp().b[192][0]++;cov_2hsadq1dzp().s[791]++;version|=1<<deployment.bit;}else{cov_2hsadq1dzp().b[192][1]++;}}cov_2hsadq1dzp().s[792]++;version|=consensus.VERSION_TOP_BITS;cov_2hsadq1dzp().s[793]++;version>>>=0;cov_2hsadq1dzp().s[794]++;return version;}/**
   * Get the current deployment state of the chain. Called on load.
   * @private
   * @returns {Promise} - Returns {@link DeploymentState}.
   */async getDeploymentState(){cov_2hsadq1dzp().f[88]++;const prev=(cov_2hsadq1dzp().s[795]++,await this.getPrevious(this.tip));cov_2hsadq1dzp().s[796]++;if(!prev){cov_2hsadq1dzp().b[194][0]++;cov_2hsadq1dzp().s[797]++;assert(this.tip.isGenesis());cov_2hsadq1dzp().s[798]++;return this.state;}else{cov_2hsadq1dzp().b[194][1]++;}cov_2hsadq1dzp().s[799]++;if(this.options.spv){cov_2hsadq1dzp().b[195][0]++;cov_2hsadq1dzp().s[800]++;return this.state;}else{cov_2hsadq1dzp().b[195][1]++;}cov_2hsadq1dzp().s[801]++;return this.getDeployments(this.tip.time,prev);}/**
   * Check transaction finality, taking into account MEDIAN_TIME_PAST
   * if it is present in the lock flags.
   * @param {ChainEntry} prev - Previous chain entry.
   * @param {TX} tx
   * @param {LockFlags} flags
   * @returns {Promise} - Returns Boolean.
   */async verifyFinal(prev,tx,flags){cov_2hsadq1dzp().f[89]++;const height=(cov_2hsadq1dzp().s[802]++,prev.height+1);// We can skip MTP if the locktime is height.
cov_2hsadq1dzp().s[803]++;if(tx.locktime<consensus.LOCKTIME_THRESHOLD){cov_2hsadq1dzp().b[196][0]++;cov_2hsadq1dzp().s[804]++;return tx.isFinal(height,-1);}else{cov_2hsadq1dzp().b[196][1]++;}cov_2hsadq1dzp().s[805]++;if(flags&common.lockFlags.MEDIAN_TIME_PAST){cov_2hsadq1dzp().b[197][0]++;const time=(cov_2hsadq1dzp().s[806]++,await this.getMedianTime(prev));cov_2hsadq1dzp().s[807]++;return tx.isFinal(height,time);}else{cov_2hsadq1dzp().b[197][1]++;}cov_2hsadq1dzp().s[808]++;return tx.isFinal(height,this.network.now());}/**
   * Get the necessary minimum time and height sequence locks for a transaction.
   * @param {ChainEntry} prev
   * @param {TX} tx
   * @param {CoinView} view
   * @param {LockFlags} flags
   * @returns {Promise}
   */async getLocks(prev,tx,view,flags){cov_2hsadq1dzp().f[90]++;const GRANULARITY=(cov_2hsadq1dzp().s[809]++,consensus.SEQUENCE_GRANULARITY);const DISABLE_FLAG=(cov_2hsadq1dzp().s[810]++,consensus.SEQUENCE_DISABLE_FLAG);const TYPE_FLAG=(cov_2hsadq1dzp().s[811]++,consensus.SEQUENCE_TYPE_FLAG);const MASK=(cov_2hsadq1dzp().s[812]++,consensus.SEQUENCE_MASK);cov_2hsadq1dzp().s[813]++;if(!(flags&common.lockFlags.VERIFY_SEQUENCE)){cov_2hsadq1dzp().b[198][0]++;cov_2hsadq1dzp().s[814]++;return[-1,-1];}else{cov_2hsadq1dzp().b[198][1]++;}cov_2hsadq1dzp().s[815]++;if((cov_2hsadq1dzp().b[200][0]++,tx.isCoinbase())||(cov_2hsadq1dzp().b[200][1]++,tx.version<2)){cov_2hsadq1dzp().b[199][0]++;cov_2hsadq1dzp().s[816]++;return[-1,-1];}else{cov_2hsadq1dzp().b[199][1]++;}let minHeight=(cov_2hsadq1dzp().s[817]++,-1);let minTime=(cov_2hsadq1dzp().s[818]++,-1);cov_2hsadq1dzp().s[819]++;for(const{prevout,sequence}of tx.inputs){cov_2hsadq1dzp().s[820]++;if(sequence&DISABLE_FLAG){cov_2hsadq1dzp().b[201][0]++;cov_2hsadq1dzp().s[821]++;continue;}else{cov_2hsadq1dzp().b[201][1]++;}let height=(cov_2hsadq1dzp().s[822]++,view.getHeight(prevout));cov_2hsadq1dzp().s[823]++;if(height===-1){cov_2hsadq1dzp().b[202][0]++;cov_2hsadq1dzp().s[824]++;height=this.height+1;}else{cov_2hsadq1dzp().b[202][1]++;}cov_2hsadq1dzp().s[825]++;if(!(sequence&TYPE_FLAG)){cov_2hsadq1dzp().b[203][0]++;cov_2hsadq1dzp().s[826]++;height+=(sequence&MASK)-1;cov_2hsadq1dzp().s[827]++;minHeight=Math.max(minHeight,height);cov_2hsadq1dzp().s[828]++;continue;}else{cov_2hsadq1dzp().b[203][1]++;}cov_2hsadq1dzp().s[829]++;height=Math.max(height-1,0);const entry=(cov_2hsadq1dzp().s[830]++,await this.getAncestor(prev,height));cov_2hsadq1dzp().s[831]++;assert(entry,'Database is corrupt.');let time=(cov_2hsadq1dzp().s[832]++,await this.getMedianTime(entry));cov_2hsadq1dzp().s[833]++;time+=((sequence&MASK)<<GRANULARITY)-1;cov_2hsadq1dzp().s[834]++;minTime=Math.max(minTime,time);}cov_2hsadq1dzp().s[835]++;return[minHeight,minTime];}/**
   * Verify sequence locks.
   * @param {ChainEntry} prev
   * @param {TX} tx
   * @param {CoinView} view
   * @param {LockFlags} flags
   * @returns {Promise} - Returns Boolean.
   */async verifyLocks(prev,tx,view,flags){cov_2hsadq1dzp().f[91]++;const[height,time]=(cov_2hsadq1dzp().s[836]++,await this.getLocks(prev,tx,view,flags));cov_2hsadq1dzp().s[837]++;if(height!==-1){cov_2hsadq1dzp().b[204][0]++;cov_2hsadq1dzp().s[838]++;if(height>=prev.height+1){cov_2hsadq1dzp().b[205][0]++;cov_2hsadq1dzp().s[839]++;return false;}else{cov_2hsadq1dzp().b[205][1]++;}}else{cov_2hsadq1dzp().b[204][1]++;}cov_2hsadq1dzp().s[840]++;if(time!==-1){cov_2hsadq1dzp().b[206][0]++;const mtp=(cov_2hsadq1dzp().s[841]++,await this.getMedianTime(prev));cov_2hsadq1dzp().s[842]++;if(time>=mtp){cov_2hsadq1dzp().b[207][0]++;cov_2hsadq1dzp().s[843]++;return false;}else{cov_2hsadq1dzp().b[207][1]++;}}else{cov_2hsadq1dzp().b[206][1]++;}cov_2hsadq1dzp().s[844]++;return true;}}/**
 * ChainOptions
 * @alias module:blockchain.ChainOptions
 */class ChainOptions{/**
   * Create chain options.
   * @constructor
   * @param {Object} options
   */constructor(options){cov_2hsadq1dzp().f[92]++;cov_2hsadq1dzp().s[845]++;this.network=Network.primary;cov_2hsadq1dzp().s[846]++;this.logger=Logger.global;cov_2hsadq1dzp().s[847]++;this.blocks=null;cov_2hsadq1dzp().s[848]++;this.workers=null;cov_2hsadq1dzp().s[849]++;this.prefix=null;cov_2hsadq1dzp().s[850]++;this.location=null;cov_2hsadq1dzp().s[851]++;this.memory=true;cov_2hsadq1dzp().s[852]++;this.maxFiles=64;cov_2hsadq1dzp().s[853]++;this.cacheSize=32<<20;cov_2hsadq1dzp().s[854]++;this.compression=true;cov_2hsadq1dzp().s[855]++;this.spv=false;cov_2hsadq1dzp().s[856]++;this.bip91=false;cov_2hsadq1dzp().s[857]++;this.bip148=false;cov_2hsadq1dzp().s[858]++;this.prune=false;cov_2hsadq1dzp().s[859]++;this.forceFlags=false;cov_2hsadq1dzp().s[860]++;this.entryCache=5000;cov_2hsadq1dzp().s[861]++;this.maxOrphans=20;cov_2hsadq1dzp().s[862]++;this.checkpoints=true;cov_2hsadq1dzp().s[863]++;if(options){cov_2hsadq1dzp().b[208][0]++;cov_2hsadq1dzp().s[864]++;this.fromOptions(options);}else{cov_2hsadq1dzp().b[208][1]++;}}/**
   * Inject properties from object.
   * @private
   * @param {Object} options
   * @returns {ChainOptions}
   */fromOptions(options){cov_2hsadq1dzp().f[93]++;cov_2hsadq1dzp().s[865]++;if(!options.spv){cov_2hsadq1dzp().b[209][0]++;cov_2hsadq1dzp().s[866]++;assert((cov_2hsadq1dzp().b[210][0]++,options.blocks)&&(cov_2hsadq1dzp().b[210][1]++,typeof options.blocks==='object'),'Chain requires a blockstore.');}else{cov_2hsadq1dzp().b[209][1]++;}cov_2hsadq1dzp().s[867]++;this.blocks=options.blocks;cov_2hsadq1dzp().s[868]++;if(options.network!=null){cov_2hsadq1dzp().b[211][0]++;cov_2hsadq1dzp().s[869]++;this.network=Network.get(options.network);}else{cov_2hsadq1dzp().b[211][1]++;}cov_2hsadq1dzp().s[870]++;if(options.logger!=null){cov_2hsadq1dzp().b[212][0]++;cov_2hsadq1dzp().s[871]++;assert(typeof options.logger==='object');cov_2hsadq1dzp().s[872]++;this.logger=options.logger;}else{cov_2hsadq1dzp().b[212][1]++;}cov_2hsadq1dzp().s[873]++;if(options.workers!=null){cov_2hsadq1dzp().b[213][0]++;cov_2hsadq1dzp().s[874]++;assert(typeof options.workers==='object');cov_2hsadq1dzp().s[875]++;this.workers=options.workers;}else{cov_2hsadq1dzp().b[213][1]++;}cov_2hsadq1dzp().s[876]++;if(options.spv!=null){cov_2hsadq1dzp().b[214][0]++;cov_2hsadq1dzp().s[877]++;assert(typeof options.spv==='boolean');cov_2hsadq1dzp().s[878]++;this.spv=options.spv;}else{cov_2hsadq1dzp().b[214][1]++;}cov_2hsadq1dzp().s[879]++;if(options.prefix!=null){cov_2hsadq1dzp().b[215][0]++;cov_2hsadq1dzp().s[880]++;assert(typeof options.prefix==='string');cov_2hsadq1dzp().s[881]++;this.prefix=options.prefix;cov_2hsadq1dzp().s[882]++;this.location=this.spv?(cov_2hsadq1dzp().b[216][0]++,path.join(this.prefix,'spvchain')):(cov_2hsadq1dzp().b[216][1]++,path.join(this.prefix,'chain'));}else{cov_2hsadq1dzp().b[215][1]++;}cov_2hsadq1dzp().s[883]++;if(options.location!=null){cov_2hsadq1dzp().b[217][0]++;cov_2hsadq1dzp().s[884]++;assert(typeof options.location==='string');cov_2hsadq1dzp().s[885]++;this.location=options.location;}else{cov_2hsadq1dzp().b[217][1]++;}cov_2hsadq1dzp().s[886]++;if(options.memory!=null){cov_2hsadq1dzp().b[218][0]++;cov_2hsadq1dzp().s[887]++;assert(typeof options.memory==='boolean');cov_2hsadq1dzp().s[888]++;this.memory=options.memory;}else{cov_2hsadq1dzp().b[218][1]++;}cov_2hsadq1dzp().s[889]++;if(options.maxFiles!=null){cov_2hsadq1dzp().b[219][0]++;cov_2hsadq1dzp().s[890]++;assert(options.maxFiles>>>0===options.maxFiles);cov_2hsadq1dzp().s[891]++;this.maxFiles=options.maxFiles;}else{cov_2hsadq1dzp().b[219][1]++;}cov_2hsadq1dzp().s[892]++;if(options.cacheSize!=null){cov_2hsadq1dzp().b[220][0]++;cov_2hsadq1dzp().s[893]++;assert(Number.isSafeInteger(options.cacheSize));cov_2hsadq1dzp().s[894]++;assert(options.cacheSize>=0);cov_2hsadq1dzp().s[895]++;this.cacheSize=options.cacheSize;}else{cov_2hsadq1dzp().b[220][1]++;}cov_2hsadq1dzp().s[896]++;if(options.compression!=null){cov_2hsadq1dzp().b[221][0]++;cov_2hsadq1dzp().s[897]++;assert(typeof options.compression==='boolean');cov_2hsadq1dzp().s[898]++;this.compression=options.compression;}else{cov_2hsadq1dzp().b[221][1]++;}cov_2hsadq1dzp().s[899]++;if(options.prune!=null){cov_2hsadq1dzp().b[222][0]++;cov_2hsadq1dzp().s[900]++;assert(typeof options.prune==='boolean');cov_2hsadq1dzp().s[901]++;this.prune=options.prune;}else{cov_2hsadq1dzp().b[222][1]++;}cov_2hsadq1dzp().s[902]++;if(options.forceFlags!=null){cov_2hsadq1dzp().b[223][0]++;cov_2hsadq1dzp().s[903]++;assert(typeof options.forceFlags==='boolean');cov_2hsadq1dzp().s[904]++;this.forceFlags=options.forceFlags;}else{cov_2hsadq1dzp().b[223][1]++;}cov_2hsadq1dzp().s[905]++;if(options.bip91!=null){cov_2hsadq1dzp().b[224][0]++;cov_2hsadq1dzp().s[906]++;assert(typeof options.bip91==='boolean');cov_2hsadq1dzp().s[907]++;this.bip91=options.bip91;}else{cov_2hsadq1dzp().b[224][1]++;}cov_2hsadq1dzp().s[908]++;if(options.bip148!=null){cov_2hsadq1dzp().b[225][0]++;cov_2hsadq1dzp().s[909]++;assert(typeof options.bip148==='boolean');cov_2hsadq1dzp().s[910]++;this.bip148=options.bip148;}else{cov_2hsadq1dzp().b[225][1]++;}cov_2hsadq1dzp().s[911]++;if(options.entryCache!=null){cov_2hsadq1dzp().b[226][0]++;cov_2hsadq1dzp().s[912]++;assert(options.entryCache>>>0===options.entryCache);cov_2hsadq1dzp().s[913]++;this.entryCache=options.entryCache;}else{cov_2hsadq1dzp().b[226][1]++;}cov_2hsadq1dzp().s[914]++;if(options.maxOrphans!=null){cov_2hsadq1dzp().b[227][0]++;cov_2hsadq1dzp().s[915]++;assert(options.maxOrphans>>>0===options.maxOrphans);cov_2hsadq1dzp().s[916]++;this.maxOrphans=options.maxOrphans;}else{cov_2hsadq1dzp().b[227][1]++;}cov_2hsadq1dzp().s[917]++;if(options.checkpoints!=null){cov_2hsadq1dzp().b[228][0]++;cov_2hsadq1dzp().s[918]++;assert(typeof options.checkpoints==='boolean');cov_2hsadq1dzp().s[919]++;this.checkpoints=options.checkpoints;}else{cov_2hsadq1dzp().b[228][1]++;}cov_2hsadq1dzp().s[920]++;return this;}/**
   * Instantiate chain options from object.
   * @param {Object} options
   * @returns {ChainOptions}
   */static fromOptions(options){cov_2hsadq1dzp().f[94]++;cov_2hsadq1dzp().s[921]++;return new ChainOptions().fromOptions(options);}}/**
 * Deployment State
 * @alias module:blockchain.DeploymentState
 * @property {VerifyFlags} flags
 * @property {LockFlags} lockFlags
 * @property {Boolean} bip34
 */class DeploymentState{/**
   * Create a deployment state.
   * @constructor
   */constructor(){cov_2hsadq1dzp().f[95]++;cov_2hsadq1dzp().s[922]++;this.flags=Script.flags.MANDATORY_VERIFY_FLAGS;cov_2hsadq1dzp().s[923]++;this.flags&=~Script.flags.VERIFY_P2SH;cov_2hsadq1dzp().s[924]++;this.lockFlags=common.lockFlags.MANDATORY_LOCKTIME_FLAGS;cov_2hsadq1dzp().s[925]++;this.bip34=false;cov_2hsadq1dzp().s[926]++;this.bip91=false;cov_2hsadq1dzp().s[927]++;this.bip148=false;}/**
   * Test whether p2sh is active.
   * @returns {Boolean}
   */hasP2SH(){cov_2hsadq1dzp().f[96]++;cov_2hsadq1dzp().s[928]++;return(this.flags&Script.flags.VERIFY_P2SH)!==0;}/**
   * Test whether bip34 (coinbase height) is active.
   * @returns {Boolean}
   */hasBIP34(){cov_2hsadq1dzp().f[97]++;cov_2hsadq1dzp().s[929]++;return this.bip34;}/**
   * Test whether bip66 (VERIFY_DERSIG) is active.
   * @returns {Boolean}
   */hasBIP66(){cov_2hsadq1dzp().f[98]++;cov_2hsadq1dzp().s[930]++;return(this.flags&Script.flags.VERIFY_DERSIG)!==0;}/**
   * Test whether cltv is active.
   * @returns {Boolean}
   */hasCLTV(){cov_2hsadq1dzp().f[99]++;cov_2hsadq1dzp().s[931]++;return(this.flags&Script.flags.VERIFY_CHECKLOCKTIMEVERIFY)!==0;}/**
   * Test whether median time past locktime is active.
   * @returns {Boolean}
   */hasMTP(){cov_2hsadq1dzp().f[100]++;cov_2hsadq1dzp().s[932]++;return(this.lockFlags&common.lockFlags.MEDIAN_TIME_PAST)!==0;}/**
   * Test whether csv is active.
   * @returns {Boolean}
   */hasCSV(){cov_2hsadq1dzp().f[101]++;cov_2hsadq1dzp().s[933]++;return(this.flags&Script.flags.VERIFY_CHECKSEQUENCEVERIFY)!==0;}/**
   * Test whether segwit is active.
   * @returns {Boolean}
   */hasWitness(){cov_2hsadq1dzp().f[102]++;cov_2hsadq1dzp().s[934]++;return(this.flags&Script.flags.VERIFY_WITNESS)!==0;}/**
   * Test whether bip91 is active.
   * @returns {Boolean}
   */hasBIP91(){cov_2hsadq1dzp().f[103]++;cov_2hsadq1dzp().s[935]++;return this.bip91;}/**
   * Test whether bip148 is active.
   * @returns {Boolean}
   */hasBIP148(){cov_2hsadq1dzp().f[104]++;cov_2hsadq1dzp().s[936]++;return this.bip148;}}/**
 * Orphan
 * @ignore
 */class Orphan{/**
   * Create an orphan.
   * @constructor
   */constructor(block,flags,id){cov_2hsadq1dzp().f[105]++;cov_2hsadq1dzp().s[937]++;this.block=block;cov_2hsadq1dzp().s[938]++;this.flags=flags;cov_2hsadq1dzp().s[939]++;this.id=id;cov_2hsadq1dzp().s[940]++;this.time=util.now();}}/*
 * Helpers
 */function cmp(a,b){cov_2hsadq1dzp().f[106]++;cov_2hsadq1dzp().s[941]++;return a-b;}/*
 * Expose
 */cov_2hsadq1dzp().s[942]++;module.exports=Chain;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
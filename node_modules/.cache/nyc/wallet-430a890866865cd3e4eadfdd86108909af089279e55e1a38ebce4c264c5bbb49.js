/*!
 * wallet.js - wallet object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */'use strict';function cov_a5r0d9ek1(){var path="E:\\Projects\\Test\\bcoin\\lib\\wallet\\wallet.js";var hash="a50b6f191534de5ee5313bcc1ee75910fd8e530f";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\Projects\\Test\\bcoin\\lib\\wallet\\wallet.js",statementMap:{"0":{start:{line:10,column:15},end:{line:10,column:31}},"1":{start:{line:11,column:21},end:{line:11,column:38}},"2":{start:{line:12,column:15},end:{line:12,column:32}},"3":{start:{line:13,column:15},end:{line:13,column:53}},"4":{start:{line:14,column:12},end:{line:14,column:28}},"5":{start:{line:15,column:16},end:{line:15,column:46}},"6":{start:{line:16,column:16},end:{line:16,column:46}},"7":{start:{line:17,column:16},end:{line:17,column:46}},"8":{start:{line:18,column:13},end:{line:18,column:30}},"9":{start:{line:19,column:13},end:{line:19,column:30}},"10":{start:{line:20,column:15},end:{line:20,column:34}},"11":{start:{line:21,column:16},end:{line:21,column:48}},"12":{start:{line:22,column:12},end:{line:22,column:40}},"13":{start:{line:23,column:15},end:{line:23,column:42}},"14":{start:{line:24,column:18},end:{line:24,column:40}},"15":{start:{line:25,column:11},end:{line:25,column:30}},"16":{start:{line:26,column:15},end:{line:26,column:46}},"17":{start:{line:27,column:16},end:{line:27,column:36}},"18":{start:{line:28,column:18},end:{line:28,column:40}},"19":{start:{line:29,column:15},end:{line:29,column:44}},"20":{start:{line:30,column:18},end:{line:30,column:50}},"21":{start:{line:31,column:19},end:{line:31,column:22}},"22":{start:{line:32,column:19},end:{line:32,column:21}},"23":{start:{line:33,column:24},end:{line:33,column:43}},"24":{start:{line:34,column:20},end:{line:34,column:41}},"25":{start:{line:50,column:4},end:{line:50,column:12}},"26":{start:{line:52,column:4},end:{line:52,column:33}},"27":{start:{line:54,column:4},end:{line:54,column:19}},"28":{start:{line:55,column:4},end:{line:55,column:21}},"29":{start:{line:56,column:4},end:{line:56,column:31}},"30":{start:{line:57,column:4},end:{line:57,column:29}},"31":{start:{line:58,column:4},end:{line:58,column:32}},"32":{start:{line:59,column:4},end:{line:59,column:31}},"33":{start:{line:61,column:4},end:{line:61,column:17}},"34":{start:{line:62,column:4},end:{line:62,column:19}},"35":{start:{line:63,column:4},end:{line:63,column:27}},"36":{start:{line:64,column:4},end:{line:64,column:26}},"37":{start:{line:65,column:4},end:{line:65,column:37}},"38":{start:{line:66,column:4},end:{line:66,column:24}},"39":{start:{line:67,column:4},end:{line:67,column:34}},"40":{start:{line:69,column:4},end:{line:69,column:35}},"41":{start:{line:71,column:4},end:{line:71,column:53}},"42":{start:{line:73,column:4},end:{line:74,column:32}},"43":{start:{line:74,column:6},end:{line:74,column:32}},"44":{start:{line:84,column:4},end:{line:85,column:18}},"45":{start:{line:85,column:6},end:{line:85,column:18}},"46":{start:{line:87,column:14},end:{line:87,column:28}},"47":{start:{line:90,column:4},end:{line:99,column:5}},"48":{start:{line:91,column:6},end:{line:92,column:58}},"49":{start:{line:92,column:8},end:{line:92,column:58}},"50":{start:{line:94,column:6},end:{line:95,column:51}},"51":{start:{line:97,column:6},end:{line:97,column:48}},"52":{start:{line:98,column:6},end:{line:98,column:56}},"53":{start:{line:101,column:4},end:{line:101,column:39}},"54":{start:{line:103,column:4},end:{line:106,column:5}},"55":{start:{line:104,column:6},end:{line:104,column:50}},"56":{start:{line:105,column:6},end:{line:105,column:29}},"57":{start:{line:108,column:4},end:{line:111,column:5}},"58":{start:{line:109,column:6},end:{line:109,column:58}},"59":{start:{line:110,column:6},end:{line:110,column:22}},"60":{start:{line:113,column:4},end:{line:116,column:5}},"61":{start:{line:114,column:6},end:{line:114,column:53}},"62":{start:{line:115,column:6},end:{line:115,column:41}},"63":{start:{line:118,column:4},end:{line:121,column:5}},"64":{start:{line:119,column:6},end:{line:119,column:68}},"65":{start:{line:120,column:6},end:{line:120,column:47}},"66":{start:{line:123,column:4},end:{line:127,column:5}},"67":{start:{line:124,column:6},end:{line:124,column:45}},"68":{start:{line:125,column:6},end:{line:125,column:42}},"69":{start:{line:126,column:6},end:{line:126,column:28}},"70":{start:{line:129,column:4},end:{line:132,column:5}},"71":{start:{line:130,column:6},end:{line:130,column:64}},"72":{start:{line:131,column:6},end:{line:131,column:43}},"73":{start:{line:134,column:4},end:{line:137,column:5}},"74":{start:{line:135,column:6},end:{line:135,column:68}},"75":{start:{line:136,column:6},end:{line:136,column:47}},"76":{start:{line:139,column:4},end:{line:140,column:24}},"77":{start:{line:140,column:6},end:{line:140,column:24}},"78":{start:{line:142,column:4},end:{line:143,column:45}},"79":{start:{line:143,column:6},end:{line:143,column:45}},"80":{start:{line:145,column:4},end:{line:145,column:17}},"81":{start:{line:146,column:4},end:{line:146,column:23}},"82":{start:{line:148,column:4},end:{line:148,column:16}},"83":{start:{line:159,column:4},end:{line:159,column:46}},"84":{start:{line:171,column:4},end:{line:172,column:44}},"85":{start:{line:172,column:6},end:{line:172,column:44}},"86":{start:{line:174,column:20},end:{line:174,column:66}},"87":{start:{line:175,column:4},end:{line:175,column:20}},"88":{start:{line:177,column:4},end:{line:177,column:58}},"89":{start:{line:179,column:4},end:{line:179,column:32}},"90":{start:{line:188,column:20},end:{line:188,column:44}},"91":{start:{line:190,column:4},end:{line:191,column:52}},"92":{start:{line:191,column:6},end:{line:191,column:52}},"93":{start:{line:193,column:4},end:{line:193,column:53}},"94":{start:{line:195,column:4},end:{line:195,column:32}},"95":{start:{line:204,column:20},end:{line:204,column:47}},"96":{start:{line:205,column:20},end:{line:205,column:46}},"97":{start:{line:206,column:4},end:{line:213,column:5}},"98":{start:{line:207,column:6},end:{line:207,column:34}},"99":{start:{line:208,column:6},end:{line:208,column:31}},"100":{start:{line:209,column:6},end:{line:209,column:30}},"101":{start:{line:211,column:6},end:{line:211,column:16}},"102":{start:{line:212,column:6},end:{line:212,column:16}},"103":{start:{line:225,column:19},end:{line:225,column:46}},"104":{start:{line:226,column:4},end:{line:230,column:5}},"105":{start:{line:227,column:6},end:{line:227,column:49}},"106":{start:{line:229,column:6},end:{line:229,column:15}},"107":{start:{line:242,column:20},end:{line:242,column:47}},"108":{start:{line:244,column:4},end:{line:245,column:44}},"109":{start:{line:245,column:6},end:{line:245,column:44}},"110":{start:{line:247,column:14},end:{line:247,column:29}},"111":{start:{line:248,column:19},end:{line:248,column:53}},"112":{start:{line:249,column:4},end:{line:249,column:20}},"113":{start:{line:251,column:4},end:{line:251,column:18}},"114":{start:{line:262,column:19},end:{line:262,column:46}},"115":{start:{line:263,column:4},end:{line:267,column:5}},"116":{start:{line:264,column:6},end:{line:264,column:52}},"117":{start:{line:266,column:6},end:{line:266,column:15}},"118":{start:{line:279,column:20},end:{line:279,column:47}},"119":{start:{line:281,column:4},end:{line:282,column:44}},"120":{start:{line:282,column:6},end:{line:282,column:44}},"121":{start:{line:284,column:14},end:{line:284,column:29}},"122":{start:{line:285,column:19},end:{line:285,column:56}},"123":{start:{line:286,column:4},end:{line:286,column:20}},"124":{start:{line:288,column:4},end:{line:288,column:18}},"125":{start:{line:299,column:4},end:{line:300,column:30}},"126":{start:{line:300,column:6},end:{line:300,column:30}},"127":{start:{line:302,column:4},end:{line:302,column:35}},"128":{start:{line:312,column:19},end:{line:312,column:46}},"129":{start:{line:313,column:4},end:{line:317,column:5}},"130":{start:{line:314,column:6},end:{line:314,column:45}},"131":{start:{line:316,column:6},end:{line:316,column:15}},"132":{start:{line:328,column:16},end:{line:328,column:59}},"133":{start:{line:329,column:14},end:{line:329,column:29}},"134":{start:{line:331,column:4},end:{line:335,column:5}},"135":{start:{line:332,column:6},end:{line:332,column:51}},"136":{start:{line:334,column:6},end:{line:334,column:19}},"137":{start:{line:337,column:4},end:{line:337,column:17}},"138":{start:{line:339,column:4},end:{line:339,column:20}},"139":{start:{line:349,column:19},end:{line:349,column:46}},"140":{start:{line:350,column:4},end:{line:354,column:5}},"141":{start:{line:351,column:6},end:{line:351,column:45}},"142":{start:{line:353,column:6},end:{line:353,column:15}},"143":{start:{line:365,column:16},end:{line:365,column:59}},"144":{start:{line:366,column:14},end:{line:366,column:29}},"145":{start:{line:368,column:4},end:{line:372,column:5}},"146":{start:{line:369,column:6},end:{line:369,column:51}},"147":{start:{line:371,column:6},end:{line:371,column:19}},"148":{start:{line:374,column:4},end:{line:374,column:17}},"149":{start:{line:376,column:4},end:{line:376,column:20}},"150":{start:{line:386,column:19},end:{line:386,column:46}},"151":{start:{line:387,column:4},end:{line:391,column:5}},"152":{start:{line:388,column:6},end:{line:388,column:45}},"153":{start:{line:390,column:6},end:{line:390,column:15}},"154":{start:{line:402,column:4},end:{line:403,column:36}},"155":{start:{line:403,column:6},end:{line:403,column:36}},"156":{start:{line:405,column:4},end:{line:405,column:25}},"157":{start:{line:406,column:4},end:{line:406,column:48}},"158":{start:{line:408,column:14},end:{line:408,column:29}},"159":{start:{line:409,column:4},end:{line:409,column:17}},"160":{start:{line:411,column:4},end:{line:411,column:20}},"161":{start:{line:413,column:4},end:{line:413,column:22}},"162":{start:{line:423,column:19},end:{line:423,column:46}},"163":{start:{line:424,column:4},end:{line:428,column:5}},"164":{start:{line:425,column:6},end:{line:425,column:45}},"165":{start:{line:427,column:6},end:{line:427,column:15}},"166":{start:{line:439,column:19},end:{line:439,column:46}},"167":{start:{line:440,column:4},end:{line:444,column:5}},"168":{start:{line:441,column:6},end:{line:441,column:51}},"169":{start:{line:443,column:6},end:{line:443,column:15}},"170":{start:{line:456,column:4},end:{line:457,column:43}},"171":{start:{line:457,column:6},end:{line:457,column:43}},"172":{start:{line:459,column:20},end:{line:459,column:47}},"173":{start:{line:461,column:4},end:{line:462,column:44}},"174":{start:{line:462,column:6},end:{line:462,column:44}},"175":{start:{line:464,column:4},end:{line:465,column:56}},"176":{start:{line:465,column:6},end:{line:465,column:56}},"177":{start:{line:467,column:4},end:{line:468,column:53}},"178":{start:{line:468,column:6},end:{line:468,column:53}},"179":{start:{line:470,column:14},end:{line:470,column:29}},"180":{start:{line:472,column:4},end:{line:472,column:45}},"181":{start:{line:474,column:4},end:{line:474,column:20}},"182":{start:{line:482,column:20},end:{line:482,column:47}},"183":{start:{line:483,column:20},end:{line:483,column:46}},"184":{start:{line:484,column:4},end:{line:489,column:5}},"185":{start:{line:485,column:6},end:{line:485,column:31}},"186":{start:{line:487,column:6},end:{line:487,column:16}},"187":{start:{line:488,column:6},end:{line:488,column:16}},"188":{start:{line:499,column:4},end:{line:499,column:51}},"189":{start:{line:512,column:4},end:{line:512,column:49}},"190":{start:{line:514,column:16},end:{line:514,column:42}},"191":{start:{line:516,column:15},end:{line:516,column:28}},"192":{start:{line:517,column:4},end:{line:517,column:33}},"193":{start:{line:518,column:4},end:{line:518,column:36}},"194":{start:{line:520,column:17},end:{line:520,column:44}},"195":{start:{line:522,column:16},end:{line:522,column:29}},"196":{start:{line:523,column:4},end:{line:523,column:22}},"197":{start:{line:524,column:4},end:{line:524,column:22}},"198":{start:{line:525,column:4},end:{line:525,column:22}},"199":{start:{line:526,column:4},end:{line:526,column:25}},"200":{start:{line:527,column:4},end:{line:527,column:38}},"201":{start:{line:529,column:4},end:{line:529,column:39}},"202":{start:{line:542,column:4},end:{line:543,column:46}},"203":{start:{line:543,column:6},end:{line:543,column:46}},"204":{start:{line:545,column:16},end:{line:545,column:48}},"205":{start:{line:547,column:15},end:{line:547,column:28}},"206":{start:{line:548,column:4},end:{line:548,column:34}},"207":{start:{line:549,column:4},end:{line:549,column:23}},"208":{start:{line:551,column:4},end:{line:551,column:39}},"209":{start:{line:561,column:19},end:{line:561,column:46}},"210":{start:{line:562,column:4},end:{line:566,column:5}},"211":{start:{line:563,column:6},end:{line:563,column:60}},"212":{start:{line:565,column:6},end:{line:565,column:15}},"213":{start:{line:576,column:15},end:{line:576,column:27}},"214":{start:{line:578,column:4},end:{line:579,column:44}},"215":{start:{line:579,column:6},end:{line:579,column:44}},"216":{start:{line:581,column:4},end:{line:582,column:49}},"217":{start:{line:582,column:6},end:{line:582,column:49}},"218":{start:{line:584,column:4},end:{line:584,column:34}},"219":{start:{line:587,column:4},end:{line:600,column:5}},"220":{start:{line:588,column:6},end:{line:588,column:31}},"221":{start:{line:590,column:6},end:{line:591,column:57}},"222":{start:{line:591,column:8},end:{line:591,column:57}},"223":{start:{line:593,column:6},end:{line:594,column:73}},"224":{start:{line:594,column:8},end:{line:594,column:73}},"225":{start:{line:596,column:6},end:{line:596,column:30}},"226":{start:{line:597,column:19},end:{line:597,column:50}},"227":{start:{line:598,column:6},end:{line:598,column:71}},"228":{start:{line:599,column:6},end:{line:599,column:27}},"229":{start:{line:602,column:16},end:{line:614,column:5}},"230":{start:{line:616,column:14},end:{line:616,column:29}},"231":{start:{line:618,column:20},end:{line:618,column:54}},"232":{start:{line:620,column:4},end:{line:620,column:26}},"233":{start:{line:622,column:4},end:{line:625,column:28}},"234":{start:{line:627,column:4},end:{line:627,column:27}},"235":{start:{line:628,column:4},end:{line:628,column:17}},"236":{start:{line:630,column:4},end:{line:631,column:24}},"237":{start:{line:631,column:6},end:{line:631,column:24}},"238":{start:{line:633,column:4},end:{line:633,column:20}},"239":{start:{line:635,column:4},end:{line:635,column:19}},"240":{start:{line:645,column:17},end:{line:645,column:29}},"241":{start:{line:646,column:20},end:{line:646,column:47}},"242":{start:{line:648,column:4},end:{line:649,column:21}},"243":{start:{line:649,column:6},end:{line:649,column:21}},"244":{start:{line:651,column:4},end:{line:651,column:51}},"245":{start:{line:660,column:4},end:{line:660,column:42}},"246":{start:{line:670,column:4},end:{line:671,column:41}},"247":{start:{line:671,column:6},end:{line:671,column:41}},"248":{start:{line:672,column:4},end:{line:672,column:46}},"249":{start:{line:682,column:18},end:{line:682,column:50}},"250":{start:{line:684,column:4},end:{line:685,column:44}},"251":{start:{line:685,column:6},end:{line:685,column:44}},"252":{start:{line:687,column:4},end:{line:687,column:54}},"253":{start:{line:697,column:18},end:{line:697,column:50}},"254":{start:{line:699,column:4},end:{line:700,column:18}},"255":{start:{line:700,column:6},end:{line:700,column:18}},"256":{start:{line:702,column:20},end:{line:702,column:62}},"257":{start:{line:704,column:4},end:{line:705,column:18}},"258":{start:{line:705,column:6},end:{line:705,column:18}},"259":{start:{line:707,column:4},end:{line:707,column:27}},"260":{start:{line:708,column:4},end:{line:708,column:25}},"261":{start:{line:709,column:4},end:{line:709,column:39}},"262":{start:{line:711,column:4},end:{line:711,column:19}},"263":{start:{line:721,column:4},end:{line:722,column:16}},"264":{start:{line:722,column:6},end:{line:722,column:16}},"265":{start:{line:724,column:4},end:{line:725,column:18}},"266":{start:{line:725,column:6},end:{line:725,column:18}},"267":{start:{line:727,column:4},end:{line:727,column:52}},"268":{start:{line:738,column:4},end:{line:739,column:16}},"269":{start:{line:739,column:6},end:{line:739,column:16}},"270":{start:{line:741,column:18},end:{line:741,column:50}},"271":{start:{line:743,column:4},end:{line:744,column:44}},"272":{start:{line:744,column:6},end:{line:744,column:44}},"273":{start:{line:746,column:4},end:{line:746,column:17}},"274":{start:{line:756,column:4},end:{line:757,column:19}},"275":{start:{line:757,column:6},end:{line:757,column:19}},"276":{start:{line:759,column:4},end:{line:759,column:52}},"277":{start:{line:769,column:18},end:{line:769,column:50}},"278":{start:{line:771,column:4},end:{line:772,column:19}},"279":{start:{line:772,column:6},end:{line:772,column:19}},"280":{start:{line:774,column:4},end:{line:774,column:48}},"281":{start:{line:784,column:4},end:{line:784,column:35}},"282":{start:{line:794,column:4},end:{line:794,column:35}},"283":{start:{line:804,column:4},end:{line:804,column:35}},"284":{start:{line:815,column:19},end:{line:815,column:46}},"285":{start:{line:816,column:4},end:{line:820,column:5}},"286":{start:{line:817,column:6},end:{line:817,column:49}},"287":{start:{line:819,column:6},end:{line:819,column:15}},"288":{start:{line:832,column:20},end:{line:832,column:47}},"289":{start:{line:834,column:4},end:{line:835,column:44}},"290":{start:{line:835,column:6},end:{line:835,column:44}},"291":{start:{line:837,column:14},end:{line:837,column:29}},"292":{start:{line:838,column:16},end:{line:838,column:50}},"293":{start:{line:839,column:4},end:{line:839,column:20}},"294":{start:{line:841,column:4},end:{line:841,column:15}},"295":{start:{line:851,column:4},end:{line:851,column:34}},"296":{start:{line:860,column:4},end:{line:860,column:43}},"297":{start:{line:870,column:17},end:{line:870,column:41}},"298":{start:{line:871,column:17},end:{line:871,column:41}},"299":{start:{line:872,column:4},end:{line:872,column:24}},"300":{start:{line:882,column:17},end:{line:882,column:41}},"301":{start:{line:883,column:4},end:{line:883,column:44}},"302":{start:{line:894,column:17},end:{line:894,column:41}},"303":{start:{line:895,column:4},end:{line:895,column:45}},"304":{start:{line:905,column:17},end:{line:905,column:41}},"305":{start:{line:906,column:4},end:{line:906,column:44}},"306":{start:{line:916,column:4},end:{line:917,column:40}},"307":{start:{line:917,column:6},end:{line:917,column:40}},"308":{start:{line:919,column:4},end:{line:919,column:45}},"309":{start:{line:929,column:18},end:{line:929,column:50}},"310":{start:{line:931,column:4},end:{line:932,column:44}},"311":{start:{line:932,column:6},end:{line:932,column:44}},"312":{start:{line:934,column:19},end:{line:934,column:53}},"313":{start:{line:935,column:17},end:{line:935,column:48}},"314":{start:{line:937,column:4},end:{line:937,column:17}},"315":{start:{line:939,column:19},end:{line:939,column:21}},"316":{start:{line:941,column:4},end:{line:950,column:5}},"317":{start:{line:942,column:19},end:{line:942,column:44}},"318":{start:{line:944,column:6},end:{line:944,column:19}},"319":{start:{line:945,column:6},end:{line:945,column:37}},"320":{start:{line:947,column:6},end:{line:947,column:23}},"321":{start:{line:949,column:6},end:{line:949,column:24}},"322":{start:{line:952,column:4},end:{line:952,column:18}},"323":{start:{line:965,column:19},end:{line:965,column:46}},"324":{start:{line:966,column:4},end:{line:970,column:5}},"325":{start:{line:967,column:6},end:{line:967,column:59}},"326":{start:{line:969,column:6},end:{line:969,column:15}},"327":{start:{line:983,column:4},end:{line:989,column:5}},"328":{start:{line:984,column:6},end:{line:985,column:76}},"329":{start:{line:985,column:8},end:{line:985,column:76}},"330":{start:{line:987,column:6},end:{line:988,column:73}},"331":{start:{line:988,column:8},end:{line:988,column:73}},"332":{start:{line:991,column:17},end:{line:991,column:31}},"333":{start:{line:993,column:4},end:{line:994,column:45}},"334":{start:{line:994,column:6},end:{line:994,column:45}},"335":{start:{line:996,column:20},end:{line:996,column:47}},"336":{start:{line:998,column:4},end:{line:999,column:44}},"337":{start:{line:999,column:6},end:{line:999,column:44}},"338":{start:{line:1001,column:4},end:{line:1002,column:61}},"339":{start:{line:1002,column:6},end:{line:1002,column:61}},"340":{start:{line:1004,column:4},end:{line:1004,column:34}},"341":{start:{line:1006,column:16},end:{line:1006,column:49}},"342":{start:{line:1007,column:17},end:{line:1007,column:29}},"343":{start:{line:1009,column:4},end:{line:1013,column:5}},"344":{start:{line:1010,column:6},end:{line:1010,column:61}},"345":{start:{line:1011,column:6},end:{line:1011,column:24}},"346":{start:{line:1012,column:6},end:{line:1012,column:28}},"347":{start:{line:1015,column:14},end:{line:1015,column:29}},"348":{start:{line:1016,column:4},end:{line:1016,column:36}},"349":{start:{line:1017,column:4},end:{line:1017,column:20}},"350":{start:{line:1030,column:19},end:{line:1030,column:46}},"351":{start:{line:1031,column:4},end:{line:1035,column:5}},"352":{start:{line:1032,column:6},end:{line:1032,column:54}},"353":{start:{line:1034,column:6},end:{line:1034,column:15}},"354":{start:{line:1048,column:4},end:{line:1049,column:75}},"355":{start:{line:1049,column:6},end:{line:1049,column:75}},"356":{start:{line:1051,column:4},end:{line:1052,column:49}},"357":{start:{line:1052,column:6},end:{line:1052,column:49}},"358":{start:{line:1054,column:20},end:{line:1054,column:47}},"359":{start:{line:1056,column:4},end:{line:1057,column:44}},"360":{start:{line:1057,column:6},end:{line:1057,column:44}},"361":{start:{line:1059,column:4},end:{line:1060,column:61}},"362":{start:{line:1060,column:6},end:{line:1060,column:61}},"363":{start:{line:1062,column:17},end:{line:1062,column:51}},"364":{start:{line:1064,column:14},end:{line:1064,column:29}},"365":{start:{line:1065,column:4},end:{line:1065,column:36}},"366":{start:{line:1066,column:4},end:{line:1066,column:20}},"367":{start:{line:1094,column:19},end:{line:1094,column:50}},"368":{start:{line:1095,column:4},end:{line:1099,column:5}},"369":{start:{line:1096,column:6},end:{line:1096,column:44}},"370":{start:{line:1098,column:6},end:{line:1098,column:15}},"371":{start:{line:1110,column:4},end:{line:1111,column:19}},"372":{start:{line:1111,column:6},end:{line:1111,column:19}},"373":{start:{line:1113,column:17},end:{line:1113,column:37}},"374":{start:{line:1114,column:19},end:{line:1114,column:49}},"375":{start:{line:1116,column:4},end:{line:1117,column:44}},"376":{start:{line:1117,column:6},end:{line:1117,column:44}},"377":{start:{line:1119,column:15},end:{line:1119,column:27}},"378":{start:{line:1120,column:4},end:{line:1121,column:56}},"379":{start:{line:1121,column:6},end:{line:1121,column:56}},"380":{start:{line:1124,column:4},end:{line:1129,column:5}},"381":{start:{line:1125,column:6},end:{line:1125,column:56}},"382":{start:{line:1127,column:6},end:{line:1127,column:51}},"383":{start:{line:1128,column:6},end:{line:1128,column:44}},"384":{start:{line:1131,column:4},end:{line:1143,column:7}},"385":{start:{line:1142,column:24},end:{line:1142,column:47}},"386":{start:{line:1145,column:4},end:{line:1145,column:72}},"387":{start:{line:1155,column:17},end:{line:1155,column:41}},"388":{start:{line:1156,column:17},end:{line:1156,column:41}},"389":{start:{line:1158,column:4},end:{line:1159,column:18}},"390":{start:{line:1159,column:6},end:{line:1159,column:18}},"391":{start:{line:1161,column:4},end:{line:1161,column:41}},"392":{start:{line:1171,column:18},end:{line:1171,column:48}},"393":{start:{line:1172,column:20},end:{line:1172,column:37}},"394":{start:{line:1174,column:4},end:{line:1175,column:16}},"395":{start:{line:1175,column:6},end:{line:1175,column:16}},"396":{start:{line:1177,column:20},end:{line:1177,column:59}},"397":{start:{line:1179,column:4},end:{line:1180,column:16}},"398":{start:{line:1180,column:6},end:{line:1180,column:16}},"399":{start:{line:1182,column:15},end:{line:1182,column:16}},"400":{start:{line:1184,column:4},end:{line:1198,column:5}},"401":{start:{line:1186,column:6},end:{line:1197,column:7}},"402":{start:{line:1187,column:8},end:{line:1196,column:9}},"403":{start:{line:1189,column:12},end:{line:1189,column:23}},"404":{start:{line:1190,column:12},end:{line:1190,column:22}},"405":{start:{line:1191,column:12},end:{line:1191,column:18}},"406":{start:{line:1193,column:12},end:{line:1193,column:23}},"407":{start:{line:1194,column:12},end:{line:1194,column:22}},"408":{start:{line:1195,column:12},end:{line:1195,column:18}},"409":{start:{line:1200,column:4},end:{line:1225,column:5}},"410":{start:{line:1204,column:8},end:{line:1204,column:23}},"411":{start:{line:1206,column:8},end:{line:1206,column:23}},"412":{start:{line:1207,column:8},end:{line:1207,column:14}},"413":{start:{line:1211,column:8},end:{line:1211,column:18}},"414":{start:{line:1213,column:8},end:{line:1213,column:37}},"415":{start:{line:1215,column:8},end:{line:1215,column:18}},"416":{start:{line:1217,column:8},end:{line:1217,column:18}},"417":{start:{line:1219,column:8},end:{line:1219,column:37}},"418":{start:{line:1221,column:8},end:{line:1221,column:18}},"419":{start:{line:1223,column:8},end:{line:1223,column:18}},"420":{start:{line:1224,column:8},end:{line:1224,column:14}},"421":{start:{line:1227,column:4},end:{line:1237,column:5}},"422":{start:{line:1229,column:6},end:{line:1229,column:16}},"423":{start:{line:1232,column:6},end:{line:1232,column:44}},"424":{start:{line:1236,column:6},end:{line:1236,column:40}},"425":{start:{line:1239,column:4},end:{line:1239,column:16}},"426":{start:{line:1255,column:20},end:{line:1255,column:35}},"427":{start:{line:1256,column:16},end:{line:1256,column:25}},"428":{start:{line:1258,column:4},end:{line:1258,column:64}},"429":{start:{line:1259,column:4},end:{line:1259,column:64}},"430":{start:{line:1262,column:4},end:{line:1278,column:5}},"431":{start:{line:1263,column:21},end:{line:1263,column:36}},"432":{start:{line:1264,column:19},end:{line:1264,column:38}},"433":{start:{line:1266,column:6},end:{line:1267,column:43}},"434":{start:{line:1267,column:8},end:{line:1267,column:43}},"435":{start:{line:1269,column:6},end:{line:1275,column:7}},"436":{start:{line:1270,column:8},end:{line:1271,column:61}},"437":{start:{line:1271,column:10},end:{line:1271,column:61}},"438":{start:{line:1273,column:8},end:{line:1274,column:58}},"439":{start:{line:1274,column:10},end:{line:1274,column:58}},"440":{start:{line:1277,column:6},end:{line:1277,column:31}},"441":{start:{line:1281,column:4},end:{line:1281,column:41}},"442":{start:{line:1284,column:4},end:{line:1285,column:24}},"443":{start:{line:1285,column:6},end:{line:1285,column:24}},"444":{start:{line:1288,column:4},end:{line:1289,column:40}},"445":{start:{line:1289,column:6},end:{line:1289,column:40}},"446":{start:{line:1292,column:4},end:{line:1292,column:52}},"447":{start:{line:1293,column:4},end:{line:1294,column:34}},"448":{start:{line:1296,column:4},end:{line:1297,column:17}},"449":{start:{line:1297,column:6},end:{line:1297,column:17}},"450":{start:{line:1299,column:18},end:{line:1299,column:42}},"451":{start:{line:1301,column:4},end:{line:1302,column:44}},"452":{start:{line:1302,column:6},end:{line:1302,column:44}},"453":{start:{line:1304,column:4},end:{line:1304,column:15}},"454":{start:{line:1318,column:19},end:{line:1318,column:45}},"455":{start:{line:1319,column:4},end:{line:1323,column:5}},"456":{start:{line:1320,column:6},end:{line:1320,column:51}},"457":{start:{line:1322,column:6},end:{line:1322,column:15}},"458":{start:{line:1335,column:16},end:{line:1335,column:50}},"459":{start:{line:1337,column:4},end:{line:1337,column:37}},"460":{start:{line:1339,column:4},end:{line:1340,column:55}},"461":{start:{line:1340,column:6},end:{line:1340,column:55}},"462":{start:{line:1342,column:15},end:{line:1342,column:25}},"463":{start:{line:1345,column:4},end:{line:1346,column:51}},"464":{start:{line:1346,column:6},end:{line:1346,column:51}},"465":{start:{line:1348,column:4},end:{line:1349,column:51}},"466":{start:{line:1349,column:6},end:{line:1349,column:51}},"467":{start:{line:1351,column:22},end:{line:1351,column:56}},"468":{start:{line:1352,column:4},end:{line:1353,column:67}},"469":{start:{line:1353,column:6},end:{line:1353,column:67}},"470":{start:{line:1355,column:4},end:{line:1355,column:29}},"471":{start:{line:1357,column:4},end:{line:1357,column:72}},"472":{start:{line:1359,column:4},end:{line:1359,column:28}},"473":{start:{line:1361,column:4},end:{line:1361,column:14}},"474":{start:{line:1374,column:4},end:{line:1374,column:60}},"475":{start:{line:1376,column:16},end:{line:1376,column:38}},"476":{start:{line:1378,column:4},end:{line:1379,column:48}},"477":{start:{line:1379,column:6},end:{line:1379,column:48}},"478":{start:{line:1381,column:4},end:{line:1382,column:51}},"479":{start:{line:1382,column:6},end:{line:1382,column:51}},"480":{start:{line:1384,column:15},end:{line:1384,column:21}},"481":{start:{line:1386,column:4},end:{line:1387,column:52}},"482":{start:{line:1387,column:6},end:{line:1387,column:52}},"483":{start:{line:1389,column:17},end:{line:1389,column:44}},"484":{start:{line:1391,column:4},end:{line:1392,column:50}},"485":{start:{line:1392,column:6},end:{line:1392,column:50}},"486":{start:{line:1394,column:19},end:{line:1394,column:34}},"487":{start:{line:1396,column:14},end:{line:1396,column:38}},"488":{start:{line:1398,column:4},end:{line:1399,column:33}},"489":{start:{line:1399,column:6},end:{line:1399,column:33}},"490":{start:{line:1401,column:4},end:{line:1402,column:48}},"491":{start:{line:1402,column:6},end:{line:1402,column:48}},"492":{start:{line:1404,column:16},end:{line:1404,column:30}},"493":{start:{line:1405,column:4},end:{line:1405,column:20}},"494":{start:{line:1407,column:4},end:{line:1410,column:5}},"495":{start:{line:1408,column:6},end:{line:1408,column:27}},"496":{start:{line:1409,column:6},end:{line:1409,column:28}},"497":{start:{line:1413,column:4},end:{line:1430,column:5}},"498":{start:{line:1413,column:17},end:{line:1413,column:18}},"499":{start:{line:1414,column:21},end:{line:1414,column:35}},"500":{start:{line:1415,column:19},end:{line:1415,column:38}},"501":{start:{line:1417,column:6},end:{line:1418,column:17}},"502":{start:{line:1418,column:8},end:{line:1418,column:17}},"503":{start:{line:1420,column:19},end:{line:1420,column:43}},"504":{start:{line:1422,column:6},end:{line:1423,column:17}},"505":{start:{line:1423,column:8},end:{line:1423,column:17}},"506":{start:{line:1425,column:6},end:{line:1429,column:7}},"507":{start:{line:1426,column:8},end:{line:1426,column:24}},"508":{start:{line:1427,column:8},end:{line:1427,column:28}},"509":{start:{line:1428,column:8},end:{line:1428,column:14}},"510":{start:{line:1432,column:4},end:{line:1433,column:43}},"511":{start:{line:1433,column:6},end:{line:1433,column:43}},"512":{start:{line:1435,column:4},end:{line:1435,column:27}},"513":{start:{line:1437,column:4},end:{line:1438,column:54}},"514":{start:{line:1438,column:6},end:{line:1438,column:54}},"515":{start:{line:1440,column:4},end:{line:1440,column:24}},"516":{start:{line:1442,column:4},end:{line:1443,column:42}},"517":{start:{line:1443,column:6},end:{line:1443,column:42}},"518":{start:{line:1445,column:4},end:{line:1448,column:5}},"519":{start:{line:1446,column:6},end:{line:1446,column:45}},"520":{start:{line:1447,column:6},end:{line:1447,column:27}},"521":{start:{line:1450,column:4},end:{line:1450,column:37}},"522":{start:{line:1452,column:4},end:{line:1453,column:55}},"523":{start:{line:1453,column:6},end:{line:1453,column:55}},"524":{start:{line:1455,column:16},end:{line:1455,column:26}},"525":{start:{line:1457,column:4},end:{line:1459,column:27}},"526":{start:{line:1461,column:4},end:{line:1461,column:30}},"527":{start:{line:1462,column:4},end:{line:1462,column:29}},"528":{start:{line:1464,column:4},end:{line:1464,column:15}},"529":{start:{line:1473,column:17},end:{line:1473,column:40}},"530":{start:{line:1475,column:4},end:{line:1476,column:71}},"531":{start:{line:1476,column:6},end:{line:1476,column:71}},"532":{start:{line:1478,column:16},end:{line:1478,column:18}},"533":{start:{line:1480,column:4},end:{line:1481,column:23}},"534":{start:{line:1481,column:6},end:{line:1481,column:23}},"535":{start:{line:1483,column:19},end:{line:1483,column:39}},"536":{start:{line:1485,column:4},end:{line:1486,column:30}},"537":{start:{line:1486,column:6},end:{line:1486,column:30}},"538":{start:{line:1488,column:4},end:{line:1488,column:15}},"539":{start:{line:1499,column:4},end:{line:1499,column:24}},"540":{start:{line:1501,column:18},end:{line:1501,column:47}},"541":{start:{line:1502,column:18},end:{line:1502,column:20}},"542":{start:{line:1504,column:4},end:{line:1514,column:5}},"543":{start:{line:1505,column:22},end:{line:1505,column:57}},"544":{start:{line:1507,column:6},end:{line:1508,column:17}},"545":{start:{line:1508,column:8},end:{line:1508,column:17}},"546":{start:{line:1510,column:19},end:{line:1510,column:56}},"547":{start:{line:1512,column:6},end:{line:1513,column:25}},"548":{start:{line:1513,column:8},end:{line:1513,column:25}},"549":{start:{line:1516,column:4},end:{line:1516,column:17}},"550":{start:{line:1526,column:17},end:{line:1526,column:41}},"551":{start:{line:1527,column:17},end:{line:1527,column:41}},"552":{start:{line:1529,column:4},end:{line:1530,column:18}},"553":{start:{line:1530,column:6},end:{line:1530,column:18}},"554":{start:{line:1532,column:20},end:{line:1532,column:55}},"555":{start:{line:1534,column:4},end:{line:1535,column:18}},"556":{start:{line:1535,column:6},end:{line:1535,column:18}},"557":{start:{line:1537,column:4},end:{line:1537,column:49}},"558":{start:{line:1549,column:17},end:{line:1549,column:41}},"559":{start:{line:1550,column:17},end:{line:1550,column:41}},"560":{start:{line:1552,column:4},end:{line:1553,column:18}},"561":{start:{line:1553,column:6},end:{line:1553,column:18}},"562":{start:{line:1555,column:20},end:{line:1555,column:55}},"563":{start:{line:1557,column:4},end:{line:1558,column:18}},"564":{start:{line:1558,column:6},end:{line:1558,column:18}},"565":{start:{line:1560,column:4},end:{line:1560,column:34}},"566":{start:{line:1562,column:16},end:{line:1562,column:53}},"567":{start:{line:1564,column:4},end:{line:1565,column:18}},"568":{start:{line:1565,column:6},end:{line:1565,column:18}},"569":{start:{line:1567,column:4},end:{line:1567,column:15}},"570":{start:{line:1577,column:4},end:{line:1577,column:24}},"571":{start:{line:1579,column:4},end:{line:1580,column:50}},"572":{start:{line:1580,column:6},end:{line:1580,column:50}},"573":{start:{line:1582,column:19},end:{line:1582,column:39}},"574":{start:{line:1583,column:18},end:{line:1583,column:20}},"575":{start:{line:1585,column:4},end:{line:1589,column:5}},"576":{start:{line:1586,column:19},end:{line:1586,column:43}},"577":{start:{line:1587,column:6},end:{line:1588,column:25}},"578":{start:{line:1588,column:8},end:{line:1588,column:25}},"579":{start:{line:1591,column:4},end:{line:1591,column:17}},"580":{start:{line:1601,column:18},end:{line:1601,column:20}},"581":{start:{line:1602,column:19},end:{line:1602,column:39}},"582":{start:{line:1604,column:4},end:{line:1608,column:5}},"583":{start:{line:1605,column:19},end:{line:1605,column:43}},"584":{start:{line:1606,column:6},end:{line:1607,column:25}},"585":{start:{line:1607,column:8},end:{line:1607,column:25}},"586":{start:{line:1610,column:4},end:{line:1610,column:17}},"587":{start:{line:1621,column:19},end:{line:1621,column:46}},"588":{start:{line:1622,column:4},end:{line:1626,column:5}},"589":{start:{line:1623,column:6},end:{line:1623,column:49}},"590":{start:{line:1625,column:6},end:{line:1625,column:15}},"591":{start:{line:1638,column:20},end:{line:1638,column:47}},"592":{start:{line:1640,column:4},end:{line:1641,column:44}},"593":{start:{line:1641,column:6},end:{line:1641,column:44}},"594":{start:{line:1643,column:14},end:{line:1643,column:29}},"595":{start:{line:1644,column:4},end:{line:1644,column:45}},"596":{start:{line:1645,column:4},end:{line:1645,column:20}},"597":{start:{line:1657,column:16},end:{line:1657,column:25}},"598":{start:{line:1659,column:4},end:{line:1672,column:5}},"599":{start:{line:1660,column:19},end:{line:1660,column:44}},"600":{start:{line:1662,column:6},end:{line:1663,column:17}},"601":{start:{line:1663,column:8},end:{line:1663,column:17}},"602":{start:{line:1665,column:6},end:{line:1666,column:17}},"603":{start:{line:1666,column:8},end:{line:1666,column:17}},"604":{start:{line:1668,column:6},end:{line:1669,column:34}},"605":{start:{line:1669,column:8},end:{line:1669,column:34}},"606":{start:{line:1671,column:6},end:{line:1671,column:39}},"607":{start:{line:1674,column:20},end:{line:1674,column:22}},"608":{start:{line:1675,column:14},end:{line:1675,column:29}},"609":{start:{line:1677,column:4},end:{line:1710,column:5}},"610":{start:{line:1678,column:20},end:{line:1678,column:22}},"611":{start:{line:1679,column:19},end:{line:1679,column:21}},"612":{start:{line:1680,column:19},end:{line:1680,column:21}},"613":{start:{line:1682,column:6},end:{line:1697,column:7}},"614":{start:{line:1683,column:8},end:{line:1696,column:9}},"615":{start:{line:1685,column:12},end:{line:1686,column:35}},"616":{start:{line:1686,column:14},end:{line:1686,column:35}},"617":{start:{line:1687,column:12},end:{line:1687,column:18}},"618":{start:{line:1689,column:12},end:{line:1690,column:34}},"619":{start:{line:1690,column:14},end:{line:1690,column:34}},"620":{start:{line:1691,column:12},end:{line:1691,column:18}},"621":{start:{line:1693,column:12},end:{line:1694,column:34}},"622":{start:{line:1694,column:14},end:{line:1694,column:34}},"623":{start:{line:1695,column:12},end:{line:1695,column:18}},"624":{start:{line:1699,column:6},end:{line:1699,column:19}},"625":{start:{line:1700,column:6},end:{line:1700,column:18}},"626":{start:{line:1701,column:6},end:{line:1701,column:18}},"627":{start:{line:1703,column:22},end:{line:1703,column:49}},"628":{start:{line:1704,column:6},end:{line:1704,column:22}},"629":{start:{line:1706,column:19},end:{line:1706,column:70}},"630":{start:{line:1708,column:6},end:{line:1709,column:27}},"631":{start:{line:1709,column:8},end:{line:1709,column:27}},"632":{start:{line:1712,column:4},end:{line:1712,column:20}},"633":{start:{line:1714,column:4},end:{line:1714,column:19}},"634":{start:{line:1727,column:18},end:{line:1727,column:46}},"635":{start:{line:1728,column:4},end:{line:1728,column:31}},"636":{start:{line:1741,column:4},end:{line:1742,column:63}},"637":{start:{line:1742,column:6},end:{line:1742,column:63}},"638":{start:{line:1744,column:4},end:{line:1744,column:34}},"639":{start:{line:1746,column:18},end:{line:1746,column:46}},"640":{start:{line:1748,column:4},end:{line:1748,column:71}},"641":{start:{line:1758,column:4},end:{line:1758,column:58}},"642":{start:{line:1769,column:4},end:{line:1788,column:5}},"643":{start:{line:1770,column:19},end:{line:1770,column:31}},"644":{start:{line:1772,column:6},end:{line:1773,column:17}},"645":{start:{line:1773,column:8},end:{line:1773,column:17}},"646":{start:{line:1775,column:6},end:{line:1776,column:17}},"647":{start:{line:1776,column:8},end:{line:1776,column:17}},"648":{start:{line:1778,column:6},end:{line:1778,column:20}},"649":{start:{line:1780,column:6},end:{line:1781,column:14}},"650":{start:{line:1781,column:8},end:{line:1781,column:14}},"651":{start:{line:1783,column:21},end:{line:1783,column:43}},"652":{start:{line:1784,column:6},end:{line:1784,column:54}},"653":{start:{line:1786,column:6},end:{line:1787,column:14}},"654":{start:{line:1787,column:8},end:{line:1787,column:14}},"655":{start:{line:1790,column:4},end:{line:1790,column:15}},"656":{start:{line:1800,column:4},end:{line:1800,column:38}},"657":{start:{line:1810,column:4},end:{line:1810,column:37}},"658":{start:{line:1820,column:4},end:{line:1820,column:38}},"659":{start:{line:1830,column:4},end:{line:1830,column:36}},"660":{start:{line:1840,column:4},end:{line:1840,column:38}},"661":{start:{line:1851,column:4},end:{line:1851,column:42}},"662":{start:{line:1861,column:4},end:{line:1861,column:33}},"663":{start:{line:1870,column:4},end:{line:1870,column:33}},"664":{start:{line:1880,column:4},end:{line:1880,column:38}},"665":{start:{line:1890,column:19},end:{line:1890,column:46}},"666":{start:{line:1891,column:4},end:{line:1895,column:5}},"667":{start:{line:1892,column:6},end:{line:1892,column:40}},"668":{start:{line:1894,column:6},end:{line:1894,column:15}},"669":{start:{line:1907,column:20},end:{line:1907,column:50}},"670":{start:{line:1909,column:4},end:{line:1915,column:5}},"671":{start:{line:1910,column:22},end:{line:1910,column:52}},"672":{start:{line:1911,column:6},end:{line:1914,column:7}},"673":{start:{line:1912,column:8},end:{line:1912,column:48}},"674":{start:{line:1913,column:8},end:{line:1913,column:38}},"675":{start:{line:1917,column:4},end:{line:1917,column:19}},"676":{start:{line:1927,column:19},end:{line:1927,column:46}},"677":{start:{line:1928,column:4},end:{line:1932,column:5}},"678":{start:{line:1929,column:6},end:{line:1929,column:44}},"679":{start:{line:1931,column:6},end:{line:1931,column:15}},"680":{start:{line:1942,column:19},end:{line:1942,column:46}},"681":{start:{line:1943,column:4},end:{line:1947,column:5}},"682":{start:{line:1944,column:6},end:{line:1944,column:42}},"683":{start:{line:1946,column:6},end:{line:1946,column:15}},"684":{start:{line:1958,column:19},end:{line:1958,column:46}},"685":{start:{line:1959,column:4},end:{line:1963,column:5}},"686":{start:{line:1960,column:6},end:{line:1960,column:40}},"687":{start:{line:1962,column:6},end:{line:1962,column:15}},"688":{start:{line:1975,column:20},end:{line:1975,column:48}},"689":{start:{line:1976,column:4},end:{line:1976,column:39}},"690":{start:{line:1986,column:19},end:{line:1986,column:46}},"691":{start:{line:1987,column:4},end:{line:1991,column:5}},"692":{start:{line:1988,column:6},end:{line:1988,column:39}},"693":{start:{line:1990,column:6},end:{line:1990,column:15}},"694":{start:{line:2002,column:4},end:{line:2002,column:35}},"695":{start:{line:2011,column:4},end:{line:2011,column:36}},"696":{start:{line:2020,column:4},end:{line:2020,column:38}},"697":{start:{line:2028,column:4},end:{line:2028,column:35}},"698":{start:{line:2037,column:4},end:{line:2037,column:36}},"699":{start:{line:2046,column:4},end:{line:2046,column:33}},"700":{start:{line:2056,column:20},end:{line:2056,column:48}},"701":{start:{line:2057,column:4},end:{line:2057,column:41}},"702":{start:{line:2067,column:20},end:{line:2067,column:48}},"703":{start:{line:2068,column:4},end:{line:2068,column:39}},"704":{start:{line:2078,column:20},end:{line:2078,column:48}},"705":{start:{line:2079,column:4},end:{line:2079,column:41}},"706":{start:{line:2089,column:20},end:{line:2089,column:47}},"707":{start:{line:2090,column:18},end:{line:2090,column:20}},"708":{start:{line:2092,column:4},end:{line:2116,column:5}},"709":{start:{line:2093,column:19},end:{line:2093,column:30}},"710":{start:{line:2095,column:6},end:{line:2096,column:17}},"711":{start:{line:2096,column:8},end:{line:2096,column:17}},"712":{start:{line:2098,column:6},end:{line:2099,column:17}},"713":{start:{line:2099,column:8},end:{line:2099,column:17}},"714":{start:{line:2102,column:6},end:{line:2105,column:7}},"715":{start:{line:2103,column:8},end:{line:2103,column:25}},"716":{start:{line:2104,column:8},end:{line:2104,column:17}},"717":{start:{line:2112,column:6},end:{line:2113,column:17}},"718":{start:{line:2113,column:8},end:{line:2113,column:17}},"719":{start:{line:2115,column:6},end:{line:2115,column:23}},"720":{start:{line:2118,column:4},end:{line:2118,column:17}},"721":{start:{line:2128,column:20},end:{line:2128,column:48}},"722":{start:{line:2129,column:4},end:{line:2129,column:41}},"723":{start:{line:2139,column:20},end:{line:2139,column:48}},"724":{start:{line:2140,column:4},end:{line:2140,column:41}},"725":{start:{line:2153,column:20},end:{line:2153,column:48}},"726":{start:{line:2154,column:4},end:{line:2154,column:48}},"727":{start:{line:2165,column:20},end:{line:2165,column:48}},"728":{start:{line:2166,column:4},end:{line:2166,column:45}},"729":{start:{line:2176,column:20},end:{line:2176,column:47}},"730":{start:{line:2177,column:4},end:{line:2178,column:44}},"731":{start:{line:2178,column:6},end:{line:2178,column:44}},"732":{start:{line:2179,column:4},end:{line:2179,column:30}},"733":{start:{line:2189,column:20},end:{line:2189,column:47}},"734":{start:{line:2190,column:4},end:{line:2191,column:44}},"735":{start:{line:2191,column:6},end:{line:2191,column:44}},"736":{start:{line:2192,column:4},end:{line:2192,column:32}},"737":{start:{line:2202,column:20},end:{line:2202,column:47}},"738":{start:{line:2203,column:4},end:{line:2204,column:44}},"739":{start:{line:2204,column:6},end:{line:2204,column:44}},"740":{start:{line:2205,column:4},end:{line:2205,column:31}},"741":{start:{line:2215,column:20},end:{line:2215,column:47}},"742":{start:{line:2216,column:4},end:{line:2217,column:44}},"743":{start:{line:2217,column:6},end:{line:2217,column:44}},"744":{start:{line:2218,column:4},end:{line:2218,column:31}},"745":{start:{line:2228,column:20},end:{line:2228,column:47}},"746":{start:{line:2229,column:4},end:{line:2230,column:44}},"747":{start:{line:2230,column:6},end:{line:2230,column:44}},"748":{start:{line:2231,column:4},end:{line:2231,column:36}},"749":{start:{line:2241,column:20},end:{line:2241,column:47}},"750":{start:{line:2242,column:4},end:{line:2243,column:44}},"751":{start:{line:2243,column:6},end:{line:2243,column:44}},"752":{start:{line:2244,column:4},end:{line:2244,column:35}},"753":{start:{line:2254,column:20},end:{line:2254,column:47}},"754":{start:{line:2255,column:4},end:{line:2256,column:44}},"755":{start:{line:2256,column:6},end:{line:2256,column:44}},"756":{start:{line:2257,column:4},end:{line:2257,column:35}},"757":{start:{line:2267,column:20},end:{line:2267,column:47}},"758":{start:{line:2268,column:4},end:{line:2269,column:44}},"759":{start:{line:2269,column:6},end:{line:2269,column:44}},"760":{start:{line:2270,column:4},end:{line:2270,column:32}},"761":{start:{line:2280,column:20},end:{line:2280,column:47}},"762":{start:{line:2281,column:4},end:{line:2282,column:44}},"763":{start:{line:2282,column:6},end:{line:2282,column:44}},"764":{start:{line:2283,column:4},end:{line:2283,column:31}},"765":{start:{line:2293,column:20},end:{line:2293,column:47}},"766":{start:{line:2294,column:4},end:{line:2295,column:44}},"767":{start:{line:2295,column:6},end:{line:2295,column:44}},"768":{start:{line:2296,column:4},end:{line:2296,column:31}},"769":{start:{line:2305,column:4},end:{line:2313,column:6}},"770":{start:{line:2325,column:4},end:{line:2335,column:6}},"771":{start:{line:2344,column:15},end:{line:2344,column:16}},"772":{start:{line:2345,column:4},end:{line:2345,column:15}},"773":{start:{line:2346,column:4},end:{line:2346,column:34}},"774":{start:{line:2347,column:4},end:{line:2347,column:16}},"775":{start:{line:2356,column:17},end:{line:2356,column:31}},"776":{start:{line:2357,column:15},end:{line:2357,column:30}},"777":{start:{line:2359,column:16},end:{line:2359,column:17}},"778":{start:{line:2361,column:4},end:{line:2362,column:17}},"779":{start:{line:2362,column:6},end:{line:2362,column:17}},"780":{start:{line:2364,column:4},end:{line:2364,column:22}},"781":{start:{line:2365,column:4},end:{line:2365,column:35}},"782":{start:{line:2366,column:4},end:{line:2366,column:30}},"783":{start:{line:2367,column:4},end:{line:2367,column:33}},"784":{start:{line:2368,column:4},end:{line:2368,column:29}},"785":{start:{line:2370,column:4},end:{line:2370,column:23}},"786":{start:{line:2380,column:15},end:{line:2380,column:29}},"787":{start:{line:2382,column:18},end:{line:2382,column:29}},"788":{start:{line:2384,column:4},end:{line:2384,column:39}},"789":{start:{line:2385,column:4},end:{line:2385,column:37}},"790":{start:{line:2386,column:4},end:{line:2386,column:34}},"791":{start:{line:2387,column:4},end:{line:2387,column:35}},"792":{start:{line:2388,column:4},end:{line:2388,column:31}},"793":{start:{line:2390,column:4},end:{line:2390,column:16}},"794":{start:{line:2400,column:4},end:{line:2400,column:39}},"795":{start:{line:2410,column:4},end:{line:2410,column:33}},"796":{start:{line:2418,column:0},end:{line:2418,column:24}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:49,column:2},end:{line:49,column:3}},loc:{start:{line:49,column:28},end:{line:75,column:3}},line:49},"1":{name:"(anonymous_1)",decl:{start:{line:83,column:2},end:{line:83,column:3}},loc:{start:{line:83,column:23},end:{line:149,column:3}},line:83},"2":{name:"(anonymous_2)",decl:{start:{line:158,column:2},end:{line:158,column:3}},loc:{start:{line:158,column:35},end:{line:160,column:3}},line:158},"3":{name:"(anonymous_3)",decl:{start:{line:170,column:2},end:{line:170,column:3}},loc:{start:{line:170,column:34},end:{line:180,column:3}},line:170},"4":{name:"(anonymous_4)",decl:{start:{line:187,column:2},end:{line:187,column:3}},loc:{start:{line:187,column:15},end:{line:196,column:3}},line:187},"5":{name:"(anonymous_5)",decl:{start:{line:203,column:2},end:{line:203,column:3}},loc:{start:{line:203,column:18},end:{line:214,column:3}},line:203},"6":{name:"(anonymous_6)",decl:{start:{line:224,column:2},end:{line:224,column:3}},loc:{start:{line:224,column:32},end:{line:231,column:3}},line:224},"7":{name:"(anonymous_7)",decl:{start:{line:241,column:2},end:{line:241,column:3}},loc:{start:{line:241,column:33},end:{line:252,column:3}},line:241},"8":{name:"(anonymous_8)",decl:{start:{line:261,column:2},end:{line:261,column:3}},loc:{start:{line:261,column:35},end:{line:268,column:3}},line:261},"9":{name:"(anonymous_9)",decl:{start:{line:278,column:2},end:{line:278,column:3}},loc:{start:{line:278,column:36},end:{line:289,column:3}},line:278},"10":{name:"(anonymous_10)",decl:{start:{line:298,column:2},end:{line:298,column:3}},loc:{start:{line:298,column:39},end:{line:303,column:3}},line:298},"11":{name:"(anonymous_11)",decl:{start:{line:311,column:2},end:{line:311,column:3}},loc:{start:{line:311,column:28},end:{line:318,column:3}},line:311},"12":{name:"(anonymous_12)",decl:{start:{line:327,column:2},end:{line:327,column:3}},loc:{start:{line:327,column:29},end:{line:340,column:3}},line:327},"13":{name:"(anonymous_13)",decl:{start:{line:348,column:2},end:{line:348,column:3}},loc:{start:{line:348,column:28},end:{line:355,column:3}},line:348},"14":{name:"(anonymous_14)",decl:{start:{line:364,column:2},end:{line:364,column:3}},loc:{start:{line:364,column:29},end:{line:377,column:3}},line:364},"15":{name:"(anonymous_15)",decl:{start:{line:385,column:2},end:{line:385,column:3}},loc:{start:{line:385,column:28},end:{line:392,column:3}},line:385},"16":{name:"(anonymous_16)",decl:{start:{line:401,column:2},end:{line:401,column:3}},loc:{start:{line:401,column:29},end:{line:414,column:3}},line:401},"17":{name:"(anonymous_17)",decl:{start:{line:422,column:2},end:{line:422,column:3}},loc:{start:{line:422,column:19},end:{line:429,column:3}},line:422},"18":{name:"(anonymous_18)",decl:{start:{line:438,column:2},end:{line:438,column:3}},loc:{start:{line:438,column:34},end:{line:445,column:3}},line:438},"19":{name:"(anonymous_19)",decl:{start:{line:455,column:2},end:{line:455,column:3}},loc:{start:{line:455,column:35},end:{line:475,column:3}},line:455},"20":{name:"(anonymous_20)",decl:{start:{line:481,column:2},end:{line:481,column:3}},loc:{start:{line:481,column:15},end:{line:490,column:3}},line:481},"21":{name:"(anonymous_21)",decl:{start:{line:498,column:2},end:{line:498,column:3}},loc:{start:{line:498,column:30},end:{line:500,column:3}},line:498},"22":{name:"(anonymous_22)",decl:{start:{line:511,column:2},end:{line:511,column:3}},loc:{start:{line:511,column:10},end:{line:530,column:3}},line:511},"23":{name:"(anonymous_23)",decl:{start:{line:541,column:2},end:{line:541,column:3}},loc:{start:{line:541,column:18},end:{line:552,column:3}},line:541},"24":{name:"(anonymous_24)",decl:{start:{line:560,column:2},end:{line:560,column:3}},loc:{start:{line:560,column:43},end:{line:567,column:3}},line:560},"25":{name:"(anonymous_25)",decl:{start:{line:575,column:2},end:{line:575,column:3}},loc:{start:{line:575,column:44},end:{line:636,column:3}},line:575},"26":{name:"(anonymous_26)",decl:{start:{line:644,column:2},end:{line:644,column:3}},loc:{start:{line:644,column:43},end:{line:652,column:3}},line:644},"27":{name:"(anonymous_27)",decl:{start:{line:659,column:2},end:{line:659,column:3}},loc:{start:{line:659,column:16},end:{line:661,column:3}},line:659},"28":{name:"(anonymous_28)",decl:{start:{line:669,column:2},end:{line:669,column:3}},loc:{start:{line:669,column:25},end:{line:673,column:3}},line:669},"29":{name:"(anonymous_29)",decl:{start:{line:681,column:2},end:{line:681,column:3}},loc:{start:{line:681,column:31},end:{line:688,column:3}},line:681},"30":{name:"(anonymous_30)",decl:{start:{line:696,column:2},end:{line:696,column:3}},loc:{start:{line:696,column:25},end:{line:712,column:3}},line:696},"31":{name:"(anonymous_31)",decl:{start:{line:720,column:2},end:{line:720,column:3}},loc:{start:{line:720,column:24},end:{line:728,column:3}},line:720},"32":{name:"(anonymous_32)",decl:{start:{line:737,column:2},end:{line:737,column:3}},loc:{start:{line:737,column:26},end:{line:747,column:3}},line:737},"33":{name:"(anonymous_33)",decl:{start:{line:755,column:2},end:{line:755,column:3}},loc:{start:{line:755,column:30},end:{line:760,column:3}},line:755},"34":{name:"(anonymous_34)",decl:{start:{line:768,column:2},end:{line:768,column:3}},loc:{start:{line:768,column:25},end:{line:775,column:3}},line:768},"35":{name:"(anonymous_35)",decl:{start:{line:783,column:2},end:{line:783,column:3}},loc:{start:{line:783,column:26},end:{line:785,column:3}},line:783},"36":{name:"(anonymous_36)",decl:{start:{line:793,column:2},end:{line:793,column:3}},loc:{start:{line:793,column:25},end:{line:795,column:3}},line:793},"37":{name:"(anonymous_37)",decl:{start:{line:803,column:2},end:{line:803,column:3}},loc:{start:{line:803,column:25},end:{line:805,column:3}},line:803},"38":{name:"(anonymous_38)",decl:{start:{line:814,column:2},end:{line:814,column:3}},loc:{start:{line:814,column:32},end:{line:821,column:3}},line:814},"39":{name:"(anonymous_39)",decl:{start:{line:831,column:2},end:{line:831,column:3}},loc:{start:{line:831,column:33},end:{line:842,column:3}},line:831},"40":{name:"(anonymous_40)",decl:{start:{line:850,column:2},end:{line:850,column:3}},loc:{start:{line:850,column:10},end:{line:852,column:3}},line:850},"41":{name:"(anonymous_41)",decl:{start:{line:859,column:2},end:{line:859,column:3}},loc:{start:{line:859,column:15},end:{line:861,column:3}},line:859},"42":{name:"(anonymous_42)",decl:{start:{line:869,column:2},end:{line:869,column:3}},loc:{start:{line:869,column:28},end:{line:873,column:3}},line:869},"43":{name:"(anonymous_43)",decl:{start:{line:881,column:2},end:{line:881,column:3}},loc:{start:{line:881,column:25},end:{line:884,column:3}},line:881},"44":{name:"(anonymous_44)",decl:{start:{line:893,column:2},end:{line:893,column:3}},loc:{start:{line:893,column:26},end:{line:896,column:3}},line:893},"45":{name:"(anonymous_45)",decl:{start:{line:904,column:2},end:{line:904,column:3}},loc:{start:{line:904,column:25},end:{line:907,column:3}},line:904},"46":{name:"(anonymous_46)",decl:{start:{line:915,column:2},end:{line:915,column:3}},loc:{start:{line:915,column:23},end:{line:920,column:3}},line:915},"47":{name:"(anonymous_47)",decl:{start:{line:928,column:2},end:{line:928,column:3}},loc:{start:{line:928,column:30},end:{line:953,column:3}},line:928},"48":{name:"(anonymous_48)",decl:{start:{line:964,column:2},end:{line:964,column:3}},loc:{start:{line:964,column:42},end:{line:971,column:3}},line:964},"49":{name:"(anonymous_49)",decl:{start:{line:982,column:2},end:{line:982,column:3}},loc:{start:{line:982,column:43},end:{line:1018,column:3}},line:982},"50":{name:"(anonymous_50)",decl:{start:{line:1029,column:2},end:{line:1029,column:3}},loc:{start:{line:1029,column:37},end:{line:1036,column:3}},line:1029},"51":{name:"(anonymous_51)",decl:{start:{line:1047,column:2},end:{line:1047,column:3}},loc:{start:{line:1047,column:38},end:{line:1067,column:3}},line:1047},"52":{name:"(anonymous_52)",decl:{start:{line:1093,column:2},end:{line:1093,column:3}},loc:{start:{line:1093,column:34},end:{line:1100,column:3}},line:1093},"53":{name:"(anonymous_53)",decl:{start:{line:1109,column:2},end:{line:1109,column:3}},loc:{start:{line:1109,column:28},end:{line:1146,column:3}},line:1109},"54":{name:"(anonymous_54)",decl:{start:{line:1142,column:16},end:{line:1142,column:17}},loc:{start:{line:1142,column:24},end:{line:1142,column:47}},line:1142},"55":{name:"(anonymous_55)",decl:{start:{line:1154,column:2},end:{line:1154,column:3}},loc:{start:{line:1154,column:37},end:{line:1162,column:3}},line:1154},"56":{name:"(anonymous_56)",decl:{start:{line:1170,column:2},end:{line:1170,column:3}},loc:{start:{line:1170,column:27},end:{line:1240,column:3}},line:1170},"57":{name:"(anonymous_57)",decl:{start:{line:1254,column:2},end:{line:1254,column:3}},loc:{start:{line:1254,column:33},end:{line:1305,column:3}},line:1254},"58":{name:"(anonymous_58)",decl:{start:{line:1317,column:2},end:{line:1317,column:3}},loc:{start:{line:1317,column:34},end:{line:1324,column:3}},line:1317},"59":{name:"(anonymous_59)",decl:{start:{line:1334,column:2},end:{line:1334,column:3}},loc:{start:{line:1334,column:35},end:{line:1362,column:3}},line:1334},"60":{name:"(anonymous_60)",decl:{start:{line:1373,column:2},end:{line:1373,column:3}},loc:{start:{line:1373,column:44},end:{line:1465,column:3}},line:1373},"61":{name:"(anonymous_61)",decl:{start:{line:1472,column:2},end:{line:1472,column:3}},loc:{start:{line:1472,column:17},end:{line:1489,column:3}},line:1472},"62":{name:"(anonymous_62)",decl:{start:{line:1498,column:2},end:{line:1498,column:3}},loc:{start:{line:1498,column:26},end:{line:1517,column:3}},line:1498},"63":{name:"(anonymous_63)",decl:{start:{line:1525,column:2},end:{line:1525,column:3}},loc:{start:{line:1525,column:24},end:{line:1538,column:3}},line:1525},"64":{name:"(anonymous_64)",decl:{start:{line:1548,column:2},end:{line:1548,column:3}},loc:{start:{line:1548,column:43},end:{line:1568,column:3}},line:1548},"65":{name:"(anonymous_65)",decl:{start:{line:1576,column:2},end:{line:1576,column:3}},loc:{start:{line:1576,column:27},end:{line:1592,column:3}},line:1576},"66":{name:"(anonymous_66)",decl:{start:{line:1600,column:2},end:{line:1600,column:3}},loc:{start:{line:1600,column:27},end:{line:1611,column:3}},line:1600},"67":{name:"(anonymous_67)",decl:{start:{line:1620,column:2},end:{line:1620,column:3}},loc:{start:{line:1620,column:38},end:{line:1627,column:3}},line:1620},"68":{name:"(anonymous_68)",decl:{start:{line:1637,column:2},end:{line:1637,column:3}},loc:{start:{line:1637,column:39},end:{line:1646,column:3}},line:1637},"69":{name:"(anonymous_69)",decl:{start:{line:1656,column:2},end:{line:1656,column:3}},loc:{start:{line:1656,column:28},end:{line:1715,column:3}},line:1656},"70":{name:"(anonymous_70)",decl:{start:{line:1726,column:2},end:{line:1726,column:3}},loc:{start:{line:1726,column:22},end:{line:1729,column:3}},line:1726},"71":{name:"(anonymous_71)",decl:{start:{line:1740,column:2},end:{line:1740,column:3}},loc:{start:{line:1740,column:30},end:{line:1749,column:3}},line:1740},"72":{name:"(anonymous_72)",decl:{start:{line:1757,column:3},end:{line:1757,column:4}},loc:{start:{line:1757,column:33},end:{line:1759,column:4}},line:1757},"73":{name:"(anonymous_73)",decl:{start:{line:1768,column:2},end:{line:1768,column:3}},loc:{start:{line:1768,column:38},end:{line:1791,column:3}},line:1768},"74":{name:"(anonymous_74)",decl:{start:{line:1799,column:2},end:{line:1799,column:3}},loc:{start:{line:1799,column:19},end:{line:1801,column:3}},line:1799},"75":{name:"(anonymous_75)",decl:{start:{line:1809,column:2},end:{line:1809,column:3}},loc:{start:{line:1809,column:18},end:{line:1811,column:3}},line:1809},"76":{name:"(anonymous_76)",decl:{start:{line:1819,column:2},end:{line:1819,column:3}},loc:{start:{line:1819,column:19},end:{line:1821,column:3}},line:1819},"77":{name:"(anonymous_77)",decl:{start:{line:1829,column:2},end:{line:1829,column:3}},loc:{start:{line:1829,column:17},end:{line:1831,column:3}},line:1829},"78":{name:"(anonymous_78)",decl:{start:{line:1839,column:2},end:{line:1839,column:3}},loc:{start:{line:1839,column:19},end:{line:1841,column:3}},line:1839},"79":{name:"(anonymous_79)",decl:{start:{line:1850,column:2},end:{line:1850,column:3}},loc:{start:{line:1850,column:23},end:{line:1852,column:3}},line:1850},"80":{name:"(anonymous_80)",decl:{start:{line:1860,column:2},end:{line:1860,column:3}},loc:{start:{line:1860,column:14},end:{line:1862,column:3}},line:1860},"81":{name:"(anonymous_81)",decl:{start:{line:1869,column:2},end:{line:1869,column:3}},loc:{start:{line:1869,column:14},end:{line:1871,column:3}},line:1869},"82":{name:"(anonymous_82)",decl:{start:{line:1879,column:2},end:{line:1879,column:3}},loc:{start:{line:1879,column:19},end:{line:1881,column:3}},line:1879},"83":{name:"(anonymous_83)",decl:{start:{line:1889,column:2},end:{line:1889,column:3}},loc:{start:{line:1889,column:23},end:{line:1896,column:3}},line:1889},"84":{name:"(anonymous_84)",decl:{start:{line:1906,column:2},end:{line:1906,column:3}},loc:{start:{line:1906,column:24},end:{line:1918,column:3}},line:1906},"85":{name:"(anonymous_85)",decl:{start:{line:1926,column:2},end:{line:1926,column:3}},loc:{start:{line:1926,column:23},end:{line:1933,column:3}},line:1926},"86":{name:"(anonymous_86)",decl:{start:{line:1941,column:2},end:{line:1941,column:3}},loc:{start:{line:1941,column:21},end:{line:1948,column:3}},line:1941},"87":{name:"(anonymous_87)",decl:{start:{line:1957,column:2},end:{line:1957,column:3}},loc:{start:{line:1957,column:23},end:{line:1964,column:3}},line:1957},"88":{name:"(anonymous_88)",decl:{start:{line:1974,column:2},end:{line:1974,column:3}},loc:{start:{line:1974,column:24},end:{line:1977,column:3}},line:1974},"89":{name:"(anonymous_89)",decl:{start:{line:1985,column:2},end:{line:1985,column:3}},loc:{start:{line:1985,column:22},end:{line:1992,column:3}},line:1985},"90":{name:"(anonymous_90)",decl:{start:{line:2001,column:2},end:{line:2001,column:3}},loc:{start:{line:2001,column:17},end:{line:2003,column:3}},line:2001},"91":{name:"(anonymous_91)",decl:{start:{line:2010,column:2},end:{line:2010,column:3}},loc:{start:{line:2010,column:17},end:{line:2012,column:3}},line:2010},"92":{name:"(anonymous_92)",decl:{start:{line:2019,column:2},end:{line:2019,column:3}},loc:{start:{line:2019,column:19},end:{line:2021,column:3}},line:2019},"93":{name:"(anonymous_93)",decl:{start:{line:2027,column:2},end:{line:2027,column:3}},loc:{start:{line:2027,column:16},end:{line:2029,column:3}},line:2027},"94":{name:"(anonymous_94)",decl:{start:{line:2036,column:2},end:{line:2036,column:3}},loc:{start:{line:2036,column:17},end:{line:2038,column:3}},line:2036},"95":{name:"(anonymous_95)",decl:{start:{line:2045,column:2},end:{line:2045,column:3}},loc:{start:{line:2045,column:14},end:{line:2047,column:3}},line:2045},"96":{name:"(anonymous_96)",decl:{start:{line:2055,column:2},end:{line:2055,column:3}},loc:{start:{line:2055,column:25},end:{line:2058,column:3}},line:2055},"97":{name:"(anonymous_97)",decl:{start:{line:2066,column:2},end:{line:2066,column:3}},loc:{start:{line:2066,column:23},end:{line:2069,column:3}},line:2066},"98":{name:"(anonymous_98)",decl:{start:{line:2077,column:2},end:{line:2077,column:3}},loc:{start:{line:2077,column:25},end:{line:2080,column:3}},line:2077},"99":{name:"(anonymous_99)",decl:{start:{line:2088,column:2},end:{line:2088,column:3}},loc:{start:{line:2088,column:28},end:{line:2119,column:3}},line:2088},"100":{name:"(anonymous_100)",decl:{start:{line:2127,column:2},end:{line:2127,column:3}},loc:{start:{line:2127,column:25},end:{line:2130,column:3}},line:2127},"101":{name:"(anonymous_101)",decl:{start:{line:2138,column:2},end:{line:2138,column:3}},loc:{start:{line:2138,column:25},end:{line:2141,column:3}},line:2138},"102":{name:"(anonymous_102)",decl:{start:{line:2152,column:2},end:{line:2152,column:3}},loc:{start:{line:2152,column:32},end:{line:2155,column:3}},line:2152},"103":{name:"(anonymous_103)",decl:{start:{line:2164,column:2},end:{line:2164,column:3}},loc:{start:{line:2164,column:29},end:{line:2167,column:3}},line:2164},"104":{name:"(anonymous_104)",decl:{start:{line:2175,column:2},end:{line:2175,column:3}},loc:{start:{line:2175,column:29},end:{line:2180,column:3}},line:2175},"105":{name:"(anonymous_105)",decl:{start:{line:2188,column:2},end:{line:2188,column:3}},loc:{start:{line:2188,column:31},end:{line:2193,column:3}},line:2188},"106":{name:"(anonymous_106)",decl:{start:{line:2201,column:2},end:{line:2201,column:3}},loc:{start:{line:2201,column:30},end:{line:2206,column:3}},line:2201},"107":{name:"(anonymous_107)",decl:{start:{line:2214,column:2},end:{line:2214,column:3}},loc:{start:{line:2214,column:30},end:{line:2219,column:3}},line:2214},"108":{name:"(anonymous_108)",decl:{start:{line:2227,column:2},end:{line:2227,column:3}},loc:{start:{line:2227,column:33},end:{line:2232,column:3}},line:2227},"109":{name:"(anonymous_109)",decl:{start:{line:2240,column:2},end:{line:2240,column:3}},loc:{start:{line:2240,column:32},end:{line:2245,column:3}},line:2240},"110":{name:"(anonymous_110)",decl:{start:{line:2253,column:2},end:{line:2253,column:3}},loc:{start:{line:2253,column:32},end:{line:2258,column:3}},line:2253},"111":{name:"(anonymous_111)",decl:{start:{line:2266,column:2},end:{line:2266,column:3}},loc:{start:{line:2266,column:29},end:{line:2271,column:3}},line:2266},"112":{name:"(anonymous_112)",decl:{start:{line:2279,column:2},end:{line:2279,column:3}},loc:{start:{line:2279,column:28},end:{line:2284,column:3}},line:2279},"113":{name:"(anonymous_113)",decl:{start:{line:2292,column:2},end:{line:2292,column:3}},loc:{start:{line:2292,column:28},end:{line:2297,column:3}},line:2292},"114":{name:"(anonymous_114)",decl:{start:{line:2304,column:2},end:{line:2304,column:3}},loc:{start:{line:2304,column:20},end:{line:2314,column:3}},line:2304},"115":{name:"(anonymous_115)",decl:{start:{line:2324,column:2},end:{line:2324,column:3}},loc:{start:{line:2324,column:26},end:{line:2336,column:3}},line:2324},"116":{name:"(anonymous_116)",decl:{start:{line:2343,column:2},end:{line:2343,column:3}},loc:{start:{line:2343,column:12},end:{line:2348,column:3}},line:2343},"117":{name:"(anonymous_117)",decl:{start:{line:2355,column:2},end:{line:2355,column:3}},loc:{start:{line:2355,column:10},end:{line:2371,column:3}},line:2355},"118":{name:"(anonymous_118)",decl:{start:{line:2379,column:2},end:{line:2379,column:3}},loc:{start:{line:2379,column:16},end:{line:2391,column:3}},line:2379},"119":{name:"(anonymous_119)",decl:{start:{line:2399,column:2},end:{line:2399,column:3}},loc:{start:{line:2399,column:28},end:{line:2401,column:3}},line:2399},"120":{name:"(anonymous_120)",decl:{start:{line:2409,column:2},end:{line:2409,column:3}},loc:{start:{line:2409,column:23},end:{line:2411,column:3}},line:2409}},branchMap:{"0":{loc:{start:{line:73,column:4},end:{line:74,column:32}},type:"if",locations:[{start:{line:73,column:4},end:{line:74,column:32}},{start:{line:73,column:4},end:{line:74,column:32}}],line:73},"1":{loc:{start:{line:84,column:4},end:{line:85,column:18}},type:"if",locations:[{start:{line:84,column:4},end:{line:85,column:18}},{start:{line:84,column:4},end:{line:85,column:18}}],line:84},"2":{loc:{start:{line:90,column:4},end:{line:99,column:5}},type:"if",locations:[{start:{line:90,column:4},end:{line:99,column:5}},{start:{line:90,column:4},end:{line:99,column:5}}],line:90},"3":{loc:{start:{line:91,column:6},end:{line:92,column:58}},type:"if",locations:[{start:{line:91,column:6},end:{line:92,column:58}},{start:{line:91,column:6},end:{line:92,column:58}}],line:91},"4":{loc:{start:{line:103,column:4},end:{line:106,column:5}},type:"if",locations:[{start:{line:103,column:4},end:{line:106,column:5}},{start:{line:103,column:4},end:{line:106,column:5}}],line:103},"5":{loc:{start:{line:108,column:4},end:{line:111,column:5}},type:"if",locations:[{start:{line:108,column:4},end:{line:111,column:5}},{start:{line:108,column:4},end:{line:111,column:5}}],line:108},"6":{loc:{start:{line:113,column:4},end:{line:116,column:5}},type:"if",locations:[{start:{line:113,column:4},end:{line:116,column:5}},{start:{line:113,column:4},end:{line:116,column:5}}],line:113},"7":{loc:{start:{line:118,column:4},end:{line:121,column:5}},type:"if",locations:[{start:{line:118,column:4},end:{line:121,column:5}},{start:{line:118,column:4},end:{line:121,column:5}}],line:118},"8":{loc:{start:{line:123,column:4},end:{line:127,column:5}},type:"if",locations:[{start:{line:123,column:4},end:{line:127,column:5}},{start:{line:123,column:4},end:{line:127,column:5}}],line:123},"9":{loc:{start:{line:129,column:4},end:{line:132,column:5}},type:"if",locations:[{start:{line:129,column:4},end:{line:132,column:5}},{start:{line:129,column:4},end:{line:132,column:5}}],line:129},"10":{loc:{start:{line:134,column:4},end:{line:137,column:5}},type:"if",locations:[{start:{line:134,column:4},end:{line:137,column:5}},{start:{line:134,column:4},end:{line:137,column:5}}],line:134},"11":{loc:{start:{line:139,column:4},end:{line:140,column:24}},type:"if",locations:[{start:{line:139,column:4},end:{line:140,column:24}},{start:{line:139,column:4},end:{line:140,column:24}}],line:139},"12":{loc:{start:{line:142,column:4},end:{line:143,column:45}},type:"if",locations:[{start:{line:142,column:4},end:{line:143,column:45}},{start:{line:142,column:4},end:{line:143,column:45}}],line:142},"13":{loc:{start:{line:171,column:4},end:{line:172,column:44}},type:"if",locations:[{start:{line:171,column:4},end:{line:172,column:44}},{start:{line:171,column:4},end:{line:172,column:44}}],line:171},"14":{loc:{start:{line:190,column:4},end:{line:191,column:52}},type:"if",locations:[{start:{line:190,column:4},end:{line:191,column:52}},{start:{line:190,column:4},end:{line:191,column:52}}],line:190},"15":{loc:{start:{line:244,column:4},end:{line:245,column:44}},type:"if",locations:[{start:{line:244,column:4},end:{line:245,column:44}},{start:{line:244,column:4},end:{line:245,column:44}}],line:244},"16":{loc:{start:{line:281,column:4},end:{line:282,column:44}},type:"if",locations:[{start:{line:281,column:4},end:{line:282,column:44}},{start:{line:281,column:4},end:{line:282,column:44}}],line:281},"17":{loc:{start:{line:299,column:4},end:{line:300,column:30}},type:"if",locations:[{start:{line:299,column:4},end:{line:300,column:30}},{start:{line:299,column:4},end:{line:300,column:30}}],line:299},"18":{loc:{start:{line:402,column:4},end:{line:403,column:36}},type:"if",locations:[{start:{line:402,column:4},end:{line:403,column:36}},{start:{line:402,column:4},end:{line:403,column:36}}],line:402},"19":{loc:{start:{line:456,column:4},end:{line:457,column:43}},type:"if",locations:[{start:{line:456,column:4},end:{line:457,column:43}},{start:{line:456,column:4},end:{line:457,column:43}}],line:456},"20":{loc:{start:{line:461,column:4},end:{line:462,column:44}},type:"if",locations:[{start:{line:461,column:4},end:{line:462,column:44}},{start:{line:461,column:4},end:{line:462,column:44}}],line:461},"21":{loc:{start:{line:464,column:4},end:{line:465,column:56}},type:"if",locations:[{start:{line:464,column:4},end:{line:465,column:56}},{start:{line:464,column:4},end:{line:465,column:56}}],line:464},"22":{loc:{start:{line:467,column:4},end:{line:468,column:53}},type:"if",locations:[{start:{line:467,column:4},end:{line:468,column:53}},{start:{line:467,column:4},end:{line:468,column:53}}],line:467},"23":{loc:{start:{line:542,column:4},end:{line:543,column:46}},type:"if",locations:[{start:{line:542,column:4},end:{line:543,column:46}},{start:{line:542,column:4},end:{line:543,column:46}}],line:542},"24":{loc:{start:{line:578,column:4},end:{line:579,column:44}},type:"if",locations:[{start:{line:578,column:4},end:{line:579,column:44}},{start:{line:578,column:4},end:{line:579,column:44}}],line:578},"25":{loc:{start:{line:581,column:4},end:{line:582,column:49}},type:"if",locations:[{start:{line:581,column:4},end:{line:582,column:49}},{start:{line:581,column:4},end:{line:582,column:49}}],line:581},"26":{loc:{start:{line:587,column:4},end:{line:600,column:5}},type:"if",locations:[{start:{line:587,column:4},end:{line:600,column:5}},{start:{line:587,column:4},end:{line:600,column:5}}],line:587},"27":{loc:{start:{line:590,column:6},end:{line:591,column:57}},type:"if",locations:[{start:{line:590,column:6},end:{line:591,column:57}},{start:{line:590,column:6},end:{line:591,column:57}}],line:590},"28":{loc:{start:{line:593,column:6},end:{line:594,column:73}},type:"if",locations:[{start:{line:593,column:6},end:{line:594,column:73}},{start:{line:593,column:6},end:{line:594,column:73}}],line:593},"29":{loc:{start:{line:605,column:12},end:{line:605,column:54}},type:"cond-expr",locations:[{start:{line:605,column:38},end:{line:605,column:47}},{start:{line:605,column:50},end:{line:605,column:54}}],line:605},"30":{loc:{start:{line:630,column:4},end:{line:631,column:24}},type:"if",locations:[{start:{line:630,column:4},end:{line:631,column:24}},{start:{line:630,column:4},end:{line:631,column:24}}],line:630},"31":{loc:{start:{line:648,column:4},end:{line:649,column:21}},type:"if",locations:[{start:{line:648,column:4},end:{line:649,column:21}},{start:{line:648,column:4},end:{line:649,column:21}}],line:648},"32":{loc:{start:{line:670,column:4},end:{line:671,column:41}},type:"if",locations:[{start:{line:670,column:4},end:{line:671,column:41}},{start:{line:670,column:4},end:{line:671,column:41}}],line:670},"33":{loc:{start:{line:684,column:4},end:{line:685,column:44}},type:"if",locations:[{start:{line:684,column:4},end:{line:685,column:44}},{start:{line:684,column:4},end:{line:685,column:44}}],line:684},"34":{loc:{start:{line:699,column:4},end:{line:700,column:18}},type:"if",locations:[{start:{line:699,column:4},end:{line:700,column:18}},{start:{line:699,column:4},end:{line:700,column:18}}],line:699},"35":{loc:{start:{line:704,column:4},end:{line:705,column:18}},type:"if",locations:[{start:{line:704,column:4},end:{line:705,column:18}},{start:{line:704,column:4},end:{line:705,column:18}}],line:704},"36":{loc:{start:{line:721,column:4},end:{line:722,column:16}},type:"if",locations:[{start:{line:721,column:4},end:{line:722,column:16}},{start:{line:721,column:4},end:{line:722,column:16}}],line:721},"37":{loc:{start:{line:724,column:4},end:{line:725,column:18}},type:"if",locations:[{start:{line:724,column:4},end:{line:725,column:18}},{start:{line:724,column:4},end:{line:725,column:18}}],line:724},"38":{loc:{start:{line:738,column:4},end:{line:739,column:16}},type:"if",locations:[{start:{line:738,column:4},end:{line:739,column:16}},{start:{line:738,column:4},end:{line:739,column:16}}],line:738},"39":{loc:{start:{line:738,column:8},end:{line:738,column:35}},type:"binary-expr",locations:[{start:{line:738,column:8},end:{line:738,column:20}},{start:{line:738,column:24},end:{line:738,column:35}}],line:738},"40":{loc:{start:{line:743,column:4},end:{line:744,column:44}},type:"if",locations:[{start:{line:743,column:4},end:{line:744,column:44}},{start:{line:743,column:4},end:{line:744,column:44}}],line:743},"41":{loc:{start:{line:756,column:4},end:{line:757,column:19}},type:"if",locations:[{start:{line:756,column:4},end:{line:757,column:19}},{start:{line:756,column:4},end:{line:757,column:19}}],line:756},"42":{loc:{start:{line:771,column:4},end:{line:772,column:19}},type:"if",locations:[{start:{line:771,column:4},end:{line:772,column:19}},{start:{line:771,column:4},end:{line:772,column:19}}],line:771},"43":{loc:{start:{line:783,column:16},end:{line:783,column:24}},type:"default-arg",locations:[{start:{line:783,column:23},end:{line:783,column:24}}],line:783},"44":{loc:{start:{line:793,column:15},end:{line:793,column:23}},type:"default-arg",locations:[{start:{line:793,column:22},end:{line:793,column:23}}],line:793},"45":{loc:{start:{line:803,column:15},end:{line:803,column:23}},type:"default-arg",locations:[{start:{line:803,column:22},end:{line:803,column:23}}],line:803},"46":{loc:{start:{line:834,column:4},end:{line:835,column:44}},type:"if",locations:[{start:{line:834,column:4},end:{line:835,column:44}},{start:{line:834,column:4},end:{line:835,column:44}}],line:834},"47":{loc:{start:{line:916,column:4},end:{line:917,column:40}},type:"if",locations:[{start:{line:916,column:4},end:{line:917,column:40}},{start:{line:916,column:4},end:{line:917,column:40}}],line:916},"48":{loc:{start:{line:931,column:4},end:{line:932,column:44}},type:"if",locations:[{start:{line:931,column:4},end:{line:932,column:44}},{start:{line:931,column:4},end:{line:932,column:44}}],line:931},"49":{loc:{start:{line:983,column:4},end:{line:989,column:5}},type:"if",locations:[{start:{line:983,column:4},end:{line:989,column:5}},{start:{line:983,column:4},end:{line:989,column:5}}],line:983},"50":{loc:{start:{line:984,column:6},end:{line:985,column:76}},type:"if",locations:[{start:{line:984,column:6},end:{line:985,column:76}},{start:{line:984,column:6},end:{line:985,column:76}}],line:984},"51":{loc:{start:{line:987,column:6},end:{line:988,column:73}},type:"if",locations:[{start:{line:987,column:6},end:{line:988,column:73}},{start:{line:987,column:6},end:{line:988,column:73}}],line:987},"52":{loc:{start:{line:993,column:4},end:{line:994,column:45}},type:"if",locations:[{start:{line:993,column:4},end:{line:994,column:45}},{start:{line:993,column:4},end:{line:994,column:45}}],line:993},"53":{loc:{start:{line:998,column:4},end:{line:999,column:44}},type:"if",locations:[{start:{line:998,column:4},end:{line:999,column:44}},{start:{line:998,column:4},end:{line:999,column:44}}],line:998},"54":{loc:{start:{line:1001,column:4},end:{line:1002,column:61}},type:"if",locations:[{start:{line:1001,column:4},end:{line:1002,column:61}},{start:{line:1001,column:4},end:{line:1002,column:61}}],line:1001},"55":{loc:{start:{line:1009,column:4},end:{line:1013,column:5}},type:"if",locations:[{start:{line:1009,column:4},end:{line:1013,column:5}},{start:{line:1009,column:4},end:{line:1013,column:5}}],line:1009},"56":{loc:{start:{line:1048,column:4},end:{line:1049,column:75}},type:"if",locations:[{start:{line:1048,column:4},end:{line:1049,column:75}},{start:{line:1048,column:4},end:{line:1049,column:75}}],line:1048},"57":{loc:{start:{line:1051,column:4},end:{line:1052,column:49}},type:"if",locations:[{start:{line:1051,column:4},end:{line:1052,column:49}},{start:{line:1051,column:4},end:{line:1052,column:49}}],line:1051},"58":{loc:{start:{line:1056,column:4},end:{line:1057,column:44}},type:"if",locations:[{start:{line:1056,column:4},end:{line:1057,column:44}},{start:{line:1056,column:4},end:{line:1057,column:44}}],line:1056},"59":{loc:{start:{line:1059,column:4},end:{line:1060,column:61}},type:"if",locations:[{start:{line:1059,column:4},end:{line:1060,column:61}},{start:{line:1059,column:4},end:{line:1060,column:61}}],line:1059},"60":{loc:{start:{line:1110,column:4},end:{line:1111,column:19}},type:"if",locations:[{start:{line:1110,column:4},end:{line:1111,column:19}},{start:{line:1110,column:4},end:{line:1111,column:19}}],line:1110},"61":{loc:{start:{line:1113,column:17},end:{line:1113,column:37}},type:"binary-expr",locations:[{start:{line:1113,column:17},end:{line:1113,column:32}},{start:{line:1113,column:36},end:{line:1113,column:37}}],line:1113},"62":{loc:{start:{line:1116,column:4},end:{line:1117,column:44}},type:"if",locations:[{start:{line:1116,column:4},end:{line:1117,column:44}},{start:{line:1116,column:4},end:{line:1117,column:44}}],line:1116},"63":{loc:{start:{line:1120,column:4},end:{line:1121,column:56}},type:"if",locations:[{start:{line:1120,column:4},end:{line:1121,column:56}},{start:{line:1120,column:4},end:{line:1121,column:56}}],line:1120},"64":{loc:{start:{line:1124,column:4},end:{line:1129,column:5}},type:"if",locations:[{start:{line:1124,column:4},end:{line:1129,column:5}},{start:{line:1124,column:4},end:{line:1129,column:5}}],line:1124},"65":{loc:{start:{line:1158,column:4},end:{line:1159,column:18}},type:"if",locations:[{start:{line:1158,column:4},end:{line:1159,column:18}},{start:{line:1158,column:4},end:{line:1159,column:18}}],line:1158},"66":{loc:{start:{line:1174,column:4},end:{line:1175,column:16}},type:"if",locations:[{start:{line:1174,column:4},end:{line:1175,column:16}},{start:{line:1174,column:4},end:{line:1175,column:16}}],line:1174},"67":{loc:{start:{line:1179,column:4},end:{line:1180,column:16}},type:"if",locations:[{start:{line:1179,column:4},end:{line:1180,column:16}},{start:{line:1179,column:4},end:{line:1180,column:16}}],line:1179},"68":{loc:{start:{line:1184,column:4},end:{line:1198,column:5}},type:"if",locations:[{start:{line:1184,column:4},end:{line:1198,column:5}},{start:{line:1184,column:4},end:{line:1198,column:5}}],line:1184},"69":{loc:{start:{line:1186,column:6},end:{line:1197,column:7}},type:"if",locations:[{start:{line:1186,column:6},end:{line:1197,column:7}},{start:{line:1186,column:6},end:{line:1197,column:7}}],line:1186},"70":{loc:{start:{line:1187,column:8},end:{line:1196,column:9}},type:"switch",locations:[{start:{line:1188,column:10},end:{line:1191,column:18}},{start:{line:1192,column:10},end:{line:1195,column:18}}],line:1187},"71":{loc:{start:{line:1200,column:4},end:{line:1225,column:5}},type:"switch",locations:[{start:{line:1201,column:6},end:{line:1207,column:14}},{start:{line:1208,column:6},end:{line:1224,column:14}}],line:1200},"72":{loc:{start:{line:1227,column:4},end:{line:1237,column:5}},type:"if",locations:[{start:{line:1227,column:4},end:{line:1237,column:5}},{start:{line:1227,column:4},end:{line:1237,column:5}}],line:1227},"73":{loc:{start:{line:1266,column:6},end:{line:1267,column:43}},type:"if",locations:[{start:{line:1266,column:6},end:{line:1267,column:43}},{start:{line:1266,column:6},end:{line:1267,column:43}}],line:1266},"74":{loc:{start:{line:1269,column:6},end:{line:1275,column:7}},type:"if",locations:[{start:{line:1269,column:6},end:{line:1275,column:7}},{start:{line:1269,column:6},end:{line:1275,column:7}}],line:1269},"75":{loc:{start:{line:1270,column:8},end:{line:1271,column:61}},type:"if",locations:[{start:{line:1270,column:8},end:{line:1271,column:61}},{start:{line:1270,column:8},end:{line:1271,column:61}}],line:1270},"76":{loc:{start:{line:1273,column:8},end:{line:1274,column:58}},type:"if",locations:[{start:{line:1273,column:8},end:{line:1274,column:58}},{start:{line:1273,column:8},end:{line:1274,column:58}}],line:1273},"77":{loc:{start:{line:1284,column:4},end:{line:1285,column:24}},type:"if",locations:[{start:{line:1284,column:4},end:{line:1285,column:24}},{start:{line:1284,column:4},end:{line:1285,column:24}}],line:1284},"78":{loc:{start:{line:1288,column:4},end:{line:1289,column:40}},type:"if",locations:[{start:{line:1288,column:4},end:{line:1289,column:40}},{start:{line:1288,column:4},end:{line:1289,column:40}}],line:1288},"79":{loc:{start:{line:1296,column:4},end:{line:1297,column:17}},type:"if",locations:[{start:{line:1296,column:4},end:{line:1297,column:17}},{start:{line:1296,column:4},end:{line:1297,column:17}}],line:1296},"80":{loc:{start:{line:1301,column:4},end:{line:1302,column:44}},type:"if",locations:[{start:{line:1301,column:4},end:{line:1302,column:44}},{start:{line:1301,column:4},end:{line:1302,column:44}}],line:1301},"81":{loc:{start:{line:1339,column:4},end:{line:1340,column:55}},type:"if",locations:[{start:{line:1339,column:4},end:{line:1340,column:55}},{start:{line:1339,column:4},end:{line:1340,column:55}}],line:1339},"82":{loc:{start:{line:1345,column:4},end:{line:1346,column:51}},type:"if",locations:[{start:{line:1345,column:4},end:{line:1346,column:51}},{start:{line:1345,column:4},end:{line:1346,column:51}}],line:1345},"83":{loc:{start:{line:1348,column:4},end:{line:1349,column:51}},type:"if",locations:[{start:{line:1348,column:4},end:{line:1349,column:51}},{start:{line:1348,column:4},end:{line:1349,column:51}}],line:1348},"84":{loc:{start:{line:1352,column:4},end:{line:1353,column:67}},type:"if",locations:[{start:{line:1352,column:4},end:{line:1353,column:67}},{start:{line:1352,column:4},end:{line:1353,column:67}}],line:1352},"85":{loc:{start:{line:1378,column:4},end:{line:1379,column:48}},type:"if",locations:[{start:{line:1378,column:4},end:{line:1379,column:48}},{start:{line:1378,column:4},end:{line:1379,column:48}}],line:1378},"86":{loc:{start:{line:1381,column:4},end:{line:1382,column:51}},type:"if",locations:[{start:{line:1381,column:4},end:{line:1382,column:51}},{start:{line:1381,column:4},end:{line:1382,column:51}}],line:1381},"87":{loc:{start:{line:1386,column:4},end:{line:1387,column:52}},type:"if",locations:[{start:{line:1386,column:4},end:{line:1387,column:52}},{start:{line:1386,column:4},end:{line:1387,column:52}}],line:1386},"88":{loc:{start:{line:1391,column:4},end:{line:1392,column:50}},type:"if",locations:[{start:{line:1391,column:4},end:{line:1392,column:50}},{start:{line:1391,column:4},end:{line:1392,column:50}}],line:1391},"89":{loc:{start:{line:1398,column:4},end:{line:1399,column:33}},type:"if",locations:[{start:{line:1398,column:4},end:{line:1399,column:33}},{start:{line:1398,column:4},end:{line:1399,column:33}}],line:1398},"90":{loc:{start:{line:1401,column:4},end:{line:1402,column:48}},type:"if",locations:[{start:{line:1401,column:4},end:{line:1402,column:48}},{start:{line:1401,column:4},end:{line:1402,column:48}}],line:1401},"91":{loc:{start:{line:1417,column:6},end:{line:1418,column:17}},type:"if",locations:[{start:{line:1417,column:6},end:{line:1418,column:17}},{start:{line:1417,column:6},end:{line:1418,column:17}}],line:1417},"92":{loc:{start:{line:1422,column:6},end:{line:1423,column:17}},type:"if",locations:[{start:{line:1422,column:6},end:{line:1423,column:17}},{start:{line:1422,column:6},end:{line:1423,column:17}}],line:1422},"93":{loc:{start:{line:1425,column:6},end:{line:1429,column:7}},type:"if",locations:[{start:{line:1425,column:6},end:{line:1429,column:7}},{start:{line:1425,column:6},end:{line:1429,column:7}}],line:1425},"94":{loc:{start:{line:1432,column:4},end:{line:1433,column:43}},type:"if",locations:[{start:{line:1432,column:4},end:{line:1433,column:43}},{start:{line:1432,column:4},end:{line:1433,column:43}}],line:1432},"95":{loc:{start:{line:1437,column:4},end:{line:1438,column:54}},type:"if",locations:[{start:{line:1437,column:4},end:{line:1438,column:54}},{start:{line:1437,column:4},end:{line:1438,column:54}}],line:1437},"96":{loc:{start:{line:1442,column:4},end:{line:1443,column:42}},type:"if",locations:[{start:{line:1442,column:4},end:{line:1443,column:42}},{start:{line:1442,column:4},end:{line:1443,column:42}}],line:1442},"97":{loc:{start:{line:1445,column:4},end:{line:1448,column:5}},type:"if",locations:[{start:{line:1445,column:4},end:{line:1448,column:5}},{start:{line:1445,column:4},end:{line:1448,column:5}}],line:1445},"98":{loc:{start:{line:1452,column:4},end:{line:1453,column:55}},type:"if",locations:[{start:{line:1452,column:4},end:{line:1453,column:55}},{start:{line:1452,column:4},end:{line:1453,column:55}}],line:1452},"99":{loc:{start:{line:1475,column:4},end:{line:1476,column:71}},type:"if",locations:[{start:{line:1475,column:4},end:{line:1476,column:71}},{start:{line:1475,column:4},end:{line:1476,column:71}}],line:1475},"100":{loc:{start:{line:1507,column:6},end:{line:1508,column:17}},type:"if",locations:[{start:{line:1507,column:6},end:{line:1508,column:17}},{start:{line:1507,column:6},end:{line:1508,column:17}}],line:1507},"101":{loc:{start:{line:1512,column:6},end:{line:1513,column:25}},type:"if",locations:[{start:{line:1512,column:6},end:{line:1513,column:25}},{start:{line:1512,column:6},end:{line:1513,column:25}}],line:1512},"102":{loc:{start:{line:1529,column:4},end:{line:1530,column:18}},type:"if",locations:[{start:{line:1529,column:4},end:{line:1530,column:18}},{start:{line:1529,column:4},end:{line:1530,column:18}}],line:1529},"103":{loc:{start:{line:1534,column:4},end:{line:1535,column:18}},type:"if",locations:[{start:{line:1534,column:4},end:{line:1535,column:18}},{start:{line:1534,column:4},end:{line:1535,column:18}}],line:1534},"104":{loc:{start:{line:1552,column:4},end:{line:1553,column:18}},type:"if",locations:[{start:{line:1552,column:4},end:{line:1553,column:18}},{start:{line:1552,column:4},end:{line:1553,column:18}}],line:1552},"105":{loc:{start:{line:1557,column:4},end:{line:1558,column:18}},type:"if",locations:[{start:{line:1557,column:4},end:{line:1558,column:18}},{start:{line:1557,column:4},end:{line:1558,column:18}}],line:1557},"106":{loc:{start:{line:1564,column:4},end:{line:1565,column:18}},type:"if",locations:[{start:{line:1564,column:4},end:{line:1565,column:18}},{start:{line:1564,column:4},end:{line:1565,column:18}}],line:1564},"107":{loc:{start:{line:1579,column:4},end:{line:1580,column:50}},type:"if",locations:[{start:{line:1579,column:4},end:{line:1580,column:50}},{start:{line:1579,column:4},end:{line:1580,column:50}}],line:1579},"108":{loc:{start:{line:1587,column:6},end:{line:1588,column:25}},type:"if",locations:[{start:{line:1587,column:6},end:{line:1588,column:25}},{start:{line:1587,column:6},end:{line:1588,column:25}}],line:1587},"109":{loc:{start:{line:1606,column:6},end:{line:1607,column:25}},type:"if",locations:[{start:{line:1606,column:6},end:{line:1607,column:25}},{start:{line:1606,column:6},end:{line:1607,column:25}}],line:1606},"110":{loc:{start:{line:1640,column:4},end:{line:1641,column:44}},type:"if",locations:[{start:{line:1640,column:4},end:{line:1641,column:44}},{start:{line:1640,column:4},end:{line:1641,column:44}}],line:1640},"111":{loc:{start:{line:1662,column:6},end:{line:1663,column:17}},type:"if",locations:[{start:{line:1662,column:6},end:{line:1663,column:17}},{start:{line:1662,column:6},end:{line:1663,column:17}}],line:1662},"112":{loc:{start:{line:1665,column:6},end:{line:1666,column:17}},type:"if",locations:[{start:{line:1665,column:6},end:{line:1666,column:17}},{start:{line:1665,column:6},end:{line:1666,column:17}}],line:1665},"113":{loc:{start:{line:1668,column:6},end:{line:1669,column:34}},type:"if",locations:[{start:{line:1668,column:6},end:{line:1669,column:34}},{start:{line:1668,column:6},end:{line:1669,column:34}}],line:1668},"114":{loc:{start:{line:1683,column:8},end:{line:1696,column:9}},type:"switch",locations:[{start:{line:1684,column:10},end:{line:1687,column:18}},{start:{line:1688,column:10},end:{line:1691,column:18}},{start:{line:1692,column:10},end:{line:1695,column:18}}],line:1683},"115":{loc:{start:{line:1685,column:12},end:{line:1686,column:35}},type:"if",locations:[{start:{line:1685,column:12},end:{line:1686,column:35}},{start:{line:1685,column:12},end:{line:1686,column:35}}],line:1685},"116":{loc:{start:{line:1689,column:12},end:{line:1690,column:34}},type:"if",locations:[{start:{line:1689,column:12},end:{line:1690,column:34}},{start:{line:1689,column:12},end:{line:1690,column:34}}],line:1689},"117":{loc:{start:{line:1693,column:12},end:{line:1694,column:34}},type:"if",locations:[{start:{line:1693,column:12},end:{line:1694,column:34}},{start:{line:1693,column:12},end:{line:1694,column:34}}],line:1693},"118":{loc:{start:{line:1708,column:6},end:{line:1709,column:27}},type:"if",locations:[{start:{line:1708,column:6},end:{line:1709,column:27}},{start:{line:1708,column:6},end:{line:1709,column:27}}],line:1708},"119":{loc:{start:{line:1741,column:4},end:{line:1742,column:63}},type:"if",locations:[{start:{line:1741,column:4},end:{line:1742,column:63}},{start:{line:1741,column:4},end:{line:1742,column:63}}],line:1741},"120":{loc:{start:{line:1772,column:6},end:{line:1773,column:17}},type:"if",locations:[{start:{line:1772,column:6},end:{line:1773,column:17}},{start:{line:1772,column:6},end:{line:1773,column:17}}],line:1772},"121":{loc:{start:{line:1775,column:6},end:{line:1776,column:17}},type:"if",locations:[{start:{line:1775,column:6},end:{line:1776,column:17}},{start:{line:1775,column:6},end:{line:1776,column:17}}],line:1775},"122":{loc:{start:{line:1780,column:6},end:{line:1781,column:14}},type:"if",locations:[{start:{line:1780,column:6},end:{line:1781,column:14}},{start:{line:1780,column:6},end:{line:1781,column:14}}],line:1780},"123":{loc:{start:{line:1786,column:6},end:{line:1787,column:14}},type:"if",locations:[{start:{line:1786,column:6},end:{line:1787,column:14}},{start:{line:1786,column:6},end:{line:1787,column:14}}],line:1786},"124":{loc:{start:{line:1909,column:4},end:{line:1915,column:5}},type:"if",locations:[{start:{line:1909,column:4},end:{line:1915,column:5}},{start:{line:1909,column:4},end:{line:1915,column:5}}],line:1909},"125":{loc:{start:{line:1911,column:6},end:{line:1914,column:7}},type:"if",locations:[{start:{line:1911,column:6},end:{line:1914,column:7}},{start:{line:1911,column:6},end:{line:1914,column:7}}],line:1911},"126":{loc:{start:{line:2095,column:6},end:{line:2096,column:17}},type:"if",locations:[{start:{line:2095,column:6},end:{line:2096,column:17}},{start:{line:2095,column:6},end:{line:2096,column:17}}],line:2095},"127":{loc:{start:{line:2098,column:6},end:{line:2099,column:17}},type:"if",locations:[{start:{line:2098,column:6},end:{line:2099,column:17}},{start:{line:2098,column:6},end:{line:2099,column:17}}],line:2098},"128":{loc:{start:{line:2102,column:6},end:{line:2105,column:7}},type:"if",locations:[{start:{line:2102,column:6},end:{line:2105,column:7}},{start:{line:2102,column:6},end:{line:2105,column:7}}],line:2102},"129":{loc:{start:{line:2112,column:6},end:{line:2113,column:17}},type:"if",locations:[{start:{line:2112,column:6},end:{line:2113,column:17}},{start:{line:2112,column:6},end:{line:2113,column:17}}],line:2112},"130":{loc:{start:{line:2175,column:19},end:{line:2175,column:27}},type:"default-arg",locations:[{start:{line:2175,column:26},end:{line:2175,column:27}}],line:2175},"131":{loc:{start:{line:2177,column:4},end:{line:2178,column:44}},type:"if",locations:[{start:{line:2177,column:4},end:{line:2178,column:44}},{start:{line:2177,column:4},end:{line:2178,column:44}}],line:2177},"132":{loc:{start:{line:2188,column:21},end:{line:2188,column:29}},type:"default-arg",locations:[{start:{line:2188,column:28},end:{line:2188,column:29}}],line:2188},"133":{loc:{start:{line:2190,column:4},end:{line:2191,column:44}},type:"if",locations:[{start:{line:2190,column:4},end:{line:2191,column:44}},{start:{line:2190,column:4},end:{line:2191,column:44}}],line:2190},"134":{loc:{start:{line:2201,column:20},end:{line:2201,column:28}},type:"default-arg",locations:[{start:{line:2201,column:27},end:{line:2201,column:28}}],line:2201},"135":{loc:{start:{line:2203,column:4},end:{line:2204,column:44}},type:"if",locations:[{start:{line:2203,column:4},end:{line:2204,column:44}},{start:{line:2203,column:4},end:{line:2204,column:44}}],line:2203},"136":{loc:{start:{line:2214,column:20},end:{line:2214,column:28}},type:"default-arg",locations:[{start:{line:2214,column:27},end:{line:2214,column:28}}],line:2214},"137":{loc:{start:{line:2216,column:4},end:{line:2217,column:44}},type:"if",locations:[{start:{line:2216,column:4},end:{line:2217,column:44}},{start:{line:2216,column:4},end:{line:2217,column:44}}],line:2216},"138":{loc:{start:{line:2227,column:23},end:{line:2227,column:31}},type:"default-arg",locations:[{start:{line:2227,column:30},end:{line:2227,column:31}}],line:2227},"139":{loc:{start:{line:2229,column:4},end:{line:2230,column:44}},type:"if",locations:[{start:{line:2229,column:4},end:{line:2230,column:44}},{start:{line:2229,column:4},end:{line:2230,column:44}}],line:2229},"140":{loc:{start:{line:2240,column:22},end:{line:2240,column:30}},type:"default-arg",locations:[{start:{line:2240,column:29},end:{line:2240,column:30}}],line:2240},"141":{loc:{start:{line:2242,column:4},end:{line:2243,column:44}},type:"if",locations:[{start:{line:2242,column:4},end:{line:2243,column:44}},{start:{line:2242,column:4},end:{line:2243,column:44}}],line:2242},"142":{loc:{start:{line:2253,column:22},end:{line:2253,column:30}},type:"default-arg",locations:[{start:{line:2253,column:29},end:{line:2253,column:30}}],line:2253},"143":{loc:{start:{line:2255,column:4},end:{line:2256,column:44}},type:"if",locations:[{start:{line:2255,column:4},end:{line:2256,column:44}},{start:{line:2255,column:4},end:{line:2256,column:44}}],line:2255},"144":{loc:{start:{line:2266,column:19},end:{line:2266,column:27}},type:"default-arg",locations:[{start:{line:2266,column:26},end:{line:2266,column:27}}],line:2266},"145":{loc:{start:{line:2268,column:4},end:{line:2269,column:44}},type:"if",locations:[{start:{line:2268,column:4},end:{line:2269,column:44}},{start:{line:2268,column:4},end:{line:2269,column:44}}],line:2268},"146":{loc:{start:{line:2279,column:18},end:{line:2279,column:26}},type:"default-arg",locations:[{start:{line:2279,column:25},end:{line:2279,column:26}}],line:2279},"147":{loc:{start:{line:2281,column:4},end:{line:2282,column:44}},type:"if",locations:[{start:{line:2281,column:4},end:{line:2282,column:44}},{start:{line:2281,column:4},end:{line:2282,column:44}}],line:2281},"148":{loc:{start:{line:2292,column:18},end:{line:2292,column:26}},type:"default-arg",locations:[{start:{line:2292,column:25},end:{line:2292,column:26}}],line:2292},"149":{loc:{start:{line:2294,column:4},end:{line:2295,column:44}},type:"if",locations:[{start:{line:2294,column:4},end:{line:2295,column:44}},{start:{line:2294,column:4},end:{line:2295,column:44}}],line:2294},"150":{loc:{start:{line:2334,column:15},end:{line:2334,column:52}},type:"cond-expr",locations:[{start:{line:2334,column:25},end:{line:2334,column:45}},{start:{line:2334,column:48},end:{line:2334,column:52}}],line:2334},"151":{loc:{start:{line:2361,column:4},end:{line:2362,column:17}},type:"if",locations:[{start:{line:2361,column:4},end:{line:2362,column:17}},{start:{line:2361,column:4},end:{line:2362,column:17}}],line:2361}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0],"44":[0],"45":[0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0],"131":[0,0],"132":[0],"133":[0,0],"134":[0],"135":[0,0],"136":[0],"137":[0,0],"138":[0],"139":[0,0],"140":[0],"141":[0,0],"142":[0],"143":[0,0],"144":[0],"145":[0,0],"146":[0],"147":[0,0],"148":[0],"149":[0,0],"150":[0,0],"151":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"a50b6f191534de5ee5313bcc1ee75910fd8e530f"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_a5r0d9ek1=function(){return actualCoverage;};}return actualCoverage;}cov_a5r0d9ek1();const assert=(cov_a5r0d9ek1().s[0]++,require('bsert'));const EventEmitter=(cov_a5r0d9ek1().s[1]++,require('events'));const{Lock}=(cov_a5r0d9ek1().s[2]++,require('bmutex'));const base58=(cov_a5r0d9ek1().s[3]++,require('bcrypto/lib/encoding/base58'));const bio=(cov_a5r0d9ek1().s[4]++,require('bufio'));const hash160=(cov_a5r0d9ek1().s[5]++,require('bcrypto/lib/hash160'));const hash256=(cov_a5r0d9ek1().s[6]++,require('bcrypto/lib/hash256'));const cleanse=(cov_a5r0d9ek1().s[7]++,require('bcrypto/lib/cleanse'));const TXDB=(cov_a5r0d9ek1().s[8]++,require('./txdb'));const Path=(cov_a5r0d9ek1().s[9]++,require('./path'));const common=(cov_a5r0d9ek1().s[10]++,require('./common'));const Address=(cov_a5r0d9ek1().s[11]++,require('../primitives/address'));const MTX=(cov_a5r0d9ek1().s[12]++,require('../primitives/mtx'));const Script=(cov_a5r0d9ek1().s[13]++,require('../script/script'));const WalletKey=(cov_a5r0d9ek1().s[14]++,require('./walletkey'));const HD=(cov_a5r0d9ek1().s[15]++,require('../hd/hd'));const Output=(cov_a5r0d9ek1().s[16]++,require('../primitives/output'));const Account=(cov_a5r0d9ek1().s[17]++,require('./account'));const MasterKey=(cov_a5r0d9ek1().s[18]++,require('./masterkey'));const policy=(cov_a5r0d9ek1().s[19]++,require('../protocol/policy'));const consensus=(cov_a5r0d9ek1().s[20]++,require('../protocol/consensus'));const{encoding}=(cov_a5r0d9ek1().s[21]++,bio);const{Mnemonic}=(cov_a5r0d9ek1().s[22]++,HD);const{inspectSymbol}=(cov_a5r0d9ek1().s[23]++,require('../utils'));const{BufferSet}=(cov_a5r0d9ek1().s[24]++,require('buffer-map'));/**
 * Wallet
 * @alias module:wallet.Wallet
 * @extends EventEmitter
 */class Wallet extends EventEmitter{/**
   * Create a wallet.
   * @constructor
   * @param {Object} options
   */constructor(wdb,options){cov_a5r0d9ek1().f[0]++;cov_a5r0d9ek1().s[25]++;super();cov_a5r0d9ek1().s[26]++;assert(wdb,'WDB required.');cov_a5r0d9ek1().s[27]++;this.wdb=wdb;cov_a5r0d9ek1().s[28]++;this.db=wdb.db;cov_a5r0d9ek1().s[29]++;this.network=wdb.network;cov_a5r0d9ek1().s[30]++;this.logger=wdb.logger;cov_a5r0d9ek1().s[31]++;this.writeLock=new Lock();cov_a5r0d9ek1().s[32]++;this.fundLock=new Lock();cov_a5r0d9ek1().s[33]++;this.wid=0;cov_a5r0d9ek1().s[34]++;this.id=null;cov_a5r0d9ek1().s[35]++;this.watchOnly=false;cov_a5r0d9ek1().s[36]++;this.accountDepth=0;cov_a5r0d9ek1().s[37]++;this.token=consensus.ZERO_HASH;cov_a5r0d9ek1().s[38]++;this.tokenDepth=0;cov_a5r0d9ek1().s[39]++;this.master=new MasterKey();cov_a5r0d9ek1().s[40]++;this.txdb=new TXDB(this.wdb);cov_a5r0d9ek1().s[41]++;this.maxAncestors=policy.MEMPOOL_MAX_ANCESTORS;cov_a5r0d9ek1().s[42]++;if(options){cov_a5r0d9ek1().b[0][0]++;cov_a5r0d9ek1().s[43]++;this.fromOptions(options);}else{cov_a5r0d9ek1().b[0][1]++;}}/**
   * Inject properties from options object.
   * @private
   * @param {Object} options
   */fromOptions(options){cov_a5r0d9ek1().f[1]++;cov_a5r0d9ek1().s[44]++;if(!options){cov_a5r0d9ek1().b[1][0]++;cov_a5r0d9ek1().s[45]++;return this;}else{cov_a5r0d9ek1().b[1][1]++;}let key=(cov_a5r0d9ek1().s[46]++,options.master);let id,token,mnemonic;cov_a5r0d9ek1().s[47]++;if(key){cov_a5r0d9ek1().b[2][0]++;cov_a5r0d9ek1().s[48]++;if(typeof key==='string'){cov_a5r0d9ek1().b[3][0]++;cov_a5r0d9ek1().s[49]++;key=HD.PrivateKey.fromBase58(key,this.network);}else{cov_a5r0d9ek1().b[3][1]++;}cov_a5r0d9ek1().s[50]++;assert(HD.isPrivate(key),'Must create wallet with hd private key.');}else{cov_a5r0d9ek1().b[2][1]++;cov_a5r0d9ek1().s[51]++;mnemonic=new Mnemonic(options.mnemonic);cov_a5r0d9ek1().s[52]++;key=HD.fromMnemonic(mnemonic,options.password);}cov_a5r0d9ek1().s[53]++;this.master.fromKey(key,mnemonic);cov_a5r0d9ek1().s[54]++;if(options.wid!=null){cov_a5r0d9ek1().b[4][0]++;cov_a5r0d9ek1().s[55]++;assert(options.wid>>>0===options.wid);cov_a5r0d9ek1().s[56]++;this.wid=options.wid;}else{cov_a5r0d9ek1().b[4][1]++;}cov_a5r0d9ek1().s[57]++;if(options.id){cov_a5r0d9ek1().b[5][0]++;cov_a5r0d9ek1().s[58]++;assert(common.isName(options.id),'Bad wallet ID.');cov_a5r0d9ek1().s[59]++;id=options.id;}else{cov_a5r0d9ek1().b[5][1]++;}cov_a5r0d9ek1().s[60]++;if(options.watchOnly!=null){cov_a5r0d9ek1().b[6][0]++;cov_a5r0d9ek1().s[61]++;assert(typeof options.watchOnly==='boolean');cov_a5r0d9ek1().s[62]++;this.watchOnly=options.watchOnly;}else{cov_a5r0d9ek1().b[6][1]++;}cov_a5r0d9ek1().s[63]++;if(options.accountDepth!=null){cov_a5r0d9ek1().b[7][0]++;cov_a5r0d9ek1().s[64]++;assert(options.accountDepth>>>0===options.accountDepth);cov_a5r0d9ek1().s[65]++;this.accountDepth=options.accountDepth;}else{cov_a5r0d9ek1().b[7][1]++;}cov_a5r0d9ek1().s[66]++;if(options.token){cov_a5r0d9ek1().b[8][0]++;cov_a5r0d9ek1().s[67]++;assert(Buffer.isBuffer(options.token));cov_a5r0d9ek1().s[68]++;assert(options.token.length===32);cov_a5r0d9ek1().s[69]++;token=options.token;}else{cov_a5r0d9ek1().b[8][1]++;}cov_a5r0d9ek1().s[70]++;if(options.tokenDepth!=null){cov_a5r0d9ek1().b[9][0]++;cov_a5r0d9ek1().s[71]++;assert(options.tokenDepth>>>0===options.tokenDepth);cov_a5r0d9ek1().s[72]++;this.tokenDepth=options.tokenDepth;}else{cov_a5r0d9ek1().b[9][1]++;}cov_a5r0d9ek1().s[73]++;if(options.maxAncestors!=null){cov_a5r0d9ek1().b[10][0]++;cov_a5r0d9ek1().s[74]++;assert(options.maxAncestors>>>0===options.maxAncestors);cov_a5r0d9ek1().s[75]++;this.maxAncestors=options.maxAncestors;}else{cov_a5r0d9ek1().b[10][1]++;}cov_a5r0d9ek1().s[76]++;if(!id){cov_a5r0d9ek1().b[11][0]++;cov_a5r0d9ek1().s[77]++;id=this.getID();}else{cov_a5r0d9ek1().b[11][1]++;}cov_a5r0d9ek1().s[78]++;if(!token){cov_a5r0d9ek1().b[12][0]++;cov_a5r0d9ek1().s[79]++;token=this.getToken(this.tokenDepth);}else{cov_a5r0d9ek1().b[12][1]++;}cov_a5r0d9ek1().s[80]++;this.id=id;cov_a5r0d9ek1().s[81]++;this.token=token;cov_a5r0d9ek1().s[82]++;return this;}/**
   * Instantiate wallet from options.
   * @param {WalletDB} wdb
   * @param {Object} options
   * @returns {Wallet}
   */static fromOptions(wdb,options){cov_a5r0d9ek1().f[2]++;cov_a5r0d9ek1().s[83]++;return new this(wdb).fromOptions(options);}/**
   * Attempt to intialize the wallet (generating
   * the first addresses along with the lookahead
   * addresses). Called automatically from the
   * walletdb.
   * @returns {Promise}
   */async init(options,passphrase){cov_a5r0d9ek1().f[3]++;cov_a5r0d9ek1().s[84]++;if(passphrase){cov_a5r0d9ek1().b[13][0]++;cov_a5r0d9ek1().s[85]++;await this.master.encrypt(passphrase);}else{cov_a5r0d9ek1().b[13][1]++;}const account=(cov_a5r0d9ek1().s[86]++,await this._createAccount(options,passphrase));cov_a5r0d9ek1().s[87]++;assert(account);cov_a5r0d9ek1().s[88]++;this.logger.info('Wallet initialized (%s).',this.id);cov_a5r0d9ek1().s[89]++;return this.txdb.open(this);}/**
   * Open wallet (done after retrieval).
   * @returns {Promise}
   */async open(){cov_a5r0d9ek1().f[4]++;const account=(cov_a5r0d9ek1().s[90]++,await this.getAccount(0));cov_a5r0d9ek1().s[91]++;if(!account){cov_a5r0d9ek1().b[14][0]++;cov_a5r0d9ek1().s[92]++;throw new Error('Default account not found.');}else{cov_a5r0d9ek1().b[14][1]++;}cov_a5r0d9ek1().s[93]++;this.logger.info('Wallet opened (%s).',this.id);cov_a5r0d9ek1().s[94]++;return this.txdb.open(this);}/**
   * Close the wallet, unregister with the database.
   * @returns {Promise}
   */async destroy(){cov_a5r0d9ek1().f[5]++;const unlock1=(cov_a5r0d9ek1().s[95]++,await this.writeLock.lock());const unlock2=(cov_a5r0d9ek1().s[96]++,await this.fundLock.lock());cov_a5r0d9ek1().s[97]++;try{cov_a5r0d9ek1().s[98]++;await this.master.destroy();cov_a5r0d9ek1().s[99]++;this.writeLock.destroy();cov_a5r0d9ek1().s[100]++;this.fundLock.destroy();}finally{cov_a5r0d9ek1().s[101]++;unlock2();cov_a5r0d9ek1().s[102]++;unlock1();}}/**
   * Add a public account key to the wallet (multisig).
   * Saves the key in the wallet database.
   * @param {(Number|String)} acct
   * @param {HDPublicKey} key
   * @returns {Promise}
   */async addSharedKey(acct,key){cov_a5r0d9ek1().f[6]++;const unlock=(cov_a5r0d9ek1().s[103]++,await this.writeLock.lock());cov_a5r0d9ek1().s[104]++;try{cov_a5r0d9ek1().s[105]++;return await this._addSharedKey(acct,key);}finally{cov_a5r0d9ek1().s[106]++;unlock();}}/**
   * Add a public account key to the wallet without a lock.
   * @private
   * @param {(Number|String)} acct
   * @param {HDPublicKey} key
   * @returns {Promise}
   */async _addSharedKey(acct,key){cov_a5r0d9ek1().f[7]++;const account=(cov_a5r0d9ek1().s[107]++,await this.getAccount(acct));cov_a5r0d9ek1().s[108]++;if(!account){cov_a5r0d9ek1().b[15][0]++;cov_a5r0d9ek1().s[109]++;throw new Error('Account not found.');}else{cov_a5r0d9ek1().b[15][1]++;}const b=(cov_a5r0d9ek1().s[110]++,this.db.batch());const result=(cov_a5r0d9ek1().s[111]++,await account.addSharedKey(b,key));cov_a5r0d9ek1().s[112]++;await b.write();cov_a5r0d9ek1().s[113]++;return result;}/**
   * Remove a public account key from the wallet (multisig).
   * @param {(Number|String)} acct
   * @param {HDPublicKey} key
   * @returns {Promise}
   */async removeSharedKey(acct,key){cov_a5r0d9ek1().f[8]++;const unlock=(cov_a5r0d9ek1().s[114]++,await this.writeLock.lock());cov_a5r0d9ek1().s[115]++;try{cov_a5r0d9ek1().s[116]++;return await this._removeSharedKey(acct,key);}finally{cov_a5r0d9ek1().s[117]++;unlock();}}/**
   * Remove a public account key from the wallet (multisig).
   * @private
   * @param {(Number|String)} acct
   * @param {HDPublicKey} key
   * @returns {Promise}
   */async _removeSharedKey(acct,key){cov_a5r0d9ek1().f[9]++;const account=(cov_a5r0d9ek1().s[118]++,await this.getAccount(acct));cov_a5r0d9ek1().s[119]++;if(!account){cov_a5r0d9ek1().b[16][0]++;cov_a5r0d9ek1().s[120]++;throw new Error('Account not found.');}else{cov_a5r0d9ek1().b[16][1]++;}const b=(cov_a5r0d9ek1().s[121]++,this.db.batch());const result=(cov_a5r0d9ek1().s[122]++,await account.removeSharedKey(b,key));cov_a5r0d9ek1().s[123]++;await b.write();cov_a5r0d9ek1().s[124]++;return result;}/**
   * Change or set master key's passphrase.
   * @param {String|Buffer} passphrase
   * @param {String|Buffer} old
   * @returns {Promise}
   */async setPassphrase(passphrase,old){cov_a5r0d9ek1().f[10]++;cov_a5r0d9ek1().s[125]++;if(old!=null){cov_a5r0d9ek1().b[17][0]++;cov_a5r0d9ek1().s[126]++;await this.decrypt(old);}else{cov_a5r0d9ek1().b[17][1]++;}cov_a5r0d9ek1().s[127]++;await this.encrypt(passphrase);}/**
   * Encrypt the wallet permanently.
   * @param {String|Buffer} passphrase
   * @returns {Promise}
   */async encrypt(passphrase){cov_a5r0d9ek1().f[11]++;const unlock=(cov_a5r0d9ek1().s[128]++,await this.writeLock.lock());cov_a5r0d9ek1().s[129]++;try{cov_a5r0d9ek1().s[130]++;return await this._encrypt(passphrase);}finally{cov_a5r0d9ek1().s[131]++;unlock();}}/**
   * Encrypt the wallet permanently, without a lock.
   * @private
   * @param {String|Buffer} passphrase
   * @returns {Promise}
   */async _encrypt(passphrase){cov_a5r0d9ek1().f[12]++;const key=(cov_a5r0d9ek1().s[132]++,await this.master.encrypt(passphrase,true));const b=(cov_a5r0d9ek1().s[133]++,this.db.batch());cov_a5r0d9ek1().s[134]++;try{cov_a5r0d9ek1().s[135]++;await this.wdb.encryptKeys(b,this.wid,key);}finally{cov_a5r0d9ek1().s[136]++;cleanse(key);}cov_a5r0d9ek1().s[137]++;this.save(b);cov_a5r0d9ek1().s[138]++;await b.write();}/**
   * Decrypt the wallet permanently.
   * @param {String|Buffer} passphrase
   * @returns {Promise}
   */async decrypt(passphrase){cov_a5r0d9ek1().f[13]++;const unlock=(cov_a5r0d9ek1().s[139]++,await this.writeLock.lock());cov_a5r0d9ek1().s[140]++;try{cov_a5r0d9ek1().s[141]++;return await this._decrypt(passphrase);}finally{cov_a5r0d9ek1().s[142]++;unlock();}}/**
   * Decrypt the wallet permanently, without a lock.
   * @private
   * @param {String|Buffer} passphrase
   * @returns {Promise}
   */async _decrypt(passphrase){cov_a5r0d9ek1().f[14]++;const key=(cov_a5r0d9ek1().s[143]++,await this.master.decrypt(passphrase,true));const b=(cov_a5r0d9ek1().s[144]++,this.db.batch());cov_a5r0d9ek1().s[145]++;try{cov_a5r0d9ek1().s[146]++;await this.wdb.decryptKeys(b,this.wid,key);}finally{cov_a5r0d9ek1().s[147]++;cleanse(key);}cov_a5r0d9ek1().s[148]++;this.save(b);cov_a5r0d9ek1().s[149]++;await b.write();}/**
   * Generate a new token.
   * @param {(String|Buffer)?} passphrase
   * @returns {Promise}
   */async retoken(passphrase){cov_a5r0d9ek1().f[15]++;const unlock=(cov_a5r0d9ek1().s[150]++,await this.writeLock.lock());cov_a5r0d9ek1().s[151]++;try{cov_a5r0d9ek1().s[152]++;return await this._retoken(passphrase);}finally{cov_a5r0d9ek1().s[153]++;unlock();}}/**
   * Generate a new token without a lock.
   * @private
   * @param {(String|Buffer)?} passphrase
   * @returns {Promise}
   */async _retoken(passphrase){cov_a5r0d9ek1().f[16]++;cov_a5r0d9ek1().s[154]++;if(passphrase){cov_a5r0d9ek1().b[18][0]++;cov_a5r0d9ek1().s[155]++;await this.unlock(passphrase);}else{cov_a5r0d9ek1().b[18][1]++;}cov_a5r0d9ek1().s[156]++;this.tokenDepth+=1;cov_a5r0d9ek1().s[157]++;this.token=this.getToken(this.tokenDepth);const b=(cov_a5r0d9ek1().s[158]++,this.db.batch());cov_a5r0d9ek1().s[159]++;this.save(b);cov_a5r0d9ek1().s[160]++;await b.write();cov_a5r0d9ek1().s[161]++;return this.token;}/**
   * Rename the wallet.
   * @param {String} id
   * @returns {Promise}
   */async rename(id){cov_a5r0d9ek1().f[17]++;const unlock=(cov_a5r0d9ek1().s[162]++,await this.writeLock.lock());cov_a5r0d9ek1().s[163]++;try{cov_a5r0d9ek1().s[164]++;return await this.wdb.rename(this,id);}finally{cov_a5r0d9ek1().s[165]++;unlock();}}/**
   * Rename account.
   * @param {(String|Number)?} acct
   * @param {String} name
   * @returns {Promise}
   */async renameAccount(acct,name){cov_a5r0d9ek1().f[18]++;const unlock=(cov_a5r0d9ek1().s[166]++,await this.writeLock.lock());cov_a5r0d9ek1().s[167]++;try{cov_a5r0d9ek1().s[168]++;return await this._renameAccount(acct,name);}finally{cov_a5r0d9ek1().s[169]++;unlock();}}/**
   * Rename account without a lock.
   * @private
   * @param {(String|Number)?} acct
   * @param {String} name
   * @returns {Promise}
   */async _renameAccount(acct,name){cov_a5r0d9ek1().f[19]++;cov_a5r0d9ek1().s[170]++;if(!common.isName(name)){cov_a5r0d9ek1().b[19][0]++;cov_a5r0d9ek1().s[171]++;throw new Error('Bad account name.');}else{cov_a5r0d9ek1().b[19][1]++;}const account=(cov_a5r0d9ek1().s[172]++,await this.getAccount(acct));cov_a5r0d9ek1().s[173]++;if(!account){cov_a5r0d9ek1().b[20][0]++;cov_a5r0d9ek1().s[174]++;throw new Error('Account not found.');}else{cov_a5r0d9ek1().b[20][1]++;}cov_a5r0d9ek1().s[175]++;if(account.accountIndex===0){cov_a5r0d9ek1().b[21][0]++;cov_a5r0d9ek1().s[176]++;throw new Error('Cannot rename default account.');}else{cov_a5r0d9ek1().b[21][1]++;}cov_a5r0d9ek1().s[177]++;if(await this.hasAccount(name)){cov_a5r0d9ek1().b[22][0]++;cov_a5r0d9ek1().s[178]++;throw new Error('Account name not available.');}else{cov_a5r0d9ek1().b[22][1]++;}const b=(cov_a5r0d9ek1().s[179]++,this.db.batch());cov_a5r0d9ek1().s[180]++;this.wdb.renameAccount(b,account,name);cov_a5r0d9ek1().s[181]++;await b.write();}/**
   * Lock the wallet, destroy decrypted key.
   */async lock(){cov_a5r0d9ek1().f[20]++;const unlock1=(cov_a5r0d9ek1().s[182]++,await this.writeLock.lock());const unlock2=(cov_a5r0d9ek1().s[183]++,await this.fundLock.lock());cov_a5r0d9ek1().s[184]++;try{cov_a5r0d9ek1().s[185]++;await this.master.lock();}finally{cov_a5r0d9ek1().s[186]++;unlock2();cov_a5r0d9ek1().s[187]++;unlock1();}}/**
   * Unlock the key for `timeout` seconds.
   * @param {Buffer|String} passphrase
   * @param {Number?} [timeout=60]
   */unlock(passphrase,timeout){cov_a5r0d9ek1().f[21]++;cov_a5r0d9ek1().s[188]++;return this.master.unlock(passphrase,timeout);}/**
   * Generate the wallet ID if none was passed in.
   * It is represented as HASH160(m/44->public|magic)
   * converted to an "address" with a prefix
   * of `0x03be04` (`WLT` in base58).
   * @private
   * @returns {Base58String}
   */getID(){cov_a5r0d9ek1().f[22]++;cov_a5r0d9ek1().s[189]++;assert(this.master.key,'Cannot derive id.');const key=(cov_a5r0d9ek1().s[190]++,this.master.key.derive(44));const bw=(cov_a5r0d9ek1().s[191]++,bio.write(37));cov_a5r0d9ek1().s[192]++;bw.writeBytes(key.publicKey);cov_a5r0d9ek1().s[193]++;bw.writeU32(this.network.magic);const hash=(cov_a5r0d9ek1().s[194]++,hash160.digest(bw.render()));const b58=(cov_a5r0d9ek1().s[195]++,bio.write(27));cov_a5r0d9ek1().s[196]++;b58.writeU8(0x03);cov_a5r0d9ek1().s[197]++;b58.writeU8(0xbe);cov_a5r0d9ek1().s[198]++;b58.writeU8(0x04);cov_a5r0d9ek1().s[199]++;b58.writeBytes(hash);cov_a5r0d9ek1().s[200]++;b58.writeChecksum(hash256.digest);cov_a5r0d9ek1().s[201]++;return base58.encode(b58.render());}/**
   * Generate the wallet api key if none was passed in.
   * It is represented as HASH256(m/44'->private|nonce).
   * @private
   * @param {HDPrivateKey} master
   * @param {Number} nonce
   * @returns {Buffer}
   */getToken(nonce){cov_a5r0d9ek1().f[23]++;cov_a5r0d9ek1().s[202]++;if(!this.master.key){cov_a5r0d9ek1().b[23][0]++;cov_a5r0d9ek1().s[203]++;throw new Error('Cannot derive token.');}else{cov_a5r0d9ek1().b[23][1]++;}const key=(cov_a5r0d9ek1().s[204]++,this.master.key.derive(44,true));const bw=(cov_a5r0d9ek1().s[205]++,bio.write(36));cov_a5r0d9ek1().s[206]++;bw.writeBytes(key.privateKey);cov_a5r0d9ek1().s[207]++;bw.writeU32(nonce);cov_a5r0d9ek1().s[208]++;return hash256.digest(bw.render());}/**
   * Create an account. Requires passphrase if master key is encrypted.
   * @param {Object} options - See {@link Account} options.
   * @returns {Promise} - Returns {@link Account}.
   */async createAccount(options,passphrase){cov_a5r0d9ek1().f[24]++;const unlock=(cov_a5r0d9ek1().s[209]++,await this.writeLock.lock());cov_a5r0d9ek1().s[210]++;try{cov_a5r0d9ek1().s[211]++;return await this._createAccount(options,passphrase);}finally{cov_a5r0d9ek1().s[212]++;unlock();}}/**
   * Create an account without a lock.
   * @param {Object} options - See {@link Account} options.
   * @returns {Promise} - Returns {@link Account}.
   */async _createAccount(options,passphrase){cov_a5r0d9ek1().f[25]++;let name=(cov_a5r0d9ek1().s[213]++,options.name);cov_a5r0d9ek1().s[214]++;if(!name){cov_a5r0d9ek1().b[24][0]++;cov_a5r0d9ek1().s[215]++;name=this.accountDepth.toString(10);}else{cov_a5r0d9ek1().b[24][1]++;}cov_a5r0d9ek1().s[216]++;if(await this.hasAccount(name)){cov_a5r0d9ek1().b[25][0]++;cov_a5r0d9ek1().s[217]++;throw new Error('Account already exists.');}else{cov_a5r0d9ek1().b[25][1]++;}cov_a5r0d9ek1().s[218]++;await this.unlock(passphrase);let key;cov_a5r0d9ek1().s[219]++;if(this.watchOnly){cov_a5r0d9ek1().b[26][0]++;cov_a5r0d9ek1().s[220]++;key=options.accountKey;cov_a5r0d9ek1().s[221]++;if(typeof key==='string'){cov_a5r0d9ek1().b[27][0]++;cov_a5r0d9ek1().s[222]++;key=HD.PublicKey.fromBase58(key,this.network);}else{cov_a5r0d9ek1().b[27][1]++;}cov_a5r0d9ek1().s[223]++;if(!HD.isPublic(key)){cov_a5r0d9ek1().b[28][0]++;cov_a5r0d9ek1().s[224]++;throw new Error('Must add HD public keys to watch only wallet.');}else{cov_a5r0d9ek1().b[28][1]++;}}else{cov_a5r0d9ek1().b[26][1]++;cov_a5r0d9ek1().s[225]++;assert(this.master.key);const type=(cov_a5r0d9ek1().s[226]++,this.network.keyPrefix.coinType);cov_a5r0d9ek1().s[227]++;key=this.master.key.deriveAccount(44,type,this.accountDepth);cov_a5r0d9ek1().s[228]++;key=key.toPublic();}const opt=(cov_a5r0d9ek1().s[229]++,{wid:this.wid,id:this.id,name:this.accountDepth===0?(cov_a5r0d9ek1().b[29][0]++,'default'):(cov_a5r0d9ek1().b[29][1]++,name),witness:options.witness,watchOnly:this.watchOnly,accountKey:key,accountIndex:this.accountDepth,type:options.type,m:options.m,n:options.n,keys:options.keys});const b=(cov_a5r0d9ek1().s[230]++,this.db.batch());const account=(cov_a5r0d9ek1().s[231]++,Account.fromOptions(this.wdb,opt));cov_a5r0d9ek1().s[232]++;await account.init(b);cov_a5r0d9ek1().s[233]++;this.logger.info('Created account %s/%s/%d.',account.id,account.name,account.accountIndex);cov_a5r0d9ek1().s[234]++;this.accountDepth+=1;cov_a5r0d9ek1().s[235]++;this.save(b);cov_a5r0d9ek1().s[236]++;if(this.accountDepth===1){cov_a5r0d9ek1().b[30][0]++;cov_a5r0d9ek1().s[237]++;this.increment(b);}else{cov_a5r0d9ek1().b[30][1]++;}cov_a5r0d9ek1().s[238]++;await b.write();cov_a5r0d9ek1().s[239]++;return account;}/**
   * Ensure an account. Requires passphrase if master key is encrypted.
   * @param {Object} options - See {@link Account} options.
   * @returns {Promise} - Returns {@link Account}.
   */async ensureAccount(options,passphrase){cov_a5r0d9ek1().f[26]++;const name=(cov_a5r0d9ek1().s[240]++,options.name);const account=(cov_a5r0d9ek1().s[241]++,await this.getAccount(name));cov_a5r0d9ek1().s[242]++;if(account){cov_a5r0d9ek1().b[31][0]++;cov_a5r0d9ek1().s[243]++;return account;}else{cov_a5r0d9ek1().b[31][1]++;}cov_a5r0d9ek1().s[244]++;return this.createAccount(options,passphrase);}/**
   * List account names and indexes from the db.
   * @returns {Promise} - Returns Array.
   */getAccounts(){cov_a5r0d9ek1().f[27]++;cov_a5r0d9ek1().s[245]++;return this.wdb.getAccounts(this.wid);}/**
   * Get all wallet address hashes.
   * @param {(String|Number)?} acct
   * @returns {Promise} - Returns Array.
   */getAddressHashes(acct){cov_a5r0d9ek1().f[28]++;cov_a5r0d9ek1().s[246]++;if(acct!=null){cov_a5r0d9ek1().b[32][0]++;cov_a5r0d9ek1().s[247]++;return this.getAccountHashes(acct);}else{cov_a5r0d9ek1().b[32][1]++;}cov_a5r0d9ek1().s[248]++;return this.wdb.getWalletHashes(this.wid);}/**
   * Get all account address hashes.
   * @param {String|Number} acct
   * @returns {Promise} - Returns Array.
   */async getAccountHashes(acct){cov_a5r0d9ek1().f[29]++;const index=(cov_a5r0d9ek1().s[249]++,await this.getAccountIndex(acct));cov_a5r0d9ek1().s[250]++;if(index===-1){cov_a5r0d9ek1().b[33][0]++;cov_a5r0d9ek1().s[251]++;throw new Error('Account not found.');}else{cov_a5r0d9ek1().b[33][1]++;}cov_a5r0d9ek1().s[252]++;return this.wdb.getAccountHashes(this.wid,index);}/**
   * Retrieve an account from the database.
   * @param {Number|String} acct
   * @returns {Promise} - Returns {@link Account}.
   */async getAccount(acct){cov_a5r0d9ek1().f[30]++;const index=(cov_a5r0d9ek1().s[253]++,await this.getAccountIndex(acct));cov_a5r0d9ek1().s[254]++;if(index===-1){cov_a5r0d9ek1().b[34][0]++;cov_a5r0d9ek1().s[255]++;return null;}else{cov_a5r0d9ek1().b[34][1]++;}const account=(cov_a5r0d9ek1().s[256]++,await this.wdb.getAccount(this.wid,index));cov_a5r0d9ek1().s[257]++;if(!account){cov_a5r0d9ek1().b[35][0]++;cov_a5r0d9ek1().s[258]++;return null;}else{cov_a5r0d9ek1().b[35][1]++;}cov_a5r0d9ek1().s[259]++;account.wid=this.wid;cov_a5r0d9ek1().s[260]++;account.id=this.id;cov_a5r0d9ek1().s[261]++;account.watchOnly=this.watchOnly;cov_a5r0d9ek1().s[262]++;return account;}/**
   * Lookup the corresponding account name's index.
   * @param {String|Number} acct - Account name/index.
   * @returns {Promise} - Returns Number.
   */getAccountIndex(acct){cov_a5r0d9ek1().f[31]++;cov_a5r0d9ek1().s[263]++;if(acct==null){cov_a5r0d9ek1().b[36][0]++;cov_a5r0d9ek1().s[264]++;return-1;}else{cov_a5r0d9ek1().b[36][1]++;}cov_a5r0d9ek1().s[265]++;if(typeof acct==='number'){cov_a5r0d9ek1().b[37][0]++;cov_a5r0d9ek1().s[266]++;return acct;}else{cov_a5r0d9ek1().b[37][1]++;}cov_a5r0d9ek1().s[267]++;return this.wdb.getAccountIndex(this.wid,acct);}/**
   * Lookup the corresponding account name's index.
   * @param {String|Number} acct - Account name/index.
   * @returns {Promise} - Returns Number.
   * @throws on non-existent account
   */async ensureIndex(acct){cov_a5r0d9ek1().f[32]++;cov_a5r0d9ek1().s[268]++;if((cov_a5r0d9ek1().b[39][0]++,acct==null)||(cov_a5r0d9ek1().b[39][1]++,acct===-1)){cov_a5r0d9ek1().b[38][0]++;cov_a5r0d9ek1().s[269]++;return-1;}else{cov_a5r0d9ek1().b[38][1]++;}const index=(cov_a5r0d9ek1().s[270]++,await this.getAccountIndex(acct));cov_a5r0d9ek1().s[271]++;if(index===-1){cov_a5r0d9ek1().b[40][0]++;cov_a5r0d9ek1().s[272]++;throw new Error('Account not found.');}else{cov_a5r0d9ek1().b[40][1]++;}cov_a5r0d9ek1().s[273]++;return index;}/**
   * Lookup the corresponding account index's name.
   * @param {Number} index - Account index.
   * @returns {Promise} - Returns String.
   */async getAccountName(index){cov_a5r0d9ek1().f[33]++;cov_a5r0d9ek1().s[274]++;if(typeof index==='string'){cov_a5r0d9ek1().b[41][0]++;cov_a5r0d9ek1().s[275]++;return index;}else{cov_a5r0d9ek1().b[41][1]++;}cov_a5r0d9ek1().s[276]++;return this.wdb.getAccountName(this.wid,index);}/**
   * Test whether an account exists.
   * @param {Number|String} acct
   * @returns {Promise} - Returns {@link Boolean}.
   */async hasAccount(acct){cov_a5r0d9ek1().f[34]++;const index=(cov_a5r0d9ek1().s[277]++,await this.getAccountIndex(acct));cov_a5r0d9ek1().s[278]++;if(index===-1){cov_a5r0d9ek1().b[42][0]++;cov_a5r0d9ek1().s[279]++;return false;}else{cov_a5r0d9ek1().b[42][1]++;}cov_a5r0d9ek1().s[280]++;return this.wdb.hasAccount(this.wid,index);}/**
   * Create a new receiving address (increments receiveDepth).
   * @param {(Number|String)?} acct
   * @returns {Promise} - Returns {@link WalletKey}.
   */createReceive(acct=(cov_a5r0d9ek1().b[43][0]++,0)){cov_a5r0d9ek1().f[35]++;cov_a5r0d9ek1().s[281]++;return this.createKey(acct,0);}/**
   * Create a new change address (increments receiveDepth).
   * @param {(Number|String)?} acct
   * @returns {Promise} - Returns {@link WalletKey}.
   */createChange(acct=(cov_a5r0d9ek1().b[44][0]++,0)){cov_a5r0d9ek1().f[36]++;cov_a5r0d9ek1().s[282]++;return this.createKey(acct,1);}/**
   * Create a new nested address (increments receiveDepth).
   * @param {(Number|String)?} acct
   * @returns {Promise} - Returns {@link WalletKey}.
   */createNested(acct=(cov_a5r0d9ek1().b[45][0]++,0)){cov_a5r0d9ek1().f[37]++;cov_a5r0d9ek1().s[283]++;return this.createKey(acct,2);}/**
   * Create a new address (increments depth).
   * @param {(Number|String)?} acct
   * @param {Number} branch
   * @returns {Promise} - Returns {@link WalletKey}.
   */async createKey(acct,branch){cov_a5r0d9ek1().f[38]++;const unlock=(cov_a5r0d9ek1().s[284]++,await this.writeLock.lock());cov_a5r0d9ek1().s[285]++;try{cov_a5r0d9ek1().s[286]++;return await this._createKey(acct,branch);}finally{cov_a5r0d9ek1().s[287]++;unlock();}}/**
   * Create a new address (increments depth) without a lock.
   * @private
   * @param {(Number|String)?} acct
   * @param {Number} branch
   * @returns {Promise} - Returns {@link WalletKey}.
   */async _createKey(acct,branch){cov_a5r0d9ek1().f[39]++;const account=(cov_a5r0d9ek1().s[288]++,await this.getAccount(acct));cov_a5r0d9ek1().s[289]++;if(!account){cov_a5r0d9ek1().b[46][0]++;cov_a5r0d9ek1().s[290]++;throw new Error('Account not found.');}else{cov_a5r0d9ek1().b[46][1]++;}const b=(cov_a5r0d9ek1().s[291]++,this.db.batch());const key=(cov_a5r0d9ek1().s[292]++,await account.createKey(b,branch));cov_a5r0d9ek1().s[293]++;await b.write();cov_a5r0d9ek1().s[294]++;return key;}/**
   * Save the wallet to the database. Necessary
   * when address depth and keys change.
   * @returns {Promise}
   */save(b){cov_a5r0d9ek1().f[40]++;cov_a5r0d9ek1().s[295]++;return this.wdb.save(b,this);}/**
   * Increment the wid depth.
   * @returns {Promise}
   */increment(b){cov_a5r0d9ek1().f[41]++;cov_a5r0d9ek1().s[296]++;return this.wdb.increment(b,this.wid);}/**
   * Test whether the wallet possesses an address.
   * @param {Address|Hash} address
   * @returns {Promise} - Returns Boolean.
   */async hasAddress(address){cov_a5r0d9ek1().f[42]++;const hash=(cov_a5r0d9ek1().s[297]++,Address.getHash(address));const path=(cov_a5r0d9ek1().s[298]++,await this.getPath(hash));cov_a5r0d9ek1().s[299]++;return path!=null;}/**
   * Get path by address hash.
   * @param {Address|Hash} address
   * @returns {Promise} - Returns {@link Path}.
   */async getPath(address){cov_a5r0d9ek1().f[43]++;const hash=(cov_a5r0d9ek1().s[300]++,Address.getHash(address));cov_a5r0d9ek1().s[301]++;return this.wdb.getPath(this.wid,hash);}/**
   * Get path by address hash (without account name).
   * @private
   * @param {Address|Hash} address
   * @returns {Promise} - Returns {@link Path}.
   */async readPath(address){cov_a5r0d9ek1().f[44]++;const hash=(cov_a5r0d9ek1().s[302]++,Address.getHash(address));cov_a5r0d9ek1().s[303]++;return this.wdb.readPath(this.wid,hash);}/**
   * Test whether the wallet contains a path.
   * @param {Address|Hash} address
   * @returns {Promise} - Returns {Boolean}.
   */async hasPath(address){cov_a5r0d9ek1().f[45]++;const hash=(cov_a5r0d9ek1().s[304]++,Address.getHash(address));cov_a5r0d9ek1().s[305]++;return this.wdb.hasPath(this.wid,hash);}/**
   * Get all wallet paths.
   * @param {(String|Number)?} acct
   * @returns {Promise} - Returns {@link Path}.
   */async getPaths(acct){cov_a5r0d9ek1().f[46]++;cov_a5r0d9ek1().s[306]++;if(acct!=null){cov_a5r0d9ek1().b[47][0]++;cov_a5r0d9ek1().s[307]++;return this.getAccountPaths(acct);}else{cov_a5r0d9ek1().b[47][1]++;}cov_a5r0d9ek1().s[308]++;return this.wdb.getWalletPaths(this.wid);}/**
   * Get all account paths.
   * @param {String|Number} acct
   * @returns {Promise} - Returns {@link Path}.
   */async getAccountPaths(acct){cov_a5r0d9ek1().f[47]++;const index=(cov_a5r0d9ek1().s[309]++,await this.getAccountIndex(acct));cov_a5r0d9ek1().s[310]++;if(index===-1){cov_a5r0d9ek1().b[48][0]++;cov_a5r0d9ek1().s[311]++;throw new Error('Account not found.');}else{cov_a5r0d9ek1().b[48][1]++;}const hashes=(cov_a5r0d9ek1().s[312]++,await this.getAccountHashes(index));const name=(cov_a5r0d9ek1().s[313]++,await this.getAccountName(acct));cov_a5r0d9ek1().s[314]++;assert(name);const result=(cov_a5r0d9ek1().s[315]++,[]);cov_a5r0d9ek1().s[316]++;for(const hash of hashes){const path=(cov_a5r0d9ek1().s[317]++,await this.readPath(hash));cov_a5r0d9ek1().s[318]++;assert(path);cov_a5r0d9ek1().s[319]++;assert(path.account===index);cov_a5r0d9ek1().s[320]++;path.name=name;cov_a5r0d9ek1().s[321]++;result.push(path);}cov_a5r0d9ek1().s[322]++;return result;}/**
   * Import a keyring (will not exist on derivation chain).
   * Rescanning must be invoked manually.
   * @param {(String|Number)?} acct
   * @param {WalletKey} ring
   * @param {(String|Buffer)?} passphrase
   * @returns {Promise}
   */async importKey(acct,ring,passphrase){cov_a5r0d9ek1().f[48]++;const unlock=(cov_a5r0d9ek1().s[323]++,await this.writeLock.lock());cov_a5r0d9ek1().s[324]++;try{cov_a5r0d9ek1().s[325]++;return await this._importKey(acct,ring,passphrase);}finally{cov_a5r0d9ek1().s[326]++;unlock();}}/**
   * Import a keyring (will not exist on derivation chain) without a lock.
   * @private
   * @param {(String|Number)?} acct
   * @param {WalletKey} ring
   * @param {(String|Buffer)?} passphrase
   * @returns {Promise}
   */async _importKey(acct,ring,passphrase){cov_a5r0d9ek1().f[49]++;cov_a5r0d9ek1().s[327]++;if(!this.watchOnly){cov_a5r0d9ek1().b[49][0]++;cov_a5r0d9ek1().s[328]++;if(!ring.privateKey){cov_a5r0d9ek1().b[50][0]++;cov_a5r0d9ek1().s[329]++;throw new Error('Cannot import pubkey into non watch-only wallet.');}else{cov_a5r0d9ek1().b[50][1]++;}}else{cov_a5r0d9ek1().b[49][1]++;cov_a5r0d9ek1().s[330]++;if(ring.privateKey){cov_a5r0d9ek1().b[51][0]++;cov_a5r0d9ek1().s[331]++;throw new Error('Cannot import privkey into watch-only wallet.');}else{cov_a5r0d9ek1().b[51][1]++;}}const hash=(cov_a5r0d9ek1().s[332]++,ring.getHash());cov_a5r0d9ek1().s[333]++;if(await this.getPath(hash)){cov_a5r0d9ek1().b[52][0]++;cov_a5r0d9ek1().s[334]++;throw new Error('Key already exists.');}else{cov_a5r0d9ek1().b[52][1]++;}const account=(cov_a5r0d9ek1().s[335]++,await this.getAccount(acct));cov_a5r0d9ek1().s[336]++;if(!account){cov_a5r0d9ek1().b[53][0]++;cov_a5r0d9ek1().s[337]++;throw new Error('Account not found.');}else{cov_a5r0d9ek1().b[53][1]++;}cov_a5r0d9ek1().s[338]++;if(account.type!==Account.types.PUBKEYHASH){cov_a5r0d9ek1().b[54][0]++;cov_a5r0d9ek1().s[339]++;throw new Error('Cannot import into non-pkh account.');}else{cov_a5r0d9ek1().b[54][1]++;}cov_a5r0d9ek1().s[340]++;await this.unlock(passphrase);const key=(cov_a5r0d9ek1().s[341]++,WalletKey.fromRing(account,ring));const path=(cov_a5r0d9ek1().s[342]++,key.toPath());cov_a5r0d9ek1().s[343]++;if(this.master.encrypted){cov_a5r0d9ek1().b[55][0]++;cov_a5r0d9ek1().s[344]++;path.data=this.master.encipher(path.data,path.hash);cov_a5r0d9ek1().s[345]++;assert(path.data);cov_a5r0d9ek1().s[346]++;path.encrypted=true;}else{cov_a5r0d9ek1().b[55][1]++;}const b=(cov_a5r0d9ek1().s[347]++,this.db.batch());cov_a5r0d9ek1().s[348]++;await account.savePath(b,path);cov_a5r0d9ek1().s[349]++;await b.write();}/**
   * Import a keyring (will not exist on derivation chain).
   * Rescanning must be invoked manually.
   * @param {(String|Number)?} acct
   * @param {WalletKey} ring
   * @param {(String|Buffer)?} passphrase
   * @returns {Promise}
   */async importAddress(acct,address){cov_a5r0d9ek1().f[50]++;const unlock=(cov_a5r0d9ek1().s[350]++,await this.writeLock.lock());cov_a5r0d9ek1().s[351]++;try{cov_a5r0d9ek1().s[352]++;return await this._importAddress(acct,address);}finally{cov_a5r0d9ek1().s[353]++;unlock();}}/**
   * Import a keyring (will not exist on derivation chain) without a lock.
   * @private
   * @param {(String|Number)?} acct
   * @param {WalletKey} ring
   * @param {(String|Buffer)?} passphrase
   * @returns {Promise}
   */async _importAddress(acct,address){cov_a5r0d9ek1().f[51]++;cov_a5r0d9ek1().s[354]++;if(!this.watchOnly){cov_a5r0d9ek1().b[56][0]++;cov_a5r0d9ek1().s[355]++;throw new Error('Cannot import address into non watch-only wallet.');}else{cov_a5r0d9ek1().b[56][1]++;}cov_a5r0d9ek1().s[356]++;if(await this.getPath(address)){cov_a5r0d9ek1().b[57][0]++;cov_a5r0d9ek1().s[357]++;throw new Error('Address already exists.');}else{cov_a5r0d9ek1().b[57][1]++;}const account=(cov_a5r0d9ek1().s[358]++,await this.getAccount(acct));cov_a5r0d9ek1().s[359]++;if(!account){cov_a5r0d9ek1().b[58][0]++;cov_a5r0d9ek1().s[360]++;throw new Error('Account not found.');}else{cov_a5r0d9ek1().b[58][1]++;}cov_a5r0d9ek1().s[361]++;if(account.type!==Account.types.PUBKEYHASH){cov_a5r0d9ek1().b[59][0]++;cov_a5r0d9ek1().s[362]++;throw new Error('Cannot import into non-pkh account.');}else{cov_a5r0d9ek1().b[59][1]++;}const path=(cov_a5r0d9ek1().s[363]++,Path.fromAddress(account,address));const b=(cov_a5r0d9ek1().s[364]++,this.db.batch());cov_a5r0d9ek1().s[365]++;await account.savePath(b,path);cov_a5r0d9ek1().s[366]++;await b.write();}/**
   * Fill a transaction with inputs, estimate
   * transaction size, calculate fee, and add a change output.
   * @see MTX#selectCoins
   * @see MTX#fill
   * @param {MTX} mtx - _Must_ be a mutable transaction.
   * @param {Object?} options
   * @param {(String|Number)?} options.account - If no account is
   * specified, coins from the entire wallet will be filled.
   * @param {String?} options.selection - Coin selection priority. Can
   * be `age`, `random`, or `all`. (default=age).
   * @param {Boolean} options.round - Whether to round to the nearest
   * kilobyte for fee calculation.
   * See {@link TX#getMinFee} vs. {@link TX#getRoundFee}.
   * @param {Rate} options.rate - Rate used for fee calculation.
   * @param {Boolean} options.confirmed - Select only confirmed coins.
   * @param {Boolean} options.free - Do not apply a fee if the
   * transaction priority is high enough to be considered free.
   * @param {Amount?} options.hardFee - Use a hard fee rather than
   * calculating one.
   * @param {Number|Boolean} options.subtractFee - Whether to subtract the
   * fee from existing outputs rather than adding more inputs.
   */async fund(mtx,options,force){cov_a5r0d9ek1().f[52]++;const unlock=(cov_a5r0d9ek1().s[367]++,await this.fundLock.lock(force));cov_a5r0d9ek1().s[368]++;try{cov_a5r0d9ek1().s[369]++;return await this._fund(mtx,options);}finally{cov_a5r0d9ek1().s[370]++;unlock();}}/**
   * Fill a transaction with inputs without a lock.
   * @private
   * @see MTX#selectCoins
   * @see MTX#fill
   */async _fund(mtx,options){cov_a5r0d9ek1().f[53]++;cov_a5r0d9ek1().s[371]++;if(!options){cov_a5r0d9ek1().b[60][0]++;cov_a5r0d9ek1().s[372]++;options={};}else{cov_a5r0d9ek1().b[60][1]++;}const acct=(cov_a5r0d9ek1().s[373]++,(cov_a5r0d9ek1().b[61][0]++,options.account)||(cov_a5r0d9ek1().b[61][1]++,0));const change=(cov_a5r0d9ek1().s[374]++,await this.changeAddress(acct));cov_a5r0d9ek1().s[375]++;if(!change){cov_a5r0d9ek1().b[62][0]++;cov_a5r0d9ek1().s[376]++;throw new Error('Account not found.');}else{cov_a5r0d9ek1().b[62][1]++;}let rate=(cov_a5r0d9ek1().s[377]++,options.rate);cov_a5r0d9ek1().s[378]++;if(rate==null){cov_a5r0d9ek1().b[63][0]++;cov_a5r0d9ek1().s[379]++;rate=await this.wdb.estimateFee(options.blocks);}else{cov_a5r0d9ek1().b[63][1]++;}let coins;cov_a5r0d9ek1().s[380]++;if(options.smart){cov_a5r0d9ek1().b[64][0]++;cov_a5r0d9ek1().s[381]++;coins=await this.getSmartCoins(options.account);}else{cov_a5r0d9ek1().b[64][1]++;cov_a5r0d9ek1().s[382]++;coins=await this.getCoins(options.account);cov_a5r0d9ek1().s[383]++;coins=this.txdb.filterLocked(coins);}cov_a5r0d9ek1().s[384]++;await mtx.fund(coins,{selection:options.selection,round:options.round,depth:options.depth,hardFee:options.hardFee,subtractFee:options.subtractFee,subtractIndex:options.subtractIndex,changeAddress:change,height:this.wdb.state.height,rate:rate,maxFee:options.maxFee,estimate:prev=>{cov_a5r0d9ek1().f[54]++;cov_a5r0d9ek1().s[385]++;return this.estimateSize(prev);}});cov_a5r0d9ek1().s[386]++;assert(mtx.getFee()<=MTX.Selector.MAX_FEE,'TX exceeds MAX_FEE.');}/**
   * Get account by address.
   * @param {Address} address
   * @returns {Account}
   */async getAccountByAddress(address){cov_a5r0d9ek1().f[55]++;const hash=(cov_a5r0d9ek1().s[387]++,Address.getHash(address));const path=(cov_a5r0d9ek1().s[388]++,await this.getPath(hash));cov_a5r0d9ek1().s[389]++;if(!path){cov_a5r0d9ek1().b[65][0]++;cov_a5r0d9ek1().s[390]++;return null;}else{cov_a5r0d9ek1().b[65][1]++;}cov_a5r0d9ek1().s[391]++;return this.getAccount(path.account);}/**
   * Input size estimator for max possible tx size.
   * @param {Script} prev
   * @returns {Number}
   */async estimateSize(prev){cov_a5r0d9ek1().f[56]++;const scale=(cov_a5r0d9ek1().s[392]++,consensus.WITNESS_SCALE_FACTOR);const address=(cov_a5r0d9ek1().s[393]++,prev.getAddress());cov_a5r0d9ek1().s[394]++;if(!address){cov_a5r0d9ek1().b[66][0]++;cov_a5r0d9ek1().s[395]++;return-1;}else{cov_a5r0d9ek1().b[66][1]++;}const account=(cov_a5r0d9ek1().s[396]++,await this.getAccountByAddress(address));cov_a5r0d9ek1().s[397]++;if(!account){cov_a5r0d9ek1().b[67][0]++;cov_a5r0d9ek1().s[398]++;return-1;}else{cov_a5r0d9ek1().b[67][1]++;}let size=(cov_a5r0d9ek1().s[399]++,0);cov_a5r0d9ek1().s[400]++;if(prev.isScripthash()){cov_a5r0d9ek1().b[68][0]++;cov_a5r0d9ek1().s[401]++;// Nested bullshit.
if(account.witness){cov_a5r0d9ek1().b[69][0]++;cov_a5r0d9ek1().s[402]++;switch(account.type){case Account.types.PUBKEYHASH:cov_a5r0d9ek1().b[70][0]++;cov_a5r0d9ek1().s[403]++;size+=23;// redeem script
cov_a5r0d9ek1().s[404]++;size*=4;// vsize
cov_a5r0d9ek1().s[405]++;break;case Account.types.MULTISIG:cov_a5r0d9ek1().b[70][1]++;cov_a5r0d9ek1().s[406]++;size+=35;// redeem script
cov_a5r0d9ek1().s[407]++;size*=4;// vsize
cov_a5r0d9ek1().s[408]++;break;}}else{cov_a5r0d9ek1().b[69][1]++;}}else{cov_a5r0d9ek1().b[68][1]++;}cov_a5r0d9ek1().s[409]++;switch(account.type){case Account.types.PUBKEYHASH:cov_a5r0d9ek1().b[71][0]++;cov_a5r0d9ek1().s[410]++;// P2PKH
// OP_PUSHDATA0 [signature]
size+=1+73;// OP_PUSHDATA0 [key]
cov_a5r0d9ek1().s[411]++;size+=1+33;cov_a5r0d9ek1().s[412]++;break;case Account.types.MULTISIG:cov_a5r0d9ek1().b[71][1]++;cov_a5r0d9ek1().s[413]++;// P2SH Multisig
// OP_0
size+=1;// OP_PUSHDATA0 [signature] ...
cov_a5r0d9ek1().s[414]++;size+=(1+73)*account.m;// OP_PUSHDATA2 [redeem]
cov_a5r0d9ek1().s[415]++;size+=3;// m value
cov_a5r0d9ek1().s[416]++;size+=1;// OP_PUSHDATA0 [key] ...
cov_a5r0d9ek1().s[417]++;size+=(1+33)*account.n;// n value
cov_a5r0d9ek1().s[418]++;size+=1;// OP_CHECKMULTISIG
cov_a5r0d9ek1().s[419]++;size+=1;cov_a5r0d9ek1().s[420]++;break;}cov_a5r0d9ek1().s[421]++;if(account.witness){cov_a5r0d9ek1().b[72][0]++;cov_a5r0d9ek1().s[422]++;// Varint witness items length.
size+=1;// Calculate vsize if
// we're a witness program.
cov_a5r0d9ek1().s[423]++;size=(size+scale-1)/scale|0;}else{cov_a5r0d9ek1().b[72][1]++;cov_a5r0d9ek1().s[424]++;// Byte for varint
// size of input script.
size+=encoding.sizeVarint(size);}cov_a5r0d9ek1().s[425]++;return size;}/**
   * Build a transaction, fill it with outputs and inputs,
   * sort the members according to BIP69 (set options.sort=false
   * to avoid sorting), set locktime, and template it.
   * @param {Object} options - See {@link Wallet#fund options}.
   * @param {Object[]} options.outputs - See {@link MTX#addOutput}.
   * @param {Boolean} options.sort - Sort inputs and outputs (BIP69).
   * @param {Boolean} options.template - Build scripts for inputs.
   * @param {Number} options.locktime - TX locktime
   * @returns {Promise} - Returns {@link MTX}.
   */async createTX(options,force){cov_a5r0d9ek1().f[57]++;const outputs=(cov_a5r0d9ek1().s[426]++,options.outputs);const mtx=(cov_a5r0d9ek1().s[427]++,new MTX());cov_a5r0d9ek1().s[428]++;assert(Array.isArray(outputs),'Outputs must be an array.');cov_a5r0d9ek1().s[429]++;assert(outputs.length>0,'At least one output required.');// Add the outputs
cov_a5r0d9ek1().s[430]++;for(const obj of outputs){const output=(cov_a5r0d9ek1().s[431]++,new Output(obj));const addr=(cov_a5r0d9ek1().s[432]++,output.getAddress());cov_a5r0d9ek1().s[433]++;if(output.isDust()){cov_a5r0d9ek1().b[73][0]++;cov_a5r0d9ek1().s[434]++;throw new Error('Output is dust.');}else{cov_a5r0d9ek1().b[73][1]++;}cov_a5r0d9ek1().s[435]++;if(output.value>0){cov_a5r0d9ek1().b[74][0]++;cov_a5r0d9ek1().s[436]++;if(!addr){cov_a5r0d9ek1().b[75][0]++;cov_a5r0d9ek1().s[437]++;throw new Error('Cannot send to unknown address.');}else{cov_a5r0d9ek1().b[75][1]++;}cov_a5r0d9ek1().s[438]++;if(addr.isNull()){cov_a5r0d9ek1().b[76][0]++;cov_a5r0d9ek1().s[439]++;throw new Error('Cannot send to null address.');}else{cov_a5r0d9ek1().b[76][1]++;}}else{cov_a5r0d9ek1().b[74][1]++;}cov_a5r0d9ek1().s[440]++;mtx.outputs.push(output);}// Fill the inputs with unspents
cov_a5r0d9ek1().s[441]++;await this.fund(mtx,options,force);// Sort members a la BIP69
cov_a5r0d9ek1().s[442]++;if(options.sort!==false){cov_a5r0d9ek1().b[77][0]++;cov_a5r0d9ek1().s[443]++;mtx.sortMembers();}else{cov_a5r0d9ek1().b[77][1]++;}// Set the locktime to target value.
cov_a5r0d9ek1().s[444]++;if(options.locktime!=null){cov_a5r0d9ek1().b[78][0]++;cov_a5r0d9ek1().s[445]++;mtx.setLocktime(options.locktime);}else{cov_a5r0d9ek1().b[78][1]++;}// Consensus sanity checks.
cov_a5r0d9ek1().s[446]++;assert(mtx.isSane(),'TX failed sanity check.');cov_a5r0d9ek1().s[447]++;assert(mtx.verifyInputs(this.wdb.state.height+1),'TX failed context check.');cov_a5r0d9ek1().s[448]++;if(options.template===false){cov_a5r0d9ek1().b[79][0]++;cov_a5r0d9ek1().s[449]++;return mtx;}else{cov_a5r0d9ek1().b[79][1]++;}const total=(cov_a5r0d9ek1().s[450]++,await this.template(mtx));cov_a5r0d9ek1().s[451]++;if(total===0){cov_a5r0d9ek1().b[80][0]++;cov_a5r0d9ek1().s[452]++;throw new Error('Templating failed.');}else{cov_a5r0d9ek1().b[80][1]++;}cov_a5r0d9ek1().s[453]++;return mtx;}/**
   * Build a transaction, fill it with outputs and inputs,
   * sort the members according to BIP69, set locktime,
   * sign and broadcast. Doing this all in one go prevents
   * coins from being double spent.
   * @param {Object} options - See {@link Wallet#fund options}.
   * @param {Object[]} options.outputs - See {@link MTX#addOutput}.
   * @returns {Promise} - Returns {@link TX}.
   */async send(options,passphrase){cov_a5r0d9ek1().f[58]++;const unlock=(cov_a5r0d9ek1().s[454]++,await this.fundLock.lock());cov_a5r0d9ek1().s[455]++;try{cov_a5r0d9ek1().s[456]++;return await this._send(options,passphrase);}finally{cov_a5r0d9ek1().s[457]++;unlock();}}/**
   * Build and send a transaction without a lock.
   * @private
   * @param {Object} options - See {@link Wallet#fund options}.
   * @param {Object[]} options.outputs - See {@link MTX#addOutput}.
   * @returns {Promise} - Returns {@link TX}.
   */async _send(options,passphrase){cov_a5r0d9ek1().f[59]++;const mtx=(cov_a5r0d9ek1().s[458]++,await this.createTX(options,true));cov_a5r0d9ek1().s[459]++;await this.sign(mtx,passphrase);cov_a5r0d9ek1().s[460]++;if(!mtx.isSigned()){cov_a5r0d9ek1().b[81][0]++;cov_a5r0d9ek1().s[461]++;throw new Error('TX could not be fully signed.');}else{cov_a5r0d9ek1().b[81][1]++;}const tx=(cov_a5r0d9ek1().s[462]++,mtx.toTX());// Policy sanity checks.
cov_a5r0d9ek1().s[463]++;if(tx.getSigopsCost(mtx.view)>policy.MAX_TX_SIGOPS_COST){cov_a5r0d9ek1().b[82][0]++;cov_a5r0d9ek1().s[464]++;throw new Error('TX exceeds policy sigops.');}else{cov_a5r0d9ek1().b[82][1]++;}cov_a5r0d9ek1().s[465]++;if(tx.getWeight()>policy.MAX_TX_WEIGHT){cov_a5r0d9ek1().b[83][0]++;cov_a5r0d9ek1().s[466]++;throw new Error('TX exceeds policy weight.');}else{cov_a5r0d9ek1().b[83][1]++;}const ancestors=(cov_a5r0d9ek1().s[467]++,await this.getPendingAncestors(tx));cov_a5r0d9ek1().s[468]++;if(ancestors.size+1>this.maxAncestors){cov_a5r0d9ek1().b[84][0]++;cov_a5r0d9ek1().s[469]++;throw new Error('TX exceeds maximum unconfirmed ancestors.');}else{cov_a5r0d9ek1().b[84][1]++;}cov_a5r0d9ek1().s[470]++;await this.wdb.addTX(tx);cov_a5r0d9ek1().s[471]++;this.logger.debug('Sending wallet tx (%s): %h',this.id,tx.hash());cov_a5r0d9ek1().s[472]++;await this.wdb.send(tx);cov_a5r0d9ek1().s[473]++;return tx;}/**
   * Intentionally double-spend outputs by
   * increasing fee for an existing transaction.
   * @param {Hash} hash
   * @param {Rate} rate
   * @param {(String|Buffer)?} passphrase
   * @returns {Promise} - Returns {@link TX}.
   */async increaseFee(hash,rate,passphrase){cov_a5r0d9ek1().f[60]++;cov_a5r0d9ek1().s[474]++;assert(rate>>>0===rate,'Rate must be a number.');const wtx=(cov_a5r0d9ek1().s[475]++,await this.getTX(hash));cov_a5r0d9ek1().s[476]++;if(!wtx){cov_a5r0d9ek1().b[85][0]++;cov_a5r0d9ek1().s[477]++;throw new Error('Transaction not found.');}else{cov_a5r0d9ek1().b[85][1]++;}cov_a5r0d9ek1().s[478]++;if(wtx.height!==-1){cov_a5r0d9ek1().b[86][0]++;cov_a5r0d9ek1().s[479]++;throw new Error('Transaction is confirmed.');}else{cov_a5r0d9ek1().b[86][1]++;}const tx=(cov_a5r0d9ek1().s[480]++,wtx.tx);cov_a5r0d9ek1().s[481]++;if(tx.isCoinbase()){cov_a5r0d9ek1().b[87][0]++;cov_a5r0d9ek1().s[482]++;throw new Error('Transaction is a coinbase.');}else{cov_a5r0d9ek1().b[87][1]++;}const view=(cov_a5r0d9ek1().s[483]++,await this.getSpentView(tx));cov_a5r0d9ek1().s[484]++;if(!tx.hasCoins(view)){cov_a5r0d9ek1().b[88][0]++;cov_a5r0d9ek1().s[485]++;throw new Error('Not all coins available.');}else{cov_a5r0d9ek1().b[88][1]++;}const oldFee=(cov_a5r0d9ek1().s[486]++,tx.getFee(view));let fee=(cov_a5r0d9ek1().s[487]++,tx.getMinFee(null,rate));cov_a5r0d9ek1().s[488]++;if(fee>MTX.Selector.MAX_FEE){cov_a5r0d9ek1().b[89][0]++;cov_a5r0d9ek1().s[489]++;fee=MTX.Selector.MAX_FEE;}else{cov_a5r0d9ek1().b[89][1]++;}cov_a5r0d9ek1().s[490]++;if(oldFee>=fee){cov_a5r0d9ek1().b[90][0]++;cov_a5r0d9ek1().s[491]++;throw new Error('Fee is not increasing.');}else{cov_a5r0d9ek1().b[90][1]++;}const mtx=(cov_a5r0d9ek1().s[492]++,MTX.fromTX(tx));cov_a5r0d9ek1().s[493]++;mtx.view=view;cov_a5r0d9ek1().s[494]++;for(const input of mtx.inputs){cov_a5r0d9ek1().s[495]++;input.script.clear();cov_a5r0d9ek1().s[496]++;input.witness.clear();}let change;cov_a5r0d9ek1().s[497]++;for(let i=(cov_a5r0d9ek1().s[498]++,0);i<mtx.outputs.length;i++){const output=(cov_a5r0d9ek1().s[499]++,mtx.outputs[i]);const addr=(cov_a5r0d9ek1().s[500]++,output.getAddress());cov_a5r0d9ek1().s[501]++;if(!addr){cov_a5r0d9ek1().b[91][0]++;cov_a5r0d9ek1().s[502]++;continue;}else{cov_a5r0d9ek1().b[91][1]++;}const path=(cov_a5r0d9ek1().s[503]++,await this.getPath(addr));cov_a5r0d9ek1().s[504]++;if(!path){cov_a5r0d9ek1().b[92][0]++;cov_a5r0d9ek1().s[505]++;continue;}else{cov_a5r0d9ek1().b[92][1]++;}cov_a5r0d9ek1().s[506]++;if(path.branch===1){cov_a5r0d9ek1().b[93][0]++;cov_a5r0d9ek1().s[507]++;change=output;cov_a5r0d9ek1().s[508]++;mtx.changeIndex=i;cov_a5r0d9ek1().s[509]++;break;}else{cov_a5r0d9ek1().b[93][1]++;}}cov_a5r0d9ek1().s[510]++;if(!change){cov_a5r0d9ek1().b[94][0]++;cov_a5r0d9ek1().s[511]++;throw new Error('No change output.');}else{cov_a5r0d9ek1().b[94][1]++;}cov_a5r0d9ek1().s[512]++;change.value+=oldFee;cov_a5r0d9ek1().s[513]++;if(mtx.getFee()!==0){cov_a5r0d9ek1().b[95][0]++;cov_a5r0d9ek1().s[514]++;throw new Error('Arithmetic error for change.');}else{cov_a5r0d9ek1().b[95][1]++;}cov_a5r0d9ek1().s[515]++;change.value-=fee;cov_a5r0d9ek1().s[516]++;if(change.value<0){cov_a5r0d9ek1().b[96][0]++;cov_a5r0d9ek1().s[517]++;throw new Error('Fee is too high.');}else{cov_a5r0d9ek1().b[96][1]++;}cov_a5r0d9ek1().s[518]++;if(change.isDust()){cov_a5r0d9ek1().b[97][0]++;cov_a5r0d9ek1().s[519]++;mtx.outputs.splice(mtx.changeIndex,1);cov_a5r0d9ek1().s[520]++;mtx.changeIndex=-1;}else{cov_a5r0d9ek1().b[97][1]++;}cov_a5r0d9ek1().s[521]++;await this.sign(mtx,passphrase);cov_a5r0d9ek1().s[522]++;if(!mtx.isSigned()){cov_a5r0d9ek1().b[98][0]++;cov_a5r0d9ek1().s[523]++;throw new Error('TX could not be fully signed.');}else{cov_a5r0d9ek1().b[98][1]++;}const ntx=(cov_a5r0d9ek1().s[524]++,mtx.toTX());cov_a5r0d9ek1().s[525]++;this.logger.debug('Increasing fee for wallet tx (%s): %h',this.id,ntx.hash());cov_a5r0d9ek1().s[526]++;await this.wdb.addTX(ntx);cov_a5r0d9ek1().s[527]++;await this.wdb.send(ntx);cov_a5r0d9ek1().s[528]++;return ntx;}/**
   * Resend pending wallet transactions.
   * @returns {Promise}
   */async resend(){cov_a5r0d9ek1().f[61]++;const wtxs=(cov_a5r0d9ek1().s[529]++,await this.getPending());cov_a5r0d9ek1().s[530]++;if(wtxs.length>0){cov_a5r0d9ek1().b[99][0]++;cov_a5r0d9ek1().s[531]++;this.logger.info('Rebroadcasting %d transactions.',wtxs.length);}else{cov_a5r0d9ek1().b[99][1]++;}const txs=(cov_a5r0d9ek1().s[532]++,[]);cov_a5r0d9ek1().s[533]++;for(const wtx of wtxs){cov_a5r0d9ek1().s[534]++;txs.push(wtx.tx);}const sorted=(cov_a5r0d9ek1().s[535]++,common.sortDeps(txs));cov_a5r0d9ek1().s[536]++;for(const tx of sorted){cov_a5r0d9ek1().s[537]++;await this.wdb.send(tx);}cov_a5r0d9ek1().s[538]++;return txs;}/**
   * Derive necessary addresses for signing a transaction.
   * @param {MTX} mtx
   * @param {Number?} index - Input index.
   * @returns {Promise} - Returns {@link WalletKey}[].
   */async deriveInputs(mtx){cov_a5r0d9ek1().f[62]++;cov_a5r0d9ek1().s[539]++;assert(mtx.mutable);const paths=(cov_a5r0d9ek1().s[540]++,await this.getInputPaths(mtx));const rings=(cov_a5r0d9ek1().s[541]++,[]);cov_a5r0d9ek1().s[542]++;for(const path of paths){const account=(cov_a5r0d9ek1().s[543]++,await this.getAccount(path.account));cov_a5r0d9ek1().s[544]++;if(!account){cov_a5r0d9ek1().b[100][0]++;cov_a5r0d9ek1().s[545]++;continue;}else{cov_a5r0d9ek1().b[100][1]++;}const ring=(cov_a5r0d9ek1().s[546]++,account.derivePath(path,this.master));cov_a5r0d9ek1().s[547]++;if(ring){cov_a5r0d9ek1().b[101][0]++;cov_a5r0d9ek1().s[548]++;rings.push(ring);}else{cov_a5r0d9ek1().b[101][1]++;}}cov_a5r0d9ek1().s[549]++;return rings;}/**
   * Retrieve a single keyring by address.
   * @param {Address|Hash} hash
   * @returns {Promise}
   */async getKey(address){cov_a5r0d9ek1().f[63]++;const hash=(cov_a5r0d9ek1().s[550]++,Address.getHash(address));const path=(cov_a5r0d9ek1().s[551]++,await this.getPath(hash));cov_a5r0d9ek1().s[552]++;if(!path){cov_a5r0d9ek1().b[102][0]++;cov_a5r0d9ek1().s[553]++;return null;}else{cov_a5r0d9ek1().b[102][1]++;}const account=(cov_a5r0d9ek1().s[554]++,await this.getAccount(path.account));cov_a5r0d9ek1().s[555]++;if(!account){cov_a5r0d9ek1().b[103][0]++;cov_a5r0d9ek1().s[556]++;return null;}else{cov_a5r0d9ek1().b[103][1]++;}cov_a5r0d9ek1().s[557]++;return account.derivePath(path,this.master);}/**
   * Retrieve a single keyring by address
   * (with the private key reference).
   * @param {Address|Hash} hash
   * @param {(Buffer|String)?} passphrase
   * @returns {Promise}
   */async getPrivateKey(address,passphrase){cov_a5r0d9ek1().f[64]++;const hash=(cov_a5r0d9ek1().s[558]++,Address.getHash(address));const path=(cov_a5r0d9ek1().s[559]++,await this.getPath(hash));cov_a5r0d9ek1().s[560]++;if(!path){cov_a5r0d9ek1().b[104][0]++;cov_a5r0d9ek1().s[561]++;return null;}else{cov_a5r0d9ek1().b[104][1]++;}const account=(cov_a5r0d9ek1().s[562]++,await this.getAccount(path.account));cov_a5r0d9ek1().s[563]++;if(!account){cov_a5r0d9ek1().b[105][0]++;cov_a5r0d9ek1().s[564]++;return null;}else{cov_a5r0d9ek1().b[105][1]++;}cov_a5r0d9ek1().s[565]++;await this.unlock(passphrase);const key=(cov_a5r0d9ek1().s[566]++,account.derivePath(path,this.master));cov_a5r0d9ek1().s[567]++;if(!key.privateKey){cov_a5r0d9ek1().b[106][0]++;cov_a5r0d9ek1().s[568]++;return null;}else{cov_a5r0d9ek1().b[106][1]++;}cov_a5r0d9ek1().s[569]++;return key;}/**
   * Map input addresses to paths.
   * @param {MTX} mtx
   * @returns {Promise} - Returns {@link Path}[].
   */async getInputPaths(mtx){cov_a5r0d9ek1().f[65]++;cov_a5r0d9ek1().s[570]++;assert(mtx.mutable);cov_a5r0d9ek1().s[571]++;if(!mtx.hasCoins()){cov_a5r0d9ek1().b[107][0]++;cov_a5r0d9ek1().s[572]++;throw new Error('Not all coins available.');}else{cov_a5r0d9ek1().b[107][1]++;}const hashes=(cov_a5r0d9ek1().s[573]++,mtx.getInputHashes());const paths=(cov_a5r0d9ek1().s[574]++,[]);cov_a5r0d9ek1().s[575]++;for(const hash of hashes){const path=(cov_a5r0d9ek1().s[576]++,await this.getPath(hash));cov_a5r0d9ek1().s[577]++;if(path){cov_a5r0d9ek1().b[108][0]++;cov_a5r0d9ek1().s[578]++;paths.push(path);}else{cov_a5r0d9ek1().b[108][1]++;}}cov_a5r0d9ek1().s[579]++;return paths;}/**
   * Map output addresses to paths.
   * @param {TX} tx
   * @returns {Promise} - Returns {@link Path}[].
   */async getOutputPaths(tx){cov_a5r0d9ek1().f[66]++;const paths=(cov_a5r0d9ek1().s[580]++,[]);const hashes=(cov_a5r0d9ek1().s[581]++,tx.getOutputHashes());cov_a5r0d9ek1().s[582]++;for(const hash of hashes){const path=(cov_a5r0d9ek1().s[583]++,await this.getPath(hash));cov_a5r0d9ek1().s[584]++;if(path){cov_a5r0d9ek1().b[109][0]++;cov_a5r0d9ek1().s[585]++;paths.push(path);}else{cov_a5r0d9ek1().b[109][1]++;}}cov_a5r0d9ek1().s[586]++;return paths;}/**
   * Increase lookahead for account.
   * @param {(Number|String)?} account
   * @param {Number} lookahead
   * @returns {Promise}
   */async setLookahead(acct,lookahead){cov_a5r0d9ek1().f[67]++;const unlock=(cov_a5r0d9ek1().s[587]++,await this.writeLock.lock());cov_a5r0d9ek1().s[588]++;try{cov_a5r0d9ek1().s[589]++;return this._setLookahead(acct,lookahead);}finally{cov_a5r0d9ek1().s[590]++;unlock();}}/**
   * Increase lookahead for account (without a lock).
   * @private
   * @param {(Number|String)?} account
   * @param {Number} lookahead
   * @returns {Promise}
   */async _setLookahead(acct,lookahead){cov_a5r0d9ek1().f[68]++;const account=(cov_a5r0d9ek1().s[591]++,await this.getAccount(acct));cov_a5r0d9ek1().s[592]++;if(!account){cov_a5r0d9ek1().b[110][0]++;cov_a5r0d9ek1().s[593]++;throw new Error('Account not found.');}else{cov_a5r0d9ek1().b[110][1]++;}const b=(cov_a5r0d9ek1().s[594]++,this.db.batch());cov_a5r0d9ek1().s[595]++;await account.setLookahead(b,lookahead);cov_a5r0d9ek1().s[596]++;await b.write();}/**
   * Sync address depths based on a transaction's outputs.
   * This is used for deriving new addresses when
   * a confirmed transaction is seen.
   * @param {TX} tx
   * @returns {Promise}
   */async syncOutputDepth(tx){cov_a5r0d9ek1().f[69]++;const map=(cov_a5r0d9ek1().s[597]++,new Map());cov_a5r0d9ek1().s[598]++;for(const hash of tx.getOutputHashes()){const path=(cov_a5r0d9ek1().s[599]++,await this.readPath(hash));cov_a5r0d9ek1().s[600]++;if(!path){cov_a5r0d9ek1().b[111][0]++;cov_a5r0d9ek1().s[601]++;continue;}else{cov_a5r0d9ek1().b[111][1]++;}cov_a5r0d9ek1().s[602]++;if(path.index===-1){cov_a5r0d9ek1().b[112][0]++;cov_a5r0d9ek1().s[603]++;continue;}else{cov_a5r0d9ek1().b[112][1]++;}cov_a5r0d9ek1().s[604]++;if(!map.has(path.account)){cov_a5r0d9ek1().b[113][0]++;cov_a5r0d9ek1().s[605]++;map.set(path.account,[]);}else{cov_a5r0d9ek1().b[113][1]++;}cov_a5r0d9ek1().s[606]++;map.get(path.account).push(path);}const derived=(cov_a5r0d9ek1().s[607]++,[]);const b=(cov_a5r0d9ek1().s[608]++,this.db.batch());cov_a5r0d9ek1().s[609]++;for(const[acct,paths]of map){let receive=(cov_a5r0d9ek1().s[610]++,-1);let change=(cov_a5r0d9ek1().s[611]++,-1);let nested=(cov_a5r0d9ek1().s[612]++,-1);cov_a5r0d9ek1().s[613]++;for(const path of paths){cov_a5r0d9ek1().s[614]++;switch(path.branch){case 0:cov_a5r0d9ek1().b[114][0]++;cov_a5r0d9ek1().s[615]++;if(path.index>receive){cov_a5r0d9ek1().b[115][0]++;cov_a5r0d9ek1().s[616]++;receive=path.index;}else{cov_a5r0d9ek1().b[115][1]++;}cov_a5r0d9ek1().s[617]++;break;case 1:cov_a5r0d9ek1().b[114][1]++;cov_a5r0d9ek1().s[618]++;if(path.index>change){cov_a5r0d9ek1().b[116][0]++;cov_a5r0d9ek1().s[619]++;change=path.index;}else{cov_a5r0d9ek1().b[116][1]++;}cov_a5r0d9ek1().s[620]++;break;case 2:cov_a5r0d9ek1().b[114][2]++;cov_a5r0d9ek1().s[621]++;if(path.index>nested){cov_a5r0d9ek1().b[117][0]++;cov_a5r0d9ek1().s[622]++;nested=path.index;}else{cov_a5r0d9ek1().b[117][1]++;}cov_a5r0d9ek1().s[623]++;break;}}cov_a5r0d9ek1().s[624]++;receive+=2;cov_a5r0d9ek1().s[625]++;change+=2;cov_a5r0d9ek1().s[626]++;nested+=2;const account=(cov_a5r0d9ek1().s[627]++,await this.getAccount(acct));cov_a5r0d9ek1().s[628]++;assert(account);const ring=(cov_a5r0d9ek1().s[629]++,await account.syncDepth(b,receive,change,nested));cov_a5r0d9ek1().s[630]++;if(ring){cov_a5r0d9ek1().b[118][0]++;cov_a5r0d9ek1().s[631]++;derived.push(ring);}else{cov_a5r0d9ek1().b[118][1]++;}}cov_a5r0d9ek1().s[632]++;await b.write();cov_a5r0d9ek1().s[633]++;return derived;}/**
   * Build input scripts templates for a transaction (does not
   * sign, only creates signature slots). Only builds scripts
   * for inputs that are redeemable by this wallet.
   * @param {MTX} mtx
   * @returns {Promise} - Returns Number
   * (total number of scripts built).
   */async template(mtx){cov_a5r0d9ek1().f[70]++;const rings=(cov_a5r0d9ek1().s[634]++,await this.deriveInputs(mtx));cov_a5r0d9ek1().s[635]++;return mtx.template(rings);}/**
   * Build input scripts and sign inputs for a transaction. Only attempts
   * to build/sign inputs that are redeemable by this wallet.
   * @param {MTX} tx
   * @param {Object|String|Buffer} options - Options or passphrase.
   * @returns {Promise} - Returns Number (total number
   * of inputs scripts built and signed).
   */async sign(mtx,passphrase){cov_a5r0d9ek1().f[71]++;cov_a5r0d9ek1().s[636]++;if(this.watchOnly){cov_a5r0d9ek1().b[119][0]++;cov_a5r0d9ek1().s[637]++;throw new Error('Cannot sign from a watch-only wallet.');}else{cov_a5r0d9ek1().b[119][1]++;}cov_a5r0d9ek1().s[638]++;await this.unlock(passphrase);const rings=(cov_a5r0d9ek1().s[639]++,await this.deriveInputs(mtx));cov_a5r0d9ek1().s[640]++;return mtx.signAsync(rings,Script.hashType.ALL,this.wdb.workers);}/**
   * Get pending ancestors up to the policy limit
   * @param {TX} tx
   * @returns {Promise} - Returns {BufferSet} with Hash
   */async getPendingAncestors(tx){cov_a5r0d9ek1().f[72]++;cov_a5r0d9ek1().s[641]++;return this._getPendingAncestors(tx,new BufferSet());}/**
   * Get pending ancestors up to the policy limit.
   * @param {TX} tx
   * @param {Object} set
   * @returns {Promise} - Returns {BufferSet} with Hash
   */async _getPendingAncestors(tx,set){cov_a5r0d9ek1().f[73]++;cov_a5r0d9ek1().s[642]++;for(const{prevout}of tx.inputs){const hash=(cov_a5r0d9ek1().s[643]++,prevout.hash);cov_a5r0d9ek1().s[644]++;if(set.has(hash)){cov_a5r0d9ek1().b[120][0]++;cov_a5r0d9ek1().s[645]++;continue;}else{cov_a5r0d9ek1().b[120][1]++;}cov_a5r0d9ek1().s[646]++;if(!(await this.hasPending(hash))){cov_a5r0d9ek1().b[121][0]++;cov_a5r0d9ek1().s[647]++;continue;}else{cov_a5r0d9ek1().b[121][1]++;}cov_a5r0d9ek1().s[648]++;set.add(hash);cov_a5r0d9ek1().s[649]++;if(set.size>this.maxAncestors){cov_a5r0d9ek1().b[122][0]++;cov_a5r0d9ek1().s[650]++;break;}else{cov_a5r0d9ek1().b[122][1]++;}const parent=(cov_a5r0d9ek1().s[651]++,await this.getTX(hash));cov_a5r0d9ek1().s[652]++;await this._getPendingAncestors(parent.tx,set);cov_a5r0d9ek1().s[653]++;if(set.size>this.maxAncestors){cov_a5r0d9ek1().b[123][0]++;cov_a5r0d9ek1().s[654]++;break;}else{cov_a5r0d9ek1().b[123][1]++;}}cov_a5r0d9ek1().s[655]++;return set;}/**
   * Test whether the database has a pending transaction.
   * @param {Hash} hash
   * @returns {Promise} - Returns Boolean.
   */hasPending(hash){cov_a5r0d9ek1().f[74]++;cov_a5r0d9ek1().s[656]++;return this.txdb.hasPending(hash);}/**
   * Get a coin viewpoint.
   * @param {TX} tx
   * @returns {Promise} - Returns {@link CoinView}.
   */getCoinView(tx){cov_a5r0d9ek1().f[75]++;cov_a5r0d9ek1().s[657]++;return this.txdb.getCoinView(tx);}/**
   * Get a historical coin viewpoint.
   * @param {TX} tx
   * @returns {Promise} - Returns {@link CoinView}.
   */getSpentView(tx){cov_a5r0d9ek1().f[76]++;cov_a5r0d9ek1().s[658]++;return this.txdb.getSpentView(tx);}/**
   * Convert transaction to transaction details.
   * @param {TXRecord} wtx
   * @returns {Promise} - Returns {@link Details}.
   */toDetails(wtx){cov_a5r0d9ek1().f[77]++;cov_a5r0d9ek1().s[659]++;return this.txdb.toDetails(wtx);}/**
   * Get transaction details.
   * @param {Hash} hash
   * @returns {Promise} - Returns {@link Details}.
   */getDetails(hash){cov_a5r0d9ek1().f[78]++;cov_a5r0d9ek1().s[660]++;return this.txdb.getDetails(hash);}/**
   * Get a coin from the wallet.
   * @param {Hash} hash
   * @param {Number} index
   * @returns {Promise} - Returns {@link Coin}.
   */getCoin(hash,index){cov_a5r0d9ek1().f[79]++;cov_a5r0d9ek1().s[661]++;return this.txdb.getCoin(hash,index);}/**
   * Get a transaction from the wallet.
   * @param {Hash} hash
   * @returns {Promise} - Returns {@link TX}.
   */getTX(hash){cov_a5r0d9ek1().f[80]++;cov_a5r0d9ek1().s[662]++;return this.txdb.getTX(hash);}/**
   * List blocks for the wallet.
   * @returns {Promise} - Returns {@link BlockRecord}.
   */getBlocks(){cov_a5r0d9ek1().f[81]++;cov_a5r0d9ek1().s[663]++;return this.txdb.getBlocks();}/**
   * Get a block from the wallet.
   * @param {Number} height
   * @returns {Promise} - Returns {@link BlockRecord}.
   */getBlock(height){cov_a5r0d9ek1().f[82]++;cov_a5r0d9ek1().s[664]++;return this.txdb.getBlock(height);}/**
   * Add a transaction to the wallets TX history.
   * @param {TX} tx
   * @returns {Promise}
   */async add(tx,block){cov_a5r0d9ek1().f[83]++;const unlock=(cov_a5r0d9ek1().s[665]++,await this.writeLock.lock());cov_a5r0d9ek1().s[666]++;try{cov_a5r0d9ek1().s[667]++;return await this._add(tx,block);}finally{cov_a5r0d9ek1().s[668]++;unlock();}}/**
   * Add a transaction to the wallet without a lock.
   * Potentially resolves orphans.
   * @private
   * @param {TX} tx
   * @returns {Promise}
   */async _add(tx,block){cov_a5r0d9ek1().f[84]++;const details=(cov_a5r0d9ek1().s[669]++,await this.txdb.add(tx,block));cov_a5r0d9ek1().s[670]++;if(details){cov_a5r0d9ek1().b[124][0]++;const derived=(cov_a5r0d9ek1().s[671]++,await this.syncOutputDepth(tx));cov_a5r0d9ek1().s[672]++;if(derived.length>0){cov_a5r0d9ek1().b[125][0]++;cov_a5r0d9ek1().s[673]++;this.wdb.emit('address',this,derived);cov_a5r0d9ek1().s[674]++;this.emit('address',derived);}else{cov_a5r0d9ek1().b[125][1]++;}}else{cov_a5r0d9ek1().b[124][1]++;}cov_a5r0d9ek1().s[675]++;return details;}/**
   * Revert a block.
   * @param {Number} height
   * @returns {Promise}
   */async revert(height){cov_a5r0d9ek1().f[85]++;const unlock=(cov_a5r0d9ek1().s[676]++,await this.writeLock.lock());cov_a5r0d9ek1().s[677]++;try{cov_a5r0d9ek1().s[678]++;return await this.txdb.revert(height);}finally{cov_a5r0d9ek1().s[679]++;unlock();}}/**
   * Remove a wallet transaction.
   * @param {Hash} hash
   * @returns {Promise}
   */async remove(hash){cov_a5r0d9ek1().f[86]++;const unlock=(cov_a5r0d9ek1().s[680]++,await this.writeLock.lock());cov_a5r0d9ek1().s[681]++;try{cov_a5r0d9ek1().s[682]++;return await this.txdb.remove(hash);}finally{cov_a5r0d9ek1().s[683]++;unlock();}}/**
   * Zap stale TXs from wallet.
   * @param {(Number|String)?} acct
   * @param {Number} age - Age threshold (unix time).
   * @returns {Promise}
   */async zap(acct,age){cov_a5r0d9ek1().f[87]++;const unlock=(cov_a5r0d9ek1().s[684]++,await this.writeLock.lock());cov_a5r0d9ek1().s[685]++;try{cov_a5r0d9ek1().s[686]++;return await this._zap(acct,age);}finally{cov_a5r0d9ek1().s[687]++;unlock();}}/**
   * Zap stale TXs from wallet without a lock.
   * @private
   * @param {(Number|String)?} acct
   * @param {Number} age
   * @returns {Promise}
   */async _zap(acct,age){cov_a5r0d9ek1().f[88]++;const account=(cov_a5r0d9ek1().s[688]++,await this.ensureIndex(acct));cov_a5r0d9ek1().s[689]++;return this.txdb.zap(account,age);}/**
   * Abandon transaction.
   * @param {Hash} hash
   * @returns {Promise}
   */async abandon(hash){cov_a5r0d9ek1().f[89]++;const unlock=(cov_a5r0d9ek1().s[690]++,await this.writeLock.lock());cov_a5r0d9ek1().s[691]++;try{cov_a5r0d9ek1().s[692]++;return await this._abandon(hash);}finally{cov_a5r0d9ek1().s[693]++;unlock();}}/**
   * Abandon transaction without a lock.
   * @private
   * @param {Hash} hash
   * @returns {Promise}
   */_abandon(hash){cov_a5r0d9ek1().f[90]++;cov_a5r0d9ek1().s[694]++;return this.txdb.abandon(hash);}/**
   * Lock a single coin.
   * @param {Coin|Outpoint} coin
   */lockCoin(coin){cov_a5r0d9ek1().f[91]++;cov_a5r0d9ek1().s[695]++;return this.txdb.lockCoin(coin);}/**
   * Unlock a single coin.
   * @param {Coin|Outpoint} coin
   */unlockCoin(coin){cov_a5r0d9ek1().f[92]++;cov_a5r0d9ek1().s[696]++;return this.txdb.unlockCoin(coin);}/**
   * Unlock all locked coins.
   */unlockCoins(){cov_a5r0d9ek1().f[93]++;cov_a5r0d9ek1().s[697]++;return this.txdb.unlockCoins();}/**
   * Test locked status of a single coin.
   * @param {Coin|Outpoint} coin
   */isLocked(coin){cov_a5r0d9ek1().f[94]++;cov_a5r0d9ek1().s[698]++;return this.txdb.isLocked(coin);}/**
   * Return an array of all locked outpoints.
   * @returns {Outpoint[]}
   */getLocked(){cov_a5r0d9ek1().f[95]++;cov_a5r0d9ek1().s[699]++;return this.txdb.getLocked();}/**
   * Get all transactions in transaction history.
   * @param {(String|Number)?} acct
   * @returns {Promise} - Returns {@link TX}[].
   */async getHistory(acct){cov_a5r0d9ek1().f[96]++;const account=(cov_a5r0d9ek1().s[700]++,await this.ensureIndex(acct));cov_a5r0d9ek1().s[701]++;return this.txdb.getHistory(account);}/**
   * Get all available coins.
   * @param {(String|Number)?} account
   * @returns {Promise} - Returns {@link Coin}[].
   */async getCoins(acct){cov_a5r0d9ek1().f[97]++;const account=(cov_a5r0d9ek1().s[702]++,await this.ensureIndex(acct));cov_a5r0d9ek1().s[703]++;return this.txdb.getCoins(account);}/**
   * Get all available credits.
   * @param {(String|Number)?} account
   * @returns {Promise} - Returns {@link Credit}[].
   */async getCredits(acct){cov_a5r0d9ek1().f[98]++;const account=(cov_a5r0d9ek1().s[704]++,await this.ensureIndex(acct));cov_a5r0d9ek1().s[705]++;return this.txdb.getCredits(account);}/**
   * Get "smart" coins.
   * @param {(String|Number)?} account
   * @returns {Promise} - Returns {@link Coin}[].
   */async getSmartCoins(acct){cov_a5r0d9ek1().f[99]++;const credits=(cov_a5r0d9ek1().s[706]++,await this.getCredits(acct));const coins=(cov_a5r0d9ek1().s[707]++,[]);cov_a5r0d9ek1().s[708]++;for(const credit of credits){const coin=(cov_a5r0d9ek1().s[709]++,credit.coin);cov_a5r0d9ek1().s[710]++;if(credit.spent){cov_a5r0d9ek1().b[126][0]++;cov_a5r0d9ek1().s[711]++;continue;}else{cov_a5r0d9ek1().b[126][1]++;}cov_a5r0d9ek1().s[712]++;if(this.txdb.isLocked(coin)){cov_a5r0d9ek1().b[127][0]++;cov_a5r0d9ek1().s[713]++;continue;}else{cov_a5r0d9ek1().b[127][1]++;}// Always use confirmed coins.
cov_a5r0d9ek1().s[714]++;if(coin.height!==-1){cov_a5r0d9ek1().b[128][0]++;cov_a5r0d9ek1().s[715]++;coins.push(coin);cov_a5r0d9ek1().s[716]++;continue;}else{cov_a5r0d9ek1().b[128][1]++;}// Use unconfirmed only if they were
// created as a result of one of our
// _own_ transactions. i.e. they're
// not low-fee and not in danger of
// being double-spent by a bad actor.
cov_a5r0d9ek1().s[717]++;if(!credit.own){cov_a5r0d9ek1().b[129][0]++;cov_a5r0d9ek1().s[718]++;continue;}else{cov_a5r0d9ek1().b[129][1]++;}cov_a5r0d9ek1().s[719]++;coins.push(coin);}cov_a5r0d9ek1().s[720]++;return coins;}/**
   * Get all pending/unconfirmed transactions.
   * @param {(String|Number)?} acct
   * @returns {Promise} - Returns {@link TX}[].
   */async getPending(acct){cov_a5r0d9ek1().f[100]++;const account=(cov_a5r0d9ek1().s[721]++,await this.ensureIndex(acct));cov_a5r0d9ek1().s[722]++;return this.txdb.getPending(account);}/**
   * Get wallet balance.
   * @param {(String|Number)?} acct
   * @returns {Promise} - Returns {@link Balance}.
   */async getBalance(acct){cov_a5r0d9ek1().f[101]++;const account=(cov_a5r0d9ek1().s[723]++,await this.ensureIndex(acct));cov_a5r0d9ek1().s[724]++;return this.txdb.getBalance(account);}/**
   * Get a range of transactions between two timestamps.
   * @param {(String|Number)?} acct
   * @param {Object} options
   * @param {Number} options.start
   * @param {Number} options.end
   * @returns {Promise} - Returns {@link TX}[].
   */async getRange(acct,options){cov_a5r0d9ek1().f[102]++;const account=(cov_a5r0d9ek1().s[725]++,await this.ensureIndex(acct));cov_a5r0d9ek1().s[726]++;return this.txdb.getRange(account,options);}/**
   * Get the last N transactions.
   * @param {(String|Number)?} acct
   * @param {Number} limit
   * @returns {Promise} - Returns {@link TX}[].
   */async getLast(acct,limit){cov_a5r0d9ek1().f[103]++;const account=(cov_a5r0d9ek1().s[727]++,await this.ensureIndex(acct));cov_a5r0d9ek1().s[728]++;return this.txdb.getLast(account,limit);}/**
   * Get account key.
   * @param {Number} [acct=0]
   * @returns {HDPublicKey}
   */async accountKey(acct=(cov_a5r0d9ek1().b[130][0]++,0)){cov_a5r0d9ek1().f[104]++;const account=(cov_a5r0d9ek1().s[729]++,await this.getAccount(acct));cov_a5r0d9ek1().s[730]++;if(!account){cov_a5r0d9ek1().b[131][0]++;cov_a5r0d9ek1().s[731]++;throw new Error('Account not found.');}else{cov_a5r0d9ek1().b[131][1]++;}cov_a5r0d9ek1().s[732]++;return account.accountKey;}/**
   * Get current receive depth.
   * @param {Number} [acct=0]
   * @returns {Number}
   */async receiveDepth(acct=(cov_a5r0d9ek1().b[132][0]++,0)){cov_a5r0d9ek1().f[105]++;const account=(cov_a5r0d9ek1().s[733]++,await this.getAccount(acct));cov_a5r0d9ek1().s[734]++;if(!account){cov_a5r0d9ek1().b[133][0]++;cov_a5r0d9ek1().s[735]++;throw new Error('Account not found.');}else{cov_a5r0d9ek1().b[133][1]++;}cov_a5r0d9ek1().s[736]++;return account.receiveDepth;}/**
   * Get current change depth.
   * @param {Number} [acct=0]
   * @returns {Number}
   */async changeDepth(acct=(cov_a5r0d9ek1().b[134][0]++,0)){cov_a5r0d9ek1().f[106]++;const account=(cov_a5r0d9ek1().s[737]++,await this.getAccount(acct));cov_a5r0d9ek1().s[738]++;if(!account){cov_a5r0d9ek1().b[135][0]++;cov_a5r0d9ek1().s[739]++;throw new Error('Account not found.');}else{cov_a5r0d9ek1().b[135][1]++;}cov_a5r0d9ek1().s[740]++;return account.changeDepth;}/**
   * Get current nested depth.
   * @param {Number} [acct=0]
   * @returns {Number}
   */async nestedDepth(acct=(cov_a5r0d9ek1().b[136][0]++,0)){cov_a5r0d9ek1().f[107]++;const account=(cov_a5r0d9ek1().s[741]++,await this.getAccount(acct));cov_a5r0d9ek1().s[742]++;if(!account){cov_a5r0d9ek1().b[137][0]++;cov_a5r0d9ek1().s[743]++;throw new Error('Account not found.');}else{cov_a5r0d9ek1().b[137][1]++;}cov_a5r0d9ek1().s[744]++;return account.nestedDepth;}/**
   * Get current receive address.
   * @param {Number} [acct=0]
   * @returns {Address}
   */async receiveAddress(acct=(cov_a5r0d9ek1().b[138][0]++,0)){cov_a5r0d9ek1().f[108]++;const account=(cov_a5r0d9ek1().s[745]++,await this.getAccount(acct));cov_a5r0d9ek1().s[746]++;if(!account){cov_a5r0d9ek1().b[139][0]++;cov_a5r0d9ek1().s[747]++;throw new Error('Account not found.');}else{cov_a5r0d9ek1().b[139][1]++;}cov_a5r0d9ek1().s[748]++;return account.receiveAddress();}/**
   * Get current change address.
   * @param {Number} [acct=0]
   * @returns {Address}
   */async changeAddress(acct=(cov_a5r0d9ek1().b[140][0]++,0)){cov_a5r0d9ek1().f[109]++;const account=(cov_a5r0d9ek1().s[749]++,await this.getAccount(acct));cov_a5r0d9ek1().s[750]++;if(!account){cov_a5r0d9ek1().b[141][0]++;cov_a5r0d9ek1().s[751]++;throw new Error('Account not found.');}else{cov_a5r0d9ek1().b[141][1]++;}cov_a5r0d9ek1().s[752]++;return account.changeAddress();}/**
   * Get current nested address.
   * @param {Number} [acct=0]
   * @returns {Address}
   */async nestedAddress(acct=(cov_a5r0d9ek1().b[142][0]++,0)){cov_a5r0d9ek1().f[110]++;const account=(cov_a5r0d9ek1().s[753]++,await this.getAccount(acct));cov_a5r0d9ek1().s[754]++;if(!account){cov_a5r0d9ek1().b[143][0]++;cov_a5r0d9ek1().s[755]++;throw new Error('Account not found.');}else{cov_a5r0d9ek1().b[143][1]++;}cov_a5r0d9ek1().s[756]++;return account.nestedAddress();}/**
   * Get current receive key.
   * @param {Number} [acct=0]
   * @returns {WalletKey}
   */async receiveKey(acct=(cov_a5r0d9ek1().b[144][0]++,0)){cov_a5r0d9ek1().f[111]++;const account=(cov_a5r0d9ek1().s[757]++,await this.getAccount(acct));cov_a5r0d9ek1().s[758]++;if(!account){cov_a5r0d9ek1().b[145][0]++;cov_a5r0d9ek1().s[759]++;throw new Error('Account not found.');}else{cov_a5r0d9ek1().b[145][1]++;}cov_a5r0d9ek1().s[760]++;return account.receiveKey();}/**
   * Get current change key.
   * @param {Number} [acct=0]
   * @returns {WalletKey}
   */async changeKey(acct=(cov_a5r0d9ek1().b[146][0]++,0)){cov_a5r0d9ek1().f[112]++;const account=(cov_a5r0d9ek1().s[761]++,await this.getAccount(acct));cov_a5r0d9ek1().s[762]++;if(!account){cov_a5r0d9ek1().b[147][0]++;cov_a5r0d9ek1().s[763]++;throw new Error('Account not found.');}else{cov_a5r0d9ek1().b[147][1]++;}cov_a5r0d9ek1().s[764]++;return account.changeKey();}/**
   * Get current nested key.
   * @param {Number} [acct=0]
   * @returns {WalletKey}
   */async nestedKey(acct=(cov_a5r0d9ek1().b[148][0]++,0)){cov_a5r0d9ek1().f[113]++;const account=(cov_a5r0d9ek1().s[765]++,await this.getAccount(acct));cov_a5r0d9ek1().s[766]++;if(!account){cov_a5r0d9ek1().b[149][0]++;cov_a5r0d9ek1().s[767]++;throw new Error('Account not found.');}else{cov_a5r0d9ek1().b[149][1]++;}cov_a5r0d9ek1().s[768]++;return account.nestedKey();}/**
   * Convert the wallet to a more inspection-friendly object.
   * @returns {Object}
   */[inspectSymbol](){cov_a5r0d9ek1().f[114]++;cov_a5r0d9ek1().s[769]++;return{wid:this.wid,id:this.id,network:this.network.type,accountDepth:this.accountDepth,token:this.token.toString('hex'),tokenDepth:this.tokenDepth,master:this.master};}/**
   * Convert the wallet to an object suitable for
   * serialization.
   * @param {Boolean?} unsafe - Whether to include
   * the master key in the JSON.
   * @returns {Object}
   */toJSON(unsafe,balance){cov_a5r0d9ek1().f[115]++;cov_a5r0d9ek1().s[770]++;return{network:this.network.type,wid:this.wid,id:this.id,watchOnly:this.watchOnly,accountDepth:this.accountDepth,token:this.token.toString('hex'),tokenDepth:this.tokenDepth,master:this.master.toJSON(this.network,unsafe),balance:balance?(cov_a5r0d9ek1().b[150][0]++,balance.toJSON(true)):(cov_a5r0d9ek1().b[150][1]++,null)};}/**
   * Calculate serialization size.
   * @returns {Number}
   */getSize(){cov_a5r0d9ek1().f[116]++;let size=(cov_a5r0d9ek1().s[771]++,0);cov_a5r0d9ek1().s[772]++;size+=41;cov_a5r0d9ek1().s[773]++;size+=this.master.getSize();cov_a5r0d9ek1().s[774]++;return size;}/**
   * Serialize the wallet.
   * @returns {Buffer}
   */toRaw(){cov_a5r0d9ek1().f[117]++;const size=(cov_a5r0d9ek1().s[775]++,this.getSize());const bw=(cov_a5r0d9ek1().s[776]++,bio.write(size));let flags=(cov_a5r0d9ek1().s[777]++,0);cov_a5r0d9ek1().s[778]++;if(this.watchOnly){cov_a5r0d9ek1().b[151][0]++;cov_a5r0d9ek1().s[779]++;flags|=1;}else{cov_a5r0d9ek1().b[151][1]++;}cov_a5r0d9ek1().s[780]++;bw.writeU8(flags);cov_a5r0d9ek1().s[781]++;bw.writeU32(this.accountDepth);cov_a5r0d9ek1().s[782]++;bw.writeBytes(this.token);cov_a5r0d9ek1().s[783]++;bw.writeU32(this.tokenDepth);cov_a5r0d9ek1().s[784]++;this.master.toWriter(bw);cov_a5r0d9ek1().s[785]++;return bw.render();}/**
   * Inject properties from serialized data.
   * @private
   * @param {Buffer} data
   */fromRaw(data){cov_a5r0d9ek1().f[118]++;const br=(cov_a5r0d9ek1().s[786]++,bio.read(data));const flags=(cov_a5r0d9ek1().s[787]++,br.readU8());cov_a5r0d9ek1().s[788]++;this.watchOnly=(flags&1)!==0;cov_a5r0d9ek1().s[789]++;this.accountDepth=br.readU32();cov_a5r0d9ek1().s[790]++;this.token=br.readBytes(32);cov_a5r0d9ek1().s[791]++;this.tokenDepth=br.readU32();cov_a5r0d9ek1().s[792]++;this.master.fromReader(br);cov_a5r0d9ek1().s[793]++;return this;}/**
   * Instantiate a wallet from serialized data.
   * @param {Buffer} data
   * @returns {Wallet}
   */static fromRaw(wdb,data){cov_a5r0d9ek1().f[119]++;cov_a5r0d9ek1().s[794]++;return new this(wdb).fromRaw(data);}/**
   * Test an object to see if it is a Wallet.
   * @param {Object} obj
   * @returns {Boolean}
   */static isWallet(obj){cov_a5r0d9ek1().f[120]++;cov_a5r0d9ek1().s[795]++;return obj instanceof Wallet;}}/*
 * Expose
 */cov_a5r0d9ek1().s[796]++;module.exports=Wallet;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
/*!
 * common.js - bitcoin constants for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */'use strict';/**
 * @module blockchain/common
 */ /**
 * Locktime flags.
 * @enum {Number}
 */function cov_t5205p47u(){var path="E:\\Projects\\Test\\bcoin\\lib\\blockchain\\common.js";var hash="29685bf603fbcdf1c63d658b1fc0bdb6167e4c40";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\Projects\\Test\\bcoin\\lib\\blockchain\\common.js",statementMap:{"0":{start:{line:19,column:0},end:{line:22,column:2}},"1":{start:{line:30,column:0},end:{line:30,column:47}},"2":{start:{line:38,column:0},end:{line:40,column:39}},"3":{start:{line:48,column:0},end:{line:54,column:2}},"4":{start:{line:62,column:0},end:{line:66,column:2}},"5":{start:{line:74,column:0},end:{line:76,column:30}}},fnMap:{},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},f:{},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"29685bf603fbcdf1c63d658b1fc0bdb6167e4c40"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_t5205p47u=function(){return actualCoverage;};}return actualCoverage;}cov_t5205p47u();cov_t5205p47u().s[0]++;exports.lockFlags={VERIFY_SEQUENCE:1<<0,MEDIAN_TIME_PAST:1<<1};/**
 * Consensus locktime flags (used for block validation).
 * @const {LockFlags}
 * @default
 */cov_t5205p47u().s[1]++;exports.lockFlags.MANDATORY_LOCKTIME_FLAGS=0;/**
 * Standard locktime flags (used for mempool validation).
 * @const {LockFlags}
 * @default
 */cov_t5205p47u().s[2]++;exports.lockFlags.STANDARD_LOCKTIME_FLAGS=0|exports.lockFlags.VERIFY_SEQUENCE|exports.lockFlags.MEDIAN_TIME_PAST;/**
 * Threshold states for versionbits
 * @enum {Number}
 * @default
 */cov_t5205p47u().s[3]++;exports.thresholdStates={DEFINED:0,STARTED:1,LOCKED_IN:2,ACTIVE:3,FAILED:4};/**
 * Verify flags for blocks.
 * @enum {Number}
 * @default
 */cov_t5205p47u().s[4]++;exports.flags={VERIFY_NONE:0,VERIFY_POW:1<<0,VERIFY_BODY:1<<1};/**
 * Default block verify flags.
 * @const {Number}
 * @default
 */cov_t5205p47u().s[5]++;exports.flags.DEFAULT_FLAGS=0|exports.flags.VERIFY_POW|exports.flags.VERIFY_BODY;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1vbi5qcyJdLCJuYW1lcyI6WyJleHBvcnRzIiwibG9ja0ZsYWdzIiwiVkVSSUZZX1NFUVVFTkNFIiwiTUVESUFOX1RJTUVfUEFTVCIsIk1BTkRBVE9SWV9MT0NLVElNRV9GTEFHUyIsIlNUQU5EQVJEX0xPQ0tUSU1FX0ZMQUdTIiwidGhyZXNob2xkU3RhdGVzIiwiREVGSU5FRCIsIlNUQVJURUQiLCJMT0NLRURfSU4iLCJBQ1RJVkUiLCJGQUlMRUQiLCJmbGFncyIsIlZFUklGWV9OT05FIiwiVkVSSUZZX1BPVyIsIlZFUklGWV9CT0RZIiwiREVGQVVMVF9GTEFHUyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBRUEsYUFFQTtBQUNBO0FBQ0EsRyxDQUVBO0FBQ0E7QUFDQTtBQUNBLEcsazhCQURZO2dIQUdaQSxPQUFPLENBQUNDLFNBQVIsQ0FBb0IsQ0FDbEJDLGVBQWUsQ0FBRSxHQUFLLENBREosQ0FFbEJDLGdCQUFnQixDQUFFLEdBQUssQ0FGTCxDQUFwQixDQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRyx1QkFFQUgsT0FBTyxDQUFDQyxTQUFSLENBQWtCRyx3QkFBbEIsQ0FBNkMsQ0FBN0MsQ0FFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEcsdUJBRUFKLE9BQU8sQ0FBQ0MsU0FBUixDQUFrQkksdUJBQWxCLENBQTRDLEVBQ3hDTCxPQUFPLENBQUNDLFNBQVIsQ0FBa0JDLGVBRHNCLENBRXhDRixPQUFPLENBQUNDLFNBQVIsQ0FBa0JFLGdCQUZ0QixDQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRyx1QkFFQUgsT0FBTyxDQUFDTSxlQUFSLENBQTBCLENBQ3hCQyxPQUFPLENBQUUsQ0FEZSxDQUV4QkMsT0FBTyxDQUFFLENBRmUsQ0FHeEJDLFNBQVMsQ0FBRSxDQUhhLENBSXhCQyxNQUFNLENBQUUsQ0FKZ0IsQ0FLeEJDLE1BQU0sQ0FBRSxDQUxnQixDQUExQixDQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRyx1QkFFQVgsT0FBTyxDQUFDWSxLQUFSLENBQWdCLENBQ2RDLFdBQVcsQ0FBRSxDQURDLENBRWRDLFVBQVUsQ0FBRSxHQUFLLENBRkgsQ0FHZEMsV0FBVyxDQUFFLEdBQUssQ0FISixDQUFoQixDQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRyx1QkFFQWYsT0FBTyxDQUFDWSxLQUFSLENBQWNJLGFBQWQsQ0FBOEIsRUFDMUJoQixPQUFPLENBQUNZLEtBQVIsQ0FBY0UsVUFEWSxDQUUxQmQsT0FBTyxDQUFDWSxLQUFSLENBQWNHLFdBRmxCIiwic291cmNlc0NvbnRlbnQiOlsiLyohXHJcbiAqIGNvbW1vbi5qcyAtIGJpdGNvaW4gY29uc3RhbnRzIGZvciBiY29pblxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQtMjAxNSwgRmVkb3IgSW5kdXRueSAoTUlUIExpY2Vuc2UpXHJcbiAqIENvcHlyaWdodCAoYykgMjAxNC0yMDE3LCBDaHJpc3RvcGhlciBKZWZmcmV5IChNSVQgTGljZW5zZSkuXHJcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9iY29pbi1vcmcvYmNvaW5cclxuICovXHJcblxyXG4ndXNlIHN0cmljdCc7XHJcblxyXG4vKipcclxuICogQG1vZHVsZSBibG9ja2NoYWluL2NvbW1vblxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBMb2NrdGltZSBmbGFncy5cclxuICogQGVudW0ge051bWJlcn1cclxuICovXHJcblxyXG5leHBvcnRzLmxvY2tGbGFncyA9IHtcclxuICBWRVJJRllfU0VRVUVOQ0U6IDEgPDwgMCxcclxuICBNRURJQU5fVElNRV9QQVNUOiAxIDw8IDFcclxufTtcclxuXHJcbi8qKlxyXG4gKiBDb25zZW5zdXMgbG9ja3RpbWUgZmxhZ3MgKHVzZWQgZm9yIGJsb2NrIHZhbGlkYXRpb24pLlxyXG4gKiBAY29uc3Qge0xvY2tGbGFnc31cclxuICogQGRlZmF1bHRcclxuICovXHJcblxyXG5leHBvcnRzLmxvY2tGbGFncy5NQU5EQVRPUllfTE9DS1RJTUVfRkxBR1MgPSAwO1xyXG5cclxuLyoqXHJcbiAqIFN0YW5kYXJkIGxvY2t0aW1lIGZsYWdzICh1c2VkIGZvciBtZW1wb29sIHZhbGlkYXRpb24pLlxyXG4gKiBAY29uc3Qge0xvY2tGbGFnc31cclxuICogQGRlZmF1bHRcclxuICovXHJcblxyXG5leHBvcnRzLmxvY2tGbGFncy5TVEFOREFSRF9MT0NLVElNRV9GTEFHUyA9IDBcclxuICB8IGV4cG9ydHMubG9ja0ZsYWdzLlZFUklGWV9TRVFVRU5DRVxyXG4gIHwgZXhwb3J0cy5sb2NrRmxhZ3MuTUVESUFOX1RJTUVfUEFTVDtcclxuXHJcbi8qKlxyXG4gKiBUaHJlc2hvbGQgc3RhdGVzIGZvciB2ZXJzaW9uYml0c1xyXG4gKiBAZW51bSB7TnVtYmVyfVxyXG4gKiBAZGVmYXVsdFxyXG4gKi9cclxuXHJcbmV4cG9ydHMudGhyZXNob2xkU3RhdGVzID0ge1xyXG4gIERFRklORUQ6IDAsXHJcbiAgU1RBUlRFRDogMSxcclxuICBMT0NLRURfSU46IDIsXHJcbiAgQUNUSVZFOiAzLFxyXG4gIEZBSUxFRDogNFxyXG59O1xyXG5cclxuLyoqXHJcbiAqIFZlcmlmeSBmbGFncyBmb3IgYmxvY2tzLlxyXG4gKiBAZW51bSB7TnVtYmVyfVxyXG4gKiBAZGVmYXVsdFxyXG4gKi9cclxuXHJcbmV4cG9ydHMuZmxhZ3MgPSB7XHJcbiAgVkVSSUZZX05PTkU6IDAsXHJcbiAgVkVSSUZZX1BPVzogMSA8PCAwLFxyXG4gIFZFUklGWV9CT0RZOiAxIDw8IDFcclxufTtcclxuXHJcbi8qKlxyXG4gKiBEZWZhdWx0IGJsb2NrIHZlcmlmeSBmbGFncy5cclxuICogQGNvbnN0IHtOdW1iZXJ9XHJcbiAqIEBkZWZhdWx0XHJcbiAqL1xyXG5cclxuZXhwb3J0cy5mbGFncy5ERUZBVUxUX0ZMQUdTID0gMFxyXG4gIHwgZXhwb3J0cy5mbGFncy5WRVJJRllfUE9XXHJcbiAgfCBleHBvcnRzLmZsYWdzLlZFUklGWV9CT0RZO1xyXG4iXX0=
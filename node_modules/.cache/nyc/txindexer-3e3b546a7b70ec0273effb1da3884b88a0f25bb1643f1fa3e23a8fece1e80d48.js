/*!
 * txindexer.js - transaction indexer for bcoin
 * Copyright (c) 2018, the bcoin developers (MIT License).
 * https://github.com/bcoin-org/bcoin
 */'use strict';function cov_1egc0lusf7(){var path="E:\\Projects\\Test\\bcoin\\lib\\indexer\\txindexer.js";var hash="7ff7b5432f7f00220537b57bf0abd956c3ec1311";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\Projects\\Test\\bcoin\\lib\\indexer\\txindexer.js",statementMap:{"0":{start:{line:9,column:15},end:{line:9,column:31}},"1":{start:{line:10,column:12},end:{line:10,column:26}},"2":{start:{line:11,column:12},end:{line:11,column:28}},"3":{start:{line:12,column:15},end:{line:12,column:34}},"4":{start:{line:13,column:18},end:{line:13,column:50}},"5":{start:{line:14,column:11},end:{line:14,column:38}},"6":{start:{line:15,column:15},end:{line:15,column:46}},"7":{start:{line:16,column:16},end:{line:16,column:36}},"8":{start:{line:30,column:0},end:{line:33,column:3}},"9":{start:{line:46,column:4},end:{line:46,column:54}},"10":{start:{line:47,column:4},end:{line:47,column:34}},"11":{start:{line:49,column:4},end:{line:49,column:37}},"12":{start:{line:50,column:4},end:{line:50,column:44}},"13":{start:{line:60,column:15},end:{line:60,column:29}},"14":{start:{line:62,column:4},end:{line:62,column:31}},"15":{start:{line:63,column:4},end:{line:63,column:29}},"16":{start:{line:65,column:4},end:{line:65,column:16}},"17":{start:{line:76,column:4},end:{line:76,column:36}},"18":{start:{line:85,column:15},end:{line:85,column:28}},"19":{start:{line:87,column:4},end:{line:87,column:29}},"20":{start:{line:88,column:4},end:{line:88,column:27}},"21":{start:{line:90,column:4},end:{line:90,column:23}},"22":{start:{line:105,column:4},end:{line:105,column:38}},"23":{start:{line:106,column:4},end:{line:106,column:36}},"24":{start:{line:107,column:4},end:{line:107,column:38}},"25":{start:{line:108,column:4},end:{line:108,column:38}},"26":{start:{line:110,column:4},end:{line:110,column:48}},"27":{start:{line:111,column:4},end:{line:111,column:46}},"28":{start:{line:112,column:4},end:{line:112,column:48}},"29":{start:{line:113,column:4},end:{line:113,column:48}},"30":{start:{line:123,column:15},end:{line:123,column:29}},"31":{start:{line:125,column:4},end:{line:125,column:31}},"32":{start:{line:126,column:4},end:{line:126,column:30}},"33":{start:{line:127,column:4},end:{line:127,column:31}},"34":{start:{line:128,column:4},end:{line:128,column:31}},"35":{start:{line:130,column:4},end:{line:130,column:16}},"36":{start:{line:141,column:4},end:{line:141,column:36}},"37":{start:{line:150,column:15},end:{line:150,column:28}},"38":{start:{line:152,column:4},end:{line:152,column:29}},"39":{start:{line:153,column:4},end:{line:153,column:28}},"40":{start:{line:154,column:4},end:{line:154,column:29}},"41":{start:{line:155,column:4},end:{line:155,column:29}},"42":{start:{line:157,column:4},end:{line:157,column:23}},"43":{start:{line:175,column:4},end:{line:175,column:25}},"44":{start:{line:177,column:4},end:{line:177,column:39}},"45":{start:{line:189,column:4},end:{line:189,column:59}},"46":{start:{line:190,column:20},end:{line:193,column:6}},"47":{start:{line:195,column:4},end:{line:195,column:60}},"48":{start:{line:197,column:4},end:{line:211,column:5}},"49":{start:{line:197,column:17},end:{line:197,column:18}},"50":{start:{line:198,column:17},end:{line:198,column:29}},"51":{start:{line:200,column:19},end:{line:200,column:28}},"52":{start:{line:201,column:29},end:{line:201,column:45}},"53":{start:{line:203,column:23},end:{line:208,column:8}},"54":{start:{line:210,column:6},end:{line:210,column:56}},"55":{start:{line:223,column:4},end:{line:223,column:43}},"56":{start:{line:225,column:4},end:{line:229,column:5}},"57":{start:{line:225,column:17},end:{line:225,column:18}},"58":{start:{line:226,column:17},end:{line:226,column:29}},"59":{start:{line:227,column:19},end:{line:227,column:28}},"60":{start:{line:228,column:6},end:{line:228,column:38}},"61":{start:{line:239,column:16},end:{line:239,column:56}},"62":{start:{line:240,column:4},end:{line:241,column:18}},"63":{start:{line:241,column:6},end:{line:241,column:18}},"64":{start:{line:243,column:19},end:{line:243,column:40}},"65":{start:{line:244,column:44},end:{line:244,column:50}},"66":{start:{line:246,column:17},end:{line:246,column:59}},"67":{start:{line:247,column:4},end:{line:248,column:18}},"68":{start:{line:248,column:6},end:{line:248,column:18}},"69":{start:{line:250,column:20},end:{line:250,column:45}},"70":{start:{line:251,column:26},end:{line:251,column:33}},"71":{start:{line:253,column:17},end:{line:253,column:62}},"72":{start:{line:255,column:15},end:{line:255,column:31}},"73":{start:{line:257,column:17},end:{line:257,column:34}},"74":{start:{line:258,column:4},end:{line:258,column:25}},"75":{start:{line:259,column:4},end:{line:259,column:23}},"76":{start:{line:260,column:4},end:{line:260,column:21}},"77":{start:{line:261,column:4},end:{line:261,column:23}},"78":{start:{line:263,column:4},end:{line:263,column:16}},"79":{start:{line:273,column:17},end:{line:273,column:41}},"80":{start:{line:275,column:4},end:{line:276,column:18}},"81":{start:{line:276,column:6},end:{line:276,column:18}},"82":{start:{line:278,column:4},end:{line:278,column:19}},"83":{start:{line:287,column:4},end:{line:287,column:46}},"84":{start:{line:297,column:17},end:{line:297,column:49}},"85":{start:{line:299,column:4},end:{line:313,column:5}},"86":{start:{line:300,column:6},end:{line:301,column:17}},"87":{start:{line:301,column:8},end:{line:301,column:17}},"88":{start:{line:303,column:28},end:{line:303,column:35}},"89":{start:{line:304,column:19},end:{line:304,column:43}},"90":{start:{line:306,column:6},end:{line:307,column:17}},"91":{start:{line:307,column:8},end:{line:307,column:17}},"92":{start:{line:309,column:27},end:{line:309,column:31}},"93":{start:{line:311,column:6},end:{line:312,column:41}},"94":{start:{line:312,column:8},end:{line:312,column:41}},"95":{start:{line:315,column:4},end:{line:315,column:16}},"96":{start:{line:319,column:0},end:{line:319,column:27}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:45,column:2},end:{line:45,column:3}},loc:{start:{line:45,column:28},end:{line:51,column:3}},line:45},"1":{name:"(anonymous_1)",decl:{start:{line:59,column:2},end:{line:59,column:3}},loc:{start:{line:59,column:16},end:{line:66,column:3}},line:59},"2":{name:"(anonymous_2)",decl:{start:{line:75,column:2},end:{line:75,column:3}},loc:{start:{line:75,column:23},end:{line:77,column:3}},line:75},"3":{name:"(anonymous_3)",decl:{start:{line:84,column:2},end:{line:84,column:3}},loc:{start:{line:84,column:10},end:{line:91,column:3}},line:84},"4":{name:"(anonymous_4)",decl:{start:{line:104,column:2},end:{line:104,column:3}},loc:{start:{line:104,column:28},end:{line:114,column:3}},line:104},"5":{name:"(anonymous_5)",decl:{start:{line:122,column:2},end:{line:122,column:3}},loc:{start:{line:122,column:16},end:{line:131,column:3}},line:122},"6":{name:"(anonymous_6)",decl:{start:{line:140,column:2},end:{line:140,column:3}},loc:{start:{line:140,column:23},end:{line:142,column:3}},line:140},"7":{name:"(anonymous_7)",decl:{start:{line:149,column:2},end:{line:149,column:3}},loc:{start:{line:149,column:10},end:{line:158,column:3}},line:149},"8":{name:"(anonymous_8)",decl:{start:{line:174,column:2},end:{line:174,column:3}},loc:{start:{line:174,column:23},end:{line:178,column:3}},line:174},"9":{name:"(anonymous_9)",decl:{start:{line:188,column:2},end:{line:188,column:3}},loc:{start:{line:188,column:38},end:{line:212,column:3}},line:188},"10":{name:"(anonymous_10)",decl:{start:{line:222,column:2},end:{line:222,column:3}},loc:{start:{line:222,column:40},end:{line:230,column:3}},line:222},"11":{name:"(anonymous_11)",decl:{start:{line:238,column:2},end:{line:238,column:3}},loc:{start:{line:238,column:22},end:{line:264,column:3}},line:238},"12":{name:"(anonymous_12)",decl:{start:{line:272,column:2},end:{line:272,column:3}},loc:{start:{line:272,column:20},end:{line:279,column:3}},line:272},"13":{name:"(anonymous_13)",decl:{start:{line:286,column:2},end:{line:286,column:3}},loc:{start:{line:286,column:20},end:{line:288,column:3}},line:286},"14":{name:"(anonymous_14)",decl:{start:{line:296,column:2},end:{line:296,column:3}},loc:{start:{line:296,column:25},end:{line:316,column:3}},line:296}},branchMap:{"0":{loc:{start:{line:45,column:14},end:{line:45,column:26}},type:"default-arg",locations:[{start:{line:45,column:24},end:{line:45,column:26}}],line:45},"1":{loc:{start:{line:46,column:17},end:{line:46,column:53}},type:"binary-expr",locations:[{start:{line:46,column:17},end:{line:46,column:30}},{start:{line:46,column:34},end:{line:46,column:53}}],line:46},"2":{loc:{start:{line:47,column:16},end:{line:47,column:33}},type:"binary-expr",locations:[{start:{line:47,column:16},end:{line:47,column:28}},{start:{line:47,column:32},end:{line:47,column:33}}],line:47},"3":{loc:{start:{line:104,column:14},end:{line:104,column:26}},type:"default-arg",locations:[{start:{line:104,column:24},end:{line:104,column:26}}],line:104},"4":{loc:{start:{line:105,column:18},end:{line:105,column:37}},type:"binary-expr",locations:[{start:{line:105,column:18},end:{line:105,column:32}},{start:{line:105,column:36},end:{line:105,column:37}}],line:105},"5":{loc:{start:{line:106,column:17},end:{line:106,column:35}},type:"binary-expr",locations:[{start:{line:106,column:17},end:{line:106,column:30}},{start:{line:106,column:34},end:{line:106,column:35}}],line:106},"6":{loc:{start:{line:107,column:18},end:{line:107,column:37}},type:"binary-expr",locations:[{start:{line:107,column:18},end:{line:107,column:32}},{start:{line:107,column:36},end:{line:107,column:37}}],line:107},"7":{loc:{start:{line:108,column:18},end:{line:108,column:37}},type:"binary-expr",locations:[{start:{line:108,column:18},end:{line:108,column:32}},{start:{line:108,column:36},end:{line:108,column:37}}],line:108},"8":{loc:{start:{line:240,column:4},end:{line:241,column:18}},type:"if",locations:[{start:{line:240,column:4},end:{line:241,column:18}},{start:{line:240,column:4},end:{line:241,column:18}}],line:240},"9":{loc:{start:{line:247,column:4},end:{line:248,column:18}},type:"if",locations:[{start:{line:247,column:4},end:{line:248,column:18}},{start:{line:247,column:4},end:{line:248,column:18}}],line:247},"10":{loc:{start:{line:275,column:4},end:{line:276,column:18}},type:"if",locations:[{start:{line:275,column:4},end:{line:276,column:18}},{start:{line:275,column:4},end:{line:276,column:18}}],line:275},"11":{loc:{start:{line:300,column:6},end:{line:301,column:17}},type:"if",locations:[{start:{line:300,column:6},end:{line:301,column:17}},{start:{line:300,column:6},end:{line:301,column:17}}],line:300},"12":{loc:{start:{line:306,column:6},end:{line:307,column:17}},type:"if",locations:[{start:{line:306,column:6},end:{line:307,column:17}},{start:{line:306,column:6},end:{line:307,column:17}}],line:306},"13":{loc:{start:{line:311,column:6},end:{line:312,column:41}},type:"if",locations:[{start:{line:311,column:6},end:{line:312,column:41}},{start:{line:311,column:6},end:{line:312,column:41}}],line:311}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},b:{"0":[0],"1":[0,0],"2":[0,0],"3":[0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"7ff7b5432f7f00220537b57bf0abd956c3ec1311"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1egc0lusf7=function(){return actualCoverage;};}return actualCoverage;}cov_1egc0lusf7();const assert=(cov_1egc0lusf7().s[0]++,require('bsert'));const bdb=(cov_1egc0lusf7().s[1]++,require('bdb'));const bio=(cov_1egc0lusf7().s[2]++,require('bufio'));const layout=(cov_1egc0lusf7().s[3]++,require('./layout'));const consensus=(cov_1egc0lusf7().s[4]++,require('../protocol/consensus'));const TX=(cov_1egc0lusf7().s[5]++,require('../primitives/tx'));const TXMeta=(cov_1egc0lusf7().s[6]++,require('../primitives/txmeta'));const Indexer=(cov_1egc0lusf7().s[7]++,require('./indexer'));/*
 * TXIndexer Database Layout:
 *  t[hash] -> tx record
 *  b[height] -> block record
 *
 * The transaction index maps a transaction to a block
 * and an index, offset, and length within that block. The
 * block hash is stored in a separate record by height so that
 * the 32 byte hash is not repeated for every transaction
 * within a block.
 */cov_1egc0lusf7().s[8]++;Object.assign(layout,{t:bdb.key('t',['hash256']),b:bdb.key('b',['uint32'])});/**
 * Block Record
 */class BlockRecord{/**
   * Create a block record.
   * @constructor
   */constructor(options=(cov_1egc0lusf7().b[0][0]++,{})){cov_1egc0lusf7().f[0]++;cov_1egc0lusf7().s[9]++;this.block=(cov_1egc0lusf7().b[1][0]++,options.block)||(cov_1egc0lusf7().b[1][1]++,consensus.ZERO_HASH);cov_1egc0lusf7().s[10]++;this.time=(cov_1egc0lusf7().b[2][0]++,options.time)||(cov_1egc0lusf7().b[2][1]++,0);cov_1egc0lusf7().s[11]++;assert(this.block.length===32);cov_1egc0lusf7().s[12]++;assert(this.time>>>0===this.time);}/**
   * Inject properties from serialized data.
   * @private
   * @param {Buffer} data
   */fromRaw(data){cov_1egc0lusf7().f[1]++;const br=(cov_1egc0lusf7().s[13]++,bio.read(data));cov_1egc0lusf7().s[14]++;this.block=br.readHash();cov_1egc0lusf7().s[15]++;this.time=br.readU32();cov_1egc0lusf7().s[16]++;return this;}/**
   * Instantiate block record from serialized data.
   * @param {Hash} hash
   * @param {Buffer} data
   * @returns {BlockRecord}
   */static fromRaw(data){cov_1egc0lusf7().f[2]++;cov_1egc0lusf7().s[17]++;return new this().fromRaw(data);}/**
   * Serialize the block record.
   * @returns {Buffer}
   */toRaw(){cov_1egc0lusf7().f[3]++;const bw=(cov_1egc0lusf7().s[18]++,bio.write(36));cov_1egc0lusf7().s[19]++;bw.writeHash(this.block);cov_1egc0lusf7().s[20]++;bw.writeU32(this.time);cov_1egc0lusf7().s[21]++;return bw.render();}}/**
 * Transaction Record
 */class TxRecord{/**
   * Create a transaction record.
   * @constructor
   */constructor(options=(cov_1egc0lusf7().b[3][0]++,{})){cov_1egc0lusf7().f[4]++;cov_1egc0lusf7().s[22]++;this.height=(cov_1egc0lusf7().b[4][0]++,options.height)||(cov_1egc0lusf7().b[4][1]++,0);cov_1egc0lusf7().s[23]++;this.index=(cov_1egc0lusf7().b[5][0]++,options.index)||(cov_1egc0lusf7().b[5][1]++,0);cov_1egc0lusf7().s[24]++;this.offset=(cov_1egc0lusf7().b[6][0]++,options.offset)||(cov_1egc0lusf7().b[6][1]++,0);cov_1egc0lusf7().s[25]++;this.length=(cov_1egc0lusf7().b[7][0]++,options.length)||(cov_1egc0lusf7().b[7][1]++,0);cov_1egc0lusf7().s[26]++;assert(this.height>>>0===this.height);cov_1egc0lusf7().s[27]++;assert(this.index>>>0===this.index);cov_1egc0lusf7().s[28]++;assert(this.offset>>>0===this.offset);cov_1egc0lusf7().s[29]++;assert(this.length>>>0===this.length);}/**
   * Inject properties from serialized data.
   * @private
   * @param {Buffer} data
   */fromRaw(data){cov_1egc0lusf7().f[5]++;const br=(cov_1egc0lusf7().s[30]++,bio.read(data));cov_1egc0lusf7().s[31]++;this.height=br.readU32();cov_1egc0lusf7().s[32]++;this.index=br.readU32();cov_1egc0lusf7().s[33]++;this.offset=br.readU32();cov_1egc0lusf7().s[34]++;this.length=br.readU32();cov_1egc0lusf7().s[35]++;return this;}/**
   * Instantiate transaction record from serialized data.
   * @param {Hash} hash
   * @param {Buffer} data
   * @returns {BlockRecord}
   */static fromRaw(data){cov_1egc0lusf7().f[6]++;cov_1egc0lusf7().s[36]++;return new this().fromRaw(data);}/**
   * Serialize the transaction record.
   * @returns {Buffer}
   */toRaw(){cov_1egc0lusf7().f[7]++;const bw=(cov_1egc0lusf7().s[37]++,bio.write(16));cov_1egc0lusf7().s[38]++;bw.writeU32(this.height);cov_1egc0lusf7().s[39]++;bw.writeU32(this.index);cov_1egc0lusf7().s[40]++;bw.writeU32(this.offset);cov_1egc0lusf7().s[41]++;bw.writeU32(this.length);cov_1egc0lusf7().s[42]++;return bw.render();}}/**
 * TXIndexer
 * @alias module:indexer.TXIndexer
 * @extends Indexer
 */class TXIndexer extends Indexer{/**
   * Create a indexer
   * @constructor
   * @param {Object} options
   */constructor(options){cov_1egc0lusf7().f[8]++;cov_1egc0lusf7().s[43]++;super('tx',options);cov_1egc0lusf7().s[44]++;this.db=bdb.create(this.options);}/**
   * Index transactions by txid.
   * @private
   * @param {BlockMeta} meta
   * @param {Block} block
   * @param {CoinView} view
   */async indexBlock(meta,block,view){cov_1egc0lusf7().f[9]++;cov_1egc0lusf7().s[45]++;assert(block.hasRaw(),'Expected raw data for block.');const brecord=(cov_1egc0lusf7().s[46]++,new BlockRecord({block:meta.hash,time:block.time}));cov_1egc0lusf7().s[47]++;this.put(layout.b.encode(meta.height),brecord.toRaw());cov_1egc0lusf7().s[48]++;for(let i=(cov_1egc0lusf7().s[49]++,0);i<block.txs.length;i++){const tx=(cov_1egc0lusf7().s[50]++,block.txs[i]);const hash=(cov_1egc0lusf7().s[51]++,tx.hash());const{offset,size}=(cov_1egc0lusf7().s[52]++,tx.getPosition());const txrecord=(cov_1egc0lusf7().s[53]++,new TxRecord({height:meta.height,index:i,offset:offset,length:size}));cov_1egc0lusf7().s[54]++;this.put(layout.t.encode(hash),txrecord.toRaw());}}/**
   * Remove transactions from index.
   * @private
   * @param {BlockMeta} meta
   * @param {Block} block
   * @param {CoinView} view
   */async unindexBlock(meta,block,view){cov_1egc0lusf7().f[10]++;cov_1egc0lusf7().s[55]++;this.del(layout.b.encode(meta.height));cov_1egc0lusf7().s[56]++;for(let i=(cov_1egc0lusf7().s[57]++,0);i<block.txs.length;i++){const tx=(cov_1egc0lusf7().s[58]++,block.txs[i]);const hash=(cov_1egc0lusf7().s[59]++,tx.hash());cov_1egc0lusf7().s[60]++;this.del(layout.t.encode(hash));}}/**
   * Get a transaction with metadata.
   * @param {Hash} hash
   * @returns {Promise} - Returns {@link TXMeta}.
   */async getMeta(hash){cov_1egc0lusf7().f[11]++;const raw=(cov_1egc0lusf7().s[61]++,await this.db.get(layout.t.encode(hash)));cov_1egc0lusf7().s[62]++;if(!raw){cov_1egc0lusf7().b[8][0]++;cov_1egc0lusf7().s[63]++;return null;}else{cov_1egc0lusf7().b[8][1]++;}const record=(cov_1egc0lusf7().s[64]++,TxRecord.fromRaw(raw));const{height,index,offset,length}=(cov_1egc0lusf7().s[65]++,record);const braw=(cov_1egc0lusf7().s[66]++,await this.db.get(layout.b.encode(height)));cov_1egc0lusf7().s[67]++;if(!braw){cov_1egc0lusf7().b[9][0]++;cov_1egc0lusf7().s[68]++;return null;}else{cov_1egc0lusf7().b[9][1]++;}const brecord=(cov_1egc0lusf7().s[69]++,BlockRecord.fromRaw(braw));const{block,time}=(cov_1egc0lusf7().s[70]++,brecord);const data=(cov_1egc0lusf7().s[71]++,await this.blocks.read(block,offset,length));const tx=(cov_1egc0lusf7().s[72]++,TX.fromRaw(data));const meta=(cov_1egc0lusf7().s[73]++,TXMeta.fromTX(tx));cov_1egc0lusf7().s[74]++;meta.height=height;cov_1egc0lusf7().s[75]++;meta.block=block;cov_1egc0lusf7().s[76]++;meta.time=time;cov_1egc0lusf7().s[77]++;meta.index=index;cov_1egc0lusf7().s[78]++;return meta;}/**
   * Retrieve a transaction.
   * @param {Hash} hash
   * @returns {Promise} - Returns {@link TX}.
   */async getTX(hash){cov_1egc0lusf7().f[12]++;const meta=(cov_1egc0lusf7().s[79]++,await this.getMeta(hash));cov_1egc0lusf7().s[80]++;if(!meta){cov_1egc0lusf7().b[10][0]++;cov_1egc0lusf7().s[81]++;return null;}else{cov_1egc0lusf7().b[10][1]++;}cov_1egc0lusf7().s[82]++;return meta.tx;}/**
   * @param {Hash} hash
   * @returns {Promise} - Returns Boolean.
   */async hasTX(hash){cov_1egc0lusf7().f[13]++;cov_1egc0lusf7().s[83]++;return this.db.has(layout.t.encode(hash));}/**
   * Get coin viewpoint (historical).
   * @param {TX} tx
   * @returns {Promise} - Returns {@link CoinView}.
   */async getSpentView(tx){cov_1egc0lusf7().f[14]++;const view=(cov_1egc0lusf7().s[84]++,await this.chain.getCoinView(tx));cov_1egc0lusf7().s[85]++;for(const{prevout}of tx.inputs){cov_1egc0lusf7().s[86]++;if(view.hasEntry(prevout)){cov_1egc0lusf7().b[11][0]++;cov_1egc0lusf7().s[87]++;continue;}else{cov_1egc0lusf7().b[11][1]++;}const{hash,index}=(cov_1egc0lusf7().s[88]++,prevout);const meta=(cov_1egc0lusf7().s[89]++,await this.getMeta(hash));cov_1egc0lusf7().s[90]++;if(!meta){cov_1egc0lusf7().b[12][0]++;cov_1egc0lusf7().s[91]++;continue;}else{cov_1egc0lusf7().b[12][1]++;}const{tx,height}=(cov_1egc0lusf7().s[92]++,meta);cov_1egc0lusf7().s[93]++;if(index<tx.outputs.length){cov_1egc0lusf7().b[13][0]++;cov_1egc0lusf7().s[94]++;view.addIndex(tx,index,height);}else{cov_1egc0lusf7().b[13][1]++;}}cov_1egc0lusf7().s[95]++;return view;}}cov_1egc0lusf7().s[96]++;module.exports=TXIndexer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
/*!
 * path.js - path object for wallets
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */'use strict';function cov_1oq2nruk9z(){var path="E:\\Projects\\Test\\bcoin\\lib\\wallet\\path.js";var hash="c137fb4f2d855941e06e27fcdbaef258b311d295";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\Projects\\Test\\bcoin\\lib\\wallet\\path.js",statementMap:{"0":{start:{line:9,column:15},end:{line:9,column:31}},"1":{start:{line:10,column:12},end:{line:10,column:28}},"2":{start:{line:11,column:16},end:{line:11,column:48}},"3":{start:{line:12,column:19},end:{line:12,column:22}},"4":{start:{line:13,column:24},end:{line:13,column:43}},"5":{start:{line:32,column:4},end:{line:32,column:33}},"6":{start:{line:34,column:4},end:{line:34,column:21}},"7":{start:{line:35,column:4},end:{line:35,column:21}},"8":{start:{line:37,column:4},end:{line:37,column:41}},"9":{start:{line:38,column:4},end:{line:38,column:22}},"10":{start:{line:40,column:4},end:{line:40,column:21}},"11":{start:{line:41,column:4},end:{line:41,column:20}},"12":{start:{line:43,column:4},end:{line:43,column:27}},"13":{start:{line:44,column:4},end:{line:44,column:21}},"14":{start:{line:46,column:4},end:{line:46,column:21}},"15":{start:{line:48,column:4},end:{line:49,column:32}},"16":{start:{line:49,column:6},end:{line:49,column:32}},"17":{start:{line:60,column:4},end:{line:60,column:35}},"18":{start:{line:62,column:4},end:{line:62,column:29}},"19":{start:{line:63,column:4},end:{line:63,column:35}},"20":{start:{line:64,column:4},end:{line:64,column:33}},"21":{start:{line:65,column:4},end:{line:65,column:31}},"22":{start:{line:67,column:4},end:{line:67,column:39}},"23":{start:{line:68,column:4},end:{line:68,column:29}},"24":{start:{line:70,column:4},end:{line:70,column:29}},"25":{start:{line:71,column:4},end:{line:71,column:35}},"26":{start:{line:72,column:4},end:{line:72,column:29}},"27":{start:{line:74,column:4},end:{line:74,column:16}},"28":{start:{line:84,column:4},end:{line:84,column:43}},"29":{start:{line:93,column:17},end:{line:93,column:39}},"30":{start:{line:95,column:4},end:{line:95,column:32}},"31":{start:{line:97,column:4},end:{line:97,column:26}},"32":{start:{line:98,column:4},end:{line:98,column:32}},"33":{start:{line:99,column:4},end:{line:99,column:30}},"34":{start:{line:100,column:4},end:{line:100,column:28}},"35":{start:{line:102,column:4},end:{line:102,column:36}},"36":{start:{line:103,column:4},end:{line:103,column:26}},"37":{start:{line:105,column:4},end:{line:105,column:26}},"38":{start:{line:106,column:4},end:{line:106,column:32}},"39":{start:{line:107,column:4},end:{line:107,column:26}},"40":{start:{line:109,column:4},end:{line:109,column:16}},"41":{start:{line:119,column:15},end:{line:119,column:29}},"42":{start:{line:121,column:4},end:{line:121,column:32}},"43":{start:{line:122,column:4},end:{line:122,column:31}},"44":{start:{line:124,column:18},end:{line:124,column:29}},"45":{start:{line:126,column:4},end:{line:126,column:26}},"46":{start:{line:127,column:4},end:{line:127,column:31}},"47":{start:{line:129,column:4},end:{line:130,column:24}},"48":{start:{line:130,column:6},end:{line:130,column:24}},"49":{start:{line:132,column:4},end:{line:147,column:5}},"50":{start:{line:134,column:8},end:{line:134,column:35}},"51":{start:{line:135,column:8},end:{line:135,column:34}},"52":{start:{line:136,column:8},end:{line:136,column:14}},"53":{start:{line:138,column:8},end:{line:138,column:43}},"54":{start:{line:139,column:8},end:{line:139,column:38}},"55":{start:{line:140,column:8},end:{line:140,column:14}},"56":{start:{line:143,column:8},end:{line:143,column:14}},"57":{start:{line:145,column:8},end:{line:145,column:22}},"58":{start:{line:146,column:8},end:{line:146,column:14}},"59":{start:{line:149,column:4},end:{line:149,column:16}},"60":{start:{line:159,column:4},end:{line:159,column:36}},"61":{start:{line:168,column:15},end:{line:168,column:16}},"62":{start:{line:170,column:4},end:{line:170,column:14}},"63":{start:{line:172,column:4},end:{line:180,column:5}},"64":{start:{line:174,column:8},end:{line:174,column:18}},"65":{start:{line:175,column:8},end:{line:175,column:14}},"66":{start:{line:177,column:8},end:{line:177,column:18}},"67":{start:{line:178,column:8},end:{line:178,column:49}},"68":{start:{line:179,column:8},end:{line:179,column:14}},"69":{start:{line:182,column:4},end:{line:182,column:16}},"70":{start:{line:191,column:17},end:{line:191,column:31}},"71":{start:{line:192,column:15},end:{line:192,column:30}},"72":{start:{line:194,column:4},end:{line:194,column:30}},"73":{start:{line:195,column:4},end:{line:195,column:29}},"74":{start:{line:197,column:18},end:{line:197,column:30}},"75":{start:{line:199,column:4},end:{line:200,column:21}},"76":{start:{line:200,column:6},end:{line:200,column:21}},"77":{start:{line:202,column:18},end:{line:202,column:44}},"78":{start:{line:204,column:4},end:{line:204,column:22}},"79":{start:{line:206,column:4},end:{line:226,column:5}},"80":{start:{line:208,column:8},end:{line:208,column:27}},"81":{start:{line:209,column:8},end:{line:209,column:34}},"82":{start:{line:210,column:8},end:{line:210,column:33}},"83":{start:{line:211,column:8},end:{line:211,column:32}},"84":{start:{line:212,column:8},end:{line:212,column:14}},"85":{start:{line:214,column:8},end:{line:214,column:26}},"86":{start:{line:215,column:8},end:{line:215,column:34}},"87":{start:{line:216,column:8},end:{line:216,column:43}},"88":{start:{line:217,column:8},end:{line:217,column:36}},"89":{start:{line:218,column:8},end:{line:218,column:14}},"90":{start:{line:220,column:8},end:{line:220,column:27}},"91":{start:{line:221,column:8},end:{line:221,column:34}},"92":{start:{line:222,column:8},end:{line:222,column:14}},"93":{start:{line:224,column:8},end:{line:224,column:22}},"94":{start:{line:225,column:8},end:{line:225,column:14}},"95":{start:{line:228,column:4},end:{line:228,column:23}},"96":{start:{line:239,column:4},end:{line:239,column:38}},"97":{start:{line:240,column:4},end:{line:240,column:29}},"98":{start:{line:241,column:4},end:{line:241,column:40}},"99":{start:{line:242,column:4},end:{line:242,column:35}},"100":{start:{line:243,column:4},end:{line:243,column:29}},"101":{start:{line:244,column:4},end:{line:244,column:34}},"102":{start:{line:245,column:4},end:{line:245,column:16}},"103":{start:{line:256,column:4},end:{line:256,column:52}},"104":{start:{line:265,column:4},end:{line:266,column:18}},"105":{start:{line:266,column:6},end:{line:266,column:18}},"106":{start:{line:268,column:4},end:{line:268,column:61}},"107":{start:{line:277,column:4},end:{line:277,column:64}},"108":{start:{line:286,column:4},end:{line:291,column:6}},"109":{start:{line:300,column:4},end:{line:300,column:51}},"110":{start:{line:310,column:0},end:{line:314,column:2}},"111":{start:{line:322,column:0},end:{line:326,column:2}},"112":{start:{line:332,column:0},end:{line:332,column:22}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:31,column:2},end:{line:31,column:3}},loc:{start:{line:31,column:23},end:{line:50,column:3}},line:31},"1":{name:"(anonymous_1)",decl:{start:{line:59,column:2},end:{line:59,column:3}},loc:{start:{line:59,column:23},end:{line:75,column:3}},line:59},"2":{name:"(anonymous_2)",decl:{start:{line:83,column:2},end:{line:83,column:3}},loc:{start:{line:83,column:30},end:{line:85,column:3}},line:83},"3":{name:"(anonymous_3)",decl:{start:{line:92,column:2},end:{line:92,column:3}},loc:{start:{line:92,column:10},end:{line:110,column:3}},line:92},"4":{name:"(anonymous_4)",decl:{start:{line:118,column:2},end:{line:118,column:3}},loc:{start:{line:118,column:16},end:{line:150,column:3}},line:118},"5":{name:"(anonymous_5)",decl:{start:{line:158,column:2},end:{line:158,column:3}},loc:{start:{line:158,column:23},end:{line:160,column:3}},line:158},"6":{name:"(anonymous_6)",decl:{start:{line:167,column:2},end:{line:167,column:3}},loc:{start:{line:167,column:12},end:{line:183,column:3}},line:167},"7":{name:"(anonymous_7)",decl:{start:{line:190,column:2},end:{line:190,column:3}},loc:{start:{line:190,column:10},end:{line:229,column:3}},line:190},"8":{name:"(anonymous_8)",decl:{start:{line:238,column:2},end:{line:238,column:3}},loc:{start:{line:238,column:32},end:{line:246,column:3}},line:238},"9":{name:"(anonymous_9)",decl:{start:{line:255,column:2},end:{line:255,column:3}},loc:{start:{line:255,column:39},end:{line:257,column:3}},line:255},"10":{name:"(anonymous_10)",decl:{start:{line:264,column:2},end:{line:264,column:3}},loc:{start:{line:264,column:11},end:{line:269,column:3}},line:264},"11":{name:"(anonymous_11)",decl:{start:{line:276,column:2},end:{line:276,column:3}},loc:{start:{line:276,column:14},end:{line:278,column:3}},line:276},"12":{name:"(anonymous_12)",decl:{start:{line:285,column:2},end:{line:285,column:3}},loc:{start:{line:285,column:11},end:{line:292,column:3}},line:285},"13":{name:"(anonymous_13)",decl:{start:{line:299,column:2},end:{line:299,column:3}},loc:{start:{line:299,column:20},end:{line:301,column:3}},line:299}},branchMap:{"0":{loc:{start:{line:48,column:4},end:{line:49,column:32}},type:"if",locations:[{start:{line:48,column:4},end:{line:49,column:32}},{start:{line:48,column:4},end:{line:49,column:32}}],line:48},"1":{loc:{start:{line:129,column:4},end:{line:130,column:24}},type:"if",locations:[{start:{line:129,column:4},end:{line:130,column:24}},{start:{line:129,column:4},end:{line:130,column:24}}],line:129},"2":{loc:{start:{line:132,column:4},end:{line:147,column:5}},type:"switch",locations:[{start:{line:133,column:6},end:{line:136,column:14}},{start:{line:137,column:6},end:{line:140,column:14}},{start:{line:141,column:6},end:{line:143,column:14}},{start:{line:144,column:6},end:{line:146,column:14}}],line:132},"3":{loc:{start:{line:172,column:4},end:{line:180,column:5}},type:"switch",locations:[{start:{line:173,column:6},end:{line:175,column:14}},{start:{line:176,column:6},end:{line:179,column:14}}],line:172},"4":{loc:{start:{line:199,column:4},end:{line:200,column:21}},type:"if",locations:[{start:{line:199,column:4},end:{line:200,column:21}},{start:{line:199,column:4},end:{line:200,column:21}}],line:199},"5":{loc:{start:{line:206,column:4},end:{line:226,column:5}},type:"switch",locations:[{start:{line:207,column:6},end:{line:212,column:14}},{start:{line:213,column:6},end:{line:218,column:14}},{start:{line:219,column:6},end:{line:222,column:14}},{start:{line:223,column:6},end:{line:225,column:14}}],line:206},"6":{loc:{start:{line:216,column:19},end:{line:216,column:41}},type:"cond-expr",locations:[{start:{line:216,column:36},end:{line:216,column:37}},{start:{line:216,column:40},end:{line:216,column:41}}],line:216},"7":{loc:{start:{line:265,column:4},end:{line:266,column:18}},type:"if",locations:[{start:{line:265,column:4},end:{line:266,column:18}},{start:{line:265,column:4},end:{line:266,column:18}}],line:265}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},b:{"0":[0,0],"1":[0,0],"2":[0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0],"6":[0,0],"7":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"c137fb4f2d855941e06e27fcdbaef258b311d295"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1oq2nruk9z=function(){return actualCoverage;};}return actualCoverage;}cov_1oq2nruk9z();const assert=(cov_1oq2nruk9z().s[0]++,require('bsert'));const bio=(cov_1oq2nruk9z().s[1]++,require('bufio'));const Address=(cov_1oq2nruk9z().s[2]++,require('../primitives/address'));const{encoding}=(cov_1oq2nruk9z().s[3]++,bio);const{inspectSymbol}=(cov_1oq2nruk9z().s[4]++,require('../utils'));/**
 * Path
 * @alias module:wallet.Path
 * @property {String} name - Account name.
 * @property {Number} account - Account index.
 * @property {Number} branch - Branch index.
 * @property {Number} index - Address index.
 */class Path{/**
   * Create a path.
   * @constructor
   * @param {Object?} options
   */constructor(options){cov_1oq2nruk9z().f[0]++;cov_1oq2nruk9z().s[5]++;this.keyType=Path.types.HD;cov_1oq2nruk9z().s[6]++;this.name=null;// Passed in by caller.
cov_1oq2nruk9z().s[7]++;this.account=0;cov_1oq2nruk9z().s[8]++;this.type=Address.types.PUBKEYHASH;cov_1oq2nruk9z().s[9]++;this.version=-1;cov_1oq2nruk9z().s[10]++;this.branch=-1;cov_1oq2nruk9z().s[11]++;this.index=-1;cov_1oq2nruk9z().s[12]++;this.encrypted=false;cov_1oq2nruk9z().s[13]++;this.data=null;cov_1oq2nruk9z().s[14]++;this.hash=null;// Passed in by caller.
cov_1oq2nruk9z().s[15]++;if(options){cov_1oq2nruk9z().b[0][0]++;cov_1oq2nruk9z().s[16]++;this.fromOptions(options);}else{cov_1oq2nruk9z().b[0][1]++;}}/**
   * Instantiate path from options object.
   * @private
   * @param {Object} options
   * @returns {Path}
   */fromOptions(options){cov_1oq2nruk9z().f[1]++;cov_1oq2nruk9z().s[17]++;this.keyType=options.keyType;cov_1oq2nruk9z().s[18]++;this.name=options.name;cov_1oq2nruk9z().s[19]++;this.account=options.account;cov_1oq2nruk9z().s[20]++;this.branch=options.branch;cov_1oq2nruk9z().s[21]++;this.index=options.index;cov_1oq2nruk9z().s[22]++;this.encrypted=options.encrypted;cov_1oq2nruk9z().s[23]++;this.data=options.data;cov_1oq2nruk9z().s[24]++;this.type=options.type;cov_1oq2nruk9z().s[25]++;this.version=options.version;cov_1oq2nruk9z().s[26]++;this.hash=options.hash;cov_1oq2nruk9z().s[27]++;return this;}/**
   * Instantiate path from options object.
   * @param {Object} options
   * @returns {Path}
   */static fromOptions(options){cov_1oq2nruk9z().f[2]++;cov_1oq2nruk9z().s[28]++;return new this().fromOptions(options);}/**
   * Clone the path object.
   * @returns {Path}
   */clone(){cov_1oq2nruk9z().f[3]++;const path=(cov_1oq2nruk9z().s[29]++,new this.constructor());cov_1oq2nruk9z().s[30]++;path.keyType=this.keyType;cov_1oq2nruk9z().s[31]++;path.name=this.name;cov_1oq2nruk9z().s[32]++;path.account=this.account;cov_1oq2nruk9z().s[33]++;path.branch=this.branch;cov_1oq2nruk9z().s[34]++;path.index=this.index;cov_1oq2nruk9z().s[35]++;path.encrypted=this.encrypted;cov_1oq2nruk9z().s[36]++;path.data=this.data;cov_1oq2nruk9z().s[37]++;path.type=this.type;cov_1oq2nruk9z().s[38]++;path.version=this.version;cov_1oq2nruk9z().s[39]++;path.hash=this.hash;cov_1oq2nruk9z().s[40]++;return path;}/**
   * Inject properties from serialized data.
   * @private
   * @param {Buffer} data
   */fromRaw(data){cov_1oq2nruk9z().f[4]++;const br=(cov_1oq2nruk9z().s[41]++,bio.read(data));cov_1oq2nruk9z().s[42]++;this.account=br.readU32();cov_1oq2nruk9z().s[43]++;this.keyType=br.readU8();const flags=(cov_1oq2nruk9z().s[44]++,br.readU8());cov_1oq2nruk9z().s[45]++;this.type=flags&7;cov_1oq2nruk9z().s[46]++;this.version=flags>>>3;cov_1oq2nruk9z().s[47]++;if(this.version===0x1f){cov_1oq2nruk9z().b[1][0]++;cov_1oq2nruk9z().s[48]++;this.version=-1;}else{cov_1oq2nruk9z().b[1][1]++;}cov_1oq2nruk9z().s[49]++;switch(this.keyType){case Path.types.HD:cov_1oq2nruk9z().b[2][0]++;cov_1oq2nruk9z().s[50]++;this.branch=br.readU32();cov_1oq2nruk9z().s[51]++;this.index=br.readU32();cov_1oq2nruk9z().s[52]++;break;case Path.types.KEY:cov_1oq2nruk9z().b[2][1]++;cov_1oq2nruk9z().s[53]++;this.encrypted=br.readU8()===1;cov_1oq2nruk9z().s[54]++;this.data=br.readVarBytes();cov_1oq2nruk9z().s[55]++;break;case Path.types.ADDRESS:cov_1oq2nruk9z().b[2][2]++;cov_1oq2nruk9z().s[56]++;// Hash will be passed in by caller.
break;default:cov_1oq2nruk9z().b[2][3]++;cov_1oq2nruk9z().s[57]++;assert(false);cov_1oq2nruk9z().s[58]++;break;}cov_1oq2nruk9z().s[59]++;return this;}/**
   * Instantiate path from serialized data.
   * @param {Buffer} data
   * @returns {Path}
   */static fromRaw(data){cov_1oq2nruk9z().f[5]++;cov_1oq2nruk9z().s[60]++;return new this().fromRaw(data);}/**
   * Calculate serialization size.
   * @returns {Number}
   */getSize(){cov_1oq2nruk9z().f[6]++;let size=(cov_1oq2nruk9z().s[61]++,0);cov_1oq2nruk9z().s[62]++;size+=6;cov_1oq2nruk9z().s[63]++;switch(this.keyType){case Path.types.HD:cov_1oq2nruk9z().b[3][0]++;cov_1oq2nruk9z().s[64]++;size+=8;cov_1oq2nruk9z().s[65]++;break;case Path.types.KEY:cov_1oq2nruk9z().b[3][1]++;cov_1oq2nruk9z().s[66]++;size+=1;cov_1oq2nruk9z().s[67]++;size+=encoding.sizeVarBytes(this.data);cov_1oq2nruk9z().s[68]++;break;}cov_1oq2nruk9z().s[69]++;return size;}/**
   * Serialize path.
   * @returns {Buffer}
   */toRaw(){cov_1oq2nruk9z().f[7]++;const size=(cov_1oq2nruk9z().s[70]++,this.getSize());const bw=(cov_1oq2nruk9z().s[71]++,bio.write(size));cov_1oq2nruk9z().s[72]++;bw.writeU32(this.account);cov_1oq2nruk9z().s[73]++;bw.writeU8(this.keyType);let version=(cov_1oq2nruk9z().s[74]++,this.version);cov_1oq2nruk9z().s[75]++;if(version===-1){cov_1oq2nruk9z().b[4][0]++;cov_1oq2nruk9z().s[76]++;version=0x1f;}else{cov_1oq2nruk9z().b[4][1]++;}const flags=(cov_1oq2nruk9z().s[77]++,version<<3|this.type);cov_1oq2nruk9z().s[78]++;bw.writeU8(flags);cov_1oq2nruk9z().s[79]++;switch(this.keyType){case Path.types.HD:cov_1oq2nruk9z().b[5][0]++;cov_1oq2nruk9z().s[80]++;assert(!this.data);cov_1oq2nruk9z().s[81]++;assert(this.index!==-1);cov_1oq2nruk9z().s[82]++;bw.writeU32(this.branch);cov_1oq2nruk9z().s[83]++;bw.writeU32(this.index);cov_1oq2nruk9z().s[84]++;break;case Path.types.KEY:cov_1oq2nruk9z().b[5][1]++;cov_1oq2nruk9z().s[85]++;assert(this.data);cov_1oq2nruk9z().s[86]++;assert(this.index===-1);cov_1oq2nruk9z().s[87]++;bw.writeU8(this.encrypted?(cov_1oq2nruk9z().b[6][0]++,1):(cov_1oq2nruk9z().b[6][1]++,0));cov_1oq2nruk9z().s[88]++;bw.writeVarBytes(this.data);cov_1oq2nruk9z().s[89]++;break;case Path.types.ADDRESS:cov_1oq2nruk9z().b[5][2]++;cov_1oq2nruk9z().s[90]++;assert(!this.data);cov_1oq2nruk9z().s[91]++;assert(this.index===-1);cov_1oq2nruk9z().s[92]++;break;default:cov_1oq2nruk9z().b[5][3]++;cov_1oq2nruk9z().s[93]++;assert(false);cov_1oq2nruk9z().s[94]++;break;}cov_1oq2nruk9z().s[95]++;return bw.render();}/**
   * Inject properties from address.
   * @private
   * @param {Account} account
   * @param {Address} address
   */fromAddress(account,address){cov_1oq2nruk9z().f[8]++;cov_1oq2nruk9z().s[96]++;this.keyType=Path.types.ADDRESS;cov_1oq2nruk9z().s[97]++;this.name=account.name;cov_1oq2nruk9z().s[98]++;this.account=account.accountIndex;cov_1oq2nruk9z().s[99]++;this.version=address.version;cov_1oq2nruk9z().s[100]++;this.type=address.type;cov_1oq2nruk9z().s[101]++;this.hash=address.getHash();cov_1oq2nruk9z().s[102]++;return this;}/**
   * Instantiate path from address.
   * @param {Account} account
   * @param {Address} address
   * @returns {Path}
   */static fromAddress(account,address){cov_1oq2nruk9z().f[9]++;cov_1oq2nruk9z().s[103]++;return new this().fromAddress(account,address);}/**
   * Convert path object to string derivation path.
   * @returns {String}
   */toPath(){cov_1oq2nruk9z().f[10]++;cov_1oq2nruk9z().s[104]++;if(this.keyType!==Path.types.HD){cov_1oq2nruk9z().b[7][0]++;cov_1oq2nruk9z().s[105]++;return null;}else{cov_1oq2nruk9z().b[7][1]++;}cov_1oq2nruk9z().s[106]++;return`m/${this.account}'/${this.branch}/${this.index}`;}/**
   * Convert path object to an address (currently unused).
   * @returns {Address}
   */toAddress(){cov_1oq2nruk9z().f[11]++;cov_1oq2nruk9z().s[107]++;return Address.fromHash(this.hash,this.type,this.version);}/**
   * Convert path to a json-friendly object.
   * @returns {Object}
   */toJSON(){cov_1oq2nruk9z().f[12]++;cov_1oq2nruk9z().s[108]++;return{name:this.name,account:this.account,change:this.branch===1,derivation:this.toPath()};}/**
   * Inspect the path.
   * @returns {String}
   */[inspectSymbol](){cov_1oq2nruk9z().f[13]++;cov_1oq2nruk9z().s[109]++;return`<Path: ${this.name}:${this.toPath()}>`;}}/**
 * Path types.
 * @enum {Number}
 * @default
 */cov_1oq2nruk9z().s[110]++;Path.types={HD:0,KEY:1,ADDRESS:2};/**
 * Path types.
 * @enum {Number}
 * @default
 */cov_1oq2nruk9z().s[111]++;Path.typesByVal=['HD','KEY','ADDRESS'];/**
 * Expose
 */cov_1oq2nruk9z().s[112]++;module.exports=Path;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
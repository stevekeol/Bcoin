/*!
 * policy.js - bitcoin constants for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */'use strict';/**
 * @module protocol/policy
 */function cov_1tvx2avujj(){var path="E:\\Projects\\Test\\bcoin\\lib\\protocol\\policy.js";var hash="2cee8c9e2d9547ca57d1887d933e7b2980052cf4";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\Projects\\Test\\bcoin\\lib\\protocol\\policy.js",statementMap:{"0":{start:{line:14,column:15},end:{line:14,column:31}},"1":{start:{line:15,column:18},end:{line:15,column:40}},"2":{start:{line:23,column:0},end:{line:23,column:27}},"3":{start:{line:31,column:0},end:{line:31,column:52}},"4":{start:{line:39,column:0},end:{line:39,column:56}},"5":{start:{line:47,column:0},end:{line:47,column:55}},"6":{start:{line:55,column:0},end:{line:55,column:65}},"7":{start:{line:64,column:0},end:{line:64,column:29}},"8":{start:{line:71,column:0},end:{line:71,column:25}},"9":{start:{line:80,column:0},end:{line:80,column:29}},"10":{start:{line:89,column:0},end:{line:89,column:52}},"11":{start:{line:97,column:0},end:{line:97,column:29}},"12":{start:{line:105,column:0},end:{line:105,column:33}},"13":{start:{line:113,column:0},end:{line:113,column:27}},"14":{start:{line:122,column:0},end:{line:122,column:30}},"15":{start:{line:131,column:0},end:{line:131,column:28}},"16":{start:{line:140,column:0},end:{line:140,column:30}},"17":{start:{line:148,column:0},end:{line:148,column:35}},"18":{start:{line:156,column:0},end:{line:156,column:41}},"19":{start:{line:165,column:0},end:{line:165,column:43}},"20":{start:{line:173,column:0},end:{line:173,column:34}},"21":{start:{line:183,column:0},end:{line:183,column:29}},"22":{start:{line:191,column:0},end:{line:191,column:68}},"23":{start:{line:201,column:0},end:{line:201,column:34}},"24":{start:{line:210,column:0},end:{line:210,column:58}},"25":{start:{line:219,column:0},end:{line:235,column:2}},"26":{start:{line:220,column:2},end:{line:221,column:29}},"27":{start:{line:221,column:4},end:{line:221,column:29}},"28":{start:{line:223,column:2},end:{line:223,column:20}},"29":{start:{line:224,column:2},end:{line:224,column:20}},"30":{start:{line:226,column:2},end:{line:227,column:13}},"31":{start:{line:227,column:4},end:{line:227,column:13}},"32":{start:{line:229,column:12},end:{line:229,column:42}},"33":{start:{line:231,column:2},end:{line:232,column:15}},"34":{start:{line:232,column:4},end:{line:232,column:15}},"35":{start:{line:234,column:2},end:{line:234,column:13}},"36":{start:{line:246,column:0},end:{line:262,column:2}},"37":{start:{line:247,column:2},end:{line:248,column:29}},"38":{start:{line:248,column:4},end:{line:248,column:29}},"39":{start:{line:250,column:2},end:{line:250,column:20}},"40":{start:{line:251,column:2},end:{line:251,column:20}},"41":{start:{line:253,column:2},end:{line:254,column:13}},"42":{start:{line:254,column:4},end:{line:254,column:13}},"43":{start:{line:256,column:12},end:{line:256,column:41}},"44":{start:{line:258,column:2},end:{line:259,column:15}},"45":{start:{line:259,column:4},end:{line:259,column:15}},"46":{start:{line:261,column:2},end:{line:261,column:13}},"47":{start:{line:271,column:0},end:{line:279,column:2}},"48":{start:{line:272,column:2},end:{line:272,column:20}},"49":{start:{line:273,column:2},end:{line:273,column:19}},"50":{start:{line:275,column:2},end:{line:276,column:13}},"51":{start:{line:276,column:4},end:{line:276,column:13}},"52":{start:{line:278,column:2},end:{line:278,column:39}}},fnMap:{"0":{name:"getMinFee",decl:{start:{line:219,column:29},end:{line:219,column:38}},loc:{start:{line:219,column:51},end:{line:235,column:1}},line:219},"1":{name:"getRoundFee",decl:{start:{line:246,column:31},end:{line:246,column:42}},loc:{start:{line:246,column:55},end:{line:262,column:1}},line:246},"2":{name:"getRate",decl:{start:{line:271,column:27},end:{line:271,column:34}},loc:{start:{line:271,column:46},end:{line:279,column:1}},line:271}},branchMap:{"0":{loc:{start:{line:220,column:2},end:{line:221,column:29}},type:"if",locations:[{start:{line:220,column:2},end:{line:221,column:29}},{start:{line:220,column:2},end:{line:221,column:29}}],line:220},"1":{loc:{start:{line:226,column:2},end:{line:227,column:13}},type:"if",locations:[{start:{line:226,column:2},end:{line:227,column:13}},{start:{line:226,column:2},end:{line:227,column:13}}],line:226},"2":{loc:{start:{line:231,column:2},end:{line:232,column:15}},type:"if",locations:[{start:{line:231,column:2},end:{line:232,column:15}},{start:{line:231,column:2},end:{line:232,column:15}}],line:231},"3":{loc:{start:{line:231,column:6},end:{line:231,column:27}},type:"binary-expr",locations:[{start:{line:231,column:6},end:{line:231,column:15}},{start:{line:231,column:19},end:{line:231,column:27}}],line:231},"4":{loc:{start:{line:247,column:2},end:{line:248,column:29}},type:"if",locations:[{start:{line:247,column:2},end:{line:248,column:29}},{start:{line:247,column:2},end:{line:248,column:29}}],line:247},"5":{loc:{start:{line:253,column:2},end:{line:254,column:13}},type:"if",locations:[{start:{line:253,column:2},end:{line:254,column:13}},{start:{line:253,column:2},end:{line:254,column:13}}],line:253},"6":{loc:{start:{line:258,column:2},end:{line:259,column:15}},type:"if",locations:[{start:{line:258,column:2},end:{line:259,column:15}},{start:{line:258,column:2},end:{line:259,column:15}}],line:258},"7":{loc:{start:{line:258,column:6},end:{line:258,column:27}},type:"binary-expr",locations:[{start:{line:258,column:6},end:{line:258,column:15}},{start:{line:258,column:19},end:{line:258,column:27}}],line:258},"8":{loc:{start:{line:275,column:2},end:{line:276,column:13}},type:"if",locations:[{start:{line:275,column:2},end:{line:276,column:13}},{start:{line:275,column:2},end:{line:276,column:13}}],line:275}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"2cee8c9e2d9547ca57d1887d933e7b2980052cf4"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1tvx2avujj=function(){return actualCoverage;};}return actualCoverage;}cov_1tvx2avujj();const assert=(cov_1tvx2avujj().s[0]++,require('bsert'));const consensus=(cov_1tvx2avujj().s[1]++,require('./consensus'));/**
 * Maximum transaction version (policy).
 * @const {Number}
 * @default
 */cov_1tvx2avujj().s[2]++;exports.MAX_TX_VERSION=2;/**
 * Maximum transaction base size (policy).
 * @const {Number}
 * @default
 */cov_1tvx2avujj().s[3]++;exports.MAX_TX_SIZE=consensus.MAX_BLOCK_SIZE/10;/**
 * Maximum transaction weight (policy).
 * @const {Number}
 * @default
 */cov_1tvx2avujj().s[4]++;exports.MAX_TX_WEIGHT=consensus.MAX_BLOCK_WEIGHT/10;/**
 * Maximum number of transaction sigops (policy).
 * @const {Number}
 * @default
 */cov_1tvx2avujj().s[5]++;exports.MAX_TX_SIGOPS=consensus.MAX_BLOCK_SIGOPS/5;/**
 * Maximum cost of transaction sigops (policy).
 * @const {Number}
 * @default
 */cov_1tvx2avujj().s[6]++;exports.MAX_TX_SIGOPS_COST=consensus.MAX_BLOCK_SIGOPS_COST/5;/**
 * How much weight a sigop should
 * add to virtual size (policy).
 * @const {Number}
 * @default
 */cov_1tvx2avujj().s[7]++;exports.BYTES_PER_SIGOP=20;/**
 * Minimum relay fee rate (policy).
 * @const {Rate}
 */cov_1tvx2avujj().s[8]++;exports.MIN_RELAY=1000;/**
 * Whether bare multisig outputs
 * should be relayed (policy).
 * @const {Boolean}
 * @default
 */cov_1tvx2avujj().s[9]++;exports.BARE_MULTISIG=true;/**
 * Priority threshold for
 * free transactions (policy).
 * @const {Number}
 * @default
 */cov_1tvx2avujj().s[10]++;exports.FREE_THRESHOLD=consensus.COIN*144/250;/**
 * Max sigops per redeem script (policy).
 * @const {Number}
 * @default
 */cov_1tvx2avujj().s[11]++;exports.MAX_P2SH_SIGOPS=15;/**
 * Max serialized nulldata size (policy).
 * @const {Number}
 * @default
 */cov_1tvx2avujj().s[12]++;exports.MAX_OP_RETURN_BYTES=83;/**
 * Max pushdata size in nulldata (policy).
 * @const {Number}
 * @default
 */cov_1tvx2avujj().s[13]++;exports.MAX_OP_RETURN=80;/**
 * Max p2wsh stack size. Used for
 * witness malleation checks (policy).
 * @const {Number}
 * @default
 */cov_1tvx2avujj().s[14]++;exports.MAX_P2WSH_STACK=100;/**
 * Max p2wsh push size. Used for
 * witness malleation checks (policy).
 * @const {Number}
 * @default
 */cov_1tvx2avujj().s[15]++;exports.MAX_P2WSH_PUSH=80;/**
 * Max serialized p2wsh size. Used for
 * witness malleation checks (policy).
 * @const {Number}
 * @default
 */cov_1tvx2avujj().s[16]++;exports.MAX_P2WSH_SIZE=3600;/**
 * Default ancestor limit.
 * @const {Number}
 * @default
 */cov_1tvx2avujj().s[17]++;exports.MEMPOOL_MAX_ANCESTORS=25;/**
 * Default maximum mempool size in bytes.
 * @const {Number}
 * @default
 */cov_1tvx2avujj().s[18]++;exports.MEMPOOL_MAX_SIZE=100*1000000;/**
 * Time at which transactions
 * fall out of the mempool.
 * @const {Number}
 * @default
 */cov_1tvx2avujj().s[19]++;exports.MEMPOOL_EXPIRY_TIME=72*60*60;/**
 * Maximum number of orphan transactions.
 * @const {Number}
 * @default
 */cov_1tvx2avujj().s[20]++;exports.MEMPOOL_MAX_ORPHANS=100;/**
 * Minimum block size to create. Block will be
 * filled with free transactions until block
 * reaches this weight.
 * @const {Number}
 * @default
 */cov_1tvx2avujj().s[21]++;exports.MIN_BLOCK_WEIGHT=0;/**
 * Maximum block weight to be mined.
 * @const {Number}
 * @default
 */cov_1tvx2avujj().s[22]++;exports.MAX_BLOCK_WEIGHT=1000000*consensus.WITNESS_SCALE_FACTOR;/**
 * How much of the block should be dedicated to
 * high-priority transactions (included regardless
 * of fee rate).
 * @const {Number}
 * @default
 */cov_1tvx2avujj().s[23]++;exports.BLOCK_PRIORITY_WEIGHT=0;/**
 * Priority threshold to be reached before
 * switching to fee rate comparison.
 * @const {Number}
 * @default
 */cov_1tvx2avujj().s[24]++;exports.BLOCK_PRIORITY_THRESHOLD=exports.FREE_THRESHOLD;/**
 * Calculate minimum fee based on rate and size.
 * @param {Number?} size
 * @param {Rate?} rate - Rate of satoshi per kB.
 * @returns {Amount} fee
 */cov_1tvx2avujj().s[25]++;exports.getMinFee=function getMinFee(size,rate){cov_1tvx2avujj().f[0]++;cov_1tvx2avujj().s[26]++;if(rate==null){cov_1tvx2avujj().b[0][0]++;cov_1tvx2avujj().s[27]++;rate=exports.MIN_RELAY;}else{cov_1tvx2avujj().b[0][1]++;}cov_1tvx2avujj().s[28]++;assert(size>=0);cov_1tvx2avujj().s[29]++;assert(rate>=0);cov_1tvx2avujj().s[30]++;if(size===0){cov_1tvx2avujj().b[1][0]++;cov_1tvx2avujj().s[31]++;return 0;}else{cov_1tvx2avujj().b[1][1]++;}let fee=(cov_1tvx2avujj().s[32]++,Math.floor(rate*size/1000));cov_1tvx2avujj().s[33]++;if((cov_1tvx2avujj().b[3][0]++,fee===0)&&(cov_1tvx2avujj().b[3][1]++,rate>0)){cov_1tvx2avujj().b[2][0]++;cov_1tvx2avujj().s[34]++;fee=rate;}else{cov_1tvx2avujj().b[2][1]++;}cov_1tvx2avujj().s[35]++;return fee;};/**
 * Calculate the minimum fee in order for the transaction
 * to be relayable, but _round to the nearest kilobyte
 * when taking into account size.
 * @param {Number?} size
 * @param {Rate?} rate - Rate of satoshi per kB.
 * @returns {Amount} fee
 */cov_1tvx2avujj().s[36]++;exports.getRoundFee=function getRoundFee(size,rate){cov_1tvx2avujj().f[1]++;cov_1tvx2avujj().s[37]++;if(rate==null){cov_1tvx2avujj().b[4][0]++;cov_1tvx2avujj().s[38]++;rate=exports.MIN_RELAY;}else{cov_1tvx2avujj().b[4][1]++;}cov_1tvx2avujj().s[39]++;assert(size>=0);cov_1tvx2avujj().s[40]++;assert(rate>=0);cov_1tvx2avujj().s[41]++;if(size===0){cov_1tvx2avujj().b[5][0]++;cov_1tvx2avujj().s[42]++;return 0;}else{cov_1tvx2avujj().b[5][1]++;}let fee=(cov_1tvx2avujj().s[43]++,rate*Math.ceil(size/1000));cov_1tvx2avujj().s[44]++;if((cov_1tvx2avujj().b[7][0]++,fee===0)&&(cov_1tvx2avujj().b[7][1]++,rate>0)){cov_1tvx2avujj().b[6][0]++;cov_1tvx2avujj().s[45]++;fee=rate;}else{cov_1tvx2avujj().b[6][1]++;}cov_1tvx2avujj().s[46]++;return fee;};/**
 * Calculate a fee rate based on size and fees.
 * @param {Number} size
 * @param {Amount} fee
 * @returns {Rate}
 */cov_1tvx2avujj().s[47]++;exports.getRate=function getRate(size,fee){cov_1tvx2avujj().f[2]++;cov_1tvx2avujj().s[48]++;assert(size>=0);cov_1tvx2avujj().s[49]++;assert(fee>=0);cov_1tvx2avujj().s[50]++;if(size===0){cov_1tvx2avujj().b[8][0]++;cov_1tvx2avujj().s[51]++;return 0;}else{cov_1tvx2avujj().b[8][1]++;}cov_1tvx2avujj().s[52]++;return Math.floor(fee*1000/size);};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvbGljeS5qcyJdLCJuYW1lcyI6WyJhc3NlcnQiLCJyZXF1aXJlIiwiY29uc2Vuc3VzIiwiZXhwb3J0cyIsIk1BWF9UWF9WRVJTSU9OIiwiTUFYX1RYX1NJWkUiLCJNQVhfQkxPQ0tfU0laRSIsIk1BWF9UWF9XRUlHSFQiLCJNQVhfQkxPQ0tfV0VJR0hUIiwiTUFYX1RYX1NJR09QUyIsIk1BWF9CTE9DS19TSUdPUFMiLCJNQVhfVFhfU0lHT1BTX0NPU1QiLCJNQVhfQkxPQ0tfU0lHT1BTX0NPU1QiLCJCWVRFU19QRVJfU0lHT1AiLCJNSU5fUkVMQVkiLCJCQVJFX01VTFRJU0lHIiwiRlJFRV9USFJFU0hPTEQiLCJDT0lOIiwiTUFYX1AyU0hfU0lHT1BTIiwiTUFYX09QX1JFVFVSTl9CWVRFUyIsIk1BWF9PUF9SRVRVUk4iLCJNQVhfUDJXU0hfU1RBQ0siLCJNQVhfUDJXU0hfUFVTSCIsIk1BWF9QMldTSF9TSVpFIiwiTUVNUE9PTF9NQVhfQU5DRVNUT1JTIiwiTUVNUE9PTF9NQVhfU0laRSIsIk1FTVBPT0xfRVhQSVJZX1RJTUUiLCJNRU1QT09MX01BWF9PUlBIQU5TIiwiTUlOX0JMT0NLX1dFSUdIVCIsIldJVE5FU1NfU0NBTEVfRkFDVE9SIiwiQkxPQ0tfUFJJT1JJVFlfV0VJR0hUIiwiQkxPQ0tfUFJJT1JJVFlfVEhSRVNIT0xEIiwiZ2V0TWluRmVlIiwic2l6ZSIsInJhdGUiLCJmZWUiLCJNYXRoIiwiZmxvb3IiLCJnZXRSb3VuZEZlZSIsImNlaWwiLCJnZXRSYXRlIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FFQSxhQUVBO0FBQ0E7QUFDQSxHLDh0TUFJWTsyRkFGWixLQUFNQSxDQUFBQSxNQUFNLDBCQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFWLENBQVosQ0FDQSxLQUFNQyxDQUFBQSxTQUFTLDBCQUFHRCxPQUFPLENBQUMsYUFBRCxDQUFWLENBQWYsQ0FFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEcsd0JBRUFF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QVlyRCxHQUFJLDRCQUFBRSxHQUFHLEdBQUssQ0FBUiwrQkFBYUQsSUFBSSxDQUFHLENBQXBCLENBQUosQ0FDRSxxREFBQUMsR0FBRyxDQUFHRCxJQUFOLENBQVcsQ0FEYixpQ0FacUQseUJBZXJELE1BQU9DLENBQUFBLEdBQVAsQ0FDRCxDQWhCRCxDQWtCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRyx5QkFFQWhDLE9BQU8sQ0FBQ3FDLE9BQVIsQ0FBa0IsUUFBU0EsQ0FBQUEsT0FBVCxDQUFpQlAsSUFBakIsQ0FBdUJFLEdBQXZCLENBQTRCLGtEQUM1Q25DLE1BQU0sQ0FBQ2lDLElBQUksRUFBSSxDQUFULENBQU4sQ0FENEMseUJBRTVDakMsTUFBTSxDQUFDbUMsR0FBRyxFQUFJLENBQVIsQ0FBTixDQUY0Qyx5QkFJNUMsR0FBSUYsSUFBSSxHQUFLLENBQWIsQ0FDRSwyREFBTyxFQUFQLENBQVMsQ0FEWCxpQ0FKNEMseUJBTzVDLE1BQU9HLENBQUFBLElBQUksQ0FBQ0MsS0FBTCxDQUFXRixHQUFHLENBQUcsSUFBTixDQUFhRixJQUF4QixDQUFQLENBQ0QsQ0FSRCIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxyXG4gKiBwb2xpY3kuanMgLSBiaXRjb2luIGNvbnN0YW50cyBmb3IgYmNvaW5cclxuICogQ29weXJpZ2h0IChjKSAyMDE0LTIwMTUsIEZlZG9yIEluZHV0bnkgKE1JVCBMaWNlbnNlKVxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQtMjAxNywgQ2hyaXN0b3BoZXIgSmVmZnJleSAoTUlUIExpY2Vuc2UpLlxyXG4gKiBodHRwczovL2dpdGh1Yi5jb20vYmNvaW4tb3JnL2Jjb2luXHJcbiAqL1xyXG5cclxuJ3VzZSBzdHJpY3QnO1xyXG5cclxuLyoqXHJcbiAqIEBtb2R1bGUgcHJvdG9jb2wvcG9saWN5XHJcbiAqL1xyXG5cclxuY29uc3QgYXNzZXJ0ID0gcmVxdWlyZSgnYnNlcnQnKTtcclxuY29uc3QgY29uc2Vuc3VzID0gcmVxdWlyZSgnLi9jb25zZW5zdXMnKTtcclxuXHJcbi8qKlxyXG4gKiBNYXhpbXVtIHRyYW5zYWN0aW9uIHZlcnNpb24gKHBvbGljeSkuXHJcbiAqIEBjb25zdCB7TnVtYmVyfVxyXG4gKiBAZGVmYXVsdFxyXG4gKi9cclxuXHJcbmV4cG9ydHMuTUFYX1RYX1ZFUlNJT04gPSAyO1xyXG5cclxuLyoqXHJcbiAqIE1heGltdW0gdHJhbnNhY3Rpb24gYmFzZSBzaXplIChwb2xpY3kpLlxyXG4gKiBAY29uc3Qge051bWJlcn1cclxuICogQGRlZmF1bHRcclxuICovXHJcblxyXG5leHBvcnRzLk1BWF9UWF9TSVpFID0gY29uc2Vuc3VzLk1BWF9CTE9DS19TSVpFIC8gMTA7XHJcblxyXG4vKipcclxuICogTWF4aW11bSB0cmFuc2FjdGlvbiB3ZWlnaHQgKHBvbGljeSkuXHJcbiAqIEBjb25zdCB7TnVtYmVyfVxyXG4gKiBAZGVmYXVsdFxyXG4gKi9cclxuXHJcbmV4cG9ydHMuTUFYX1RYX1dFSUdIVCA9IGNvbnNlbnN1cy5NQVhfQkxPQ0tfV0VJR0hUIC8gMTA7XHJcblxyXG4vKipcclxuICogTWF4aW11bSBudW1iZXIgb2YgdHJhbnNhY3Rpb24gc2lnb3BzIChwb2xpY3kpLlxyXG4gKiBAY29uc3Qge051bWJlcn1cclxuICogQGRlZmF1bHRcclxuICovXHJcblxyXG5leHBvcnRzLk1BWF9UWF9TSUdPUFMgPSBjb25zZW5zdXMuTUFYX0JMT0NLX1NJR09QUyAvIDU7XHJcblxyXG4vKipcclxuICogTWF4aW11bSBjb3N0IG9mIHRyYW5zYWN0aW9uIHNpZ29wcyAocG9saWN5KS5cclxuICogQGNvbnN0IHtOdW1iZXJ9XHJcbiAqIEBkZWZhdWx0XHJcbiAqL1xyXG5cclxuZXhwb3J0cy5NQVhfVFhfU0lHT1BTX0NPU1QgPSBjb25zZW5zdXMuTUFYX0JMT0NLX1NJR09QU19DT1NUIC8gNTtcclxuXHJcbi8qKlxyXG4gKiBIb3cgbXVjaCB3ZWlnaHQgYSBzaWdvcCBzaG91bGRcclxuICogYWRkIHRvIHZpcnR1YWwgc2l6ZSAocG9saWN5KS5cclxuICogQGNvbnN0IHtOdW1iZXJ9XHJcbiAqIEBkZWZhdWx0XHJcbiAqL1xyXG5cclxuZXhwb3J0cy5CWVRFU19QRVJfU0lHT1AgPSAyMDtcclxuXHJcbi8qKlxyXG4gKiBNaW5pbXVtIHJlbGF5IGZlZSByYXRlIChwb2xpY3kpLlxyXG4gKiBAY29uc3Qge1JhdGV9XHJcbiAqL1xyXG5cclxuZXhwb3J0cy5NSU5fUkVMQVkgPSAxMDAwO1xyXG5cclxuLyoqXHJcbiAqIFdoZXRoZXIgYmFyZSBtdWx0aXNpZyBvdXRwdXRzXHJcbiAqIHNob3VsZCBiZSByZWxheWVkIChwb2xpY3kpLlxyXG4gKiBAY29uc3Qge0Jvb2xlYW59XHJcbiAqIEBkZWZhdWx0XHJcbiAqL1xyXG5cclxuZXhwb3J0cy5CQVJFX01VTFRJU0lHID0gdHJ1ZTtcclxuXHJcbi8qKlxyXG4gKiBQcmlvcml0eSB0aHJlc2hvbGQgZm9yXHJcbiAqIGZyZWUgdHJhbnNhY3Rpb25zIChwb2xpY3kpLlxyXG4gKiBAY29uc3Qge051bWJlcn1cclxuICogQGRlZmF1bHRcclxuICovXHJcblxyXG5leHBvcnRzLkZSRUVfVEhSRVNIT0xEID0gY29uc2Vuc3VzLkNPSU4gKiAxNDQgLyAyNTA7XHJcblxyXG4vKipcclxuICogTWF4IHNpZ29wcyBwZXIgcmVkZWVtIHNjcmlwdCAocG9saWN5KS5cclxuICogQGNvbnN0IHtOdW1iZXJ9XHJcbiAqIEBkZWZhdWx0XHJcbiAqL1xyXG5cclxuZXhwb3J0cy5NQVhfUDJTSF9TSUdPUFMgPSAxNTtcclxuXHJcbi8qKlxyXG4gKiBNYXggc2VyaWFsaXplZCBudWxsZGF0YSBzaXplIChwb2xpY3kpLlxyXG4gKiBAY29uc3Qge051bWJlcn1cclxuICogQGRlZmF1bHRcclxuICovXHJcblxyXG5leHBvcnRzLk1BWF9PUF9SRVRVUk5fQllURVMgPSA4MztcclxuXHJcbi8qKlxyXG4gKiBNYXggcHVzaGRhdGEgc2l6ZSBpbiBudWxsZGF0YSAocG9saWN5KS5cclxuICogQGNvbnN0IHtOdW1iZXJ9XHJcbiAqIEBkZWZhdWx0XHJcbiAqL1xyXG5cclxuZXhwb3J0cy5NQVhfT1BfUkVUVVJOID0gODA7XHJcblxyXG4vKipcclxuICogTWF4IHAyd3NoIHN0YWNrIHNpemUuIFVzZWQgZm9yXHJcbiAqIHdpdG5lc3MgbWFsbGVhdGlvbiBjaGVja3MgKHBvbGljeSkuXHJcbiAqIEBjb25zdCB7TnVtYmVyfVxyXG4gKiBAZGVmYXVsdFxyXG4gKi9cclxuXHJcbmV4cG9ydHMuTUFYX1AyV1NIX1NUQUNLID0gMTAwO1xyXG5cclxuLyoqXHJcbiAqIE1heCBwMndzaCBwdXNoIHNpemUuIFVzZWQgZm9yXHJcbiAqIHdpdG5lc3MgbWFsbGVhdGlvbiBjaGVja3MgKHBvbGljeSkuXHJcbiAqIEBjb25zdCB7TnVtYmVyfVxyXG4gKiBAZGVmYXVsdFxyXG4gKi9cclxuXHJcbmV4cG9ydHMuTUFYX1AyV1NIX1BVU0ggPSA4MDtcclxuXHJcbi8qKlxyXG4gKiBNYXggc2VyaWFsaXplZCBwMndzaCBzaXplLiBVc2VkIGZvclxyXG4gKiB3aXRuZXNzIG1hbGxlYXRpb24gY2hlY2tzIChwb2xpY3kpLlxyXG4gKiBAY29uc3Qge051bWJlcn1cclxuICogQGRlZmF1bHRcclxuICovXHJcblxyXG5leHBvcnRzLk1BWF9QMldTSF9TSVpFID0gMzYwMDtcclxuXHJcbi8qKlxyXG4gKiBEZWZhdWx0IGFuY2VzdG9yIGxpbWl0LlxyXG4gKiBAY29uc3Qge051bWJlcn1cclxuICogQGRlZmF1bHRcclxuICovXHJcblxyXG5leHBvcnRzLk1FTVBPT0xfTUFYX0FOQ0VTVE9SUyA9IDI1O1xyXG5cclxuLyoqXHJcbiAqIERlZmF1bHQgbWF4aW11bSBtZW1wb29sIHNpemUgaW4gYnl0ZXMuXHJcbiAqIEBjb25zdCB7TnVtYmVyfVxyXG4gKiBAZGVmYXVsdFxyXG4gKi9cclxuXHJcbmV4cG9ydHMuTUVNUE9PTF9NQVhfU0laRSA9IDEwMCAqIDEwMDAwMDA7XHJcblxyXG4vKipcclxuICogVGltZSBhdCB3aGljaCB0cmFuc2FjdGlvbnNcclxuICogZmFsbCBvdXQgb2YgdGhlIG1lbXBvb2wuXHJcbiAqIEBjb25zdCB7TnVtYmVyfVxyXG4gKiBAZGVmYXVsdFxyXG4gKi9cclxuXHJcbmV4cG9ydHMuTUVNUE9PTF9FWFBJUllfVElNRSA9IDcyICogNjAgKiA2MDtcclxuXHJcbi8qKlxyXG4gKiBNYXhpbXVtIG51bWJlciBvZiBvcnBoYW4gdHJhbnNhY3Rpb25zLlxyXG4gKiBAY29uc3Qge051bWJlcn1cclxuICogQGRlZmF1bHRcclxuICovXHJcblxyXG5leHBvcnRzLk1FTVBPT0xfTUFYX09SUEhBTlMgPSAxMDA7XHJcblxyXG4vKipcclxuICogTWluaW11bSBibG9jayBzaXplIHRvIGNyZWF0ZS4gQmxvY2sgd2lsbCBiZVxyXG4gKiBmaWxsZWQgd2l0aCBmcmVlIHRyYW5zYWN0aW9ucyB1bnRpbCBibG9ja1xyXG4gKiByZWFjaGVzIHRoaXMgd2VpZ2h0LlxyXG4gKiBAY29uc3Qge051bWJlcn1cclxuICogQGRlZmF1bHRcclxuICovXHJcblxyXG5leHBvcnRzLk1JTl9CTE9DS19XRUlHSFQgPSAwO1xyXG5cclxuLyoqXHJcbiAqIE1heGltdW0gYmxvY2sgd2VpZ2h0IHRvIGJlIG1pbmVkLlxyXG4gKiBAY29uc3Qge051bWJlcn1cclxuICogQGRlZmF1bHRcclxuICovXHJcblxyXG5leHBvcnRzLk1BWF9CTE9DS19XRUlHSFQgPSAxMDAwMDAwICogY29uc2Vuc3VzLldJVE5FU1NfU0NBTEVfRkFDVE9SO1xyXG5cclxuLyoqXHJcbiAqIEhvdyBtdWNoIG9mIHRoZSBibG9jayBzaG91bGQgYmUgZGVkaWNhdGVkIHRvXHJcbiAqIGhpZ2gtcHJpb3JpdHkgdHJhbnNhY3Rpb25zIChpbmNsdWRlZCByZWdhcmRsZXNzXHJcbiAqIG9mIGZlZSByYXRlKS5cclxuICogQGNvbnN0IHtOdW1iZXJ9XHJcbiAqIEBkZWZhdWx0XHJcbiAqL1xyXG5cclxuZXhwb3J0cy5CTE9DS19QUklPUklUWV9XRUlHSFQgPSAwO1xyXG5cclxuLyoqXHJcbiAqIFByaW9yaXR5IHRocmVzaG9sZCB0byBiZSByZWFjaGVkIGJlZm9yZVxyXG4gKiBzd2l0Y2hpbmcgdG8gZmVlIHJhdGUgY29tcGFyaXNvbi5cclxuICogQGNvbnN0IHtOdW1iZXJ9XHJcbiAqIEBkZWZhdWx0XHJcbiAqL1xyXG5cclxuZXhwb3J0cy5CTE9DS19QUklPUklUWV9USFJFU0hPTEQgPSBleHBvcnRzLkZSRUVfVEhSRVNIT0xEO1xyXG5cclxuLyoqXHJcbiAqIENhbGN1bGF0ZSBtaW5pbXVtIGZlZSBiYXNlZCBvbiByYXRlIGFuZCBzaXplLlxyXG4gKiBAcGFyYW0ge051bWJlcj99IHNpemVcclxuICogQHBhcmFtIHtSYXRlP30gcmF0ZSAtIFJhdGUgb2Ygc2F0b3NoaSBwZXIga0IuXHJcbiAqIEByZXR1cm5zIHtBbW91bnR9IGZlZVxyXG4gKi9cclxuXHJcbmV4cG9ydHMuZ2V0TWluRmVlID0gZnVuY3Rpb24gZ2V0TWluRmVlKHNpemUsIHJhdGUpIHtcclxuICBpZiAocmF0ZSA9PSBudWxsKVxyXG4gICAgcmF0ZSA9IGV4cG9ydHMuTUlOX1JFTEFZO1xyXG5cclxuICBhc3NlcnQoc2l6ZSA+PSAwKTtcclxuICBhc3NlcnQocmF0ZSA+PSAwKTtcclxuXHJcbiAgaWYgKHNpemUgPT09IDApXHJcbiAgICByZXR1cm4gMDtcclxuXHJcbiAgbGV0IGZlZSA9IE1hdGguZmxvb3IocmF0ZSAqIHNpemUgLyAxMDAwKTtcclxuXHJcbiAgaWYgKGZlZSA9PT0gMCAmJiByYXRlID4gMClcclxuICAgIGZlZSA9IHJhdGU7XHJcblxyXG4gIHJldHVybiBmZWU7XHJcbn07XHJcblxyXG4vKipcclxuICogQ2FsY3VsYXRlIHRoZSBtaW5pbXVtIGZlZSBpbiBvcmRlciBmb3IgdGhlIHRyYW5zYWN0aW9uXHJcbiAqIHRvIGJlIHJlbGF5YWJsZSwgYnV0IF9yb3VuZCB0byB0aGUgbmVhcmVzdCBraWxvYnl0ZVxyXG4gKiB3aGVuIHRha2luZyBpbnRvIGFjY291bnQgc2l6ZS5cclxuICogQHBhcmFtIHtOdW1iZXI/fSBzaXplXHJcbiAqIEBwYXJhbSB7UmF0ZT99IHJhdGUgLSBSYXRlIG9mIHNhdG9zaGkgcGVyIGtCLlxyXG4gKiBAcmV0dXJucyB7QW1vdW50fSBmZWVcclxuICovXHJcblxyXG5leHBvcnRzLmdldFJvdW5kRmVlID0gZnVuY3Rpb24gZ2V0Um91bmRGZWUoc2l6ZSwgcmF0ZSkge1xyXG4gIGlmIChyYXRlID09IG51bGwpXHJcbiAgICByYXRlID0gZXhwb3J0cy5NSU5fUkVMQVk7XHJcblxyXG4gIGFzc2VydChzaXplID49IDApO1xyXG4gIGFzc2VydChyYXRlID49IDApO1xyXG5cclxuICBpZiAoc2l6ZSA9PT0gMClcclxuICAgIHJldHVybiAwO1xyXG5cclxuICBsZXQgZmVlID0gcmF0ZSAqIE1hdGguY2VpbChzaXplIC8gMTAwMCk7XHJcblxyXG4gIGlmIChmZWUgPT09IDAgJiYgcmF0ZSA+IDApXHJcbiAgICBmZWUgPSByYXRlO1xyXG5cclxuICByZXR1cm4gZmVlO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIENhbGN1bGF0ZSBhIGZlZSByYXRlIGJhc2VkIG9uIHNpemUgYW5kIGZlZXMuXHJcbiAqIEBwYXJhbSB7TnVtYmVyfSBzaXplXHJcbiAqIEBwYXJhbSB7QW1vdW50fSBmZWVcclxuICogQHJldHVybnMge1JhdGV9XHJcbiAqL1xyXG5cclxuZXhwb3J0cy5nZXRSYXRlID0gZnVuY3Rpb24gZ2V0UmF0ZShzaXplLCBmZWUpIHtcclxuICBhc3NlcnQoc2l6ZSA+PSAwKTtcclxuICBhc3NlcnQoZmVlID49IDApO1xyXG5cclxuICBpZiAoc2l6ZSA9PT0gMClcclxuICAgIHJldHVybiAwO1xyXG5cclxuICByZXR1cm4gTWF0aC5mbG9vcihmZWUgKiAxMDAwIC8gc2l6ZSk7XHJcbn07XHJcbiJdfQ==
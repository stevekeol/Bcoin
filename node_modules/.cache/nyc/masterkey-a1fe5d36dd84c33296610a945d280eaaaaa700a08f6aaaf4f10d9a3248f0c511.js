/*!
 * masterkey.js - master bip32 key object for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */'use strict';function cov_10701pntgb(){var path="E:\\Projects\\Test\\bcoin\\lib\\wallet\\masterkey.js";var hash="d0892cd2cc845e6cda7d91692d2d40e635073117";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\Projects\\Test\\bcoin\\lib\\wallet\\masterkey.js",statementMap:{"0":{start:{line:9,column:15},end:{line:9,column:31}},"1":{start:{line:10,column:12},end:{line:10,column:28}},"2":{start:{line:11,column:15},end:{line:11,column:32}},"3":{start:{line:12,column:15},end:{line:12,column:44}},"4":{start:{line:13,column:16},end:{line:13,column:46}},"5":{start:{line:14,column:12},end:{line:14,column:38}},"6":{start:{line:15,column:15},end:{line:15,column:44}},"7":{start:{line:16,column:16},end:{line:16,column:46}},"8":{start:{line:17,column:18},end:{line:17,column:50}},"9":{start:{line:18,column:15},end:{line:18,column:44}},"10":{start:{line:19,column:15},end:{line:19,column:44}},"11":{start:{line:20,column:13},end:{line:20,column:37}},"12":{start:{line:21,column:21},end:{line:21,column:45}},"13":{start:{line:22,column:17},end:{line:22,column:42}},"14":{start:{line:23,column:19},end:{line:23,column:22}},"15":{start:{line:24,column:24},end:{line:24,column:43}},"16":{start:{line:41,column:4},end:{line:41,column:27}},"17":{start:{line:42,column:4},end:{line:42,column:19}},"18":{start:{line:43,column:4},end:{line:43,column:27}},"19":{start:{line:44,column:4},end:{line:44,column:20}},"20":{start:{line:45,column:4},end:{line:45,column:25}},"21":{start:{line:47,column:4},end:{line:47,column:36}},"22":{start:{line:48,column:4},end:{line:48,column:19}},"23":{start:{line:49,column:4},end:{line:49,column:15}},"24":{start:{line:50,column:4},end:{line:50,column:15}},"25":{start:{line:52,column:4},end:{line:52,column:23}},"26":{start:{line:53,column:4},end:{line:53,column:22}},"27":{start:{line:54,column:4},end:{line:54,column:19}},"28":{start:{line:55,column:4},end:{line:55,column:29}},"29":{start:{line:57,column:4},end:{line:58,column:32}},"30":{start:{line:58,column:6},end:{line:58,column:32}},"31":{start:{line:68,column:4},end:{line:68,column:20}},"32":{start:{line:70,column:4},end:{line:73,column:5}},"33":{start:{line:71,column:6},end:{line:71,column:53}},"34":{start:{line:72,column:6},end:{line:72,column:41}},"35":{start:{line:75,column:4},end:{line:78,column:5}},"36":{start:{line:76,column:6},end:{line:76,column:42}},"37":{start:{line:77,column:6},end:{line:77,column:27}},"38":{start:{line:80,column:4},end:{line:83,column:5}},"39":{start:{line:81,column:6},end:{line:81,column:50}},"40":{start:{line:82,column:6},end:{line:82,column:43}},"41":{start:{line:85,column:4},end:{line:88,column:5}},"42":{start:{line:86,column:6},end:{line:86,column:55}},"43":{start:{line:87,column:6},end:{line:87,column:29}},"44":{start:{line:90,column:4},end:{line:93,column:5}},"45":{start:{line:91,column:6},end:{line:91,column:51}},"46":{start:{line:92,column:6},end:{line:92,column:39}},"47":{start:{line:95,column:4},end:{line:104,column:5}},"48":{start:{line:96,column:6},end:{line:103,column:7}},"49":{start:{line:97,column:8},end:{line:97,column:60}},"50":{start:{line:98,column:8},end:{line:98,column:55}},"51":{start:{line:100,column:8},end:{line:100,column:48}},"52":{start:{line:101,column:8},end:{line:101,column:48}},"53":{start:{line:102,column:8},end:{line:102,column:31}},"54":{start:{line:106,column:4},end:{line:109,column:5}},"55":{start:{line:107,column:6},end:{line:107,column:56}},"56":{start:{line:108,column:6},end:{line:108,column:35}},"57":{start:{line:111,column:4},end:{line:114,column:5}},"58":{start:{line:112,column:6},end:{line:112,column:46}},"59":{start:{line:113,column:6},end:{line:113,column:25}},"60":{start:{line:116,column:4},end:{line:119,column:5}},"61":{start:{line:117,column:6},end:{line:117,column:46}},"62":{start:{line:118,column:6},end:{line:118,column:25}},"63":{start:{line:121,column:4},end:{line:124,column:5}},"64":{start:{line:122,column:6},end:{line:122,column:46}},"65":{start:{line:123,column:6},end:{line:123,column:25}},"66":{start:{line:126,column:4},end:{line:126,column:50}},"67":{start:{line:128,column:4},end:{line:128,column:16}},"68":{start:{line:137,column:4},end:{line:137,column:43}},"69":{start:{line:148,column:20},end:{line:148,column:44}},"70":{start:{line:149,column:4},end:{line:153,column:5}},"71":{start:{line:150,column:6},end:{line:150,column:53}},"72":{start:{line:152,column:6},end:{line:152,column:16}},"73":{start:{line:165,column:4},end:{line:171,column:5}},"74":{start:{line:166,column:6},end:{line:169,column:7}},"75":{start:{line:167,column:8},end:{line:167,column:35}},"76":{start:{line:168,column:8},end:{line:168,column:28}},"77":{start:{line:170,column:6},end:{line:170,column:22}},"78":{start:{line:173,column:4},end:{line:174,column:40}},"79":{start:{line:174,column:6},end:{line:174,column:40}},"80":{start:{line:176,column:4},end:{line:176,column:27}},"81":{start:{line:178,column:16},end:{line:178,column:45}},"82":{start:{line:179,column:17},end:{line:179,column:60}},"83":{start:{line:181,column:4},end:{line:181,column:23}},"84":{start:{line:183,column:4},end:{line:183,column:24}},"85":{start:{line:185,column:4},end:{line:185,column:22}},"86":{start:{line:187,column:4},end:{line:187,column:20}},"87":{start:{line:197,column:4},end:{line:198,column:19}},"88":{start:{line:198,column:6},end:{line:198,column:19}},"89":{start:{line:200,column:4},end:{line:200,column:16}},"90":{start:{line:202,column:4},end:{line:203,column:13}},"91":{start:{line:203,column:6},end:{line:203,column:13}},"92":{start:{line:205,column:4},end:{line:205,column:40}},"93":{start:{line:207,column:4},end:{line:207,column:38}},"94":{start:{line:208,column:4},end:{line:208,column:63}},"95":{start:{line:208,column:34},end:{line:208,column:45}},"96":{start:{line:217,column:4},end:{line:221,column:5}},"97":{start:{line:218,column:6},end:{line:218,column:31}},"98":{start:{line:219,column:6},end:{line:219,column:24}},"99":{start:{line:220,column:6},end:{line:220,column:21}},"100":{start:{line:231,column:17},end:{line:231,column:31}},"101":{start:{line:232,column:14},end:{line:232,column:20}},"102":{start:{line:233,column:14},end:{line:233,column:20}},"103":{start:{line:234,column:14},end:{line:234,column:20}},"104":{start:{line:236,column:4},end:{line:237,column:43}},"105":{start:{line:237,column:6},end:{line:237,column:43}},"106":{start:{line:239,column:4},end:{line:246,column:5}},"107":{start:{line:241,column:8},end:{line:241,column:63}},"108":{start:{line:243,column:8},end:{line:243,column:61}},"109":{start:{line:245,column:8},end:{line:245,column:59}},"110":{start:{line:257,column:4},end:{line:258,column:18}},"111":{start:{line:258,column:6},end:{line:258,column:18}},"112":{start:{line:260,column:4},end:{line:260,column:60}},"113":{start:{line:271,column:4},end:{line:272,column:18}},"114":{start:{line:272,column:6},end:{line:272,column:18}},"115":{start:{line:274,column:4},end:{line:274,column:60}},"116":{start:{line:285,column:19},end:{line:285,column:43}},"117":{start:{line:286,column:4},end:{line:290,column:5}},"118":{start:{line:287,column:6},end:{line:287,column:32}},"119":{start:{line:289,column:6},end:{line:289,column:15}},"120":{start:{line:300,column:4},end:{line:304,column:5}},"121":{start:{line:301,column:6},end:{line:301,column:33}},"122":{start:{line:302,column:6},end:{line:302,column:23}},"123":{start:{line:303,column:6},end:{line:303,column:13}},"124":{start:{line:306,column:4},end:{line:306,column:16}},"125":{start:{line:308,column:4},end:{line:311,column:5}},"126":{start:{line:309,column:6},end:{line:309,column:29}},"127":{start:{line:310,column:6},end:{line:310,column:22}},"128":{start:{line:313,column:4},end:{line:316,column:5}},"129":{start:{line:314,column:6},end:{line:314,column:27}},"130":{start:{line:315,column:6},end:{line:315,column:25}},"131":{start:{line:324,column:4},end:{line:324,column:22}},"132":{start:{line:325,column:4},end:{line:325,column:26}},"133":{start:{line:335,column:19},end:{line:335,column:43}},"134":{start:{line:336,column:4},end:{line:340,column:5}},"135":{start:{line:337,column:6},end:{line:337,column:52}},"136":{start:{line:339,column:6},end:{line:339,column:15}},"137":{start:{line:351,column:4},end:{line:352,column:54}},"138":{start:{line:352,column:6},end:{line:352,column:54}},"139":{start:{line:354,column:4},end:{line:355,column:49}},"140":{start:{line:355,column:6},end:{line:355,column:49}},"141":{start:{line:357,column:4},end:{line:357,column:17}},"142":{start:{line:359,column:16},end:{line:359,column:45}},"143":{start:{line:360,column:17},end:{line:360,column:60}},"144":{start:{line:362,column:4},end:{line:362,column:23}},"145":{start:{line:363,column:4},end:{line:363,column:27}},"146":{start:{line:364,column:4},end:{line:364,column:19}},"147":{start:{line:365,column:4},end:{line:365,column:27}},"148":{start:{line:367,column:4},end:{line:370,column:5}},"149":{start:{line:368,column:6},end:{line:368,column:19}},"150":{start:{line:369,column:6},end:{line:369,column:18}},"151":{start:{line:372,column:4},end:{line:372,column:15}},"152":{start:{line:382,column:19},end:{line:382,column:43}},"153":{start:{line:383,column:4},end:{line:387,column:5}},"154":{start:{line:384,column:6},end:{line:384,column:52}},"155":{start:{line:386,column:6},end:{line:386,column:15}},"156":{start:{line:398,column:4},end:{line:399,column:58}},"157":{start:{line:399,column:6},end:{line:399,column:58}},"158":{start:{line:401,column:4},end:{line:402,column:49}},"159":{start:{line:402,column:6},end:{line:402,column:49}},"160":{start:{line:404,column:16},end:{line:404,column:31}},"161":{start:{line:405,column:15},end:{line:405,column:37}},"162":{start:{line:407,column:4},end:{line:407,column:16}},"163":{start:{line:409,column:16},end:{line:409,column:45}},"164":{start:{line:410,column:17},end:{line:410,column:43}},"165":{start:{line:412,column:4},end:{line:412,column:20}},"166":{start:{line:413,column:4},end:{line:413,column:25}},"167":{start:{line:414,column:4},end:{line:414,column:26}},"168":{start:{line:415,column:4},end:{line:415,column:17}},"169":{start:{line:416,column:4},end:{line:416,column:27}},"170":{start:{line:418,column:4},end:{line:421,column:5}},"171":{start:{line:419,column:6},end:{line:419,column:19}},"172":{start:{line:420,column:6},end:{line:420,column:18}},"173":{start:{line:423,column:4},end:{line:423,column:15}},"174":{start:{line:432,column:15},end:{line:432,column:16}},"175":{start:{line:434,column:4},end:{line:434,column:15}},"176":{start:{line:435,column:4},end:{line:435,column:14}},"177":{start:{line:437,column:4},end:{line:438,column:38}},"178":{start:{line:438,column:6},end:{line:438,column:38}},"179":{start:{line:440,column:4},end:{line:440,column:16}},"180":{start:{line:449,column:15},end:{line:449,column:40}},"181":{start:{line:451,column:4},end:{line:451,column:38}},"182":{start:{line:452,column:4},end:{line:452,column:39}},"183":{start:{line:454,column:4},end:{line:459,column:5}},"184":{start:{line:455,column:6},end:{line:455,column:20}},"185":{start:{line:456,column:6},end:{line:456,column:33}},"186":{start:{line:458,column:6},end:{line:458,column:20}},"187":{start:{line:461,column:4},end:{line:461,column:23}},"188":{start:{line:470,column:15},end:{line:470,column:29}},"189":{start:{line:472,column:4},end:{line:472,column:34}},"190":{start:{line:474,column:4},end:{line:482,column:5}},"191":{start:{line:475,column:6},end:{line:475,column:18}},"192":{start:{line:476,column:6},end:{line:476,column:44}},"193":{start:{line:477,column:6},end:{line:477,column:32}},"194":{start:{line:478,column:6},end:{line:478,column:45}},"195":{start:{line:480,column:6},end:{line:480,column:44}},"196":{start:{line:481,column:6},end:{line:481,column:45}},"197":{start:{line:484,column:4},end:{line:484,column:78}},"198":{start:{line:486,column:4},end:{line:487,column:46}},"199":{start:{line:487,column:6},end:{line:487,column:46}},"200":{start:{line:489,column:4},end:{line:489,column:16}},"201":{start:{line:498,column:15},end:{line:498,column:16}},"202":{start:{line:500,column:4},end:{line:506,column:5}},"203":{start:{line:501,column:6},end:{line:501,column:16}},"204":{start:{line:502,column:6},end:{line:502,column:45}},"205":{start:{line:503,column:6},end:{line:503,column:53}},"206":{start:{line:504,column:6},end:{line:504,column:17}},"207":{start:{line:505,column:6},end:{line:505,column:18}},"208":{start:{line:508,column:4},end:{line:508,column:14}},"209":{start:{line:509,column:4},end:{line:509,column:27}},"210":{start:{line:511,column:4},end:{line:511,column:16}},"211":{start:{line:521,column:4},end:{line:532,column:5}},"212":{start:{line:522,column:6},end:{line:522,column:20}},"213":{start:{line:523,column:6},end:{line:523,column:32}},"214":{start:{line:524,column:6},end:{line:524,column:40}},"215":{start:{line:526,column:6},end:{line:526,column:27}},"216":{start:{line:527,column:6},end:{line:527,column:26}},"217":{start:{line:528,column:6},end:{line:528,column:26}},"218":{start:{line:529,column:6},end:{line:529,column:26}},"219":{start:{line:531,column:6},end:{line:531,column:16}},"220":{start:{line:534,column:4},end:{line:534,column:18}},"221":{start:{line:536,column:4},end:{line:536,column:38}},"222":{start:{line:537,column:4},end:{line:537,column:39}},"223":{start:{line:539,column:4},end:{line:544,column:5}},"224":{start:{line:540,column:6},end:{line:540,column:20}},"225":{start:{line:541,column:6},end:{line:541,column:33}},"226":{start:{line:543,column:6},end:{line:543,column:20}},"227":{start:{line:546,column:4},end:{line:546,column:14}},"228":{start:{line:556,column:17},end:{line:556,column:31}},"229":{start:{line:557,column:4},end:{line:557,column:51}},"230":{start:{line:567,column:4},end:{line:567,column:39}},"231":{start:{line:569,column:4},end:{line:582,column:5}},"232":{start:{line:570,column:6},end:{line:570,column:34}},"233":{start:{line:571,column:6},end:{line:571,column:42}},"234":{start:{line:573,column:6},end:{line:573,column:29}},"235":{start:{line:575,column:6},end:{line:575,column:51}},"236":{start:{line:577,column:6},end:{line:577,column:28}},"237":{start:{line:578,column:6},end:{line:578,column:28}},"238":{start:{line:579,column:6},end:{line:579,column:28}},"239":{start:{line:581,column:6},end:{line:581,column:18}},"240":{start:{line:584,column:4},end:{line:584,column:34}},"241":{start:{line:585,column:4},end:{line:585,column:42}},"242":{start:{line:586,column:4},end:{line:586,column:43}},"243":{start:{line:587,column:4},end:{line:587,column:78}},"244":{start:{line:589,column:4},end:{line:590,column:46}},"245":{start:{line:590,column:6},end:{line:590,column:46}},"246":{start:{line:592,column:4},end:{line:592,column:16}},"247":{start:{line:601,column:4},end:{line:601,column:37}},"248":{start:{line:611,column:4},end:{line:611,column:42}},"249":{start:{line:620,column:4},end:{line:620,column:35}},"250":{start:{line:631,column:4},end:{line:631,column:27}},"251":{start:{line:632,column:4},end:{line:632,column:19}},"252":{start:{line:633,column:4},end:{line:633,column:27}},"253":{start:{line:634,column:4},end:{line:634,column:19}},"254":{start:{line:635,column:4},end:{line:635,column:37}},"255":{start:{line:636,column:4},end:{line:636,column:16}},"256":{start:{line:647,column:4},end:{line:647,column:45}},"257":{start:{line:659,column:4},end:{line:670,column:5}},"258":{start:{line:660,column:6},end:{line:669,column:8}},"259":{start:{line:672,column:4},end:{line:676,column:6}},"260":{start:{line:685,column:17},end:{line:685,column:40}},"261":{start:{line:687,column:4},end:{line:688,column:35}},"262":{start:{line:688,column:6},end:{line:688,column:35}},"263":{start:{line:690,column:4},end:{line:691,column:45}},"264":{start:{line:691,column:6},end:{line:691,column:45}},"265":{start:{line:693,column:4},end:{line:693,column:16}},"266":{start:{line:703,column:4},end:{line:703,column:36}},"267":{start:{line:713,column:0},end:{line:713,column:47}},"268":{start:{line:721,column:0},end:{line:724,column:2}},"269":{start:{line:732,column:0},end:{line:735,column:2}},"270":{start:{line:742,column:2},end:{line:743,column:17}},"271":{start:{line:743,column:4},end:{line:743,column:17}},"272":{start:{line:745,column:14},end:{line:745,column:31}},"273":{start:{line:746,column:14},end:{line:746,column:41}},"274":{start:{line:748,column:15},end:{line:748,column:34}},"275":{start:{line:750,column:2},end:{line:750,column:44}},"276":{start:{line:757,column:0},end:{line:757,column:27}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:40,column:2},end:{line:40,column:3}},loc:{start:{line:40,column:23},end:{line:59,column:3}},line:40},"1":{name:"(anonymous_1)",decl:{start:{line:67,column:2},end:{line:67,column:3}},loc:{start:{line:67,column:23},end:{line:129,column:3}},line:67},"2":{name:"(anonymous_2)",decl:{start:{line:136,column:2},end:{line:136,column:3}},loc:{start:{line:136,column:30},end:{line:138,column:3}},line:136},"3":{name:"(anonymous_3)",decl:{start:{line:147,column:2},end:{line:147,column:3}},loc:{start:{line:147,column:36},end:{line:154,column:3}},line:147},"4":{name:"(anonymous_4)",decl:{start:{line:164,column:2},end:{line:164,column:3}},loc:{start:{line:164,column:37},end:{line:188,column:3}},line:164},"5":{name:"(anonymous_5)",decl:{start:{line:196,column:2},end:{line:196,column:3}},loc:{start:{line:196,column:17},end:{line:209,column:3}},line:196},"6":{name:"(anonymous_6)",decl:{start:{line:208,column:28},end:{line:208,column:29}},loc:{start:{line:208,column:34},end:{line:208,column:45}},line:208},"7":{name:"(anonymous_7)",decl:{start:{line:216,column:2},end:{line:216,column:3}},loc:{start:{line:216,column:9},end:{line:222,column:3}},line:216},"8":{name:"(anonymous_8)",decl:{start:{line:230,column:2},end:{line:230,column:3}},loc:{start:{line:230,column:23},end:{line:247,column:3}},line:230},"9":{name:"(anonymous_9)",decl:{start:{line:256,column:2},end:{line:256,column:3}},loc:{start:{line:256,column:21},end:{line:261,column:3}},line:256},"10":{name:"(anonymous_10)",decl:{start:{line:270,column:2},end:{line:270,column:3}},loc:{start:{line:270,column:21},end:{line:275,column:3}},line:270},"11":{name:"(anonymous_11)",decl:{start:{line:284,column:2},end:{line:284,column:3}},loc:{start:{line:284,column:15},end:{line:291,column:3}},line:284},"12":{name:"(anonymous_12)",decl:{start:{line:299,column:2},end:{line:299,column:3}},loc:{start:{line:299,column:10},end:{line:317,column:3}},line:299},"13":{name:"(anonymous_13)",decl:{start:{line:323,column:2},end:{line:323,column:3}},loc:{start:{line:323,column:18},end:{line:326,column:3}},line:323},"14":{name:"(anonymous_14)",decl:{start:{line:334,column:2},end:{line:334,column:3}},loc:{start:{line:334,column:35},end:{line:341,column:3}},line:334},"15":{name:"(anonymous_15)",decl:{start:{line:350,column:2},end:{line:350,column:3}},loc:{start:{line:350,column:36},end:{line:373,column:3}},line:350},"16":{name:"(anonymous_16)",decl:{start:{line:381,column:2},end:{line:381,column:3}},loc:{start:{line:381,column:35},end:{line:388,column:3}},line:381},"17":{name:"(anonymous_17)",decl:{start:{line:397,column:2},end:{line:397,column:3}},loc:{start:{line:397,column:36},end:{line:424,column:3}},line:397},"18":{name:"(anonymous_18)",decl:{start:{line:431,column:2},end:{line:431,column:3}},loc:{start:{line:431,column:12},end:{line:441,column:3}},line:431},"19":{name:"(anonymous_19)",decl:{start:{line:448,column:2},end:{line:448,column:3}},loc:{start:{line:448,column:13},end:{line:462,column:3}},line:448},"20":{name:"(anonymous_20)",decl:{start:{line:469,column:2},end:{line:469,column:3}},loc:{start:{line:469,column:16},end:{line:490,column:3}},line:469},"21":{name:"(anonymous_21)",decl:{start:{line:497,column:2},end:{line:497,column:3}},loc:{start:{line:497,column:12},end:{line:512,column:3}},line:497},"22":{name:"(anonymous_22)",decl:{start:{line:520,column:2},end:{line:520,column:3}},loc:{start:{line:520,column:15},end:{line:547,column:3}},line:520},"23":{name:"(anonymous_23)",decl:{start:{line:555,column:2},end:{line:555,column:3}},loc:{start:{line:555,column:10},end:{line:558,column:3}},line:555},"24":{name:"(anonymous_24)",decl:{start:{line:566,column:2},end:{line:566,column:3}},loc:{start:{line:566,column:17},end:{line:593,column:3}},line:566},"25":{name:"(anonymous_25)",decl:{start:{line:600,column:2},end:{line:600,column:3}},loc:{start:{line:600,column:24},end:{line:602,column:3}},line:600},"26":{name:"(anonymous_26)",decl:{start:{line:610,column:2},end:{line:610,column:3}},loc:{start:{line:610,column:15},end:{line:612,column:3}},line:610},"27":{name:"(anonymous_27)",decl:{start:{line:619,column:2},end:{line:619,column:3}},loc:{start:{line:619,column:22},end:{line:621,column:3}},line:619},"28":{name:"(anonymous_28)",decl:{start:{line:630,column:2},end:{line:630,column:3}},loc:{start:{line:630,column:25},end:{line:637,column:3}},line:630},"29":{name:"(anonymous_29)",decl:{start:{line:646,column:2},end:{line:646,column:3}},loc:{start:{line:646,column:32},end:{line:648,column:3}},line:646},"30":{name:"(anonymous_30)",decl:{start:{line:658,column:2},end:{line:658,column:3}},loc:{start:{line:658,column:26},end:{line:677,column:3}},line:658},"31":{name:"(anonymous_31)",decl:{start:{line:684,column:2},end:{line:684,column:3}},loc:{start:{line:684,column:20},end:{line:694,column:3}},line:684},"32":{name:"(anonymous_32)",decl:{start:{line:702,column:2},end:{line:702,column:3}},loc:{start:{line:702,column:26},end:{line:704,column:3}},line:702},"33":{name:"isLegacy",decl:{start:{line:741,column:9},end:{line:741,column:17}},loc:{start:{line:741,column:24},end:{line:751,column:1}},line:741}},branchMap:{"0":{loc:{start:{line:57,column:4},end:{line:58,column:32}},type:"if",locations:[{start:{line:57,column:4},end:{line:58,column:32}},{start:{line:57,column:4},end:{line:58,column:32}}],line:57},"1":{loc:{start:{line:70,column:4},end:{line:73,column:5}},type:"if",locations:[{start:{line:70,column:4},end:{line:73,column:5}},{start:{line:70,column:4},end:{line:73,column:5}}],line:70},"2":{loc:{start:{line:75,column:4},end:{line:78,column:5}},type:"if",locations:[{start:{line:75,column:4},end:{line:78,column:5}},{start:{line:75,column:4},end:{line:78,column:5}}],line:75},"3":{loc:{start:{line:80,column:4},end:{line:83,column:5}},type:"if",locations:[{start:{line:80,column:4},end:{line:83,column:5}},{start:{line:80,column:4},end:{line:83,column:5}}],line:80},"4":{loc:{start:{line:85,column:4},end:{line:88,column:5}},type:"if",locations:[{start:{line:85,column:4},end:{line:88,column:5}},{start:{line:85,column:4},end:{line:88,column:5}}],line:85},"5":{loc:{start:{line:90,column:4},end:{line:93,column:5}},type:"if",locations:[{start:{line:90,column:4},end:{line:93,column:5}},{start:{line:90,column:4},end:{line:93,column:5}}],line:90},"6":{loc:{start:{line:95,column:4},end:{line:104,column:5}},type:"if",locations:[{start:{line:95,column:4},end:{line:104,column:5}},{start:{line:95,column:4},end:{line:104,column:5}}],line:95},"7":{loc:{start:{line:96,column:6},end:{line:103,column:7}},type:"if",locations:[{start:{line:96,column:6},end:{line:103,column:7}},{start:{line:96,column:6},end:{line:103,column:7}}],line:96},"8":{loc:{start:{line:106,column:4},end:{line:109,column:5}},type:"if",locations:[{start:{line:106,column:4},end:{line:109,column:5}},{start:{line:106,column:4},end:{line:109,column:5}}],line:106},"9":{loc:{start:{line:111,column:4},end:{line:114,column:5}},type:"if",locations:[{start:{line:111,column:4},end:{line:114,column:5}},{start:{line:111,column:4},end:{line:114,column:5}}],line:111},"10":{loc:{start:{line:116,column:4},end:{line:119,column:5}},type:"if",locations:[{start:{line:116,column:4},end:{line:119,column:5}},{start:{line:116,column:4},end:{line:119,column:5}}],line:116},"11":{loc:{start:{line:121,column:4},end:{line:124,column:5}},type:"if",locations:[{start:{line:121,column:4},end:{line:124,column:5}},{start:{line:121,column:4},end:{line:124,column:5}}],line:121},"12":{loc:{start:{line:126,column:11},end:{line:126,column:48}},type:"cond-expr",locations:[{start:{line:126,column:28},end:{line:126,column:37}},{start:{line:126,column:40},end:{line:126,column:48}}],line:126},"13":{loc:{start:{line:165,column:4},end:{line:171,column:5}},type:"if",locations:[{start:{line:165,column:4},end:{line:171,column:5}},{start:{line:165,column:4},end:{line:171,column:5}}],line:165},"14":{loc:{start:{line:166,column:6},end:{line:169,column:7}},type:"if",locations:[{start:{line:166,column:6},end:{line:169,column:7}},{start:{line:166,column:6},end:{line:169,column:7}}],line:166},"15":{loc:{start:{line:173,column:4},end:{line:174,column:40}},type:"if",locations:[{start:{line:173,column:4},end:{line:174,column:40}},{start:{line:173,column:4},end:{line:174,column:40}}],line:173},"16":{loc:{start:{line:197,column:4},end:{line:198,column:19}},type:"if",locations:[{start:{line:197,column:4},end:{line:198,column:19}},{start:{line:197,column:4},end:{line:198,column:19}}],line:197},"17":{loc:{start:{line:202,column:4},end:{line:203,column:13}},type:"if",locations:[{start:{line:202,column:4},end:{line:203,column:13}},{start:{line:202,column:4},end:{line:203,column:13}}],line:202},"18":{loc:{start:{line:217,column:4},end:{line:221,column:5}},type:"if",locations:[{start:{line:217,column:4},end:{line:221,column:5}},{start:{line:217,column:4},end:{line:221,column:5}}],line:217},"19":{loc:{start:{line:236,column:4},end:{line:237,column:43}},type:"if",locations:[{start:{line:236,column:4},end:{line:237,column:43}},{start:{line:236,column:4},end:{line:237,column:43}}],line:236},"20":{loc:{start:{line:239,column:4},end:{line:246,column:5}},type:"switch",locations:[{start:{line:240,column:6},end:{line:241,column:63}},{start:{line:242,column:6},end:{line:243,column:61}},{start:{line:244,column:6},end:{line:245,column:59}}],line:239},"21":{loc:{start:{line:257,column:4},end:{line:258,column:18}},type:"if",locations:[{start:{line:257,column:4},end:{line:258,column:18}},{start:{line:257,column:4},end:{line:258,column:18}}],line:257},"22":{loc:{start:{line:271,column:4},end:{line:272,column:18}},type:"if",locations:[{start:{line:271,column:4},end:{line:272,column:18}},{start:{line:271,column:4},end:{line:272,column:18}}],line:271},"23":{loc:{start:{line:300,column:4},end:{line:304,column:5}},type:"if",locations:[{start:{line:300,column:4},end:{line:304,column:5}},{start:{line:300,column:4},end:{line:304,column:5}}],line:300},"24":{loc:{start:{line:308,column:4},end:{line:311,column:5}},type:"if",locations:[{start:{line:308,column:4},end:{line:311,column:5}},{start:{line:308,column:4},end:{line:311,column:5}}],line:308},"25":{loc:{start:{line:313,column:4},end:{line:316,column:5}},type:"if",locations:[{start:{line:313,column:4},end:{line:316,column:5}},{start:{line:313,column:4},end:{line:316,column:5}}],line:313},"26":{loc:{start:{line:351,column:4},end:{line:352,column:54}},type:"if",locations:[{start:{line:351,column:4},end:{line:352,column:54}},{start:{line:351,column:4},end:{line:352,column:54}}],line:351},"27":{loc:{start:{line:354,column:4},end:{line:355,column:49}},type:"if",locations:[{start:{line:354,column:4},end:{line:355,column:49}},{start:{line:354,column:4},end:{line:355,column:49}}],line:354},"28":{loc:{start:{line:367,column:4},end:{line:370,column:5}},type:"if",locations:[{start:{line:367,column:4},end:{line:370,column:5}},{start:{line:367,column:4},end:{line:370,column:5}}],line:367},"29":{loc:{start:{line:398,column:4},end:{line:399,column:58}},type:"if",locations:[{start:{line:398,column:4},end:{line:399,column:58}},{start:{line:398,column:4},end:{line:399,column:58}}],line:398},"30":{loc:{start:{line:401,column:4},end:{line:402,column:49}},type:"if",locations:[{start:{line:401,column:4},end:{line:402,column:49}},{start:{line:401,column:4},end:{line:402,column:49}}],line:401},"31":{loc:{start:{line:418,column:4},end:{line:421,column:5}},type:"if",locations:[{start:{line:418,column:4},end:{line:421,column:5}},{start:{line:418,column:4},end:{line:421,column:5}}],line:418},"32":{loc:{start:{line:437,column:4},end:{line:438,column:38}},type:"if",locations:[{start:{line:437,column:4},end:{line:438,column:38}},{start:{line:437,column:4},end:{line:438,column:38}}],line:437},"33":{loc:{start:{line:454,column:4},end:{line:459,column:5}},type:"if",locations:[{start:{line:454,column:4},end:{line:459,column:5}},{start:{line:454,column:4},end:{line:459,column:5}}],line:454},"34":{loc:{start:{line:474,column:4},end:{line:482,column:5}},type:"if",locations:[{start:{line:474,column:4},end:{line:482,column:5}},{start:{line:474,column:4},end:{line:482,column:5}}],line:474},"35":{loc:{start:{line:486,column:4},end:{line:487,column:46}},type:"if",locations:[{start:{line:486,column:4},end:{line:487,column:46}},{start:{line:486,column:4},end:{line:487,column:46}}],line:486},"36":{loc:{start:{line:500,column:4},end:{line:506,column:5}},type:"if",locations:[{start:{line:500,column:4},end:{line:506,column:5}},{start:{line:500,column:4},end:{line:506,column:5}}],line:500},"37":{loc:{start:{line:521,column:4},end:{line:532,column:5}},type:"if",locations:[{start:{line:521,column:4},end:{line:532,column:5}},{start:{line:521,column:4},end:{line:532,column:5}}],line:521},"38":{loc:{start:{line:539,column:4},end:{line:544,column:5}},type:"if",locations:[{start:{line:539,column:4},end:{line:544,column:5}},{start:{line:539,column:4},end:{line:544,column:5}}],line:539},"39":{loc:{start:{line:569,column:4},end:{line:582,column:5}},type:"if",locations:[{start:{line:569,column:4},end:{line:582,column:5}},{start:{line:569,column:4},end:{line:582,column:5}}],line:569},"40":{loc:{start:{line:589,column:4},end:{line:590,column:46}},type:"if",locations:[{start:{line:589,column:4},end:{line:590,column:46}},{start:{line:589,column:4},end:{line:590,column:46}}],line:589},"41":{loc:{start:{line:635,column:20},end:{line:635,column:36}},type:"binary-expr",locations:[{start:{line:635,column:20},end:{line:635,column:28}},{start:{line:635,column:32},end:{line:635,column:36}}],line:635},"42":{loc:{start:{line:659,column:4},end:{line:670,column:5}},type:"if",locations:[{start:{line:659,column:4},end:{line:670,column:5}},{start:{line:659,column:4},end:{line:670,column:5}}],line:659},"43":{loc:{start:{line:664,column:20},end:{line:664,column:72}},type:"cond-expr",locations:[{start:{line:664,column:29},end:{line:664,column:60}},{start:{line:664,column:63},end:{line:664,column:72}}],line:664},"44":{loc:{start:{line:674,column:11},end:{line:674,column:56}},type:"cond-expr",locations:[{start:{line:674,column:20},end:{line:674,column:44}},{start:{line:674,column:47},end:{line:674,column:56}}],line:674},"45":{loc:{start:{line:675,column:16},end:{line:675,column:76}},type:"cond-expr",locations:[{start:{line:675,column:42},end:{line:675,column:64}},{start:{line:675,column:67},end:{line:675,column:76}}],line:675},"46":{loc:{start:{line:675,column:16},end:{line:675,column:39}},type:"binary-expr",locations:[{start:{line:675,column:16},end:{line:675,column:22}},{start:{line:675,column:26},end:{line:675,column:39}}],line:675},"47":{loc:{start:{line:687,column:4},end:{line:688,column:35}},type:"if",locations:[{start:{line:687,column:4},end:{line:688,column:35}},{start:{line:687,column:4},end:{line:688,column:35}}],line:687},"48":{loc:{start:{line:690,column:4},end:{line:691,column:45}},type:"if",locations:[{start:{line:690,column:4},end:{line:691,column:45}},{start:{line:690,column:4},end:{line:691,column:45}}],line:690},"49":{loc:{start:{line:742,column:2},end:{line:743,column:17}},type:"if",locations:[{start:{line:742,column:2},end:{line:743,column:17}},{start:{line:742,column:2},end:{line:743,column:17}}],line:742}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"d0892cd2cc845e6cda7d91692d2d40e635073117"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_10701pntgb=function(){return actualCoverage;};}return actualCoverage;}cov_10701pntgb();const assert=(cov_10701pntgb().s[0]++,require('bsert'));const bio=(cov_10701pntgb().s[1]++,require('bufio'));const{Lock}=(cov_10701pntgb().s[2]++,require('bmutex'));const random=(cov_10701pntgb().s[3]++,require('bcrypto/lib/random'));const cleanse=(cov_10701pntgb().s[4]++,require('bcrypto/lib/cleanse'));const aes=(cov_10701pntgb().s[5]++,require('bcrypto/lib/aes'));const sha256=(cov_10701pntgb().s[6]++,require('bcrypto/lib/sha256'));const hash256=(cov_10701pntgb().s[7]++,require('bcrypto/lib/hash256'));const secp256k1=(cov_10701pntgb().s[8]++,require('bcrypto/lib/secp256k1'));const pbkdf2=(cov_10701pntgb().s[9]++,require('bcrypto/lib/pbkdf2'));const scrypt=(cov_10701pntgb().s[10]++,require('bcrypto/lib/scrypt'));const util=(cov_10701pntgb().s[11]++,require('../utils/util'));const HDPrivateKey=(cov_10701pntgb().s[12]++,require('../hd/private'));const Mnemonic=(cov_10701pntgb().s[13]++,require('../hd/mnemonic'));const{encoding}=(cov_10701pntgb().s[14]++,bio);const{inspectSymbol}=(cov_10701pntgb().s[15]++,require('../utils'));/**
 * Master Key
 * Master BIP32 key which can exist
 * in a timed out encrypted state.
 * @alias module:wallet.MasterKey
 */class MasterKey{/**
   * Create a master key.
   * @constructor
   * @param {Object} options
   */constructor(options){cov_10701pntgb().f[0]++;cov_10701pntgb().s[16]++;this.encrypted=false;cov_10701pntgb().s[17]++;this.iv=null;cov_10701pntgb().s[18]++;this.ciphertext=null;cov_10701pntgb().s[19]++;this.key=null;cov_10701pntgb().s[20]++;this.mnemonic=null;cov_10701pntgb().s[21]++;this.alg=MasterKey.alg.PBKDF2;cov_10701pntgb().s[22]++;this.n=50000;cov_10701pntgb().s[23]++;this.r=0;cov_10701pntgb().s[24]++;this.p=0;cov_10701pntgb().s[25]++;this.aesKey=null;cov_10701pntgb().s[26]++;this.timer=null;cov_10701pntgb().s[27]++;this.until=0;cov_10701pntgb().s[28]++;this.locker=new Lock();cov_10701pntgb().s[29]++;if(options){cov_10701pntgb().b[0][0]++;cov_10701pntgb().s[30]++;this.fromOptions(options);}else{cov_10701pntgb().b[0][1]++;}}/**
   * Inject properties from options object.
   * @private
   * @param {Object} options
   */fromOptions(options){cov_10701pntgb().f[1]++;cov_10701pntgb().s[31]++;assert(options);cov_10701pntgb().s[32]++;if(options.encrypted!=null){cov_10701pntgb().b[1][0]++;cov_10701pntgb().s[33]++;assert(typeof options.encrypted==='boolean');cov_10701pntgb().s[34]++;this.encrypted=options.encrypted;}else{cov_10701pntgb().b[1][1]++;}cov_10701pntgb().s[35]++;if(options.iv){cov_10701pntgb().b[2][0]++;cov_10701pntgb().s[36]++;assert(Buffer.isBuffer(options.iv));cov_10701pntgb().s[37]++;this.iv=options.iv;}else{cov_10701pntgb().b[2][1]++;}cov_10701pntgb().s[38]++;if(options.ciphertext){cov_10701pntgb().b[3][0]++;cov_10701pntgb().s[39]++;assert(Buffer.isBuffer(options.ciphertext));cov_10701pntgb().s[40]++;this.ciphertext=options.ciphertext;}else{cov_10701pntgb().b[3][1]++;}cov_10701pntgb().s[41]++;if(options.key){cov_10701pntgb().b[4][0]++;cov_10701pntgb().s[42]++;assert(HDPrivateKey.isHDPrivateKey(options.key));cov_10701pntgb().s[43]++;this.key=options.key;}else{cov_10701pntgb().b[4][1]++;}cov_10701pntgb().s[44]++;if(options.mnemonic){cov_10701pntgb().b[5][0]++;cov_10701pntgb().s[45]++;assert(options.mnemonic instanceof Mnemonic);cov_10701pntgb().s[46]++;this.mnemonic=options.mnemonic;}else{cov_10701pntgb().b[5][1]++;}cov_10701pntgb().s[47]++;if(options.alg!=null){cov_10701pntgb().b[6][0]++;cov_10701pntgb().s[48]++;if(typeof options.alg==='string'){cov_10701pntgb().b[7][0]++;cov_10701pntgb().s[49]++;this.alg=MasterKey.alg[options.alg.toUpperCase()];cov_10701pntgb().s[50]++;assert(this.alg!=null,'Unknown algorithm.');}else{cov_10701pntgb().b[7][1]++;cov_10701pntgb().s[51]++;assert(typeof options.alg==='number');cov_10701pntgb().s[52]++;assert(MasterKey.algByVal[options.alg]);cov_10701pntgb().s[53]++;this.alg=options.alg;}}else{cov_10701pntgb().b[6][1]++;}cov_10701pntgb().s[54]++;if(options.rounds!=null){cov_10701pntgb().b[8][0]++;cov_10701pntgb().s[55]++;assert(options.rounds>>>0===options.rounds);cov_10701pntgb().s[56]++;this.rounds=options.rounds;}else{cov_10701pntgb().b[8][1]++;}cov_10701pntgb().s[57]++;if(options.n!=null){cov_10701pntgb().b[9][0]++;cov_10701pntgb().s[58]++;assert(options.n>>>0===options.n);cov_10701pntgb().s[59]++;this.n=options.n;}else{cov_10701pntgb().b[9][1]++;}cov_10701pntgb().s[60]++;if(options.r!=null){cov_10701pntgb().b[10][0]++;cov_10701pntgb().s[61]++;assert(options.r>>>0===options.r);cov_10701pntgb().s[62]++;this.r=options.r;}else{cov_10701pntgb().b[10][1]++;}cov_10701pntgb().s[63]++;if(options.p!=null){cov_10701pntgb().b[11][0]++;cov_10701pntgb().s[64]++;assert(options.p>>>0===options.p);cov_10701pntgb().s[65]++;this.p=options.p;}else{cov_10701pntgb().b[11][1]++;}cov_10701pntgb().s[66]++;assert(this.encrypted?(cov_10701pntgb().b[12][0]++,!this.key):(cov_10701pntgb().b[12][1]++,this.key));cov_10701pntgb().s[67]++;return this;}/**
   * Instantiate master key from options.
   * @returns {MasterKey}
   */static fromOptions(options){cov_10701pntgb().f[2]++;cov_10701pntgb().s[68]++;return new this().fromOptions(options);}/**
   * Decrypt the key and set a timeout to destroy decrypted data.
   * @param {Buffer|String} passphrase - Zero this yourself.
   * @param {Number} [timeout=60000] timeout in ms.
   * @returns {Promise} - Returns {@link HDPrivateKey}.
   */async unlock(passphrase,timeout){cov_10701pntgb().f[3]++;const _unlock=(cov_10701pntgb().s[69]++,await this.locker.lock());cov_10701pntgb().s[70]++;try{cov_10701pntgb().s[71]++;return await this._unlock(passphrase,timeout);}finally{cov_10701pntgb().s[72]++;_unlock();}}/**
   * Decrypt the key without a lock.
   * @private
   * @param {Buffer|String} passphrase - Zero this yourself.
   * @param {Number} [timeout=60000] timeout in ms.
   * @returns {Promise} - Returns {@link HDPrivateKey}.
   */async _unlock(passphrase,timeout){cov_10701pntgb().f[4]++;cov_10701pntgb().s[73]++;if(this.key){cov_10701pntgb().b[13][0]++;cov_10701pntgb().s[74]++;if(this.encrypted){cov_10701pntgb().b[14][0]++;cov_10701pntgb().s[75]++;assert(this.timer!=null);cov_10701pntgb().s[76]++;this.start(timeout);}else{cov_10701pntgb().b[14][1]++;}cov_10701pntgb().s[77]++;return this.key;}else{cov_10701pntgb().b[13][1]++;}cov_10701pntgb().s[78]++;if(!passphrase){cov_10701pntgb().b[15][0]++;cov_10701pntgb().s[79]++;throw new Error('No passphrase.');}else{cov_10701pntgb().b[15][1]++;}cov_10701pntgb().s[80]++;assert(this.encrypted);const key=(cov_10701pntgb().s[81]++,await this.derive(passphrase));const data=(cov_10701pntgb().s[82]++,aes.decipher(this.ciphertext,key,this.iv));cov_10701pntgb().s[83]++;this.readKey(data);cov_10701pntgb().s[84]++;this.start(timeout);cov_10701pntgb().s[85]++;this.aesKey=key;cov_10701pntgb().s[86]++;return this.key;}/**
   * Start the destroy timer.
   * @private
   * @param {Number} [timeout=60] timeout in seconds.
   */start(timeout){cov_10701pntgb().f[5]++;cov_10701pntgb().s[87]++;if(!timeout){cov_10701pntgb().b[16][0]++;cov_10701pntgb().s[88]++;timeout=60;}else{cov_10701pntgb().b[16][1]++;}cov_10701pntgb().s[89]++;this.stop();cov_10701pntgb().s[90]++;if(timeout===-1){cov_10701pntgb().b[17][0]++;cov_10701pntgb().s[91]++;return;}else{cov_10701pntgb().b[17][1]++;}cov_10701pntgb().s[92]++;assert(timeout>>>0===timeout);cov_10701pntgb().s[93]++;this.until=util.now()+timeout;cov_10701pntgb().s[94]++;this.timer=setTimeout(()=>{cov_10701pntgb().f[6]++;cov_10701pntgb().s[95]++;return this.lock();},timeout*1000);}/**
   * Stop the destroy timer.
   * @private
   */stop(){cov_10701pntgb().f[7]++;cov_10701pntgb().s[96]++;if(this.timer!=null){cov_10701pntgb().b[18][0]++;cov_10701pntgb().s[97]++;clearTimeout(this.timer);cov_10701pntgb().s[98]++;this.timer=null;cov_10701pntgb().s[99]++;this.until=0;}else{cov_10701pntgb().b[18][1]++;}}/**
   * Derive an aes key based on params.
   * @param {String|Buffer} passphrase
   * @returns {Promise}
   */async derive(passwd){cov_10701pntgb().f[8]++;const salt=(cov_10701pntgb().s[100]++,MasterKey.SALT);const n=(cov_10701pntgb().s[101]++,this.n);const r=(cov_10701pntgb().s[102]++,this.r);const p=(cov_10701pntgb().s[103]++,this.p);cov_10701pntgb().s[104]++;if(typeof passwd==='string'){cov_10701pntgb().b[19][0]++;cov_10701pntgb().s[105]++;passwd=Buffer.from(passwd,'utf8');}else{cov_10701pntgb().b[19][1]++;}cov_10701pntgb().s[106]++;switch(this.alg){case MasterKey.alg.PBKDF2:cov_10701pntgb().b[20][0]++;cov_10701pntgb().s[107]++;return pbkdf2.deriveAsync(sha256,passwd,salt,n,32);case MasterKey.alg.SCRYPT:cov_10701pntgb().b[20][1]++;cov_10701pntgb().s[108]++;return scrypt.deriveAsync(passwd,salt,n,r,p,32);default:cov_10701pntgb().b[20][2]++;cov_10701pntgb().s[109]++;throw new Error(`Unknown algorithm: ${this.alg}.`);}}/**
   * Encrypt data with in-memory aes key.
   * @param {Buffer} data
   * @param {Buffer} iv
   * @returns {Buffer}
   */encipher(data,iv){cov_10701pntgb().f[9]++;cov_10701pntgb().s[110]++;if(!this.aesKey){cov_10701pntgb().b[21][0]++;cov_10701pntgb().s[111]++;return null;}else{cov_10701pntgb().b[21][1]++;}cov_10701pntgb().s[112]++;return aes.encipher(data,this.aesKey,iv.slice(0,16));}/**
   * Decrypt data with in-memory aes key.
   * @param {Buffer} data
   * @param {Buffer} iv
   * @returns {Buffer}
   */decipher(data,iv){cov_10701pntgb().f[10]++;cov_10701pntgb().s[113]++;if(!this.aesKey){cov_10701pntgb().b[22][0]++;cov_10701pntgb().s[114]++;return null;}else{cov_10701pntgb().b[22][1]++;}cov_10701pntgb().s[115]++;return aes.decipher(data,this.aesKey,iv.slice(0,16));}/**
   * Destroy the key by zeroing the
   * privateKey and chainCode. Stop
   * the timer if there is one.
   * @returns {Promise}
   */async lock(){cov_10701pntgb().f[11]++;const unlock=(cov_10701pntgb().s[116]++,await this.locker.lock());cov_10701pntgb().s[117]++;try{cov_10701pntgb().s[118]++;return await this._lock();}finally{cov_10701pntgb().s[119]++;unlock();}}/**
   * Destroy the key by zeroing the
   * privateKey and chainCode. Stop
   * the timer if there is one.
   */_lock(){cov_10701pntgb().f[12]++;cov_10701pntgb().s[120]++;if(!this.encrypted){cov_10701pntgb().b[23][0]++;cov_10701pntgb().s[121]++;assert(this.timer==null);cov_10701pntgb().s[122]++;assert(this.key);cov_10701pntgb().s[123]++;return;}else{cov_10701pntgb().b[23][1]++;}cov_10701pntgb().s[124]++;this.stop();cov_10701pntgb().s[125]++;if(this.key){cov_10701pntgb().b[24][0]++;cov_10701pntgb().s[126]++;this.key.destroy(true);cov_10701pntgb().s[127]++;this.key=null;}else{cov_10701pntgb().b[24][1]++;}cov_10701pntgb().s[128]++;if(this.aesKey){cov_10701pntgb().b[25][0]++;cov_10701pntgb().s[129]++;cleanse(this.aesKey);cov_10701pntgb().s[130]++;this.aesKey=null;}else{cov_10701pntgb().b[25][1]++;}}/**
   * Destroy the key permanently.
   */async destroy(){cov_10701pntgb().f[13]++;cov_10701pntgb().s[131]++;await this.lock();cov_10701pntgb().s[132]++;this.locker.destroy();}/**
   * Decrypt the key permanently.
   * @param {Buffer|String} passphrase - Zero this yourself.
   * @returns {Promise}
   */async decrypt(passphrase,clean){cov_10701pntgb().f[14]++;const unlock=(cov_10701pntgb().s[133]++,await this.locker.lock());cov_10701pntgb().s[134]++;try{cov_10701pntgb().s[135]++;return await this._decrypt(passphrase,clean);}finally{cov_10701pntgb().s[136]++;unlock();}}/**
   * Decrypt the key permanently without a lock.
   * @private
   * @param {Buffer|String} passphrase - Zero this yourself.
   * @returns {Promise}
   */async _decrypt(passphrase,clean){cov_10701pntgb().f[15]++;cov_10701pntgb().s[137]++;if(!this.encrypted){cov_10701pntgb().b[26][0]++;cov_10701pntgb().s[138]++;throw new Error('Master key is not encrypted.');}else{cov_10701pntgb().b[26][1]++;}cov_10701pntgb().s[139]++;if(!passphrase){cov_10701pntgb().b[27][0]++;cov_10701pntgb().s[140]++;throw new Error('No passphrase provided.');}else{cov_10701pntgb().b[27][1]++;}cov_10701pntgb().s[141]++;this._lock();const key=(cov_10701pntgb().s[142]++,await this.derive(passphrase));const data=(cov_10701pntgb().s[143]++,aes.decipher(this.ciphertext,key,this.iv));cov_10701pntgb().s[144]++;this.readKey(data);cov_10701pntgb().s[145]++;this.encrypted=false;cov_10701pntgb().s[146]++;this.iv=null;cov_10701pntgb().s[147]++;this.ciphertext=null;cov_10701pntgb().s[148]++;if(!clean){cov_10701pntgb().b[28][0]++;cov_10701pntgb().s[149]++;cleanse(key);cov_10701pntgb().s[150]++;return null;}else{cov_10701pntgb().b[28][1]++;}cov_10701pntgb().s[151]++;return key;}/**
   * Encrypt the key permanently.
   * @param {Buffer|String} passphrase - Zero this yourself.
   * @returns {Promise}
   */async encrypt(passphrase,clean){cov_10701pntgb().f[16]++;const unlock=(cov_10701pntgb().s[152]++,await this.locker.lock());cov_10701pntgb().s[153]++;try{cov_10701pntgb().s[154]++;return await this._encrypt(passphrase,clean);}finally{cov_10701pntgb().s[155]++;unlock();}}/**
   * Encrypt the key permanently without a lock.
   * @private
   * @param {Buffer|String} passphrase - Zero this yourself.
   * @returns {Promise}
   */async _encrypt(passphrase,clean){cov_10701pntgb().f[17]++;cov_10701pntgb().s[156]++;if(this.encrypted){cov_10701pntgb().b[29][0]++;cov_10701pntgb().s[157]++;throw new Error('Master key is already encrypted.');}else{cov_10701pntgb().b[29][1]++;}cov_10701pntgb().s[158]++;if(!passphrase){cov_10701pntgb().b[30][0]++;cov_10701pntgb().s[159]++;throw new Error('No passphrase provided.');}else{cov_10701pntgb().b[30][1]++;}const raw=(cov_10701pntgb().s[160]++,this.writeKey());const iv=(cov_10701pntgb().s[161]++,random.randomBytes(16));cov_10701pntgb().s[162]++;this.stop();const key=(cov_10701pntgb().s[163]++,await this.derive(passphrase));const data=(cov_10701pntgb().s[164]++,aes.encipher(raw,key,iv));cov_10701pntgb().s[165]++;this.key=null;cov_10701pntgb().s[166]++;this.mnemonic=null;cov_10701pntgb().s[167]++;this.encrypted=true;cov_10701pntgb().s[168]++;this.iv=iv;cov_10701pntgb().s[169]++;this.ciphertext=data;cov_10701pntgb().s[170]++;if(!clean){cov_10701pntgb().b[31][0]++;cov_10701pntgb().s[171]++;cleanse(key);cov_10701pntgb().s[172]++;return null;}else{cov_10701pntgb().b[31][1]++;}cov_10701pntgb().s[173]++;return key;}/**
   * Calculate key serialization size.
   * @returns {Number}
   */keySize(){cov_10701pntgb().f[18]++;let size=(cov_10701pntgb().s[174]++,0);cov_10701pntgb().s[175]++;size+=64;cov_10701pntgb().s[176]++;size+=1;cov_10701pntgb().s[177]++;if(this.mnemonic){cov_10701pntgb().b[32][0]++;cov_10701pntgb().s[178]++;size+=this.mnemonic.getSize();}else{cov_10701pntgb().b[32][1]++;}cov_10701pntgb().s[179]++;return size;}/**
   * Serialize key and menmonic to a single buffer.
   * @returns {Buffer}
   */writeKey(){cov_10701pntgb().f[19]++;const bw=(cov_10701pntgb().s[180]++,bio.write(this.keySize()));cov_10701pntgb().s[181]++;bw.writeBytes(this.key.chainCode);cov_10701pntgb().s[182]++;bw.writeBytes(this.key.privateKey);cov_10701pntgb().s[183]++;if(this.mnemonic){cov_10701pntgb().b[33][0]++;cov_10701pntgb().s[184]++;bw.writeU8(1);cov_10701pntgb().s[185]++;this.mnemonic.toWriter(bw);}else{cov_10701pntgb().b[33][1]++;cov_10701pntgb().s[186]++;bw.writeU8(0);}cov_10701pntgb().s[187]++;return bw.render();}/**
   * Inject properties from serialized key.
   * @param {Buffer} data
   */readKey(data){cov_10701pntgb().f[20]++;const br=(cov_10701pntgb().s[188]++,bio.read(data));cov_10701pntgb().s[189]++;this.key=new HDPrivateKey();cov_10701pntgb().s[190]++;if(isLegacy(data)){cov_10701pntgb().b[34][0]++;cov_10701pntgb().s[191]++;br.seek(13);cov_10701pntgb().s[192]++;this.key.chainCode=br.readBytes(32);cov_10701pntgb().s[193]++;assert(br.readU8()===0);cov_10701pntgb().s[194]++;this.key.privateKey=br.readBytes(32);}else{cov_10701pntgb().b[34][1]++;cov_10701pntgb().s[195]++;this.key.chainCode=br.readBytes(32);cov_10701pntgb().s[196]++;this.key.privateKey=br.readBytes(32);}cov_10701pntgb().s[197]++;this.key.publicKey=secp256k1.publicKeyCreate(this.key.privateKey,true);cov_10701pntgb().s[198]++;if(br.readU8()===1){cov_10701pntgb().b[35][0]++;cov_10701pntgb().s[199]++;this.mnemonic=Mnemonic.fromReader(br);}else{cov_10701pntgb().b[35][1]++;}cov_10701pntgb().s[200]++;return this;}/**
   * Calculate serialization size.
   * @returns {Number}
   */getSize(){cov_10701pntgb().f[21]++;let size=(cov_10701pntgb().s[201]++,0);cov_10701pntgb().s[202]++;if(this.encrypted){cov_10701pntgb().b[36][0]++;cov_10701pntgb().s[203]++;size+=1;cov_10701pntgb().s[204]++;size+=encoding.sizeVarBytes(this.iv);cov_10701pntgb().s[205]++;size+=encoding.sizeVarBytes(this.ciphertext);cov_10701pntgb().s[206]++;size+=13;cov_10701pntgb().s[207]++;return size;}else{cov_10701pntgb().b[36][1]++;}cov_10701pntgb().s[208]++;size+=1;cov_10701pntgb().s[209]++;size+=this.keySize();cov_10701pntgb().s[210]++;return size;}/**
   * Serialize the key in the form of:
   * `[enc-flag][iv?][ciphertext?][extended-key?]`
   * @returns {Buffer}
   */toWriter(bw){cov_10701pntgb().f[22]++;cov_10701pntgb().s[211]++;if(this.encrypted){cov_10701pntgb().b[37][0]++;cov_10701pntgb().s[212]++;bw.writeU8(1);cov_10701pntgb().s[213]++;bw.writeVarBytes(this.iv);cov_10701pntgb().s[214]++;bw.writeVarBytes(this.ciphertext);cov_10701pntgb().s[215]++;bw.writeU8(this.alg);cov_10701pntgb().s[216]++;bw.writeU32(this.n);cov_10701pntgb().s[217]++;bw.writeU32(this.r);cov_10701pntgb().s[218]++;bw.writeU32(this.p);cov_10701pntgb().s[219]++;return bw;}else{cov_10701pntgb().b[37][1]++;}cov_10701pntgb().s[220]++;bw.writeU8(0);cov_10701pntgb().s[221]++;bw.writeBytes(this.key.chainCode);cov_10701pntgb().s[222]++;bw.writeBytes(this.key.privateKey);cov_10701pntgb().s[223]++;if(this.mnemonic){cov_10701pntgb().b[38][0]++;cov_10701pntgb().s[224]++;bw.writeU8(1);cov_10701pntgb().s[225]++;this.mnemonic.toWriter(bw);}else{cov_10701pntgb().b[38][1]++;cov_10701pntgb().s[226]++;bw.writeU8(0);}cov_10701pntgb().s[227]++;return bw;}/**
   * Serialize the key in the form of:
   * `[enc-flag][iv?][ciphertext?][extended-key?]`
   * @returns {Buffer}
   */toRaw(){cov_10701pntgb().f[23]++;const size=(cov_10701pntgb().s[228]++,this.getSize());cov_10701pntgb().s[229]++;return this.toWriter(bio.write(size)).render();}/**
   * Inject properties from serialized data.
   * @private
   * @param {Buffer} raw
   */fromReader(br){cov_10701pntgb().f[24]++;cov_10701pntgb().s[230]++;this.encrypted=br.readU8()===1;cov_10701pntgb().s[231]++;if(this.encrypted){cov_10701pntgb().b[39][0]++;cov_10701pntgb().s[232]++;this.iv=br.readVarBytes();cov_10701pntgb().s[233]++;this.ciphertext=br.readVarBytes();cov_10701pntgb().s[234]++;this.alg=br.readU8();cov_10701pntgb().s[235]++;assert(this.alg<MasterKey.algByVal.length);cov_10701pntgb().s[236]++;this.n=br.readU32();cov_10701pntgb().s[237]++;this.r=br.readU32();cov_10701pntgb().s[238]++;this.p=br.readU32();cov_10701pntgb().s[239]++;return this;}else{cov_10701pntgb().b[39][1]++;}cov_10701pntgb().s[240]++;this.key=new HDPrivateKey();cov_10701pntgb().s[241]++;this.key.chainCode=br.readBytes(32);cov_10701pntgb().s[242]++;this.key.privateKey=br.readBytes(32);cov_10701pntgb().s[243]++;this.key.publicKey=secp256k1.publicKeyCreate(this.key.privateKey,true);cov_10701pntgb().s[244]++;if(br.readU8()===1){cov_10701pntgb().b[40][0]++;cov_10701pntgb().s[245]++;this.mnemonic=Mnemonic.fromReader(br);}else{cov_10701pntgb().b[40][1]++;}cov_10701pntgb().s[246]++;return this;}/**
   * Instantiate master key from serialized data.
   * @returns {MasterKey}
   */static fromReader(br){cov_10701pntgb().f[25]++;cov_10701pntgb().s[247]++;return new this().fromReader(br);}/**
   * Inject properties from serialized data.
   * @private
   * @param {Buffer} raw
   */fromRaw(raw){cov_10701pntgb().f[26]++;cov_10701pntgb().s[248]++;return this.fromReader(bio.read(raw));}/**
   * Instantiate master key from serialized data.
   * @returns {MasterKey}
   */static fromRaw(raw){cov_10701pntgb().f[27]++;cov_10701pntgb().s[249]++;return new this().fromRaw(raw);}/**
   * Inject properties from an HDPrivateKey.
   * @private
   * @param {HDPrivateKey} key
   * @param {Mnemonic?} mnemonic
   */fromKey(key,mnemonic){cov_10701pntgb().f[28]++;cov_10701pntgb().s[250]++;this.encrypted=false;cov_10701pntgb().s[251]++;this.iv=null;cov_10701pntgb().s[252]++;this.ciphertext=null;cov_10701pntgb().s[253]++;this.key=key;cov_10701pntgb().s[254]++;this.mnemonic=(cov_10701pntgb().b[41][0]++,mnemonic)||(cov_10701pntgb().b[41][1]++,null);cov_10701pntgb().s[255]++;return this;}/**
   * Instantiate master key from an HDPrivateKey.
   * @param {HDPrivateKey} key
   * @param {Mnemonic?} mnemonic
   * @returns {MasterKey}
   */static fromKey(key,mnemonic){cov_10701pntgb().f[29]++;cov_10701pntgb().s[256]++;return new this().fromKey(key,mnemonic);}/**
   * Convert master key to a jsonifiable object.
   * @param {Network?} network
   * @param {Boolean?} unsafe - Whether to include
   * the key data in the JSON.
   * @returns {Object}
   */toJSON(network,unsafe){cov_10701pntgb().f[30]++;cov_10701pntgb().s[257]++;if(this.encrypted){cov_10701pntgb().b[42][0]++;cov_10701pntgb().s[258]++;return{encrypted:true,until:this.until,iv:this.iv.toString('hex'),ciphertext:unsafe?(cov_10701pntgb().b[43][0]++,this.ciphertext.toString('hex')):(cov_10701pntgb().b[43][1]++,undefined),algorithm:MasterKey.algByVal[this.alg].toLowerCase(),n:this.n,r:this.r,p:this.p};}else{cov_10701pntgb().b[42][1]++;}cov_10701pntgb().s[259]++;return{encrypted:false,key:unsafe?(cov_10701pntgb().b[44][0]++,this.key.toJSON(network)):(cov_10701pntgb().b[44][1]++,undefined),mnemonic:(cov_10701pntgb().b[46][0]++,unsafe)&&(cov_10701pntgb().b[46][1]++,this.mnemonic)?(cov_10701pntgb().b[45][0]++,this.mnemonic.toJSON()):(cov_10701pntgb().b[45][1]++,undefined)};}/**
   * Inspect the key.
   * @returns {Object}
   */[inspectSymbol](){cov_10701pntgb().f[31]++;const json=(cov_10701pntgb().s[260]++,this.toJSON(null,true));cov_10701pntgb().s[261]++;if(this.key){cov_10701pntgb().b[47][0]++;cov_10701pntgb().s[262]++;json.key=this.key.toJSON();}else{cov_10701pntgb().b[47][1]++;}cov_10701pntgb().s[263]++;if(this.mnemonic){cov_10701pntgb().b[48][0]++;cov_10701pntgb().s[264]++;json.mnemonic=this.mnemonic.toJSON();}else{cov_10701pntgb().b[48][1]++;}cov_10701pntgb().s[265]++;return json;}/**
   * Test whether an object is a MasterKey.
   * @param {Object} obj
   * @returns {Boolean}
   */static isMasterKey(obj){cov_10701pntgb().f[32]++;cov_10701pntgb().s[266]++;return obj instanceof MasterKey;}}/**
 * Key derivation salt.
 * @const {Buffer}
 * @default
 */cov_10701pntgb().s[267]++;MasterKey.SALT=Buffer.from('bcoin','ascii');/**
 * Key derivation algorithms.
 * @enum {Number}
 * @default
 */cov_10701pntgb().s[268]++;MasterKey.alg={PBKDF2:0,SCRYPT:1};/**
 * Key derivation algorithms by value.
 * @enum {String}
 * @default
 */cov_10701pntgb().s[269]++;MasterKey.algByVal=['PBKDF2','SCRYPT'];/*
 * Helpers
 */function isLegacy(data){cov_10701pntgb().f[33]++;cov_10701pntgb().s[270]++;if(data.length<82){cov_10701pntgb().b[49][0]++;cov_10701pntgb().s[271]++;return false;}else{cov_10701pntgb().b[49][1]++;}const key=(cov_10701pntgb().s[272]++,data.slice(0,78));const chk=(cov_10701pntgb().s[273]++,data.readUInt32LE(78,true));const hash=(cov_10701pntgb().s[274]++,hash256.digest(key));cov_10701pntgb().s[275]++;return hash.readUInt32LE(0,true)===chk;}/*
 * Expose
 */cov_10701pntgb().s[276]++;module.exports=MasterKey;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hc3RlcmtleS5qcyJdLCJuYW1lcyI6WyJhc3NlcnQiLCJyZXF1aXJlIiwiYmlvIiwiTG9jayIsInJhbmRvbSIsImNsZWFuc2UiLCJhZXMiLCJzaGEyNTYiLCJoYXNoMjU2Iiwic2VjcDI1NmsxIiwicGJrZGYyIiwic2NyeXB0IiwidXRpbCIsIkhEUHJpdmF0ZUtleSIsIk1uZW1vbmljIiwiZW5jb2RpbmciLCJpbnNwZWN0U3ltYm9sIiwiTWFzdGVyS2V5IiwiY29uc3RydWN0b3IiLCJvcHRpb25zIiwiZW5jcnlwdGVkIiwiaXYiLCJjaXBoZXJ0ZXh0Iiwia2V5IiwibW5lbW9uaWMiLCJhbGciLCJQQktERjIiLCJuIiwiciIsInAiLCJhZXNLZXkiLCJ0aW1lciIsInVudGlsIiwibG9ja2VyIiwiZnJvbU9wdGlvbnMiLCJCdWZmZXIiLCJpc0J1ZmZlciIsImlzSERQcml2YXRlS2V5IiwidG9VcHBlckNhc2UiLCJhbGdCeVZhbCIsInJvdW5kcyIsInVubG9jayIsInBhc3NwaHJhc2UiLCJ0aW1lb3V0IiwiX3VubG9jayIsImxvY2siLCJzdGFydCIsIkVycm9yIiwiZGVyaXZlIiwiZGF0YSIsImRlY2lwaGVyIiwicmVhZEtleSIsInN0b3AiLCJub3ciLCJzZXRUaW1lb3V0IiwiY2xlYXJUaW1lb3V0IiwicGFzc3dkIiwic2FsdCIsIlNBTFQiLCJmcm9tIiwiZGVyaXZlQXN5bmMiLCJTQ1JZUFQiLCJlbmNpcGhlciIsInNsaWNlIiwiX2xvY2siLCJkZXN0cm95IiwiZGVjcnlwdCIsImNsZWFuIiwiX2RlY3J5cHQiLCJlbmNyeXB0IiwiX2VuY3J5cHQiLCJyYXciLCJ3cml0ZUtleSIsInJhbmRvbUJ5dGVzIiwia2V5U2l6ZSIsInNpemUiLCJnZXRTaXplIiwiYnciLCJ3cml0ZSIsIndyaXRlQnl0ZXMiLCJjaGFpbkNvZGUiLCJwcml2YXRlS2V5Iiwid3JpdGVVOCIsInRvV3JpdGVyIiwicmVuZGVyIiwiYnIiLCJyZWFkIiwiaXNMZWdhY3kiLCJzZWVrIiwicmVhZEJ5dGVzIiwicmVhZFU4IiwicHVibGljS2V5IiwicHVibGljS2V5Q3JlYXRlIiwiZnJvbVJlYWRlciIsInNpemVWYXJCeXRlcyIsIndyaXRlVmFyQnl0ZXMiLCJ3cml0ZVUzMiIsInRvUmF3IiwicmVhZFZhckJ5dGVzIiwibGVuZ3RoIiwicmVhZFUzMiIsImZyb21SYXciLCJmcm9tS2V5IiwidG9KU09OIiwibmV0d29yayIsInVuc2FmZSIsInRvU3RyaW5nIiwidW5kZWZpbmVkIiwiYWxnb3JpdGhtIiwidG9Mb3dlckNhc2UiLCJqc29uIiwiaXNNYXN0ZXJLZXkiLCJvYmoiLCJjaGsiLCJyZWFkVUludDMyTEUiLCJoYXNoIiwiZGlnZXN0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUVBLGEsdzlqQ0FTWTsyRkFQWixLQUFNQSxDQUFBQSxNQUFNLDBCQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFWLENBQVosQ0FDQSxLQUFNQyxDQUFBQSxHQUFHLDBCQUFHRCxPQUFPLENBQUMsT0FBRCxDQUFWLENBQVQsQ0FDQSxLQUFNLENBQUNFLElBQUQsMkJBQVNGLE9BQU8sQ0FBQyxRQUFELENBQWhCLENBQU4sQ0FDQSxLQUFNRyxDQUFBQSxNQUFNLDBCQUFHSCxPQUFPLENBQUMsb0JBQUQsQ0FBVixDQUFaLENBQ0EsS0FBTUksQ0FBQUEsT0FBTywwQkFBR0osT0FBTyxDQUFDLHFCQUFELENBQVYsQ0FBYixDQUNBLEtBQU1LLENBQUFBLEdBQUcsMEJBQUdMLE9BQU8sQ0FBQyxpQkFBRCxDQUFWLENBQVQsQ0FDQSxLQUFNTSxDQUFBQSxNQUFNLDBCQUFHTixPQUFPLENBQUMsb0JBQUQsQ0FBVixDQUFaLENBQ0EsS0FBTU8sQ0FBQUEsT0FBTywwQkFBR1AsT0FBTyxDQUFDLHFCQUFELENBQVYsQ0FBYixDQUNBLEtBQU1RLENBQUFBLFNBQVMsMEJBQUdSLE9BQU8sQ0FBQyx1QkFBRCxDQUFWLENBQWYsQ0FDQSxLQUFNUyxDQUFBQSxNQUFNLDBCQUFHVCxP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QUEsU0FBdEIsQ0FDRCxDQS9wQmEsQ0FrcUJoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEcsMEJBRUFBLFNBQVMsQ0FBQ3lDLElBQVYsQ0FBaUJ2QixNQUFNLENBQUN3QixJQUFQLENBQVksT0FBWixDQUFxQixPQUFyQixDQUFqQixDQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRywwQkFFQTFDLFNBQVMsQ0FBQ1EsR0FBVixDQUFnQixDQUNkQyxNQUFNLENBQUUsQ0FETSxDQUVkbUMsTUFBTSxDQUFFLENBRk0sQ0FBaEIsQ0FLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEcsMEJBRUE1QyxTQUFTLENBQUNzQixRQUFWLENBQXFCLENBQ25CLFFBRG1CLENBRW5CLFFBRm1CLENBQXJCLENBS0E7QUFDQTtBQUNBLEdBRUEsUUFBU2dELENBQUFBLFFBQVQsQ0FBa0J0QyxJQUFsQixDQUF3QixvREFDdEIsR0FBSUEsSUFBSSxDQUFDa0QsTUFBTCxDQUFjLEVBQWxCLENBQ0UsNkRBQU8sTUFBUCxDQUFhLENBRGYsa0NBR0EsS0FBTTVFLENBQUFBLEdBQUcsNEJBQUcwQixJQUFJLENBQUNjLEtBQUwsQ0FBVyxDQUFYLENBQWMsRUFBZCxDQUFILENBQVQsQ0FDQSxLQUFNa0QsQ0FBQUEsR0FBRyw0QkFBR2hFLElBQUksQ0FBQ2lFLFlBQUwsQ0FBa0IsRUFBbEIsQ0FBc0IsSUFBdEIsQ0FBSCxDQUFULENBRUEsS0FBTUMsQ0FBQUEsSUFBSSw0QkFBRzNHLE9BQU8sQ0FBQzRHLE1BQVIsQ0FBZTdGLEdBQWYsQ0FBSCxDQUFWLENBUHNCLDBCQVN0QixNQUFPNEYsQ0FBQUEsSUFBSSxDQUFDRCxZQUFMLENBQWtCLENBQWxCLENBQXFCLElBQXJCLElBQStCRCxHQUF0QyxDQUNELENBRUQ7QUFDQTtBQUNBLEcsMEJBRUFJLE1BQU0sQ0FBQ0MsT0FBUCxDQUFpQnJHLFNBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiLyohXHJcbiAqIG1hc3RlcmtleS5qcyAtIG1hc3RlciBiaXAzMiBrZXkgb2JqZWN0IGZvciBiY29pblxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQtMjAxNywgQ2hyaXN0b3BoZXIgSmVmZnJleSAoTUlUIExpY2Vuc2UpLlxyXG4gKiBodHRwczovL2dpdGh1Yi5jb20vYmNvaW4tb3JnL2Jjb2luXHJcbiAqL1xyXG5cclxuJ3VzZSBzdHJpY3QnO1xyXG5cclxuY29uc3QgYXNzZXJ0ID0gcmVxdWlyZSgnYnNlcnQnKTtcclxuY29uc3QgYmlvID0gcmVxdWlyZSgnYnVmaW8nKTtcclxuY29uc3Qge0xvY2t9ID0gcmVxdWlyZSgnYm11dGV4Jyk7XHJcbmNvbnN0IHJhbmRvbSA9IHJlcXVpcmUoJ2JjcnlwdG8vbGliL3JhbmRvbScpO1xyXG5jb25zdCBjbGVhbnNlID0gcmVxdWlyZSgnYmNyeXB0by9saWIvY2xlYW5zZScpO1xyXG5jb25zdCBhZXMgPSByZXF1aXJlKCdiY3J5cHRvL2xpYi9hZXMnKTtcclxuY29uc3Qgc2hhMjU2ID0gcmVxdWlyZSgnYmNyeXB0by9saWIvc2hhMjU2Jyk7XHJcbmNvbnN0IGhhc2gyNTYgPSByZXF1aXJlKCdiY3J5cHRvL2xpYi9oYXNoMjU2Jyk7XHJcbmNvbnN0IHNlY3AyNTZrMSA9IHJlcXVpcmUoJ2JjcnlwdG8vbGliL3NlY3AyNTZrMScpO1xyXG5jb25zdCBwYmtkZjIgPSByZXF1aXJlKCdiY3J5cHRvL2xpYi9wYmtkZjInKTtcclxuY29uc3Qgc2NyeXB0ID0gcmVxdWlyZSgnYmNyeXB0by9saWIvc2NyeXB0Jyk7XHJcbmNvbnN0IHV0aWwgPSByZXF1aXJlKCcuLi91dGlscy91dGlsJyk7XHJcbmNvbnN0IEhEUHJpdmF0ZUtleSA9IHJlcXVpcmUoJy4uL2hkL3ByaXZhdGUnKTtcclxuY29uc3QgTW5lbW9uaWMgPSByZXF1aXJlKCcuLi9oZC9tbmVtb25pYycpO1xyXG5jb25zdCB7ZW5jb2Rpbmd9ID0gYmlvO1xyXG5jb25zdCB7aW5zcGVjdFN5bWJvbH0gPSByZXF1aXJlKCcuLi91dGlscycpO1xyXG5cclxuLyoqXHJcbiAqIE1hc3RlciBLZXlcclxuICogTWFzdGVyIEJJUDMyIGtleSB3aGljaCBjYW4gZXhpc3RcclxuICogaW4gYSB0aW1lZCBvdXQgZW5jcnlwdGVkIHN0YXRlLlxyXG4gKiBAYWxpYXMgbW9kdWxlOndhbGxldC5NYXN0ZXJLZXlcclxuICovXHJcblxyXG5jbGFzcyBNYXN0ZXJLZXkge1xyXG4gIC8qKlxyXG4gICAqIENyZWF0ZSBhIG1hc3RlciBrZXkuXHJcbiAgICogQGNvbnN0cnVjdG9yXHJcbiAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnNcclxuICAgKi9cclxuXHJcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xyXG4gICAgdGhpcy5lbmNyeXB0ZWQgPSBmYWxzZTtcclxuICAgIHRoaXMuaXYgPSBudWxsO1xyXG4gICAgdGhpcy5jaXBoZXJ0ZXh0ID0gbnVsbDtcclxuICAgIHRoaXMua2V5ID0gbnVsbDtcclxuICAgIHRoaXMubW5lbW9uaWMgPSBudWxsO1xyXG5cclxuICAgIHRoaXMuYWxnID0gTWFzdGVyS2V5LmFsZy5QQktERjI7XHJcbiAgICB0aGlzLm4gPSA1MDAwMDtcclxuICAgIHRoaXMuciA9IDA7XHJcbiAgICB0aGlzLnAgPSAwO1xyXG5cclxuICAgIHRoaXMuYWVzS2V5ID0gbnVsbDtcclxuICAgIHRoaXMudGltZXIgPSBudWxsO1xyXG4gICAgdGhpcy51bnRpbCA9IDA7XHJcbiAgICB0aGlzLmxvY2tlciA9IG5ldyBMb2NrKCk7XHJcblxyXG4gICAgaWYgKG9wdGlvbnMpXHJcbiAgICAgIHRoaXMuZnJvbU9wdGlvbnMob3B0aW9ucyk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBJbmplY3QgcHJvcGVydGllcyBmcm9tIG9wdGlvbnMgb2JqZWN0LlxyXG4gICAqIEBwcml2YXRlXHJcbiAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnNcclxuICAgKi9cclxuXHJcbiAgZnJvbU9wdGlvbnMob3B0aW9ucykge1xyXG4gICAgYXNzZXJ0KG9wdGlvbnMpO1xyXG5cclxuICAgIGlmIChvcHRpb25zLmVuY3J5cHRlZCAhPSBudWxsKSB7XHJcbiAgICAgIGFzc2VydCh0eXBlb2Ygb3B0aW9ucy5lbmNyeXB0ZWQgPT09ICdib29sZWFuJyk7XHJcbiAgICAgIHRoaXMuZW5jcnlwdGVkID0gb3B0aW9ucy5lbmNyeXB0ZWQ7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKG9wdGlvbnMuaXYpIHtcclxuICAgICAgYXNzZXJ0KEJ1ZmZlci5pc0J1ZmZlcihvcHRpb25zLml2KSk7XHJcbiAgICAgIHRoaXMuaXYgPSBvcHRpb25zLml2O1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChvcHRpb25zLmNpcGhlcnRleHQpIHtcclxuICAgICAgYXNzZXJ0KEJ1ZmZlci5pc0J1ZmZlcihvcHRpb25zLmNpcGhlcnRleHQpKTtcclxuICAgICAgdGhpcy5jaXBoZXJ0ZXh0ID0gb3B0aW9ucy5jaXBoZXJ0ZXh0O1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChvcHRpb25zLmtleSkge1xyXG4gICAgICBhc3NlcnQoSERQcml2YXRlS2V5LmlzSERQcml2YXRlS2V5KG9wdGlvbnMua2V5KSk7XHJcbiAgICAgIHRoaXMua2V5ID0gb3B0aW9ucy5rZXk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKG9wdGlvbnMubW5lbW9uaWMpIHtcclxuICAgICAgYXNzZXJ0KG9wdGlvbnMubW5lbW9uaWMgaW5zdGFuY2VvZiBNbmVtb25pYyk7XHJcbiAgICAgIHRoaXMubW5lbW9uaWMgPSBvcHRpb25zLm1uZW1vbmljO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChvcHRpb25zLmFsZyAhPSBudWxsKSB7XHJcbiAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5hbGcgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgICAgdGhpcy5hbGcgPSBNYXN0ZXJLZXkuYWxnW29wdGlvbnMuYWxnLnRvVXBwZXJDYXNlKCldO1xyXG4gICAgICAgIGFzc2VydCh0aGlzLmFsZyAhPSBudWxsLCAnVW5rbm93biBhbGdvcml0aG0uJyk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgYXNzZXJ0KHR5cGVvZiBvcHRpb25zLmFsZyA9PT0gJ251bWJlcicpO1xyXG4gICAgICAgIGFzc2VydChNYXN0ZXJLZXkuYWxnQnlWYWxbb3B0aW9ucy5hbGddKTtcclxuICAgICAgICB0aGlzLmFsZyA9IG9wdGlvbnMuYWxnO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKG9wdGlvbnMucm91bmRzICE9IG51bGwpIHtcclxuICAgICAgYXNzZXJ0KChvcHRpb25zLnJvdW5kcyA+Pj4gMCkgPT09IG9wdGlvbnMucm91bmRzKTtcclxuICAgICAgdGhpcy5yb3VuZHMgPSBvcHRpb25zLnJvdW5kcztcclxuICAgIH1cclxuXHJcbiAgICBpZiAob3B0aW9ucy5uICE9IG51bGwpIHtcclxuICAgICAgYXNzZXJ0KChvcHRpb25zLm4gPj4+IDApID09PSBvcHRpb25zLm4pO1xyXG4gICAgICB0aGlzLm4gPSBvcHRpb25zLm47XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKG9wdGlvbnMuciAhPSBudWxsKSB7XHJcbiAgICAgIGFzc2VydCgob3B0aW9ucy5yID4+PiAwKSA9PT0gb3B0aW9ucy5yKTtcclxuICAgICAgdGhpcy5yID0gb3B0aW9ucy5yO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChvcHRpb25zLnAgIT0gbnVsbCkge1xyXG4gICAgICBhc3NlcnQoKG9wdGlvbnMucCA+Pj4gMCkgPT09IG9wdGlvbnMucCk7XHJcbiAgICAgIHRoaXMucCA9IG9wdGlvbnMucDtcclxuICAgIH1cclxuXHJcbiAgICBhc3NlcnQodGhpcy5lbmNyeXB0ZWQgPyAhdGhpcy5rZXkgOiB0aGlzLmtleSk7XHJcblxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBJbnN0YW50aWF0ZSBtYXN0ZXIga2V5IGZyb20gb3B0aW9ucy5cclxuICAgKiBAcmV0dXJucyB7TWFzdGVyS2V5fVxyXG4gICAqL1xyXG5cclxuICBzdGF0aWMgZnJvbU9wdGlvbnMob3B0aW9ucykge1xyXG4gICAgcmV0dXJuIG5ldyB0aGlzKCkuZnJvbU9wdGlvbnMob3B0aW9ucyk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBEZWNyeXB0IHRoZSBrZXkgYW5kIHNldCBhIHRpbWVvdXQgdG8gZGVzdHJveSBkZWNyeXB0ZWQgZGF0YS5cclxuICAgKiBAcGFyYW0ge0J1ZmZlcnxTdHJpbmd9IHBhc3NwaHJhc2UgLSBaZXJvIHRoaXMgeW91cnNlbGYuXHJcbiAgICogQHBhcmFtIHtOdW1iZXJ9IFt0aW1lb3V0PTYwMDAwXSB0aW1lb3V0IGluIG1zLlxyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlfSAtIFJldHVybnMge0BsaW5rIEhEUHJpdmF0ZUtleX0uXHJcbiAgICovXHJcblxyXG4gIGFzeW5jIHVubG9jayhwYXNzcGhyYXNlLCB0aW1lb3V0KSB7XHJcbiAgICBjb25zdCBfdW5sb2NrID0gYXdhaXQgdGhpcy5sb2NrZXIubG9jaygpO1xyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuX3VubG9jayhwYXNzcGhyYXNlLCB0aW1lb3V0KTtcclxuICAgIH0gZmluYWxseSB7XHJcbiAgICAgIF91bmxvY2soKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIERlY3J5cHQgdGhlIGtleSB3aXRob3V0IGEgbG9jay5cclxuICAgKiBAcHJpdmF0ZVxyXG4gICAqIEBwYXJhbSB7QnVmZmVyfFN0cmluZ30gcGFzc3BocmFzZSAtIFplcm8gdGhpcyB5b3Vyc2VsZi5cclxuICAgKiBAcGFyYW0ge051bWJlcn0gW3RpbWVvdXQ9NjAwMDBdIHRpbWVvdXQgaW4gbXMuXHJcbiAgICogQHJldHVybnMge1Byb21pc2V9IC0gUmV0dXJucyB7QGxpbmsgSERQcml2YXRlS2V5fS5cclxuICAgKi9cclxuXHJcbiAgYXN5bmMgX3VubG9jayhwYXNzcGhyYXNlLCB0aW1lb3V0KSB7XHJcbiAgICBpZiAodGhpcy5rZXkpIHtcclxuICAgICAgaWYgKHRoaXMuZW5jcnlwdGVkKSB7XHJcbiAgICAgICAgYXNzZXJ0KHRoaXMudGltZXIgIT0gbnVsbCk7XHJcbiAgICAgICAgdGhpcy5zdGFydCh0aW1lb3V0KTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gdGhpcy5rZXk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKCFwYXNzcGhyYXNlKVxyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIHBhc3NwaHJhc2UuJyk7XHJcblxyXG4gICAgYXNzZXJ0KHRoaXMuZW5jcnlwdGVkKTtcclxuXHJcbiAgICBjb25zdCBrZXkgPSBhd2FpdCB0aGlzLmRlcml2ZShwYXNzcGhyYXNlKTtcclxuICAgIGNvbnN0IGRhdGEgPSBhZXMuZGVjaXBoZXIodGhpcy5jaXBoZXJ0ZXh0LCBrZXksIHRoaXMuaXYpO1xyXG5cclxuICAgIHRoaXMucmVhZEtleShkYXRhKTtcclxuXHJcbiAgICB0aGlzLnN0YXJ0KHRpbWVvdXQpO1xyXG5cclxuICAgIHRoaXMuYWVzS2V5ID0ga2V5O1xyXG5cclxuICAgIHJldHVybiB0aGlzLmtleTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFN0YXJ0IHRoZSBkZXN0cm95IHRpbWVyLlxyXG4gICAqIEBwcml2YXRlXHJcbiAgICogQHBhcmFtIHtOdW1iZXJ9IFt0aW1lb3V0PTYwXSB0aW1lb3V0IGluIHNlY29uZHMuXHJcbiAgICovXHJcblxyXG4gIHN0YXJ0KHRpbWVvdXQpIHtcclxuICAgIGlmICghdGltZW91dClcclxuICAgICAgdGltZW91dCA9IDYwO1xyXG5cclxuICAgIHRoaXMuc3RvcCgpO1xyXG5cclxuICAgIGlmICh0aW1lb3V0ID09PSAtMSlcclxuICAgICAgcmV0dXJuO1xyXG5cclxuICAgIGFzc2VydCgodGltZW91dCA+Pj4gMCkgPT09IHRpbWVvdXQpO1xyXG5cclxuICAgIHRoaXMudW50aWwgPSB1dGlsLm5vdygpICsgdGltZW91dDtcclxuICAgIHRoaXMudGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHRoaXMubG9jaygpLCB0aW1lb3V0ICogMTAwMCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBTdG9wIHRoZSBkZXN0cm95IHRpbWVyLlxyXG4gICAqIEBwcml2YXRlXHJcbiAgICovXHJcblxyXG4gIHN0b3AoKSB7XHJcbiAgICBpZiAodGhpcy50aW1lciAhPSBudWxsKSB7XHJcbiAgICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVyKTtcclxuICAgICAgdGhpcy50aW1lciA9IG51bGw7XHJcbiAgICAgIHRoaXMudW50aWwgPSAwO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRGVyaXZlIGFuIGFlcyBrZXkgYmFzZWQgb24gcGFyYW1zLlxyXG4gICAqIEBwYXJhbSB7U3RyaW5nfEJ1ZmZlcn0gcGFzc3BocmFzZVxyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlfVxyXG4gICAqL1xyXG5cclxuICBhc3luYyBkZXJpdmUocGFzc3dkKSB7XHJcbiAgICBjb25zdCBzYWx0ID0gTWFzdGVyS2V5LlNBTFQ7XHJcbiAgICBjb25zdCBuID0gdGhpcy5uO1xyXG4gICAgY29uc3QgciA9IHRoaXMucjtcclxuICAgIGNvbnN0IHAgPSB0aGlzLnA7XHJcblxyXG4gICAgaWYgKHR5cGVvZiBwYXNzd2QgPT09ICdzdHJpbmcnKVxyXG4gICAgICBwYXNzd2QgPSBCdWZmZXIuZnJvbShwYXNzd2QsICd1dGY4Jyk7XHJcblxyXG4gICAgc3dpdGNoICh0aGlzLmFsZykge1xyXG4gICAgICBjYXNlIE1hc3RlcktleS5hbGcuUEJLREYyOlxyXG4gICAgICAgIHJldHVybiBwYmtkZjIuZGVyaXZlQXN5bmMoc2hhMjU2LCBwYXNzd2QsIHNhbHQsIG4sIDMyKTtcclxuICAgICAgY2FzZSBNYXN0ZXJLZXkuYWxnLlNDUllQVDpcclxuICAgICAgICByZXR1cm4gc2NyeXB0LmRlcml2ZUFzeW5jKHBhc3N3ZCwgc2FsdCwgbiwgciwgcCwgMzIpO1xyXG4gICAgICBkZWZhdWx0OlxyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBhbGdvcml0aG06ICR7dGhpcy5hbGd9LmApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRW5jcnlwdCBkYXRhIHdpdGggaW4tbWVtb3J5IGFlcyBrZXkuXHJcbiAgICogQHBhcmFtIHtCdWZmZXJ9IGRhdGFcclxuICAgKiBAcGFyYW0ge0J1ZmZlcn0gaXZcclxuICAgKiBAcmV0dXJucyB7QnVmZmVyfVxyXG4gICAqL1xyXG5cclxuICBlbmNpcGhlcihkYXRhLCBpdikge1xyXG4gICAgaWYgKCF0aGlzLmFlc0tleSlcclxuICAgICAgcmV0dXJuIG51bGw7XHJcblxyXG4gICAgcmV0dXJuIGFlcy5lbmNpcGhlcihkYXRhLCB0aGlzLmFlc0tleSwgaXYuc2xpY2UoMCwgMTYpKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIERlY3J5cHQgZGF0YSB3aXRoIGluLW1lbW9yeSBhZXMga2V5LlxyXG4gICAqIEBwYXJhbSB7QnVmZmVyfSBkYXRhXHJcbiAgICogQHBhcmFtIHtCdWZmZXJ9IGl2XHJcbiAgICogQHJldHVybnMge0J1ZmZlcn1cclxuICAgKi9cclxuXHJcbiAgZGVjaXBoZXIoZGF0YSwgaXYpIHtcclxuICAgIGlmICghdGhpcy5hZXNLZXkpXHJcbiAgICAgIHJldHVybiBudWxsO1xyXG5cclxuICAgIHJldHVybiBhZXMuZGVjaXBoZXIoZGF0YSwgdGhpcy5hZXNLZXksIGl2LnNsaWNlKDAsIDE2KSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBEZXN0cm95IHRoZSBrZXkgYnkgemVyb2luZyB0aGVcclxuICAgKiBwcml2YXRlS2V5IGFuZCBjaGFpbkNvZGUuIFN0b3BcclxuICAgKiB0aGUgdGltZXIgaWYgdGhlcmUgaXMgb25lLlxyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlfVxyXG4gICAqL1xyXG5cclxuICBhc3luYyBsb2NrKCkge1xyXG4gICAgY29uc3QgdW5sb2NrID0gYXdhaXQgdGhpcy5sb2NrZXIubG9jaygpO1xyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuX2xvY2soKTtcclxuICAgIH0gZmluYWxseSB7XHJcbiAgICAgIHVubG9jaygpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRGVzdHJveSB0aGUga2V5IGJ5IHplcm9pbmcgdGhlXHJcbiAgICogcHJpdmF0ZUtleSBhbmQgY2hhaW5Db2RlLiBTdG9wXHJcbiAgICogdGhlIHRpbWVyIGlmIHRoZXJlIGlzIG9uZS5cclxuICAgKi9cclxuXHJcbiAgX2xvY2soKSB7XHJcbiAgICBpZiAoIXRoaXMuZW5jcnlwdGVkKSB7XHJcbiAgICAgIGFzc2VydCh0aGlzLnRpbWVyID09IG51bGwpO1xyXG4gICAgICBhc3NlcnQodGhpcy5rZXkpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5zdG9wKCk7XHJcblxyXG4gICAgaWYgKHRoaXMua2V5KSB7XHJcbiAgICAgIHRoaXMua2V5LmRlc3Ryb3kodHJ1ZSk7XHJcbiAgICAgIHRoaXMua2V5ID0gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBpZiAodGhpcy5hZXNLZXkpIHtcclxuICAgICAgY2xlYW5zZSh0aGlzLmFlc0tleSk7XHJcbiAgICAgIHRoaXMuYWVzS2V5ID0gbnVsbDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIERlc3Ryb3kgdGhlIGtleSBwZXJtYW5lbnRseS5cclxuICAgKi9cclxuXHJcbiAgYXN5bmMgZGVzdHJveSgpIHtcclxuICAgIGF3YWl0IHRoaXMubG9jaygpO1xyXG4gICAgdGhpcy5sb2NrZXIuZGVzdHJveSgpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRGVjcnlwdCB0aGUga2V5IHBlcm1hbmVudGx5LlxyXG4gICAqIEBwYXJhbSB7QnVmZmVyfFN0cmluZ30gcGFzc3BocmFzZSAtIFplcm8gdGhpcyB5b3Vyc2VsZi5cclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZX1cclxuICAgKi9cclxuXHJcbiAgYXN5bmMgZGVjcnlwdChwYXNzcGhyYXNlLCBjbGVhbikge1xyXG4gICAgY29uc3QgdW5sb2NrID0gYXdhaXQgdGhpcy5sb2NrZXIubG9jaygpO1xyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuX2RlY3J5cHQocGFzc3BocmFzZSwgY2xlYW4pO1xyXG4gICAgfSBmaW5hbGx5IHtcclxuICAgICAgdW5sb2NrKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBEZWNyeXB0IHRoZSBrZXkgcGVybWFuZW50bHkgd2l0aG91dCBhIGxvY2suXHJcbiAgICogQHByaXZhdGVcclxuICAgKiBAcGFyYW0ge0J1ZmZlcnxTdHJpbmd9IHBhc3NwaHJhc2UgLSBaZXJvIHRoaXMgeW91cnNlbGYuXHJcbiAgICogQHJldHVybnMge1Byb21pc2V9XHJcbiAgICovXHJcblxyXG4gIGFzeW5jIF9kZWNyeXB0KHBhc3NwaHJhc2UsIGNsZWFuKSB7XHJcbiAgICBpZiAoIXRoaXMuZW5jcnlwdGVkKVxyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ01hc3RlciBrZXkgaXMgbm90IGVuY3J5cHRlZC4nKTtcclxuXHJcbiAgICBpZiAoIXBhc3NwaHJhc2UpXHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignTm8gcGFzc3BocmFzZSBwcm92aWRlZC4nKTtcclxuXHJcbiAgICB0aGlzLl9sb2NrKCk7XHJcblxyXG4gICAgY29uc3Qga2V5ID0gYXdhaXQgdGhpcy5kZXJpdmUocGFzc3BocmFzZSk7XHJcbiAgICBjb25zdCBkYXRhID0gYWVzLmRlY2lwaGVyKHRoaXMuY2lwaGVydGV4dCwga2V5LCB0aGlzLml2KTtcclxuXHJcbiAgICB0aGlzLnJlYWRLZXkoZGF0YSk7XHJcbiAgICB0aGlzLmVuY3J5cHRlZCA9IGZhbHNlO1xyXG4gICAgdGhpcy5pdiA9IG51bGw7XHJcbiAgICB0aGlzLmNpcGhlcnRleHQgPSBudWxsO1xyXG5cclxuICAgIGlmICghY2xlYW4pIHtcclxuICAgICAgY2xlYW5zZShrZXkpO1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4ga2V5O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRW5jcnlwdCB0aGUga2V5IHBlcm1hbmVudGx5LlxyXG4gICAqIEBwYXJhbSB7QnVmZmVyfFN0cmluZ30gcGFzc3BocmFzZSAtIFplcm8gdGhpcyB5b3Vyc2VsZi5cclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZX1cclxuICAgKi9cclxuXHJcbiAgYXN5bmMgZW5jcnlwdChwYXNzcGhyYXNlLCBjbGVhbikge1xyXG4gICAgY29uc3QgdW5sb2NrID0gYXdhaXQgdGhpcy5sb2NrZXIubG9jaygpO1xyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuX2VuY3J5cHQocGFzc3BocmFzZSwgY2xlYW4pO1xyXG4gICAgfSBmaW5hbGx5IHtcclxuICAgICAgdW5sb2NrKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBFbmNyeXB0IHRoZSBrZXkgcGVybWFuZW50bHkgd2l0aG91dCBhIGxvY2suXHJcbiAgICogQHByaXZhdGVcclxuICAgKiBAcGFyYW0ge0J1ZmZlcnxTdHJpbmd9IHBhc3NwaHJhc2UgLSBaZXJvIHRoaXMgeW91cnNlbGYuXHJcbiAgICogQHJldHVybnMge1Byb21pc2V9XHJcbiAgICovXHJcblxyXG4gIGFzeW5jIF9lbmNyeXB0KHBhc3NwaHJhc2UsIGNsZWFuKSB7XHJcbiAgICBpZiAodGhpcy5lbmNyeXB0ZWQpXHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignTWFzdGVyIGtleSBpcyBhbHJlYWR5IGVuY3J5cHRlZC4nKTtcclxuXHJcbiAgICBpZiAoIXBhc3NwaHJhc2UpXHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignTm8gcGFzc3BocmFzZSBwcm92aWRlZC4nKTtcclxuXHJcbiAgICBjb25zdCByYXcgPSB0aGlzLndyaXRlS2V5KCk7XHJcbiAgICBjb25zdCBpdiA9IHJhbmRvbS5yYW5kb21CeXRlcygxNik7XHJcblxyXG4gICAgdGhpcy5zdG9wKCk7XHJcblxyXG4gICAgY29uc3Qga2V5ID0gYXdhaXQgdGhpcy5kZXJpdmUocGFzc3BocmFzZSk7XHJcbiAgICBjb25zdCBkYXRhID0gYWVzLmVuY2lwaGVyKHJhdywga2V5LCBpdik7XHJcblxyXG4gICAgdGhpcy5rZXkgPSBudWxsO1xyXG4gICAgdGhpcy5tbmVtb25pYyA9IG51bGw7XHJcbiAgICB0aGlzLmVuY3J5cHRlZCA9IHRydWU7XHJcbiAgICB0aGlzLml2ID0gaXY7XHJcbiAgICB0aGlzLmNpcGhlcnRleHQgPSBkYXRhO1xyXG5cclxuICAgIGlmICghY2xlYW4pIHtcclxuICAgICAgY2xlYW5zZShrZXkpO1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4ga2V5O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ2FsY3VsYXRlIGtleSBzZXJpYWxpemF0aW9uIHNpemUuXHJcbiAgICogQHJldHVybnMge051bWJlcn1cclxuICAgKi9cclxuXHJcbiAga2V5U2l6ZSgpIHtcclxuICAgIGxldCBzaXplID0gMDtcclxuXHJcbiAgICBzaXplICs9IDY0O1xyXG4gICAgc2l6ZSArPSAxO1xyXG5cclxuICAgIGlmICh0aGlzLm1uZW1vbmljKVxyXG4gICAgICBzaXplICs9IHRoaXMubW5lbW9uaWMuZ2V0U2l6ZSgpO1xyXG5cclxuICAgIHJldHVybiBzaXplO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU2VyaWFsaXplIGtleSBhbmQgbWVubW9uaWMgdG8gYSBzaW5nbGUgYnVmZmVyLlxyXG4gICAqIEByZXR1cm5zIHtCdWZmZXJ9XHJcbiAgICovXHJcblxyXG4gIHdyaXRlS2V5KCkge1xyXG4gICAgY29uc3QgYncgPSBiaW8ud3JpdGUodGhpcy5rZXlTaXplKCkpO1xyXG5cclxuICAgIGJ3LndyaXRlQnl0ZXModGhpcy5rZXkuY2hhaW5Db2RlKTtcclxuICAgIGJ3LndyaXRlQnl0ZXModGhpcy5rZXkucHJpdmF0ZUtleSk7XHJcblxyXG4gICAgaWYgKHRoaXMubW5lbW9uaWMpIHtcclxuICAgICAgYncud3JpdGVVOCgxKTtcclxuICAgICAgdGhpcy5tbmVtb25pYy50b1dyaXRlcihidyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBidy53cml0ZVU4KDApO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBidy5yZW5kZXIoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEluamVjdCBwcm9wZXJ0aWVzIGZyb20gc2VyaWFsaXplZCBrZXkuXHJcbiAgICogQHBhcmFtIHtCdWZmZXJ9IGRhdGFcclxuICAgKi9cclxuXHJcbiAgcmVhZEtleShkYXRhKSB7XHJcbiAgICBjb25zdCBiciA9IGJpby5yZWFkKGRhdGEpO1xyXG5cclxuICAgIHRoaXMua2V5ID0gbmV3IEhEUHJpdmF0ZUtleSgpO1xyXG5cclxuICAgIGlmIChpc0xlZ2FjeShkYXRhKSkge1xyXG4gICAgICBici5zZWVrKDEzKTtcclxuICAgICAgdGhpcy5rZXkuY2hhaW5Db2RlID0gYnIucmVhZEJ5dGVzKDMyKTtcclxuICAgICAgYXNzZXJ0KGJyLnJlYWRVOCgpID09PSAwKTtcclxuICAgICAgdGhpcy5rZXkucHJpdmF0ZUtleSA9IGJyLnJlYWRCeXRlcygzMik7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmtleS5jaGFpbkNvZGUgPSBici5yZWFkQnl0ZXMoMzIpO1xyXG4gICAgICB0aGlzLmtleS5wcml2YXRlS2V5ID0gYnIucmVhZEJ5dGVzKDMyKTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmtleS5wdWJsaWNLZXkgPSBzZWNwMjU2azEucHVibGljS2V5Q3JlYXRlKHRoaXMua2V5LnByaXZhdGVLZXksIHRydWUpO1xyXG5cclxuICAgIGlmIChici5yZWFkVTgoKSA9PT0gMSlcclxuICAgICAgdGhpcy5tbmVtb25pYyA9IE1uZW1vbmljLmZyb21SZWFkZXIoYnIpO1xyXG5cclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ2FsY3VsYXRlIHNlcmlhbGl6YXRpb24gc2l6ZS5cclxuICAgKiBAcmV0dXJucyB7TnVtYmVyfVxyXG4gICAqL1xyXG5cclxuICBnZXRTaXplKCkge1xyXG4gICAgbGV0IHNpemUgPSAwO1xyXG5cclxuICAgIGlmICh0aGlzLmVuY3J5cHRlZCkge1xyXG4gICAgICBzaXplICs9IDE7XHJcbiAgICAgIHNpemUgKz0gZW5jb2Rpbmcuc2l6ZVZhckJ5dGVzKHRoaXMuaXYpO1xyXG4gICAgICBzaXplICs9IGVuY29kaW5nLnNpemVWYXJCeXRlcyh0aGlzLmNpcGhlcnRleHQpO1xyXG4gICAgICBzaXplICs9IDEzO1xyXG4gICAgICByZXR1cm4gc2l6ZTtcclxuICAgIH1cclxuXHJcbiAgICBzaXplICs9IDE7XHJcbiAgICBzaXplICs9IHRoaXMua2V5U2l6ZSgpO1xyXG5cclxuICAgIHJldHVybiBzaXplO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU2VyaWFsaXplIHRoZSBrZXkgaW4gdGhlIGZvcm0gb2Y6XHJcbiAgICogYFtlbmMtZmxhZ11baXY/XVtjaXBoZXJ0ZXh0P11bZXh0ZW5kZWQta2V5P11gXHJcbiAgICogQHJldHVybnMge0J1ZmZlcn1cclxuICAgKi9cclxuXHJcbiAgdG9Xcml0ZXIoYncpIHtcclxuICAgIGlmICh0aGlzLmVuY3J5cHRlZCkge1xyXG4gICAgICBidy53cml0ZVU4KDEpO1xyXG4gICAgICBidy53cml0ZVZhckJ5dGVzKHRoaXMuaXYpO1xyXG4gICAgICBidy53cml0ZVZhckJ5dGVzKHRoaXMuY2lwaGVydGV4dCk7XHJcblxyXG4gICAgICBidy53cml0ZVU4KHRoaXMuYWxnKTtcclxuICAgICAgYncud3JpdGVVMzIodGhpcy5uKTtcclxuICAgICAgYncud3JpdGVVMzIodGhpcy5yKTtcclxuICAgICAgYncud3JpdGVVMzIodGhpcy5wKTtcclxuXHJcbiAgICAgIHJldHVybiBidztcclxuICAgIH1cclxuXHJcbiAgICBidy53cml0ZVU4KDApO1xyXG5cclxuICAgIGJ3LndyaXRlQnl0ZXModGhpcy5rZXkuY2hhaW5Db2RlKTtcclxuICAgIGJ3LndyaXRlQnl0ZXModGhpcy5rZXkucHJpdmF0ZUtleSk7XHJcblxyXG4gICAgaWYgKHRoaXMubW5lbW9uaWMpIHtcclxuICAgICAgYncud3JpdGVVOCgxKTtcclxuICAgICAgdGhpcy5tbmVtb25pYy50b1dyaXRlcihidyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBidy53cml0ZVU4KDApO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBidztcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFNlcmlhbGl6ZSB0aGUga2V5IGluIHRoZSBmb3JtIG9mOlxyXG4gICAqIGBbZW5jLWZsYWddW2l2P11bY2lwaGVydGV4dD9dW2V4dGVuZGVkLWtleT9dYFxyXG4gICAqIEByZXR1cm5zIHtCdWZmZXJ9XHJcbiAgICovXHJcblxyXG4gIHRvUmF3KCkge1xyXG4gICAgY29uc3Qgc2l6ZSA9IHRoaXMuZ2V0U2l6ZSgpO1xyXG4gICAgcmV0dXJuIHRoaXMudG9Xcml0ZXIoYmlvLndyaXRlKHNpemUpKS5yZW5kZXIoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEluamVjdCBwcm9wZXJ0aWVzIGZyb20gc2VyaWFsaXplZCBkYXRhLlxyXG4gICAqIEBwcml2YXRlXHJcbiAgICogQHBhcmFtIHtCdWZmZXJ9IHJhd1xyXG4gICAqL1xyXG5cclxuICBmcm9tUmVhZGVyKGJyKSB7XHJcbiAgICB0aGlzLmVuY3J5cHRlZCA9IGJyLnJlYWRVOCgpID09PSAxO1xyXG5cclxuICAgIGlmICh0aGlzLmVuY3J5cHRlZCkge1xyXG4gICAgICB0aGlzLml2ID0gYnIucmVhZFZhckJ5dGVzKCk7XHJcbiAgICAgIHRoaXMuY2lwaGVydGV4dCA9IGJyLnJlYWRWYXJCeXRlcygpO1xyXG5cclxuICAgICAgdGhpcy5hbGcgPSBici5yZWFkVTgoKTtcclxuXHJcbiAgICAgIGFzc2VydCh0aGlzLmFsZyA8IE1hc3RlcktleS5hbGdCeVZhbC5sZW5ndGgpO1xyXG5cclxuICAgICAgdGhpcy5uID0gYnIucmVhZFUzMigpO1xyXG4gICAgICB0aGlzLnIgPSBici5yZWFkVTMyKCk7XHJcbiAgICAgIHRoaXMucCA9IGJyLnJlYWRVMzIoKTtcclxuXHJcbiAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMua2V5ID0gbmV3IEhEUHJpdmF0ZUtleSgpO1xyXG4gICAgdGhpcy5rZXkuY2hhaW5Db2RlID0gYnIucmVhZEJ5dGVzKDMyKTtcclxuICAgIHRoaXMua2V5LnByaXZhdGVLZXkgPSBici5yZWFkQnl0ZXMoMzIpO1xyXG4gICAgdGhpcy5rZXkucHVibGljS2V5ID0gc2VjcDI1NmsxLnB1YmxpY0tleUNyZWF0ZSh0aGlzLmtleS5wcml2YXRlS2V5LCB0cnVlKTtcclxuXHJcbiAgICBpZiAoYnIucmVhZFU4KCkgPT09IDEpXHJcbiAgICAgIHRoaXMubW5lbW9uaWMgPSBNbmVtb25pYy5mcm9tUmVhZGVyKGJyKTtcclxuXHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEluc3RhbnRpYXRlIG1hc3RlciBrZXkgZnJvbSBzZXJpYWxpemVkIGRhdGEuXHJcbiAgICogQHJldHVybnMge01hc3RlcktleX1cclxuICAgKi9cclxuXHJcbiAgc3RhdGljIGZyb21SZWFkZXIoYnIpIHtcclxuICAgIHJldHVybiBuZXcgdGhpcygpLmZyb21SZWFkZXIoYnIpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogSW5qZWN0IHByb3BlcnRpZXMgZnJvbSBzZXJpYWxpemVkIGRhdGEuXHJcbiAgICogQHByaXZhdGVcclxuICAgKiBAcGFyYW0ge0J1ZmZlcn0gcmF3XHJcbiAgICovXHJcblxyXG4gIGZyb21SYXcocmF3KSB7XHJcbiAgICByZXR1cm4gdGhpcy5mcm9tUmVhZGVyKGJpby5yZWFkKHJhdykpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogSW5zdGFudGlhdGUgbWFzdGVyIGtleSBmcm9tIHNlcmlhbGl6ZWQgZGF0YS5cclxuICAgKiBAcmV0dXJucyB7TWFzdGVyS2V5fVxyXG4gICAqL1xyXG5cclxuICBzdGF0aWMgZnJvbVJhdyhyYXcpIHtcclxuICAgIHJldHVybiBuZXcgdGhpcygpLmZyb21SYXcocmF3KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEluamVjdCBwcm9wZXJ0aWVzIGZyb20gYW4gSERQcml2YXRlS2V5LlxyXG4gICAqIEBwcml2YXRlXHJcbiAgICogQHBhcmFtIHtIRFByaXZhdGVLZXl9IGtleVxyXG4gICAqIEBwYXJhbSB7TW5lbW9uaWM/fSBtbmVtb25pY1xyXG4gICAqL1xyXG5cclxuICBmcm9tS2V5KGtleSwgbW5lbW9uaWMpIHtcclxuICAgIHRoaXMuZW5jcnlwdGVkID0gZmFsc2U7XHJcbiAgICB0aGlzLml2ID0gbnVsbDtcclxuICAgIHRoaXMuY2lwaGVydGV4dCA9IG51bGw7XHJcbiAgICB0aGlzLmtleSA9IGtleTtcclxuICAgIHRoaXMubW5lbW9uaWMgPSBtbmVtb25pYyB8fCBudWxsO1xyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBJbnN0YW50aWF0ZSBtYXN0ZXIga2V5IGZyb20gYW4gSERQcml2YXRlS2V5LlxyXG4gICAqIEBwYXJhbSB7SERQcml2YXRlS2V5fSBrZXlcclxuICAgKiBAcGFyYW0ge01uZW1vbmljP30gbW5lbW9uaWNcclxuICAgKiBAcmV0dXJucyB7TWFzdGVyS2V5fVxyXG4gICAqL1xyXG5cclxuICBzdGF0aWMgZnJvbUtleShrZXksIG1uZW1vbmljKSB7XHJcbiAgICByZXR1cm4gbmV3IHRoaXMoKS5mcm9tS2V5KGtleSwgbW5lbW9uaWMpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ29udmVydCBtYXN0ZXIga2V5IHRvIGEganNvbmlmaWFibGUgb2JqZWN0LlxyXG4gICAqIEBwYXJhbSB7TmV0d29yaz99IG5ldHdvcmtcclxuICAgKiBAcGFyYW0ge0Jvb2xlYW4/fSB1bnNhZmUgLSBXaGV0aGVyIHRvIGluY2x1ZGVcclxuICAgKiB0aGUga2V5IGRhdGEgaW4gdGhlIEpTT04uXHJcbiAgICogQHJldHVybnMge09iamVjdH1cclxuICAgKi9cclxuXHJcbiAgdG9KU09OKG5ldHdvcmssIHVuc2FmZSkge1xyXG4gICAgaWYgKHRoaXMuZW5jcnlwdGVkKSB7XHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgZW5jcnlwdGVkOiB0cnVlLFxyXG4gICAgICAgIHVudGlsOiB0aGlzLnVudGlsLFxyXG4gICAgICAgIGl2OiB0aGlzLml2LnRvU3RyaW5nKCdoZXgnKSxcclxuICAgICAgICBjaXBoZXJ0ZXh0OiB1bnNhZmUgPyB0aGlzLmNpcGhlcnRleHQudG9TdHJpbmcoJ2hleCcpIDogdW5kZWZpbmVkLFxyXG4gICAgICAgIGFsZ29yaXRobTogTWFzdGVyS2V5LmFsZ0J5VmFsW3RoaXMuYWxnXS50b0xvd2VyQ2FzZSgpLFxyXG4gICAgICAgIG46IHRoaXMubixcclxuICAgICAgICByOiB0aGlzLnIsXHJcbiAgICAgICAgcDogdGhpcy5wXHJcbiAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgZW5jcnlwdGVkOiBmYWxzZSxcclxuICAgICAga2V5OiB1bnNhZmUgPyB0aGlzLmtleS50b0pTT04obmV0d29yaykgOiB1bmRlZmluZWQsXHJcbiAgICAgIG1uZW1vbmljOiB1bnNhZmUgJiYgdGhpcy5tbmVtb25pYyA/IHRoaXMubW5lbW9uaWMudG9KU09OKCkgOiB1bmRlZmluZWRcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBJbnNwZWN0IHRoZSBrZXkuXHJcbiAgICogQHJldHVybnMge09iamVjdH1cclxuICAgKi9cclxuXHJcbiAgW2luc3BlY3RTeW1ib2xdKCkge1xyXG4gICAgY29uc3QganNvbiA9IHRoaXMudG9KU09OKG51bGwsIHRydWUpO1xyXG5cclxuICAgIGlmICh0aGlzLmtleSlcclxuICAgICAganNvbi5rZXkgPSB0aGlzLmtleS50b0pTT04oKTtcclxuXHJcbiAgICBpZiAodGhpcy5tbmVtb25pYylcclxuICAgICAganNvbi5tbmVtb25pYyA9IHRoaXMubW5lbW9uaWMudG9KU09OKCk7XHJcblxyXG4gICAgcmV0dXJuIGpzb247XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBUZXN0IHdoZXRoZXIgYW4gb2JqZWN0IGlzIGEgTWFzdGVyS2V5LlxyXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBvYmpcclxuICAgKiBAcmV0dXJucyB7Qm9vbGVhbn1cclxuICAgKi9cclxuXHJcbiAgc3RhdGljIGlzTWFzdGVyS2V5KG9iaikge1xyXG4gICAgcmV0dXJuIG9iaiBpbnN0YW5jZW9mIE1hc3RlcktleTtcclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBLZXkgZGVyaXZhdGlvbiBzYWx0LlxyXG4gKiBAY29uc3Qge0J1ZmZlcn1cclxuICogQGRlZmF1bHRcclxuICovXHJcblxyXG5NYXN0ZXJLZXkuU0FMVCA9IEJ1ZmZlci5mcm9tKCdiY29pbicsICdhc2NpaScpO1xyXG5cclxuLyoqXHJcbiAqIEtleSBkZXJpdmF0aW9uIGFsZ29yaXRobXMuXHJcbiAqIEBlbnVtIHtOdW1iZXJ9XHJcbiAqIEBkZWZhdWx0XHJcbiAqL1xyXG5cclxuTWFzdGVyS2V5LmFsZyA9IHtcclxuICBQQktERjI6IDAsXHJcbiAgU0NSWVBUOiAxXHJcbn07XHJcblxyXG4vKipcclxuICogS2V5IGRlcml2YXRpb24gYWxnb3JpdGhtcyBieSB2YWx1ZS5cclxuICogQGVudW0ge1N0cmluZ31cclxuICogQGRlZmF1bHRcclxuICovXHJcblxyXG5NYXN0ZXJLZXkuYWxnQnlWYWwgPSBbXHJcbiAgJ1BCS0RGMicsXHJcbiAgJ1NDUllQVCdcclxuXTtcclxuXHJcbi8qXHJcbiAqIEhlbHBlcnNcclxuICovXHJcblxyXG5mdW5jdGlvbiBpc0xlZ2FjeShkYXRhKSB7XHJcbiAgaWYgKGRhdGEubGVuZ3RoIDwgODIpXHJcbiAgICByZXR1cm4gZmFsc2U7XHJcblxyXG4gIGNvbnN0IGtleSA9IGRhdGEuc2xpY2UoMCwgNzgpO1xyXG4gIGNvbnN0IGNoayA9IGRhdGEucmVhZFVJbnQzMkxFKDc4LCB0cnVlKTtcclxuXHJcbiAgY29uc3QgaGFzaCA9IGhhc2gyNTYuZGlnZXN0KGtleSk7XHJcblxyXG4gIHJldHVybiBoYXNoLnJlYWRVSW50MzJMRSgwLCB0cnVlKSA9PT0gY2hrO1xyXG59XHJcblxyXG4vKlxyXG4gKiBFeHBvc2VcclxuICovXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IE1hc3RlcktleTtcclxuIl19
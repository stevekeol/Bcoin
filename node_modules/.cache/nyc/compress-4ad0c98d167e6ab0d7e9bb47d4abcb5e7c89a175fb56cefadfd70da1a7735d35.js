/*!
 * compress.js - coin compressor for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */'use strict';/**
 * @module coins/compress
 * @ignore
 */function cov_2bg20oab46(){var path="E:\\Projects\\Test\\bcoin\\lib\\coins\\compress.js";var hash="58fa3900ed17d922278f255ad7ffd49957ccf613";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\Projects\\Test\\bcoin\\lib\\coins\\compress.js",statementMap:{"0":{start:{line:14,column:15},end:{line:14,column:31}},"1":{start:{line:15,column:19},end:{line:15,column:35}},"2":{start:{line:16,column:18},end:{line:16,column:50}},"3":{start:{line:17,column:18},end:{line:17,column:50}},"4":{start:{line:23,column:23},end:{line:23,column:24}},"5":{start:{line:24,column:21},end:{line:24,column:36}},"6":{start:{line:41,column:14},end:{line:41,column:40}},"7":{start:{line:42,column:2},end:{line:46,column:3}},"8":{start:{line:43,column:4},end:{line:43,column:18}},"9":{start:{line:44,column:4},end:{line:44,column:23}},"10":{start:{line:45,column:4},end:{line:45,column:14}},"11":{start:{line:50,column:13},end:{line:50,column:35}},"12":{start:{line:51,column:2},end:{line:55,column:3}},"13":{start:{line:52,column:4},end:{line:52,column:18}},"14":{start:{line:53,column:4},end:{line:53,column:22}},"15":{start:{line:54,column:4},end:{line:54,column:14}},"16":{start:{line:60,column:13},end:{line:60,column:35}},"17":{start:{line:61,column:2},end:{line:67,column:3}},"18":{start:{line:62,column:4},end:{line:66,column:5}},"19":{start:{line:63,column:18},end:{line:63,column:33}},"20":{start:{line:64,column:6},end:{line:64,column:25}},"21":{start:{line:65,column:6},end:{line:65,column:16}},"22":{start:{line:70,column:2},end:{line:70,column:53}},"23":{start:{line:71,column:2},end:{line:71,column:28}},"24":{start:{line:73,column:2},end:{line:73,column:12}},"25":{start:{line:84,column:2},end:{line:121,column:3}},"26":{start:{line:86,column:19},end:{line:86,column:41}},"27":{start:{line:87,column:6},end:{line:87,column:34}},"28":{start:{line:88,column:6},end:{line:88,column:12}},"29":{start:{line:91,column:19},end:{line:91,column:41}},"30":{start:{line:92,column:6},end:{line:92,column:34}},"31":{start:{line:93,column:6},end:{line:93,column:12}},"32":{start:{line:99,column:6},end:{line:99,column:21}},"33":{start:{line:100,column:19},end:{line:100,column:41}},"34":{start:{line:103,column:18},end:{line:103,column:37}},"35":{start:{line:104,column:6},end:{line:104,column:29}},"36":{start:{line:105,column:6},end:{line:105,column:12}},"37":{start:{line:108,column:6},end:{line:108,column:21}},"38":{start:{line:109,column:19},end:{line:109,column:51}},"39":{start:{line:110,column:6},end:{line:118,column:7}},"40":{start:{line:113,column:8},end:{line:113,column:42}},"41":{start:{line:114,column:8},end:{line:114,column:22}},"42":{start:{line:116,column:21},end:{line:116,column:39}},"43":{start:{line:117,column:8},end:{line:117,column:29}},"44":{start:{line:119,column:6},end:{line:119,column:12}},"45":{start:{line:123,column:2},end:{line:123,column:16}},"46":{start:{line:132,column:2},end:{line:133,column:14}},"47":{start:{line:133,column:4},end:{line:133,column:14}},"48":{start:{line:135,column:2},end:{line:136,column:14}},"49":{start:{line:136,column:4},end:{line:136,column:14}},"50":{start:{line:138,column:13},end:{line:138,column:35}},"51":{start:{line:139,column:2},end:{line:142,column:3}},"52":{start:{line:140,column:4},end:{line:141,column:16}},"53":{start:{line:141,column:6},end:{line:141,column:16}},"54":{start:{line:144,column:13},end:{line:144,column:14}},"55":{start:{line:145,column:2},end:{line:145,column:66}},"56":{start:{line:146,column:2},end:{line:146,column:28}},"57":{start:{line:148,column:2},end:{line:148,column:14}},"58":{start:{line:158,column:2},end:{line:158,column:31}},"59":{start:{line:159,column:2},end:{line:159,column:36}},"60":{start:{line:160,column:2},end:{line:160,column:12}},"61":{start:{line:170,column:2},end:{line:170,column:33}},"62":{start:{line:171,column:2},end:{line:171,column:38}},"63":{start:{line:172,column:2},end:{line:172,column:16}},"64":{start:{line:181,column:13},end:{line:181,column:14}},"65":{start:{line:182,column:2},end:{line:182,column:44}},"66":{start:{line:183,column:2},end:{line:183,column:36}},"67":{start:{line:184,column:2},end:{line:184,column:14}},"68":{start:{line:196,column:2},end:{line:197,column:13}},"69":{start:{line:197,column:4},end:{line:197,column:13}},"70":{start:{line:199,column:12},end:{line:199,column:13}},"71":{start:{line:200,column:2},end:{line:203,column:3}},"72":{start:{line:201,column:4},end:{line:201,column:16}},"73":{start:{line:202,column:4},end:{line:202,column:10}},"74":{start:{line:205,column:2},end:{line:209,column:3}},"75":{start:{line:206,column:17},end:{line:206,column:27}},"76":{start:{line:207,column:4},end:{line:207,column:32}},"77":{start:{line:208,column:4},end:{line:208,column:49}},"78":{start:{line:211,column:2},end:{line:211,column:31}},"79":{start:{line:221,column:2},end:{line:222,column:13}},"80":{start:{line:222,column:4},end:{line:222,column:13}},"81":{start:{line:224,column:2},end:{line:224,column:10}},"82":{start:{line:226,column:12},end:{line:226,column:22}},"83":{start:{line:228,column:2},end:{line:228,column:29}},"84":{start:{line:231,column:2},end:{line:237,column:3}},"85":{start:{line:232,column:17},end:{line:232,column:26}},"86":{start:{line:233,column:4},end:{line:233,column:31}},"87":{start:{line:234,column:4},end:{line:234,column:30}},"88":{start:{line:236,column:4},end:{line:236,column:18}},"89":{start:{line:239,column:2},end:{line:242,column:3}},"90":{start:{line:240,column:4},end:{line:240,column:12}},"91":{start:{line:241,column:4},end:{line:241,column:10}},"92":{start:{line:244,column:2},end:{line:244,column:11}},"93":{start:{line:254,column:2},end:{line:255,column:17}},"94":{start:{line:255,column:4},end:{line:255,column:17}},"95":{start:{line:257,column:2},end:{line:268,column:3}},"96":{start:{line:260,column:6},end:{line:260,column:31}},"97":{start:{line:262,column:6},end:{line:263,column:21}},"98":{start:{line:263,column:8},end:{line:263,column:21}},"99":{start:{line:265,column:6},end:{line:265,column:44}},"100":{start:{line:267,column:6},end:{line:267,column:19}},"101":{start:{line:280,column:2},end:{line:295,column:3}},"102":{start:{line:284,column:6},end:{line:284,column:16}},"103":{start:{line:285,column:6},end:{line:285,column:12}},"104":{start:{line:288,column:6},end:{line:288,column:50}},"105":{start:{line:291,column:6},end:{line:291,column:39}},"106":{start:{line:292,column:6},end:{line:292,column:12}},"107":{start:{line:294,column:6},end:{line:294,column:43}},"108":{start:{line:297,column:2},end:{line:297,column:28}},"109":{start:{line:299,column:2},end:{line:299,column:13}},"110":{start:{line:309,column:17},end:{line:309,column:23}},"111":{start:{line:311,column:2},end:{line:311,column:28}},"112":{start:{line:313,column:2},end:{line:325,column:3}},"113":{start:{line:316,column:6},end:{line:316,column:17}},"114":{start:{line:318,column:6},end:{line:318,column:20}},"115":{start:{line:319,column:6},end:{line:319,column:12}},"116":{start:{line:321,column:6},end:{line:321,column:20}},"117":{start:{line:322,column:6},end:{line:322,column:12}},"118":{start:{line:324,column:6},end:{line:324,column:43}},"119":{start:{line:328,column:14},end:{line:328,column:52}},"120":{start:{line:332,column:2},end:{line:332,column:18}},"121":{start:{line:334,column:2},end:{line:334,column:13}},"122":{start:{line:338,column:0},end:{line:338,column:14}},"123":{start:{line:339,column:0},end:{line:339,column:16}},"124":{start:{line:345,column:0},end:{line:345,column:30}},"125":{start:{line:346,column:0},end:{line:346,column:34}},"126":{start:{line:347,column:0},end:{line:347,column:26}}},fnMap:{"0":{name:"compressScript",decl:{start:{line:32,column:9},end:{line:32,column:23}},loc:{start:{line:32,column:36},end:{line:74,column:1}},line:32},"1":{name:"decompressScript",decl:{start:{line:82,column:9},end:{line:82,column:25}},loc:{start:{line:82,column:38},end:{line:124,column:1}},line:82},"2":{name:"sizeScript",decl:{start:{line:131,column:9},end:{line:131,column:19}},loc:{start:{line:131,column:28},end:{line:149,column:1}},line:131},"3":{name:"compressOutput",decl:{start:{line:157,column:9},end:{line:157,column:23}},loc:{start:{line:157,column:36},end:{line:161,column:1}},line:157},"4":{name:"decompressOutput",decl:{start:{line:169,column:9},end:{line:169,column:25}},loc:{start:{line:169,column:38},end:{line:173,column:1}},line:169},"5":{name:"sizeOutput",decl:{start:{line:180,column:9},end:{line:180,column:19}},loc:{start:{line:180,column:28},end:{line:185,column:1}},line:180},"6":{name:"compressValue",decl:{start:{line:195,column:9},end:{line:195,column:22}},loc:{start:{line:195,column:30},end:{line:212,column:1}},line:195},"7":{name:"decompressValue",decl:{start:{line:220,column:9},end:{line:220,column:24}},loc:{start:{line:220,column:32},end:{line:245,column:1}},line:220},"8":{name:"publicKeyVerify",decl:{start:{line:253,column:9},end:{line:253,column:24}},loc:{start:{line:253,column:30},end:{line:269,column:1}},line:253},"9":{name:"compressKey",decl:{start:{line:277,column:9},end:{line:277,column:20}},loc:{start:{line:277,column:26},end:{line:300,column:1}},line:277},"10":{name:"decompressKey",decl:{start:{line:308,column:9},end:{line:308,column:22}},loc:{start:{line:308,column:28},end:{line:335,column:1}},line:308}},branchMap:{"0":{loc:{start:{line:42,column:2},end:{line:46,column:3}},type:"if",locations:[{start:{line:42,column:2},end:{line:46,column:3}},{start:{line:42,column:2},end:{line:46,column:3}}],line:42},"1":{loc:{start:{line:51,column:2},end:{line:55,column:3}},type:"if",locations:[{start:{line:51,column:2},end:{line:55,column:3}},{start:{line:51,column:2},end:{line:55,column:3}}],line:51},"2":{loc:{start:{line:61,column:2},end:{line:67,column:3}},type:"if",locations:[{start:{line:61,column:2},end:{line:67,column:3}},{start:{line:61,column:2},end:{line:67,column:3}}],line:61},"3":{loc:{start:{line:62,column:4},end:{line:66,column:5}},type:"if",locations:[{start:{line:62,column:4},end:{line:66,column:5}},{start:{line:62,column:4},end:{line:66,column:5}}],line:62},"4":{loc:{start:{line:84,column:2},end:{line:121,column:3}},type:"switch",locations:[{start:{line:85,column:4},end:{line:89,column:5}},{start:{line:90,column:4},end:{line:94,column:5}},{start:{line:95,column:4},end:{line:95,column:11}},{start:{line:96,column:4},end:{line:96,column:11}},{start:{line:97,column:4},end:{line:97,column:11}},{start:{line:98,column:4},end:{line:106,column:5}},{start:{line:107,column:4},end:{line:120,column:5}}],line:84},"5":{loc:{start:{line:110,column:6},end:{line:118,column:7}},type:"if",locations:[{start:{line:110,column:6},end:{line:118,column:7}},{start:{line:110,column:6},end:{line:118,column:7}}],line:110},"6":{loc:{start:{line:132,column:2},end:{line:133,column:14}},type:"if",locations:[{start:{line:132,column:2},end:{line:133,column:14}},{start:{line:132,column:2},end:{line:133,column:14}}],line:132},"7":{loc:{start:{line:135,column:2},end:{line:136,column:14}},type:"if",locations:[{start:{line:135,column:2},end:{line:136,column:14}},{start:{line:135,column:2},end:{line:136,column:14}}],line:135},"8":{loc:{start:{line:139,column:2},end:{line:142,column:3}},type:"if",locations:[{start:{line:139,column:2},end:{line:142,column:3}},{start:{line:139,column:2},end:{line:142,column:3}}],line:139},"9":{loc:{start:{line:140,column:4},end:{line:141,column:16}},type:"if",locations:[{start:{line:140,column:4},end:{line:141,column:16}},{start:{line:140,column:4},end:{line:141,column:16}}],line:140},"10":{loc:{start:{line:196,column:2},end:{line:197,column:13}},type:"if",locations:[{start:{line:196,column:2},end:{line:197,column:13}},{start:{line:196,column:2},end:{line:197,column:13}}],line:196},"11":{loc:{start:{line:200,column:9},end:{line:200,column:36}},type:"binary-expr",locations:[{start:{line:200,column:9},end:{line:200,column:25}},{start:{line:200,column:29},end:{line:200,column:36}}],line:200},"12":{loc:{start:{line:205,column:2},end:{line:209,column:3}},type:"if",locations:[{start:{line:205,column:2},end:{line:209,column:3}},{start:{line:205,column:2},end:{line:209,column:3}}],line:205},"13":{loc:{start:{line:221,column:2},end:{line:222,column:13}},type:"if",locations:[{start:{line:221,column:2},end:{line:222,column:13}},{start:{line:221,column:2},end:{line:222,column:13}}],line:221},"14":{loc:{start:{line:231,column:2},end:{line:237,column:3}},type:"if",locations:[{start:{line:231,column:2},end:{line:237,column:3}},{start:{line:231,column:2},end:{line:237,column:3}}],line:231},"15":{loc:{start:{line:254,column:2},end:{line:255,column:17}},type:"if",locations:[{start:{line:254,column:2},end:{line:255,column:17}},{start:{line:254,column:2},end:{line:255,column:17}}],line:254},"16":{loc:{start:{line:257,column:2},end:{line:268,column:3}},type:"switch",locations:[{start:{line:258,column:4},end:{line:258,column:14}},{start:{line:259,column:4},end:{line:260,column:31}},{start:{line:261,column:4},end:{line:265,column:44}},{start:{line:266,column:4},end:{line:267,column:19}}],line:257},"17":{loc:{start:{line:262,column:6},end:{line:263,column:21}},type:"if",locations:[{start:{line:262,column:6},end:{line:263,column:21}},{start:{line:262,column:6},end:{line:263,column:21}}],line:262},"18":{loc:{start:{line:280,column:2},end:{line:295,column:3}},type:"switch",locations:[{start:{line:281,column:4},end:{line:281,column:14}},{start:{line:282,column:4},end:{line:285,column:12}},{start:{line:286,column:4},end:{line:292,column:12}},{start:{line:293,column:4},end:{line:294,column:43}}],line:280},"19":{loc:{start:{line:313,column:2},end:{line:325,column:3}},type:"switch",locations:[{start:{line:314,column:4},end:{line:314,column:14}},{start:{line:315,column:4},end:{line:316,column:17}},{start:{line:317,column:4},end:{line:319,column:12}},{start:{line:320,column:4},end:{line:322,column:12}},{start:{line:323,column:4},end:{line:324,column:43}}],line:313}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0,0,0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0,0],"17":[0,0],"18":[0,0,0,0],"19":[0,0,0,0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"58fa3900ed17d922278f255ad7ffd49957ccf613"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2bg20oab46=function(){return actualCoverage;};}return actualCoverage;}cov_2bg20oab46();const assert=(cov_2bg20oab46().s[0]++,require('bsert'));const{encoding}=(cov_2bg20oab46().s[1]++,require('bufio'));const secp256k1=(cov_2bg20oab46().s[2]++,require('bcrypto/lib/secp256k1'));const consensus=(cov_2bg20oab46().s[3]++,require('../protocol/consensus'));/*
 * Constants
 */const COMPRESS_TYPES=(cov_2bg20oab46().s[4]++,6);const EMPTY_BUFFER=(cov_2bg20oab46().s[5]++,Buffer.alloc(0));/**
 * Compress a script, write directly to the buffer.
 * @param {Script} script
 * @param {BufferWriter} bw
 */function compressScript(script,bw){cov_2bg20oab46().f[0]++;// Attempt to compress the output scripts.
// We can _only_ ever compress them if
// they are serialized as minimaldata, as
// we need to recreate them when we read
// them.
// P2PKH -> 0 | key-hash
// Saves 5 bytes.
const pkh=(cov_2bg20oab46().s[6]++,script.getPubkeyhash(true));cov_2bg20oab46().s[7]++;if(pkh){cov_2bg20oab46().b[0][0]++;cov_2bg20oab46().s[8]++;bw.writeU8(0);cov_2bg20oab46().s[9]++;bw.writeBytes(pkh);cov_2bg20oab46().s[10]++;return bw;}else{cov_2bg20oab46().b[0][1]++;}// P2SH -> 1 | script-hash
// Saves 3 bytes.
const sh=(cov_2bg20oab46().s[11]++,script.getScripthash());cov_2bg20oab46().s[12]++;if(sh){cov_2bg20oab46().b[1][0]++;cov_2bg20oab46().s[13]++;bw.writeU8(1);cov_2bg20oab46().s[14]++;bw.writeBytes(sh);cov_2bg20oab46().s[15]++;return bw;}else{cov_2bg20oab46().b[1][1]++;}// P2PK -> 2-5 | compressed-key
// Only works if the key is valid.
// Saves up to 35 bytes.
const pk=(cov_2bg20oab46().s[16]++,script.getPubkey(true));cov_2bg20oab46().s[17]++;if(pk){cov_2bg20oab46().b[2][0]++;cov_2bg20oab46().s[18]++;if(publicKeyVerify(pk)){cov_2bg20oab46().b[3][0]++;const key=(cov_2bg20oab46().s[19]++,compressKey(pk));cov_2bg20oab46().s[20]++;bw.writeBytes(key);cov_2bg20oab46().s[21]++;return bw;}else{cov_2bg20oab46().b[3][1]++;}}else{cov_2bg20oab46().b[2][1]++;}// Raw -> varlen + 10 | script
cov_2bg20oab46().s[22]++;bw.writeVarint(script.raw.length+COMPRESS_TYPES);cov_2bg20oab46().s[23]++;bw.writeBytes(script.raw);cov_2bg20oab46().s[24]++;return bw;}/**
 * Decompress a script from buffer reader.
 * @param {Script} script
 * @param {BufferReader} br
 */function decompressScript(script,br){cov_2bg20oab46().f[1]++;cov_2bg20oab46().s[25]++;// Decompress the script.
switch(br.readU8()){case 0:cov_2bg20oab46().b[4][0]++;{const hash=(cov_2bg20oab46().s[26]++,br.readBytes(20,true));cov_2bg20oab46().s[27]++;script.fromPubkeyhash(hash);cov_2bg20oab46().s[28]++;break;}case 1:cov_2bg20oab46().b[4][1]++;{const hash=(cov_2bg20oab46().s[29]++,br.readBytes(20,true));cov_2bg20oab46().s[30]++;script.fromScripthash(hash);cov_2bg20oab46().s[31]++;break;}case 2:cov_2bg20oab46().b[4][2]++;case 3:cov_2bg20oab46().b[4][3]++;case 4:cov_2bg20oab46().b[4][4]++;case 5:cov_2bg20oab46().b[4][5]++;{cov_2bg20oab46().s[32]++;br.offset-=1;const data=(cov_2bg20oab46().s[33]++,br.readBytes(33,true));// Decompress the key. If this fails,
// we have database corruption!
const key=(cov_2bg20oab46().s[34]++,decompressKey(data));cov_2bg20oab46().s[35]++;script.fromPubkey(key);cov_2bg20oab46().s[36]++;break;}default:cov_2bg20oab46().b[4][6]++;{cov_2bg20oab46().s[37]++;br.offset-=1;const size=(cov_2bg20oab46().s[38]++,br.readVarint()-COMPRESS_TYPES);cov_2bg20oab46().s[39]++;if(size>consensus.MAX_SCRIPT_SIZE){cov_2bg20oab46().b[5][0]++;cov_2bg20oab46().s[40]++;// This violates consensus rules.
// We don't need to read it.
script.fromNulldata(EMPTY_BUFFER);cov_2bg20oab46().s[41]++;br.seek(size);}else{cov_2bg20oab46().b[5][1]++;const data=(cov_2bg20oab46().s[42]++,br.readBytes(size));cov_2bg20oab46().s[43]++;script.fromRaw(data);}cov_2bg20oab46().s[44]++;break;}}cov_2bg20oab46().s[45]++;return script;}/**
 * Calculate script size.
 * @returns {Number}
 */function sizeScript(script){cov_2bg20oab46().f[2]++;cov_2bg20oab46().s[46]++;if(script.isPubkeyhash(true)){cov_2bg20oab46().b[6][0]++;cov_2bg20oab46().s[47]++;return 21;}else{cov_2bg20oab46().b[6][1]++;}cov_2bg20oab46().s[48]++;if(script.isScripthash()){cov_2bg20oab46().b[7][0]++;cov_2bg20oab46().s[49]++;return 21;}else{cov_2bg20oab46().b[7][1]++;}const pk=(cov_2bg20oab46().s[50]++,script.getPubkey(true));cov_2bg20oab46().s[51]++;if(pk){cov_2bg20oab46().b[8][0]++;cov_2bg20oab46().s[52]++;if(publicKeyVerify(pk)){cov_2bg20oab46().b[9][0]++;cov_2bg20oab46().s[53]++;return 33;}else{cov_2bg20oab46().b[9][1]++;}}else{cov_2bg20oab46().b[8][1]++;}let size=(cov_2bg20oab46().s[54]++,0);cov_2bg20oab46().s[55]++;size+=encoding.sizeVarint(script.raw.length+COMPRESS_TYPES);cov_2bg20oab46().s[56]++;size+=script.raw.length;cov_2bg20oab46().s[57]++;return size;}/**
 * Compress an output.
 * @param {Output} output
 * @param {BufferWriter} bw
 */function compressOutput(output,bw){cov_2bg20oab46().f[3]++;cov_2bg20oab46().s[58]++;bw.writeVarint(output.value);cov_2bg20oab46().s[59]++;compressScript(output.script,bw);cov_2bg20oab46().s[60]++;return bw;}/**
 * Decompress a script from buffer reader.
 * @param {Output} output
 * @param {BufferReader} br
 */function decompressOutput(output,br){cov_2bg20oab46().f[4]++;cov_2bg20oab46().s[61]++;output.value=br.readVarint();cov_2bg20oab46().s[62]++;decompressScript(output.script,br);cov_2bg20oab46().s[63]++;return output;}/**
 * Calculate output size.
 * @returns {Number}
 */function sizeOutput(output){cov_2bg20oab46().f[5]++;let size=(cov_2bg20oab46().s[64]++,0);cov_2bg20oab46().s[65]++;size+=encoding.sizeVarint(output.value);cov_2bg20oab46().s[66]++;size+=sizeScript(output.script);cov_2bg20oab46().s[67]++;return size;}/**
 * Compress value using an exponent. Takes advantage of
 * the fact that many bitcoin values are divisible by 10.
 * @see https://github.com/btcsuite/btcd/blob/master/blockchain/compress.go
 * @param {Amount} value
 * @returns {Number}
 */function compressValue(value){cov_2bg20oab46().f[6]++;cov_2bg20oab46().s[68]++;if(value===0){cov_2bg20oab46().b[10][0]++;cov_2bg20oab46().s[69]++;return 0;}else{cov_2bg20oab46().b[10][1]++;}let exp=(cov_2bg20oab46().s[70]++,0);cov_2bg20oab46().s[71]++;while((cov_2bg20oab46().b[11][0]++,value%10===0)&&(cov_2bg20oab46().b[11][1]++,exp<9)){cov_2bg20oab46().s[72]++;value/=10;cov_2bg20oab46().s[73]++;exp++;}cov_2bg20oab46().s[74]++;if(exp<9){cov_2bg20oab46().b[12][0]++;const last=(cov_2bg20oab46().s[75]++,value%10);cov_2bg20oab46().s[76]++;value=(value-last)/10;cov_2bg20oab46().s[77]++;return 1+10*(9*value+last-1)+exp;}else{cov_2bg20oab46().b[12][1]++;}cov_2bg20oab46().s[78]++;return 10+10*(value-1);}/**
 * Decompress value.
 * @param {Number} value - Compressed value.
 * @returns {Amount} value
 */function decompressValue(value){cov_2bg20oab46().f[7]++;cov_2bg20oab46().s[79]++;if(value===0){cov_2bg20oab46().b[13][0]++;cov_2bg20oab46().s[80]++;return 0;}else{cov_2bg20oab46().b[13][1]++;}cov_2bg20oab46().s[81]++;value--;let exp=(cov_2bg20oab46().s[82]++,value%10);cov_2bg20oab46().s[83]++;value=(value-exp)/10;let n;cov_2bg20oab46().s[84]++;if(exp<9){cov_2bg20oab46().b[14][0]++;const last=(cov_2bg20oab46().s[85]++,value%9);cov_2bg20oab46().s[86]++;value=(value-last)/9;cov_2bg20oab46().s[87]++;n=value*10+last+1;}else{cov_2bg20oab46().b[14][1]++;cov_2bg20oab46().s[88]++;n=value+1;}cov_2bg20oab46().s[89]++;while(exp>0){cov_2bg20oab46().s[90]++;n*=10;cov_2bg20oab46().s[91]++;exp--;}cov_2bg20oab46().s[92]++;return n;}/**
 * Verify a public key (no hybrid keys allowed).
 * @param {Buffer} key
 * @returns {Boolean}
 */function publicKeyVerify(key){cov_2bg20oab46().f[8]++;cov_2bg20oab46().s[93]++;if(key.length===0){cov_2bg20oab46().b[15][0]++;cov_2bg20oab46().s[94]++;return false;}else{cov_2bg20oab46().b[15][1]++;}cov_2bg20oab46().s[95]++;switch(key[0]){case 0x02:cov_2bg20oab46().b[16][0]++;case 0x03:cov_2bg20oab46().b[16][1]++;cov_2bg20oab46().s[96]++;return key.length===33;case 0x04:cov_2bg20oab46().b[16][2]++;cov_2bg20oab46().s[97]++;if(key.length!==65){cov_2bg20oab46().b[17][0]++;cov_2bg20oab46().s[98]++;return false;}else{cov_2bg20oab46().b[17][1]++;}cov_2bg20oab46().s[99]++;return secp256k1.publicKeyVerify(key);default:cov_2bg20oab46().b[16][3]++;cov_2bg20oab46().s[100]++;return false;}}/**
 * Compress a public key to coins compression format.
 * @param {Buffer} key
 * @returns {Buffer}
 */function compressKey(key){cov_2bg20oab46().f[9]++;let out;cov_2bg20oab46().s[101]++;switch(key[0]){case 0x02:cov_2bg20oab46().b[18][0]++;case 0x03:cov_2bg20oab46().b[18][1]++;cov_2bg20oab46().s[102]++;// Key is already compressed.
out=key;cov_2bg20oab46().s[103]++;break;case 0x04:cov_2bg20oab46().b[18][2]++;cov_2bg20oab46().s[104]++;// Compress the key normally.
out=secp256k1.publicKeyConvert(key,true);// Store the oddness.
// Pseudo-hybrid format.
cov_2bg20oab46().s[105]++;out[0]=0x04|key[64]&0x01;cov_2bg20oab46().s[106]++;break;default:cov_2bg20oab46().b[18][3]++;cov_2bg20oab46().s[107]++;throw new Error('Bad point format.');}cov_2bg20oab46().s[108]++;assert(out.length===33);cov_2bg20oab46().s[109]++;return out;}/**
 * Decompress a public key from the coins compression format.
 * @param {Buffer} key
 * @returns {Buffer}
 */function decompressKey(key){cov_2bg20oab46().f[10]++;const format=(cov_2bg20oab46().s[110]++,key[0]);cov_2bg20oab46().s[111]++;assert(key.length===33);cov_2bg20oab46().s[112]++;switch(format){case 0x02:cov_2bg20oab46().b[19][0]++;case 0x03:cov_2bg20oab46().b[19][1]++;cov_2bg20oab46().s[113]++;return key;case 0x04:cov_2bg20oab46().b[19][2]++;cov_2bg20oab46().s[114]++;key[0]=0x02;cov_2bg20oab46().s[115]++;break;case 0x05:cov_2bg20oab46().b[19][3]++;cov_2bg20oab46().s[116]++;key[0]=0x03;cov_2bg20oab46().s[117]++;break;default:cov_2bg20oab46().b[19][4]++;cov_2bg20oab46().s[118]++;throw new Error('Bad point format.');}// Decompress the key.
const out=(cov_2bg20oab46().s[119]++,secp256k1.publicKeyConvert(key,false));// Reset the first byte so as not to
// mutate the original buffer.
cov_2bg20oab46().s[120]++;key[0]=format;cov_2bg20oab46().s[121]++;return out;}// Make eslint happy.
cov_2bg20oab46().s[122]++;compressValue;cov_2bg20oab46().s[123]++;decompressValue;/*
 * Expose
 */cov_2bg20oab46().s[124]++;exports.pack=compressOutput;cov_2bg20oab46().s[125]++;exports.unpack=decompressOutput;cov_2bg20oab46().s[126]++;exports.size=sizeOutput;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
/*!
 * scripterror.js - script error for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */'use strict';/**
 * Script Error
 * An error thrown from the scripting system,
 * potentially pertaining to Script execution.
 * @alias module:script.ScriptError
 * @extends Error
 * @property {String} message - Error message.
 * @property {String} code - Original code passed in.
 * @property {Number} op - Opcode.
 * @property {Number} ip - Instruction pointer.
 */function cov_ni9vhf6b1(){var path="E:\\Projects\\Test\\bcoin\\lib\\script\\scripterror.js";var hash="d5d321804a0ede58ef198be88eaf4e03d660dcb2";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\Projects\\Test\\bcoin\\lib\\script\\scripterror.js",statementMap:{"0":{start:{line:31,column:4},end:{line:31,column:12}},"1":{start:{line:33,column:4},end:{line:33,column:30}},"2":{start:{line:34,column:4},end:{line:34,column:21}},"3":{start:{line:35,column:4},end:{line:35,column:24}},"4":{start:{line:36,column:4},end:{line:36,column:17}},"5":{start:{line:37,column:4},end:{line:37,column:17}},"6":{start:{line:39,column:4},end:{line:45,column:5}},"7":{start:{line:40,column:6},end:{line:40,column:24}},"8":{start:{line:41,column:11},end:{line:45,column:5}},"9":{start:{line:42,column:6},end:{line:42,column:63}},"10":{start:{line:43,column:6},end:{line:43,column:25}},"11":{start:{line:44,column:6},end:{line:44,column:19}},"12":{start:{line:47,column:4},end:{line:48,column:49}},"13":{start:{line:48,column:6},end:{line:48,column:49}},"14":{start:{line:56,column:0},end:{line:56,column:29}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:30,column:2},end:{line:30,column:3}},loc:{start:{line:30,column:28},end:{line:49,column:3}},line:30}},branchMap:{"0":{loc:{start:{line:39,column:4},end:{line:45,column:5}},type:"if",locations:[{start:{line:39,column:4},end:{line:45,column:5}},{start:{line:39,column:4},end:{line:45,column:5}}],line:39},"1":{loc:{start:{line:41,column:11},end:{line:45,column:5}},type:"if",locations:[{start:{line:41,column:11},end:{line:45,column:5}},{start:{line:41,column:11},end:{line:45,column:5}}],line:41},"2":{loc:{start:{line:47,column:4},end:{line:48,column:49}},type:"if",locations:[{start:{line:47,column:4},end:{line:48,column:49}},{start:{line:47,column:4},end:{line:48,column:49}}],line:47}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},f:{"0":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"d5d321804a0ede58ef198be88eaf4e03d660dcb2"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_ni9vhf6b1=function(){return actualCoverage;};}return actualCoverage;}cov_ni9vhf6b1();class ScriptError extends Error{/**
   * Create an error.
   * @constructor
   * @param {String} code - Error code.
   * @param {Opcode} op - Opcode.
   * @param {Number?} ip - Instruction pointer.
   */constructor(code,op,ip){cov_ni9vhf6b1().f[0]++;cov_ni9vhf6b1().s[0]++;super();cov_ni9vhf6b1().s[1]++;this.type='ScriptError';cov_ni9vhf6b1().s[2]++;this.code=code;cov_ni9vhf6b1().s[3]++;this.message=code;cov_ni9vhf6b1().s[4]++;this.op=-1;cov_ni9vhf6b1().s[5]++;this.ip=-1;cov_ni9vhf6b1().s[6]++;if(typeof op==='string'){cov_ni9vhf6b1().b[0][0]++;cov_ni9vhf6b1().s[7]++;this.message=op;}else{cov_ni9vhf6b1().b[0][1]++;cov_ni9vhf6b1().s[8]++;if(op){cov_ni9vhf6b1().b[1][0]++;cov_ni9vhf6b1().s[9]++;this.message=`${code} (op=${op.toSymbol()}, ip=${ip})`;cov_ni9vhf6b1().s[10]++;this.op=op.value;cov_ni9vhf6b1().s[11]++;this.ip=ip;}else{cov_ni9vhf6b1().b[1][1]++;}}cov_ni9vhf6b1().s[12]++;if(Error.captureStackTrace){cov_ni9vhf6b1().b[2][0]++;cov_ni9vhf6b1().s[13]++;Error.captureStackTrace(this,ScriptError);}else{cov_ni9vhf6b1().b[2][1]++;}}}/*
 * Expose
 */cov_ni9vhf6b1().s[14]++;module.exports=ScriptError;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdGVycm9yLmpzIl0sIm5hbWVzIjpbIlNjcmlwdEVycm9yIiwiRXJyb3IiLCJjb25zdHJ1Y3RvciIsImNvZGUiLCJvcCIsImlwIiwidHlwZSIsIm1lc3NhZ2UiLCJ0b1N5bWJvbCIsInZhbHVlIiwiY2FwdHVyZVN0YWNrVHJhY2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBRUEsYUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEcsc3VFQUhZO3lGQUtaLEtBQU1BLENBQUFBLFdBQU4sUUFBMEJDLENBQUFBLEtBQU0sQ0FDOUI7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FFRUMsV0FBVyxDQUFDQyxJQUFELENBQU9DLEVBQVAsQ0FBV0MsRUFBWCxDQUFlLCtDQUN4QixRQUR3Qix1QkFHeEIsS0FBS0MsSUFBTCxDQUFZLGFBQVosQ0FId0IsdUJBSXhCLEtBQUtILElBQUwsQ0FBWUEsSUFBWixDQUp3Qix1QkFLeEIsS0FBS0ksT0FBTCxDQUFlSixJQUFmLENBTHdCLHVCQU14QixLQUFLQyxFQUFMLENBQVUsQ0FBQyxDQUFYLENBTndCLHVCQU94QixLQUFLQyxFQUFMLENBQVUsQ0FBQyxDQUFYLENBUHdCLHVCQVN4QixHQUFJLE1BQU9ELENBQUFBLEVBQVAsR0FBYyxRQUFsQixDQUE0QixrREFDMUIsS0FBS0csT0FBTCxDQUFlSCxFQUFmLENBQ0QsQ0FGRCxJQUVPLHFEQUFJQSxFQUFKLENBQVEsa0RBQ2IsS0FBS0csT0FBTCxDQUFnQixHQUFFSixJQUFLLFFBQU9DLEVBQUUsQ0FBQ0ksUUFBSCxFQUFjLFFBQU9ILEVBQUcsR0FBdEQsQ0FEYSx3QkFFYixLQUFLRCxFQUFMLENBQVVBLEVBQUUsQ0FBQ0ssS0FBYixDQUZhLHdCQUdiLEtBQUtKLEVBQUwsQ0FBVUEsRUFBVixDQUNELENBSk0sZ0NBSU4sQ0FmdUIsd0JBaUJ4QixHQUFJSixLQUFLLENBQUNTLGlCQUFWLENBQ0UsbURBQUFULEtBQUssQ0FBQ1MsaUJBQU4sQ0FBd0IsSUFBeEIsQ0FBOEJWLFdBQTlCLEVBQTJDLENBRDdDLGdDQUVELENBNUI2QixDQStCaEM7QUFDQTtBQUNBLEcsd0JBRUFXLE1BQU0sQ0FBQ0MsT0FBUCxDQUFpQlosV0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcclxuICogc2NyaXB0ZXJyb3IuanMgLSBzY3JpcHQgZXJyb3IgZm9yIGJjb2luXHJcbiAqIENvcHlyaWdodCAoYykgMjAxNC0yMDE3LCBDaHJpc3RvcGhlciBKZWZmcmV5IChNSVQgTGljZW5zZSkuXHJcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9iY29pbi1vcmcvYmNvaW5cclxuICovXHJcblxyXG4ndXNlIHN0cmljdCc7XHJcblxyXG4vKipcclxuICogU2NyaXB0IEVycm9yXHJcbiAqIEFuIGVycm9yIHRocm93biBmcm9tIHRoZSBzY3JpcHRpbmcgc3lzdGVtLFxyXG4gKiBwb3RlbnRpYWxseSBwZXJ0YWluaW5nIHRvIFNjcmlwdCBleGVjdXRpb24uXHJcbiAqIEBhbGlhcyBtb2R1bGU6c2NyaXB0LlNjcmlwdEVycm9yXHJcbiAqIEBleHRlbmRzIEVycm9yXHJcbiAqIEBwcm9wZXJ0eSB7U3RyaW5nfSBtZXNzYWdlIC0gRXJyb3IgbWVzc2FnZS5cclxuICogQHByb3BlcnR5IHtTdHJpbmd9IGNvZGUgLSBPcmlnaW5hbCBjb2RlIHBhc3NlZCBpbi5cclxuICogQHByb3BlcnR5IHtOdW1iZXJ9IG9wIC0gT3Bjb2RlLlxyXG4gKiBAcHJvcGVydHkge051bWJlcn0gaXAgLSBJbnN0cnVjdGlvbiBwb2ludGVyLlxyXG4gKi9cclxuXHJcbmNsYXNzIFNjcmlwdEVycm9yIGV4dGVuZHMgRXJyb3Ige1xyXG4gIC8qKlxyXG4gICAqIENyZWF0ZSBhbiBlcnJvci5cclxuICAgKiBAY29uc3RydWN0b3JcclxuICAgKiBAcGFyYW0ge1N0cmluZ30gY29kZSAtIEVycm9yIGNvZGUuXHJcbiAgICogQHBhcmFtIHtPcGNvZGV9IG9wIC0gT3Bjb2RlLlxyXG4gICAqIEBwYXJhbSB7TnVtYmVyP30gaXAgLSBJbnN0cnVjdGlvbiBwb2ludGVyLlxyXG4gICAqL1xyXG5cclxuICBjb25zdHJ1Y3Rvcihjb2RlLCBvcCwgaXApIHtcclxuICAgIHN1cGVyKCk7XHJcblxyXG4gICAgdGhpcy50eXBlID0gJ1NjcmlwdEVycm9yJztcclxuICAgIHRoaXMuY29kZSA9IGNvZGU7XHJcbiAgICB0aGlzLm1lc3NhZ2UgPSBjb2RlO1xyXG4gICAgdGhpcy5vcCA9IC0xO1xyXG4gICAgdGhpcy5pcCA9IC0xO1xyXG5cclxuICAgIGlmICh0eXBlb2Ygb3AgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgIHRoaXMubWVzc2FnZSA9IG9wO1xyXG4gICAgfSBlbHNlIGlmIChvcCkge1xyXG4gICAgICB0aGlzLm1lc3NhZ2UgPSBgJHtjb2RlfSAob3A9JHtvcC50b1N5bWJvbCgpfSwgaXA9JHtpcH0pYDtcclxuICAgICAgdGhpcy5vcCA9IG9wLnZhbHVlO1xyXG4gICAgICB0aGlzLmlwID0gaXA7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKVxyXG4gICAgICBFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLCBTY3JpcHRFcnJvcik7XHJcbiAgfVxyXG59XHJcblxyXG4vKlxyXG4gKiBFeHBvc2VcclxuICovXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IFNjcmlwdEVycm9yO1xyXG4iXX0=
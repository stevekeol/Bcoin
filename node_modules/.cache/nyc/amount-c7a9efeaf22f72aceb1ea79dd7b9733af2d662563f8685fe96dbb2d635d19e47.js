/*!
 * amount.js - amount object for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */'use strict';function cov_prvy140zu(){var path="E:\\Projects\\Test\\bcoin\\lib\\btc\\amount.js";var hash="56cb4cbeccf6cf1db5b2021f464af898131c7904";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\Projects\\Test\\bcoin\\lib\\btc\\amount.js",statementMap:{"0":{start:{line:9,column:15},end:{line:9,column:31}},"1":{start:{line:10,column:14},end:{line:10,column:39}},"2":{start:{line:11,column:24},end:{line:11,column:43}},"3":{start:{line:29,column:4},end:{line:29,column:19}},"4":{start:{line:31,column:4},end:{line:32,column:36}},"5":{start:{line:32,column:6},end:{line:32,column:36}},"6":{start:{line:44,column:4},end:{line:45,column:36}},"7":{start:{line:45,column:6},end:{line:45,column:36}},"8":{start:{line:47,column:4},end:{line:48,column:35}},"9":{start:{line:48,column:6},end:{line:48,column:35}},"10":{start:{line:50,column:4},end:{line:50,column:31}},"11":{start:{line:59,column:4},end:{line:59,column:22}},"12":{start:{line:69,column:4},end:{line:70,column:24}},"13":{start:{line:70,column:6},end:{line:70,column:24}},"14":{start:{line:72,column:4},end:{line:72,column:35}},"15":{start:{line:82,column:4},end:{line:82,column:45}},"16":{start:{line:92,column:4},end:{line:92,column:45}},"17":{start:{line:102,column:4},end:{line:102,column:45}},"18":{start:{line:114,column:4},end:{line:124,column:5}},"19":{start:{line:116,column:8},end:{line:116,column:36}},"20":{start:{line:119,column:8},end:{line:119,column:32}},"21":{start:{line:121,column:8},end:{line:121,column:32}},"22":{start:{line:123,column:8},end:{line:123,column:31}},"23":{start:{line:125,column:4},end:{line:125,column:47}},"24":{start:{line:134,column:4},end:{line:134,column:24}},"25":{start:{line:145,column:4},end:{line:146,column:33}},"26":{start:{line:147,column:4},end:{line:147,column:23}},"27":{start:{line:148,column:4},end:{line:148,column:16}},"28":{start:{line:159,column:4},end:{line:159,column:41}},"29":{start:{line:160,column:4},end:{line:160,column:16}},"30":{start:{line:171,column:4},end:{line:171,column:41}},"31":{start:{line:172,column:4},end:{line:172,column:16}},"32":{start:{line:183,column:4},end:{line:183,column:41}},"33":{start:{line:184,column:4},end:{line:184,column:16}},"34":{start:{line:195,column:4},end:{line:195,column:41}},"35":{start:{line:196,column:4},end:{line:196,column:16}},"36":{start:{line:208,column:4},end:{line:218,column:5}},"37":{start:{line:210,column:8},end:{line:210,column:40}},"38":{start:{line:213,column:8},end:{line:213,column:36}},"39":{start:{line:215,column:8},end:{line:215,column:36}},"40":{start:{line:217,column:8},end:{line:217,column:35}},"41":{start:{line:219,column:4},end:{line:219,column:47}},"42":{start:{line:230,column:4},end:{line:230,column:47}},"43":{start:{line:241,column:4},end:{line:241,column:39}},"44":{start:{line:251,column:4},end:{line:251,column:42}},"45":{start:{line:261,column:4},end:{line:261,column:38}},"46":{start:{line:271,column:4},end:{line:271,column:38}},"47":{start:{line:281,column:4},end:{line:281,column:37}},"48":{start:{line:292,column:4},end:{line:292,column:40}},"49":{start:{line:301,column:4},end:{line:301,column:42}},"50":{start:{line:313,column:4},end:{line:314,column:19}},"51":{start:{line:314,column:6},end:{line:314,column:19}},"52":{start:{line:316,column:4},end:{line:316,column:40}},"53":{start:{line:327,column:4},end:{line:328,column:17}},"54":{start:{line:328,column:6},end:{line:328,column:17}},"55":{start:{line:330,column:4},end:{line:330,column:33}},"56":{start:{line:342,column:4},end:{line:343,column:39}},"57":{start:{line:343,column:6},end:{line:343,column:39}},"58":{start:{line:344,column:4},end:{line:344,column:36}},"59":{start:{line:356,column:4},end:{line:357,column:41}},"60":{start:{line:357,column:6},end:{line:357,column:41}},"61":{start:{line:358,column:4},end:{line:358,column:36}},"62":{start:{line:366,column:0},end:{line:366,column:24}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:28,column:2},end:{line:28,column:3}},loc:{start:{line:28,column:27},end:{line:33,column:3}},line:28},"1":{name:"(anonymous_1)",decl:{start:{line:43,column:2},end:{line:43,column:3}},loc:{start:{line:43,column:27},end:{line:51,column:3}},line:43},"2":{name:"(anonymous_2)",decl:{start:{line:58,column:2},end:{line:58,column:3}},loc:{start:{line:58,column:12},end:{line:60,column:3}},line:58},"3":{name:"(anonymous_3)",decl:{start:{line:68,column:2},end:{line:68,column:3}},loc:{start:{line:68,column:18},end:{line:73,column:3}},line:68},"4":{name:"(anonymous_4)",decl:{start:{line:81,column:2},end:{line:81,column:3}},loc:{start:{line:81,column:14},end:{line:83,column:3}},line:81},"5":{name:"(anonymous_5)",decl:{start:{line:91,column:2},end:{line:91,column:3}},loc:{start:{line:91,column:14},end:{line:93,column:3}},line:91},"6":{name:"(anonymous_6)",decl:{start:{line:101,column:2},end:{line:101,column:3}},loc:{start:{line:101,column:13},end:{line:103,column:3}},line:101},"7":{name:"(anonymous_7)",decl:{start:{line:113,column:2},end:{line:113,column:3}},loc:{start:{line:113,column:16},end:{line:126,column:3}},line:113},"8":{name:"(anonymous_8)",decl:{start:{line:133,column:2},end:{line:133,column:3}},loc:{start:{line:133,column:13},end:{line:135,column:3}},line:133},"9":{name:"(anonymous_9)",decl:{start:{line:144,column:2},end:{line:144,column:3}},loc:{start:{line:144,column:19},end:{line:149,column:3}},line:144},"10":{name:"(anonymous_10)",decl:{start:{line:158,column:2},end:{line:158,column:3}},loc:{start:{line:158,column:22},end:{line:161,column:3}},line:158},"11":{name:"(anonymous_11)",decl:{start:{line:170,column:2},end:{line:170,column:3}},loc:{start:{line:170,column:18},end:{line:173,column:3}},line:170},"12":{name:"(anonymous_12)",decl:{start:{line:182,column:2},end:{line:182,column:3}},loc:{start:{line:182,column:18},end:{line:185,column:3}},line:182},"13":{name:"(anonymous_13)",decl:{start:{line:194,column:2},end:{line:194,column:3}},loc:{start:{line:194,column:17},end:{line:197,column:3}},line:194},"14":{name:"(anonymous_14)",decl:{start:{line:207,column:2},end:{line:207,column:3}},loc:{start:{line:207,column:20},end:{line:220,column:3}},line:207},"15":{name:"(anonymous_15)",decl:{start:{line:229,column:2},end:{line:229,column:3}},loc:{start:{line:229,column:34},end:{line:231,column:3}},line:229},"16":{name:"(anonymous_16)",decl:{start:{line:240,column:2},end:{line:240,column:3}},loc:{start:{line:240,column:26},end:{line:242,column:3}},line:240},"17":{name:"(anonymous_17)",decl:{start:{line:250,column:2},end:{line:250,column:3}},loc:{start:{line:250,column:29},end:{line:252,column:3}},line:250},"18":{name:"(anonymous_18)",decl:{start:{line:260,column:2},end:{line:260,column:3}},loc:{start:{line:260,column:25},end:{line:262,column:3}},line:260},"19":{name:"(anonymous_19)",decl:{start:{line:270,column:2},end:{line:270,column:3}},loc:{start:{line:270,column:25},end:{line:272,column:3}},line:270},"20":{name:"(anonymous_20)",decl:{start:{line:280,column:2},end:{line:280,column:3}},loc:{start:{line:280,column:24},end:{line:282,column:3}},line:280},"21":{name:"(anonymous_21)",decl:{start:{line:291,column:2},end:{line:291,column:3}},loc:{start:{line:291,column:27},end:{line:293,column:3}},line:291},"22":{name:"(anonymous_22)",decl:{start:{line:300,column:2},end:{line:300,column:3}},loc:{start:{line:300,column:20},end:{line:302,column:3}},line:300},"23":{name:"(anonymous_23)",decl:{start:{line:312,column:2},end:{line:312,column:3}},loc:{start:{line:312,column:25},end:{line:317,column:3}},line:312},"24":{name:"(anonymous_24)",decl:{start:{line:326,column:2},end:{line:326,column:3}},loc:{start:{line:326,column:20},end:{line:331,column:3}},line:326},"25":{name:"(anonymous_25)",decl:{start:{line:341,column:2},end:{line:341,column:3}},loc:{start:{line:341,column:33},end:{line:345,column:3}},line:341},"26":{name:"(anonymous_26)",decl:{start:{line:355,column:2},end:{line:355,column:3}},loc:{start:{line:355,column:28},end:{line:359,column:3}},line:355}},branchMap:{"0":{loc:{start:{line:31,column:4},end:{line:32,column:36}},type:"if",locations:[{start:{line:31,column:4},end:{line:32,column:36}},{start:{line:31,column:4},end:{line:32,column:36}}],line:31},"1":{loc:{start:{line:44,column:4},end:{line:45,column:36}},type:"if",locations:[{start:{line:44,column:4},end:{line:45,column:36}},{start:{line:44,column:4},end:{line:45,column:36}}],line:44},"2":{loc:{start:{line:47,column:4},end:{line:48,column:35}},type:"if",locations:[{start:{line:47,column:4},end:{line:48,column:35}},{start:{line:47,column:4},end:{line:48,column:35}}],line:47},"3":{loc:{start:{line:69,column:4},end:{line:70,column:24}},type:"if",locations:[{start:{line:69,column:4},end:{line:70,column:24}},{start:{line:69,column:4},end:{line:70,column:24}}],line:69},"4":{loc:{start:{line:114,column:4},end:{line:124,column:5}},type:"switch",locations:[{start:{line:115,column:6},end:{line:116,column:36}},{start:{line:117,column:6},end:{line:117,column:18}},{start:{line:118,column:6},end:{line:119,column:32}},{start:{line:120,column:6},end:{line:121,column:32}},{start:{line:122,column:6},end:{line:123,column:31}}],line:114},"5":{loc:{start:{line:145,column:11},end:{line:145,column:52}},type:"binary-expr",locations:[{start:{line:145,column:11},end:{line:145,column:38}},{start:{line:145,column:42},end:{line:145,column:52}}],line:145},"6":{loc:{start:{line:208,column:4},end:{line:218,column:5}},type:"switch",locations:[{start:{line:209,column:6},end:{line:210,column:40}},{start:{line:211,column:6},end:{line:211,column:18}},{start:{line:212,column:6},end:{line:213,column:36}},{start:{line:214,column:6},end:{line:215,column:36}},{start:{line:216,column:6},end:{line:217,column:35}}],line:208},"7":{loc:{start:{line:313,column:4},end:{line:314,column:19}},type:"if",locations:[{start:{line:313,column:4},end:{line:314,column:19}},{start:{line:313,column:4},end:{line:314,column:19}}],line:313},"8":{loc:{start:{line:327,column:4},end:{line:328,column:17}},type:"if",locations:[{start:{line:327,column:4},end:{line:328,column:17}},{start:{line:327,column:4},end:{line:328,column:17}}],line:327},"9":{loc:{start:{line:342,column:4},end:{line:343,column:39}},type:"if",locations:[{start:{line:342,column:4},end:{line:343,column:39}},{start:{line:342,column:4},end:{line:343,column:39}}],line:342},"10":{loc:{start:{line:356,column:4},end:{line:357,column:41}},type:"if",locations:[{start:{line:356,column:4},end:{line:357,column:41}},{start:{line:356,column:4},end:{line:357,column:41}}],line:356}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0,0,0],"5":[0,0],"6":[0,0,0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"56cb4cbeccf6cf1db5b2021f464af898131c7904"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_prvy140zu=function(){return actualCoverage;};}return actualCoverage;}cov_prvy140zu();const assert=(cov_prvy140zu().s[0]++,require('bsert'));const fixed=(cov_prvy140zu().s[1]++,require('../utils/fixed'));const{inspectSymbol}=(cov_prvy140zu().s[2]++,require('../utils'));/**
 * Amount
 * Represents a bitcoin amount (satoshis internally).
 * @alias module:btc.Amount
 * @property {Amount} value
 */class Amount{/**
   * Create an amount.
   * @constructor
   * @param {(String|Number)?} value
   * @param {String?} unit
   */constructor(value,unit){cov_prvy140zu().f[0]++;cov_prvy140zu().s[3]++;this.value=0;cov_prvy140zu().s[4]++;if(value!=null){cov_prvy140zu().b[0][0]++;cov_prvy140zu().s[5]++;this.fromOptions(value,unit);}else{cov_prvy140zu().b[0][1]++;}}/**
   * Inject properties from options.
   * @private
   * @param {(String|Number)?} value
   * @param {String?} unit
   * @returns {Amount}
   */fromOptions(value,unit){cov_prvy140zu().f[1]++;cov_prvy140zu().s[6]++;if(typeof unit==='string'){cov_prvy140zu().b[1][0]++;cov_prvy140zu().s[7]++;return this.from(unit,value);}else{cov_prvy140zu().b[1][1]++;}cov_prvy140zu().s[8]++;if(typeof value==='number'){cov_prvy140zu().b[2][0]++;cov_prvy140zu().s[9]++;return this.fromValue(value);}else{cov_prvy140zu().b[2][1]++;}cov_prvy140zu().s[10]++;return this.fromBTC(value);}/**
   * Get satoshi value.
   * @returns {Amount}
   */toValue(){cov_prvy140zu().f[2]++;cov_prvy140zu().s[11]++;return this.value;}/**
   * Get satoshi string or value.
   * @param {Boolean?} num
   * @returns {String|Amount}
   */toSatoshis(num){cov_prvy140zu().f[3]++;cov_prvy140zu().s[12]++;if(num){cov_prvy140zu().b[3][0]++;cov_prvy140zu().s[13]++;return this.value;}else{cov_prvy140zu().b[3][1]++;}cov_prvy140zu().s[14]++;return this.value.toString(10);}/**
   * Get bits string or value.
   * @param {Boolean?} num
   * @returns {String|Amount}
   */toBits(num){cov_prvy140zu().f[4]++;cov_prvy140zu().s[15]++;return Amount.encode(this.value,2,num);}/**
   * Get mbtc string or value.
   * @param {Boolean?} num
   * @returns {String|Amount}
   */toMBTC(num){cov_prvy140zu().f[5]++;cov_prvy140zu().s[16]++;return Amount.encode(this.value,5,num);}/**
   * Get btc string or value.
   * @param {Boolean?} num
   * @returns {String|Amount}
   */toBTC(num){cov_prvy140zu().f[6]++;cov_prvy140zu().s[17]++;return Amount.encode(this.value,8,num);}/**
   * Get unit string or value.
   * @param {String} unit - Can be `sat`,
   * `ubtc`, `bits`, `mbtc`, or `btc`.
   * @param {Boolean?} num
   * @returns {String|Amount}
   */to(unit,num){cov_prvy140zu().f[7]++;cov_prvy140zu().s[18]++;switch(unit){case'sat':cov_prvy140zu().b[4][0]++;cov_prvy140zu().s[19]++;return this.toSatoshis(num);case'ubtc':cov_prvy140zu().b[4][1]++;case'bits':cov_prvy140zu().b[4][2]++;cov_prvy140zu().s[20]++;return this.toBits(num);case'mbtc':cov_prvy140zu().b[4][3]++;cov_prvy140zu().s[21]++;return this.toMBTC(num);case'btc':cov_prvy140zu().b[4][4]++;cov_prvy140zu().s[22]++;return this.toBTC(num);}cov_prvy140zu().s[23]++;throw new Error(`Unknown unit "${unit}".`);}/**
   * Convert amount to bitcoin string.
   * @returns {String}
   */toString(){cov_prvy140zu().f[8]++;cov_prvy140zu().s[24]++;return this.toBTC();}/**
   * Inject properties from value.
   * @private
   * @param {Amount} value
   * @returns {Amount}
   */fromValue(value){cov_prvy140zu().f[9]++;cov_prvy140zu().s[25]++;assert((cov_prvy140zu().b[5][0]++,Number.isSafeInteger(value))&&(cov_prvy140zu().b[5][1]++,value>=0),'Value must be an int64.');cov_prvy140zu().s[26]++;this.value=value;cov_prvy140zu().s[27]++;return this;}/**
   * Inject properties from satoshis.
   * @private
   * @param {Number|String} value
   * @returns {Amount}
   */fromSatoshis(value){cov_prvy140zu().f[10]++;cov_prvy140zu().s[28]++;this.value=Amount.decode(value,0);cov_prvy140zu().s[29]++;return this;}/**
   * Inject properties from bits.
   * @private
   * @param {Number|String} value
   * @returns {Amount}
   */fromBits(value){cov_prvy140zu().f[11]++;cov_prvy140zu().s[30]++;this.value=Amount.decode(value,2);cov_prvy140zu().s[31]++;return this;}/**
   * Inject properties from mbtc.
   * @private
   * @param {Number|String} value
   * @returns {Amount}
   */fromMBTC(value){cov_prvy140zu().f[12]++;cov_prvy140zu().s[32]++;this.value=Amount.decode(value,5);cov_prvy140zu().s[33]++;return this;}/**
   * Inject properties from btc.
   * @private
   * @param {Number|String} value
   * @returns {Amount}
   */fromBTC(value){cov_prvy140zu().f[13]++;cov_prvy140zu().s[34]++;this.value=Amount.decode(value,8);cov_prvy140zu().s[35]++;return this;}/**
   * Inject properties from unit.
   * @private
   * @param {String} unit
   * @param {Number|String} value
   * @returns {Amount}
   */from(unit,value){cov_prvy140zu().f[14]++;cov_prvy140zu().s[36]++;switch(unit){case'sat':cov_prvy140zu().b[6][0]++;cov_prvy140zu().s[37]++;return this.fromSatoshis(value);case'ubtc':cov_prvy140zu().b[6][1]++;case'bits':cov_prvy140zu().b[6][2]++;cov_prvy140zu().s[38]++;return this.fromBits(value);case'mbtc':cov_prvy140zu().b[6][3]++;cov_prvy140zu().s[39]++;return this.fromMBTC(value);case'btc':cov_prvy140zu().b[6][4]++;cov_prvy140zu().s[40]++;return this.fromBTC(value);}cov_prvy140zu().s[41]++;throw new Error(`Unknown unit "${unit}".`);}/**
   * Instantiate amount from options.
   * @param {(String|Number)?} value
   * @param {String?} unit
   * @returns {Amount}
   */static fromOptions(value,unit){cov_prvy140zu().f[15]++;cov_prvy140zu().s[42]++;return new this().fromOptions(value,unit);}/**
   * Instantiate amount from value.
   * @private
   * @param {Amount} value
   * @returns {Amount}
   */static fromValue(value){cov_prvy140zu().f[16]++;cov_prvy140zu().s[43]++;return new this().fromValue(value);}/**
   * Instantiate amount from satoshis.
   * @param {Number|String} value
   * @returns {Amount}
   */static fromSatoshis(value){cov_prvy140zu().f[17]++;cov_prvy140zu().s[44]++;return new this().fromSatoshis(value);}/**
   * Instantiate amount from bits.
   * @param {Number|String} value
   * @returns {Amount}
   */static fromBits(value){cov_prvy140zu().f[18]++;cov_prvy140zu().s[45]++;return new this().fromBits(value);}/**
   * Instantiate amount from mbtc.
   * @param {Number|String} value
   * @returns {Amount}
   */static fromMBTC(value){cov_prvy140zu().f[19]++;cov_prvy140zu().s[46]++;return new this().fromMBTC(value);}/**
   * Instantiate amount from btc.
   * @param {Number|String} value
   * @returns {Amount}
   */static fromBTC(value){cov_prvy140zu().f[20]++;cov_prvy140zu().s[47]++;return new this().fromBTC(value);}/**
   * Instantiate amount from unit.
   * @param {String} unit
   * @param {Number|String} value
   * @returns {Amount}
   */static from(unit,value){cov_prvy140zu().f[21]++;cov_prvy140zu().s[48]++;return new this().from(unit,value);}/**
   * Inspect amount.
   * @returns {String}
   */[inspectSymbol](){cov_prvy140zu().f[22]++;cov_prvy140zu().s[49]++;return`<Amount: ${this.toString()}>`;}/**
   * Safely convert satoshis to a BTC string.
   * This function explicitly avoids any
   * floating point arithmetic.
   * @param {Amount} value - Satoshis.
   * @returns {String} BTC string.
   */static btc(value,num){cov_prvy140zu().f[23]++;cov_prvy140zu().s[50]++;if(typeof value==='string'){cov_prvy140zu().b[7][0]++;cov_prvy140zu().s[51]++;return value;}else{cov_prvy140zu().b[7][1]++;}cov_prvy140zu().s[52]++;return Amount.encode(value,8,num);}/**
   * Safely convert a BTC string to satoshis.
   * @param {String} str - BTC
   * @returns {Amount} Satoshis.
   * @throws on parse error
   */static value(str){cov_prvy140zu().f[24]++;cov_prvy140zu().s[53]++;if(typeof str==='number'){cov_prvy140zu().b[8][0]++;cov_prvy140zu().s[54]++;return str;}else{cov_prvy140zu().b[8][1]++;}cov_prvy140zu().s[55]++;return Amount.decode(str,8);}/**
   * Safely convert satoshis to a BTC string.
   * @param {Amount} value
   * @param {Number} exp - Exponent.
   * @param {Boolean} num - Return a number.
   * @returns {String|Number}
   */static encode(value,exp,num){cov_prvy140zu().f[25]++;cov_prvy140zu().s[56]++;if(num){cov_prvy140zu().b[9][0]++;cov_prvy140zu().s[57]++;return fixed.toFloat(value,exp);}else{cov_prvy140zu().b[9][1]++;}cov_prvy140zu().s[58]++;return fixed.encode(value,exp);}/**
   * Safely convert a BTC string to satoshis.
   * @param {String|Number} value - BTC
   * @param {Number} exp - Exponent.
   * @returns {Amount} Satoshis.
   * @throws on parse error
   */static decode(value,exp){cov_prvy140zu().f[26]++;cov_prvy140zu().s[59]++;if(typeof value==='number'){cov_prvy140zu().b[10][0]++;cov_prvy140zu().s[60]++;return fixed.fromFloat(value,exp);}else{cov_prvy140zu().b[10][1]++;}cov_prvy140zu().s[61]++;return fixed.decode(value,exp);}}/*
 * Expose
 */cov_prvy140zu().s[62]++;module.exports=Amount;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
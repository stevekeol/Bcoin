/*!
 * consensus.js - consensus constants and helpers for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */'use strict';/**
 * @module protocol/consensus
 */function cov_2kys36tfym(){var path="E:\\Projects\\Test\\bcoin\\lib\\protocol\\consensus.js";var hash="e689837e3b54f9c1073c199fb6509736aec7f540";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\Projects\\Test\\bcoin\\lib\\protocol\\consensus.js",statementMap:{"0":{start:{line:14,column:15},end:{line:14,column:31}},"1":{start:{line:15,column:11},end:{line:15,column:39}},"2":{start:{line:23,column:0},end:{line:23,column:25}},"3":{start:{line:32,column:0},end:{line:32,column:44}},"4":{start:{line:44,column:0},end:{line:44,column:40}},"5":{start:{line:54,column:0},end:{line:54,column:58}},"6":{start:{line:62,column:0},end:{line:62,column:33}},"7":{start:{line:70,column:0},end:{line:70,column:37}},"8":{start:{line:78,column:0},end:{line:78,column:35}},"9":{start:{line:86,column:0},end:{line:86,column:40}},"10":{start:{line:94,column:0},end:{line:94,column:38}},"11":{start:{line:102,column:0},end:{line:102,column:29}},"12":{start:{line:111,column:0},end:{line:111,column:38}},"13":{start:{line:120,column:0},end:{line:120,column:38}},"14":{start:{line:129,column:0},end:{line:129,column:32}},"15":{start:{line:137,column:0},end:{line:137,column:33}},"16":{start:{line:147,column:0},end:{line:147,column:39}},"17":{start:{line:155,column:0},end:{line:155,column:48}},"18":{start:{line:163,column:0},end:{line:163,column:37}},"19":{start:{line:171,column:0},end:{line:171,column:33}},"20":{start:{line:179,column:0},end:{line:179,column:35}},"21":{start:{line:187,column:0},end:{line:187,column:32}},"22":{start:{line:195,column:0},end:{line:195,column:32}},"23":{start:{line:203,column:0},end:{line:203,column:30}},"24":{start:{line:211,column:0},end:{line:211,column:29}},"25":{start:{line:219,column:0},end:{line:219,column:34}},"26":{start:{line:227,column:0},end:{line:227,column:32}},"27":{start:{line:235,column:0},end:{line:235,column:43}},"28":{start:{line:244,column:0},end:{line:266,column:2}},"29":{start:{line:245,column:2},end:{line:246,column:21}},"30":{start:{line:246,column:4},end:{line:246,column:21}},"31":{start:{line:248,column:19},end:{line:248,column:33}},"32":{start:{line:249,column:19},end:{line:249,column:39}},"33":{start:{line:251,column:17},end:{line:251,column:35}},"34":{start:{line:254,column:2},end:{line:260,column:3}},"35":{start:{line:255,column:4},end:{line:255,column:37}},"36":{start:{line:256,column:4},end:{line:256,column:27}},"37":{start:{line:258,column:4},end:{line:258,column:27}},"38":{start:{line:259,column:4},end:{line:259,column:35}},"39":{start:{line:262,column:2},end:{line:263,column:15}},"40":{start:{line:263,column:4},end:{line:263,column:15}},"41":{start:{line:265,column:2},end:{line:265,column:13}},"42":{start:{line:275,column:0},end:{line:302,column:2}},"43":{start:{line:276,column:2},end:{line:277,column:13}},"44":{start:{line:277,column:4},end:{line:277,column:13}},"45":{start:{line:279,column:17},end:{line:279,column:33}},"46":{start:{line:282,column:2},end:{line:287,column:3}},"47":{start:{line:283,column:4},end:{line:283,column:30}},"48":{start:{line:284,column:4},end:{line:284,column:36}},"49":{start:{line:286,column:4},end:{line:286,column:56}},"50":{start:{line:289,column:2},end:{line:292,column:3}},"51":{start:{line:290,column:4},end:{line:290,column:19}},"52":{start:{line:291,column:4},end:{line:291,column:15}},"53":{start:{line:294,column:16},end:{line:294,column:43}},"54":{start:{line:296,column:2},end:{line:297,column:24}},"55":{start:{line:297,column:4},end:{line:297,column:24}},"56":{start:{line:299,column:2},end:{line:299,column:17}},"57":{start:{line:301,column:2},end:{line:301,column:17}},"58":{start:{line:311,column:0},end:{line:326,column:2}},"59":{start:{line:312,column:17},end:{line:312,column:42}},"60":{start:{line:314,column:2},end:{line:315,column:17}},"61":{start:{line:315,column:4},end:{line:315,column:17}},"62":{start:{line:317,column:2},end:{line:318,column:17}},"63":{start:{line:318,column:4},end:{line:318,column:17}},"64":{start:{line:320,column:14},end:{line:320,column:32}},"65":{start:{line:322,column:2},end:{line:323,column:17}},"66":{start:{line:323,column:4},end:{line:323,column:17}},"67":{start:{line:325,column:2},end:{line:325,column:14}},"68":{start:{line:334,column:0},end:{line:353,column:2}},"69":{start:{line:335,column:2},end:{line:335,column:48}},"70":{start:{line:337,column:19},end:{line:337,column:48}},"71":{start:{line:342,column:2},end:{line:343,column:13}},"72":{start:{line:343,column:4},end:{line:343,column:13}},"73":{start:{line:349,column:2},end:{line:350,column:31}},"74":{start:{line:350,column:4},end:{line:350,column:31}},"75":{start:{line:352,column:2},end:{line:352,column:48}},"76":{start:{line:362,column:0},end:{line:368,column:2}},"77":{start:{line:363,column:19},end:{line:363,column:43}},"78":{start:{line:364,column:19},end:{line:364,column:43}},"79":{start:{line:365,column:15},end:{line:365,column:41}},"80":{start:{line:366,column:15},end:{line:366,column:23}},"81":{start:{line:367,column:2},end:{line:367,column:53}}},fnMap:{"0":{name:"fromCompact",decl:{start:{line:244,column:31},end:{line:244,column:42}},loc:{start:{line:244,column:52},end:{line:266,column:1}},line:244},"1":{name:"toCompact",decl:{start:{line:275,column:29},end:{line:275,column:38}},loc:{start:{line:275,column:44},end:{line:302,column:1}},line:275},"2":{name:"verifyPOW",decl:{start:{line:311,column:29},end:{line:311,column:38}},loc:{start:{line:311,column:51},end:{line:326,column:1}},line:311},"3":{name:"getReward",decl:{start:{line:334,column:29},end:{line:334,column:38}},loc:{start:{line:334,column:57},end:{line:353,column:1}},line:334},"4":{name:"hasBit",decl:{start:{line:362,column:26},end:{line:362,column:32}},loc:{start:{line:362,column:47},end:{line:368,column:1}},line:362}},branchMap:{"0":{loc:{start:{line:245,column:2},end:{line:246,column:21}},type:"if",locations:[{start:{line:245,column:2},end:{line:246,column:21}},{start:{line:245,column:2},end:{line:246,column:21}}],line:245},"1":{loc:{start:{line:254,column:2},end:{line:260,column:3}},type:"if",locations:[{start:{line:254,column:2},end:{line:260,column:3}},{start:{line:254,column:2},end:{line:260,column:3}}],line:254},"2":{loc:{start:{line:262,column:2},end:{line:263,column:15}},type:"if",locations:[{start:{line:262,column:2},end:{line:263,column:15}},{start:{line:262,column:2},end:{line:263,column:15}}],line:262},"3":{loc:{start:{line:276,column:2},end:{line:277,column:13}},type:"if",locations:[{start:{line:276,column:2},end:{line:277,column:13}},{start:{line:276,column:2},end:{line:277,column:13}}],line:276},"4":{loc:{start:{line:282,column:2},end:{line:287,column:3}},type:"if",locations:[{start:{line:282,column:2},end:{line:287,column:3}},{start:{line:282,column:2},end:{line:287,column:3}}],line:282},"5":{loc:{start:{line:289,column:2},end:{line:292,column:3}},type:"if",locations:[{start:{line:289,column:2},end:{line:292,column:3}},{start:{line:289,column:2},end:{line:292,column:3}}],line:289},"6":{loc:{start:{line:296,column:2},end:{line:297,column:24}},type:"if",locations:[{start:{line:296,column:2},end:{line:297,column:24}},{start:{line:296,column:2},end:{line:297,column:24}}],line:296},"7":{loc:{start:{line:314,column:2},end:{line:315,column:17}},type:"if",locations:[{start:{line:314,column:2},end:{line:315,column:17}},{start:{line:314,column:2},end:{line:315,column:17}}],line:314},"8":{loc:{start:{line:314,column:6},end:{line:314,column:39}},type:"binary-expr",locations:[{start:{line:314,column:6},end:{line:314,column:20}},{start:{line:314,column:24},end:{line:314,column:39}}],line:314},"9":{loc:{start:{line:317,column:2},end:{line:318,column:17}},type:"if",locations:[{start:{line:317,column:2},end:{line:318,column:17}},{start:{line:317,column:2},end:{line:318,column:17}}],line:317},"10":{loc:{start:{line:322,column:2},end:{line:323,column:17}},type:"if",locations:[{start:{line:322,column:2},end:{line:323,column:17}},{start:{line:322,column:2},end:{line:323,column:17}}],line:322},"11":{loc:{start:{line:342,column:2},end:{line:343,column:13}},type:"if",locations:[{start:{line:342,column:2},end:{line:343,column:13}},{start:{line:342,column:2},end:{line:343,column:13}}],line:342},"12":{loc:{start:{line:349,column:2},end:{line:350,column:31}},type:"if",locations:[{start:{line:349,column:2},end:{line:350,column:31}},{start:{line:349,column:2},end:{line:350,column:31}}],line:349},"13":{loc:{start:{line:367,column:9},end:{line:367,column:52}},type:"binary-expr",locations:[{start:{line:367,column:9},end:{line:367,column:26}},{start:{line:367,column:30},end:{line:367,column:52}}],line:367}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"e689837e3b54f9c1073c199fb6509736aec7f540"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2kys36tfym=function(){return actualCoverage;};}return actualCoverage;}cov_2kys36tfym();const assert=(cov_2kys36tfym().s[0]++,require('bsert'));const BN=(cov_2kys36tfym().s[1]++,require('bcrypto/lib/bn.js'));/**
 * One bitcoin in satoshis.
 * @const {Amount}
 * @default
 */cov_2kys36tfym().s[2]++;exports.COIN=100000000;/**
 * Maximum amount of money in satoshis:
 * `21million * 1btc` (consensus).
 * @const {Amount}
 * @default
 */cov_2kys36tfym().s[3]++;exports.MAX_MONEY=21000000*exports.COIN;/**
 * Base block subsidy (consensus).
 * Note to shitcoin implementors: if you
 * increase this to anything greater than
 * 33 bits, getReward will have to be
 * modified to handle the shifts.
 * @const {Amount}
 * @default
 */cov_2kys36tfym().s[4]++;exports.BASE_REWARD=50*exports.COIN;/**
 * Half base block subsidy. Required to
 * calculate the reward properly (with
 * only 32 bit shifts available).
 * @const {Amount}
 * @default
 */cov_2kys36tfym().s[5]++;exports.HALF_REWARD=Math.floor(exports.BASE_REWARD/2);/**
 * Maximum block base size (consensus).
 * @const {Number}
 * @default
 */cov_2kys36tfym().s[6]++;exports.MAX_BLOCK_SIZE=1000000;/**
 * Maximum block serialization size (protocol).
 * @const {Number}
 * @default
 */cov_2kys36tfym().s[7]++;exports.MAX_RAW_BLOCK_SIZE=4000000;/**
 * Maximum block weight (consensus).
 * @const {Number}
 * @default
 */cov_2kys36tfym().s[8]++;exports.MAX_BLOCK_WEIGHT=4000000;/**
 * Maximum block sigops (consensus).
 * @const {Number}
 * @default
 */cov_2kys36tfym().s[9]++;exports.MAX_BLOCK_SIGOPS=1000000/50;/**
 * Maximum block sigops cost (consensus).
 * @const {Number}
 * @default
 */cov_2kys36tfym().s[10]++;exports.MAX_BLOCK_SIGOPS_COST=80000;/**
 * Size of set to pick median time from.
 * @const {Number}
 * @default
 */cov_2kys36tfym().s[11]++;exports.MEDIAN_TIMESPAN=11;/**
 * What bits to set in version
 * for versionbits blocks.
 * @const {Number}
 * @default
 */cov_2kys36tfym().s[12]++;exports.VERSION_TOP_BITS=0x20000000;/**
 * What bitmask determines whether
 * versionbits is in use.
 * @const {Number}
 * @default
 */cov_2kys36tfym().s[13]++;exports.VERSION_TOP_MASK=0xe0000000;/**
 * Number of blocks before a coinbase
 * spend can occur (consensus).
 * @const {Number}
 * @default
 */cov_2kys36tfym().s[14]++;exports.COINBASE_MATURITY=100;/**
 * Amount to multiply base/non-witness sizes by.
 * @const {Number}
 * @default
 */cov_2kys36tfym().s[15]++;exports.WITNESS_SCALE_FACTOR=4;/**
 * nLockTime threshold for differentiating
 * between height and time (consensus).
 * Tue Nov 5 00:53:20 1985 UTC
 * @const {Number}
 * @default
 */cov_2kys36tfym().s[16]++;exports.LOCKTIME_THRESHOLD=500000000;/**
 * Highest nSequence bit -- disables
 * sequence locktimes (consensus).
 * @const {Number}
 */cov_2kys36tfym().s[17]++;exports.SEQUENCE_DISABLE_FLAG=1<<31>>>0;/**
 * Sequence time: height or time (consensus).
 * @const {Number}
 * @default
 */cov_2kys36tfym().s[18]++;exports.SEQUENCE_TYPE_FLAG=1<<22;/**
 * Sequence granularity for time (consensus).
 * @const {Number}
 * @default
 */cov_2kys36tfym().s[19]++;exports.SEQUENCE_GRANULARITY=9;/**
 * Sequence mask (consensus).
 * @const {Number}
 * @default
 */cov_2kys36tfym().s[20]++;exports.SEQUENCE_MASK=0x0000ffff;/**
 * Max serialized script size (consensus).
 * @const {Number}
 * @default
 */cov_2kys36tfym().s[21]++;exports.MAX_SCRIPT_SIZE=10000;/**
 * Max stack size during execution (consensus).
 * @const {Number}
 * @default
 */cov_2kys36tfym().s[22]++;exports.MAX_SCRIPT_STACK=1000;/**
 * Max script element size (consensus).
 * @const {Number}
 * @default
 */cov_2kys36tfym().s[23]++;exports.MAX_SCRIPT_PUSH=520;/**
 * Max opcodes executed (consensus).
 * @const {Number}
 * @default
 */cov_2kys36tfym().s[24]++;exports.MAX_SCRIPT_OPS=201;/**
 * Max `n` value for multisig (consensus).
 * @const {Number}
 * @default
 */cov_2kys36tfym().s[25]++;exports.MAX_MULTISIG_PUBKEYS=20;/**
 * The date bip16 (p2sh) was activated (consensus).
 * @const {Number}
 * @default
 */cov_2kys36tfym().s[26]++;exports.BIP16_TIME=1333238400;/**
 * A hash of all zeroes.
 * @const {Buffer}
 * @default
 */cov_2kys36tfym().s[27]++;exports.ZERO_HASH=Buffer.alloc(32,0x00);/**
 * Convert a compact number to a big number.
 * Used for `block.bits` -> `target` conversion.
 * @param {Number} compact
 * @returns {BN}
 */cov_2kys36tfym().s[28]++;exports.fromCompact=function fromCompact(compact){cov_2kys36tfym().f[0]++;cov_2kys36tfym().s[29]++;if(compact===0){cov_2kys36tfym().b[0][0]++;cov_2kys36tfym().s[30]++;return new BN(0);}else{cov_2kys36tfym().b[0][1]++;}const exponent=(cov_2kys36tfym().s[31]++,compact>>>24);const negative=(cov_2kys36tfym().s[32]++,compact>>>23&1);let mantissa=(cov_2kys36tfym().s[33]++,compact&0x7fffff);let num;cov_2kys36tfym().s[34]++;if(exponent<=3){cov_2kys36tfym().b[1][0]++;cov_2kys36tfym().s[35]++;mantissa>>>=8*(3-exponent);cov_2kys36tfym().s[36]++;num=new BN(mantissa);}else{cov_2kys36tfym().b[1][1]++;cov_2kys36tfym().s[37]++;num=new BN(mantissa);cov_2kys36tfym().s[38]++;num.iushln(8*(exponent-3));}cov_2kys36tfym().s[39]++;if(negative){cov_2kys36tfym().b[2][0]++;cov_2kys36tfym().s[40]++;num.ineg();}else{cov_2kys36tfym().b[2][1]++;}cov_2kys36tfym().s[41]++;return num;};/**
 * Convert a big number to a compact number.
 * Used for `target` -> `block.bits` conversion.
 * @param {BN} num
 * @returns {Number}
 */cov_2kys36tfym().s[42]++;exports.toCompact=function toCompact(num){cov_2kys36tfym().f[1]++;cov_2kys36tfym().s[43]++;if(num.isZero()){cov_2kys36tfym().b[3][0]++;cov_2kys36tfym().s[44]++;return 0;}else{cov_2kys36tfym().b[3][1]++;}let exponent=(cov_2kys36tfym().s[45]++,num.byteLength());let mantissa;cov_2kys36tfym().s[46]++;if(exponent<=3){cov_2kys36tfym().b[4][0]++;cov_2kys36tfym().s[47]++;mantissa=num.toNumber();cov_2kys36tfym().s[48]++;mantissa<<=8*(3-exponent);}else{cov_2kys36tfym().b[4][1]++;cov_2kys36tfym().s[49]++;mantissa=num.ushrn(8*(exponent-3)).toNumber();}cov_2kys36tfym().s[50]++;if(mantissa&0x800000){cov_2kys36tfym().b[5][0]++;cov_2kys36tfym().s[51]++;mantissa>>=8;cov_2kys36tfym().s[52]++;exponent++;}else{cov_2kys36tfym().b[5][1]++;}let compact=(cov_2kys36tfym().s[53]++,exponent<<24|mantissa);cov_2kys36tfym().s[54]++;if(num.isNeg()){cov_2kys36tfym().b[6][0]++;cov_2kys36tfym().s[55]++;compact|=0x800000;}else{cov_2kys36tfym().b[6][1]++;}cov_2kys36tfym().s[56]++;compact>>>=0;cov_2kys36tfym().s[57]++;return compact;};/**
 * Verify proof-of-work.
 * @param {Hash} hash
 * @param {Number} bits
 * @returns {Boolean}
 */cov_2kys36tfym().s[58]++;exports.verifyPOW=function verifyPOW(hash,bits){cov_2kys36tfym().f[2]++;const target=(cov_2kys36tfym().s[59]++,exports.fromCompact(bits));cov_2kys36tfym().s[60]++;if((cov_2kys36tfym().b[8][0]++,target.isNeg())||(cov_2kys36tfym().b[8][1]++,target.isZero())){cov_2kys36tfym().b[7][0]++;cov_2kys36tfym().s[61]++;return false;}else{cov_2kys36tfym().b[7][1]++;}cov_2kys36tfym().s[62]++;if(target.bitLength()>256){cov_2kys36tfym().b[9][0]++;cov_2kys36tfym().s[63]++;return false;}else{cov_2kys36tfym().b[9][1]++;}const num=(cov_2kys36tfym().s[64]++,new BN(hash,'le'));cov_2kys36tfym().s[65]++;if(num.gt(target)){cov_2kys36tfym().b[10][0]++;cov_2kys36tfym().s[66]++;return false;}else{cov_2kys36tfym().b[10][1]++;}cov_2kys36tfym().s[67]++;return true;};/**
 * Calculate block subsidy.
 * @param {Number} height - Reward era by height.
 * @returns {Amount}
 */cov_2kys36tfym().s[68]++;exports.getReward=function getReward(height,interval){cov_2kys36tfym().f[3]++;cov_2kys36tfym().s[69]++;assert(height>=0,'Bad height for reward.');const halvings=(cov_2kys36tfym().s[70]++,Math.floor(height/interval));// BIP 42 (well, our own version of it,
// since we can only handle 32 bit shifts).
// https://github.com/bitcoin/bips/blob/master/bip-0042.mediawiki
cov_2kys36tfym().s[71]++;if(halvings>=33){cov_2kys36tfym().b[11][0]++;cov_2kys36tfym().s[72]++;return 0;}else{cov_2kys36tfym().b[11][1]++;}// We need to shift right by `halvings`,
// but 50 btc is a 33 bit number, so we
// cheat. We only start halving once the
// halvings are at least 1.
cov_2kys36tfym().s[73]++;if(halvings===0){cov_2kys36tfym().b[12][0]++;cov_2kys36tfym().s[74]++;return exports.BASE_REWARD;}else{cov_2kys36tfym().b[12][1]++;}cov_2kys36tfym().s[75]++;return exports.HALF_REWARD>>>halvings-1;};/**
 * Test version bit.
 * @param {Number} version
 * @param {Number} bit
 * @returns {Boolean}
 */cov_2kys36tfym().s[76]++;exports.hasBit=function hasBit(version,bit){cov_2kys36tfym().f[4]++;const TOP_MASK=(cov_2kys36tfym().s[77]++,exports.VERSION_TOP_MASK);const TOP_BITS=(cov_2kys36tfym().s[78]++,exports.VERSION_TOP_BITS);const bits=(cov_2kys36tfym().s[79]++,(version&TOP_MASK)>>>0);const mask=(cov_2kys36tfym().s[80]++,1<<bit);cov_2kys36tfym().s[81]++;return(cov_2kys36tfym().b[13][0]++,bits===TOP_BITS)&&(cov_2kys36tfym().b[13][1]++,(version&mask)!==0);};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
/*!
 * node.js - node object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */'use strict';function cov_2adnldubfk(){var path="E:\\Projects\\Test\\bcoin\\lib\\node\\node.js";var hash="4e84159aa4756b10ce432051771ebf37ed95dd0d";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\Projects\\Test\\bcoin\\lib\\node\\node.js",statementMap:{"0":{start:{line:10,column:15},end:{line:10,column:31}},"1":{start:{line:11,column:21},end:{line:11,column:38}},"2":{start:{line:12,column:11},end:{line:12,column:27}},"3":{start:{line:13,column:15},end:{line:13,column:30}},"4":{start:{line:14,column:15},end:{line:14,column:30}},"5":{start:{line:15,column:16},end:{line:15,column:46}},"6":{start:{line:16,column:19},end:{line:16,column:51}},"7":{start:{line:35,column:4},end:{line:35,column:12}},"8":{start:{line:37,column:4},end:{line:41,column:7}},"9":{start:{line:43,column:4},end:{line:43,column:32}},"10":{start:{line:44,column:4},end:{line:44,column:30}},"11":{start:{line:46,column:4},end:{line:47,column:31}},"12":{start:{line:47,column:6},end:{line:47,column:31}},"13":{start:{line:49,column:4},end:{line:49,column:56}},"14":{start:{line:50,column:4},end:{line:50,column:51}},"15":{start:{line:51,column:4},end:{line:51,column:24}},"16":{start:{line:52,column:4},end:{line:52,column:20}},"17":{start:{line:53,column:4},end:{line:53,column:39}},"18":{start:{line:54,column:4},end:{line:54,column:20}},"19":{start:{line:56,column:4},end:{line:56,column:23}},"20":{start:{line:57,column:4},end:{line:57,column:24}},"21":{start:{line:59,column:4},end:{line:59,column:21}},"22":{start:{line:60,column:4},end:{line:60,column:23}},"23":{start:{line:61,column:4},end:{line:61,column:22}},"24":{start:{line:62,column:4},end:{line:62,column:21}},"25":{start:{line:63,column:4},end:{line:63,column:24}},"26":{start:{line:64,column:4},end:{line:64,column:21}},"27":{start:{line:65,column:4},end:{line:65,column:22}},"28":{start:{line:66,column:4},end:{line:66,column:21}},"29":{start:{line:67,column:4},end:{line:67,column:24}},"30":{start:{line:68,column:4},end:{line:68,column:26}},"31":{start:{line:69,column:4},end:{line:69,column:28}},"32":{start:{line:71,column:4},end:{line:71,column:21}},"33":{start:{line:81,column:19},end:{line:81,column:30}},"34":{start:{line:83,column:17},end:{line:83,column:29}},"35":{start:{line:85,column:4},end:{line:86,column:36}},"36":{start:{line:86,column:6},end:{line:86,column:36}},"37":{start:{line:88,column:4},end:{line:95,column:7}},"38":{start:{line:97,column:4},end:{line:97,column:41}},"39":{start:{line:99,column:4},end:{line:104,column:7}},"40":{start:{line:106,column:4},end:{line:106,column:31}},"41":{start:{line:108,column:4},end:{line:110,column:7}},"42":{start:{line:109,column:6},end:{line:109,column:65}},"43":{start:{line:112,column:4},end:{line:114,column:7}},"44":{start:{line:113,column:6},end:{line:113,column:67}},"45":{start:{line:116,column:4},end:{line:119,column:7}},"46":{start:{line:117,column:6},end:{line:117,column:53}},"47":{start:{line:118,column:6},end:{line:118,column:30}},"48":{start:{line:121,column:4},end:{line:127,column:7}},"49":{start:{line:122,column:6},end:{line:125,column:7}},"50":{start:{line:123,column:8},end:{line:123,column:72}},"51":{start:{line:124,column:8},end:{line:124,column:15}},"52":{start:{line:126,column:6},end:{line:126,column:30}},"53":{start:{line:136,column:4},end:{line:137,column:23}},"54":{start:{line:137,column:6},end:{line:137,column:23}},"55":{start:{line:139,column:4},end:{line:140,column:23}},"56":{start:{line:140,column:6},end:{line:140,column:23}},"57":{start:{line:142,column:4},end:{line:143,column:33}},"58":{start:{line:143,column:6},end:{line:143,column:33}},"59":{start:{line:145,column:4},end:{line:145,column:41}},"60":{start:{line:155,column:4},end:{line:155,column:38}},"61":{start:{line:164,column:4},end:{line:164,column:29}},"62":{start:{line:165,column:4},end:{line:165,column:30}},"63":{start:{line:167,column:4},end:{line:171,column:7}},"64":{start:{line:168,column:6},end:{line:170,column:33}},"65":{start:{line:173,column:4},end:{line:177,column:7}},"66":{start:{line:174,column:6},end:{line:176,column:40}},"67":{start:{line:179,column:4},end:{line:182,column:7}},"68":{start:{line:180,column:6},end:{line:180,column:53}},"69":{start:{line:181,column:6},end:{line:181,column:76}},"70":{start:{line:191,column:4},end:{line:191,column:32}},"71":{start:{line:193,column:4},end:{line:196,column:5}},"72":{start:{line:194,column:6},end:{line:194,column:63}},"73":{start:{line:195,column:6},end:{line:195,column:56}},"74":{start:{line:214,column:4},end:{line:215,column:42}},"75":{start:{line:215,column:6},end:{line:215,column:42}},"76":{start:{line:217,column:4},end:{line:217,column:26}},"77":{start:{line:218,column:4},end:{line:218,column:24}},"78":{start:{line:220,column:4},end:{line:220,column:40}},"79":{start:{line:222,column:4},end:{line:222,column:31}},"80":{start:{line:223,column:4},end:{line:223,column:30}},"81":{start:{line:235,column:4},end:{line:235,column:44}},"82":{start:{line:236,column:4},end:{line:236,column:28}},"83":{start:{line:246,column:4},end:{line:246,column:27}},"84":{start:{line:247,column:4},end:{line:247,column:28}},"85":{start:{line:256,column:4},end:{line:257,column:15}},"86":{start:{line:257,column:6},end:{line:257,column:15}},"87":{start:{line:259,column:4},end:{line:259,column:60}},"88":{start:{line:269,column:4},end:{line:269,column:48}},"89":{start:{line:270,column:4},end:{line:270,column:76}},"90":{start:{line:272,column:4},end:{line:272,column:68}},"91":{start:{line:274,column:21},end:{line:274,column:38}},"92":{start:{line:276,column:4},end:{line:277,column:36}},"93":{start:{line:278,column:4},end:{line:279,column:37}},"94":{start:{line:281,column:4},end:{line:300,column:5}},"95":{start:{line:282,column:6},end:{line:282,column:70}},"96":{start:{line:285,column:6},end:{line:295,column:7}},"97":{start:{line:293,column:10},end:{line:293,column:58}},"98":{start:{line:294,column:10},end:{line:294,column:16}},"99":{start:{line:297,column:6},end:{line:297,column:73}},"100":{start:{line:299,column:6},end:{line:299,column:41}},"101":{start:{line:302,column:4},end:{line:302,column:30}},"102":{start:{line:304,column:4},end:{line:305,column:51}},"103":{start:{line:305,column:6},end:{line:305,column:51}},"104":{start:{line:305,column:34},end:{line:305,column:49}},"105":{start:{line:307,column:4},end:{line:307,column:20}},"106":{start:{line:317,column:4},end:{line:317,column:38}},"107":{start:{line:327,column:4},end:{line:327,column:70}},"108":{start:{line:330,column:4},end:{line:352,column:5}},"109":{start:{line:332,column:8},end:{line:332,column:51}},"110":{start:{line:333,column:8},end:{line:333,column:26}},"111":{start:{line:335,column:8},end:{line:335,column:49}},"112":{start:{line:336,column:8},end:{line:336,column:25}},"113":{start:{line:338,column:8},end:{line:338,column:55}},"114":{start:{line:339,column:8},end:{line:339,column:28}},"115":{start:{line:341,column:8},end:{line:341,column:51}},"116":{start:{line:342,column:8},end:{line:342,column:26}},"117":{start:{line:344,column:8},end:{line:344,column:49}},"118":{start:{line:345,column:8},end:{line:345,column:25}},"119":{start:{line:347,column:8},end:{line:347,column:47}},"120":{start:{line:348,column:8},end:{line:348,column:24}},"121":{start:{line:350,column:8},end:{line:350,column:49}},"122":{start:{line:351,column:8},end:{line:351,column:25}},"123":{start:{line:354,column:4},end:{line:354,column:38}},"124":{start:{line:365,column:19},end:{line:365,column:33}},"125":{start:{line:366,column:4},end:{line:366,column:45}},"126":{start:{line:367,column:4},end:{line:367,column:18}},"127":{start:{line:376,column:20},end:{line:376,column:52}},"128":{start:{line:377,column:19},end:{line:377,column:45}},"129":{start:{line:379,column:4},end:{line:385,column:5}},"130":{start:{line:380,column:6},end:{line:383,column:7}},"131":{start:{line:381,column:8},end:{line:381,column:55}},"132":{start:{line:382,column:8},end:{line:382,column:32}},"133":{start:{line:384,column:6},end:{line:384,column:23}},"134":{start:{line:394,column:4},end:{line:397,column:5}},"135":{start:{line:395,column:6},end:{line:396,column:28}},"136":{start:{line:396,column:8},end:{line:396,column:28}},"137":{start:{line:406,column:4},end:{line:409,column:5}},"138":{start:{line:407,column:6},end:{line:408,column:29}},"139":{start:{line:408,column:8},end:{line:408,column:29}},"140":{start:{line:417,column:0},end:{line:417,column:22}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:34,column:2},end:{line:34,column:3}},loc:{start:{line:34,column:45},end:{line:72,column:3}},line:34},"1":{name:"(anonymous_1)",decl:{start:{line:80,column:2},end:{line:80,column:3}},loc:{start:{line:80,column:14},end:{line:128,column:3}},line:80},"2":{name:"(anonymous_2)",decl:{start:{line:106,column:21},end:{line:106,column:22}},loc:{start:{line:106,column:27},end:{line:106,column:29}},line:106},"3":{name:"(anonymous_3)",decl:{start:{line:108,column:29},end:{line:108,column:30}},loc:{start:{line:108,column:40},end:{line:110,column:5}},line:108},"4":{name:"(anonymous_4)",decl:{start:{line:112,column:28},end:{line:112,column:29}},loc:{start:{line:112,column:45},end:{line:114,column:5}},line:112},"5":{name:"(anonymous_5)",decl:{start:{line:116,column:27},end:{line:116,column:28}},loc:{start:{line:116,column:44},end:{line:119,column:5}},line:116},"6":{name:"(anonymous_6)",decl:{start:{line:121,column:29},end:{line:121,column:30}},loc:{start:{line:121,column:45},end:{line:127,column:5}},line:121},"7":{name:"(anonymous_7)",decl:{start:{line:135,column:2},end:{line:135,column:3}},loc:{start:{line:135,column:17},end:{line:146,column:3}},line:135},"8":{name:"(anonymous_8)",decl:{start:{line:154,column:2},end:{line:154,column:3}},loc:{start:{line:154,column:17},end:{line:156,column:3}},line:154},"9":{name:"(anonymous_9)",decl:{start:{line:163,column:2},end:{line:163,column:3}},loc:{start:{line:163,column:24},end:{line:183,column:3}},line:163},"10":{name:"(anonymous_10)",decl:{start:{line:167,column:44},end:{line:167,column:45}},loc:{start:{line:167,column:56},end:{line:171,column:5}},line:167},"11":{name:"(anonymous_11)",decl:{start:{line:173,column:44},end:{line:173,column:45}},loc:{start:{line:173,column:63},end:{line:177,column:5}},line:173},"12":{name:"(anonymous_12)",decl:{start:{line:179,column:46},end:{line:179,column:47}},loc:{start:{line:179,column:52},end:{line:182,column:5}},line:179},"13":{name:"(anonymous_13)",decl:{start:{line:190,column:2},end:{line:190,column:3}},loc:{start:{line:190,column:21},end:{line:197,column:3}},line:190},"14":{name:"(anonymous_14)",decl:{start:{line:204,column:2},end:{line:204,column:3}},loc:{start:{line:204,column:25},end:{line:206,column:3}},line:204},"15":{name:"(anonymous_15)",decl:{start:{line:213,column:2},end:{line:213,column:3}},loc:{start:{line:213,column:22},end:{line:224,column:3}},line:213},"16":{name:"(anonymous_16)",decl:{start:{line:234,column:2},end:{line:234,column:3}},loc:{start:{line:234,column:30},end:{line:237,column:3}},line:234},"17":{name:"(anonymous_17)",decl:{start:{line:245,column:2},end:{line:245,column:3}},loc:{start:{line:245,column:13},end:{line:248,column:3}},line:245},"18":{name:"(anonymous_18)",decl:{start:{line:255,column:2},end:{line:255,column:3}},loc:{start:{line:255,column:11},end:{line:260,column:3}},line:255},"19":{name:"(anonymous_19)",decl:{start:{line:268,column:2},end:{line:268,column:3}},loc:{start:{line:268,column:14},end:{line:308,column:3}},line:268},"20":{name:"(anonymous_20)",decl:{start:{line:305,column:27},end:{line:305,column:28}},loc:{start:{line:305,column:34},end:{line:305,column:49}},line:305},"21":{name:"(anonymous_21)",decl:{start:{line:316,column:2},end:{line:316,column:3}},loc:{start:{line:316,column:12},end:{line:318,column:3}},line:316},"22":{name:"(anonymous_22)",decl:{start:{line:326,column:2},end:{line:326,column:3}},loc:{start:{line:326,column:12},end:{line:355,column:3}},line:326},"23":{name:"(anonymous_23)",decl:{start:{line:364,column:2},end:{line:364,column:3}},loc:{start:{line:364,column:16},end:{line:368,column:3}},line:364},"24":{name:"(anonymous_24)",decl:{start:{line:375,column:2},end:{line:375,column:3}},loc:{start:{line:375,column:16},end:{line:386,column:3}},line:375},"25":{name:"(anonymous_25)",decl:{start:{line:393,column:2},end:{line:393,column:3}},loc:{start:{line:393,column:22},end:{line:398,column:3}},line:393},"26":{name:"(anonymous_26)",decl:{start:{line:405,column:2},end:{line:405,column:3}},loc:{start:{line:405,column:23},end:{line:410,column:3}},line:405}},branchMap:{"0":{loc:{start:{line:46,column:4},end:{line:47,column:31}},type:"if",locations:[{start:{line:46,column:4},end:{line:47,column:31}},{start:{line:46,column:4},end:{line:47,column:31}}],line:46},"1":{loc:{start:{line:46,column:8},end:{line:46,column:38}},type:"binary-expr",locations:[{start:{line:46,column:8},end:{line:46,column:20}},{start:{line:46,column:24},end:{line:46,column:38}}],line:46},"2":{loc:{start:{line:85,column:4},end:{line:86,column:36}},type:"if",locations:[{start:{line:85,column:4},end:{line:86,column:36}},{start:{line:85,column:4},end:{line:86,column:36}}],line:85},"3":{loc:{start:{line:89,column:16},end:{line:91,column:14}},type:"cond-expr",locations:[{start:{line:90,column:10},end:{line:90,column:31}},{start:{line:91,column:10},end:{line:91,column:14}}],line:89},"4":{loc:{start:{line:89,column:16},end:{line:89,column:55}},type:"binary-expr",locations:[{start:{line:89,column:16},end:{line:89,column:28}},{start:{line:89,column:32},end:{line:89,column:55}}],line:89},"5":{loc:{start:{line:122,column:6},end:{line:125,column:7}},type:"if",locations:[{start:{line:122,column:6},end:{line:125,column:7}},{start:{line:122,column:6},end:{line:125,column:7}}],line:122},"6":{loc:{start:{line:136,column:4},end:{line:137,column:23}},type:"if",locations:[{start:{line:136,column:4},end:{line:137,column:23}},{start:{line:136,column:4},end:{line:137,column:23}}],line:136},"7":{loc:{start:{line:139,column:4},end:{line:140,column:23}},type:"if",locations:[{start:{line:139,column:4},end:{line:140,column:23}},{start:{line:139,column:4},end:{line:140,column:23}}],line:139},"8":{loc:{start:{line:142,column:4},end:{line:143,column:33}},type:"if",locations:[{start:{line:142,column:4},end:{line:143,column:33}},{start:{line:142,column:4},end:{line:143,column:33}}],line:142},"9":{loc:{start:{line:193,column:4},end:{line:196,column:5}},type:"if",locations:[{start:{line:193,column:4},end:{line:196,column:5}},{start:{line:193,column:4},end:{line:196,column:5}}],line:193},"10":{loc:{start:{line:256,column:4},end:{line:257,column:15}},type:"if",locations:[{start:{line:256,column:4},end:{line:257,column:15}},{start:{line:256,column:4},end:{line:257,column:15}}],line:256},"11":{loc:{start:{line:276,column:11},end:{line:276,column:64}},type:"binary-expr",locations:[{start:{line:276,column:11},end:{line:276,column:25}},{start:{line:276,column:29},end:{line:276,column:64}}],line:276},"12":{loc:{start:{line:278,column:11},end:{line:278,column:66}},type:"binary-expr",locations:[{start:{line:278,column:11},end:{line:278,column:26}},{start:{line:278,column:30},end:{line:278,column:66}}],line:278},"13":{loc:{start:{line:281,column:4},end:{line:300,column:5}},type:"if",locations:[{start:{line:281,column:4},end:{line:300,column:5}},{start:{line:281,column:4},end:{line:300,column:5}}],line:281},"14":{loc:{start:{line:285,column:6},end:{line:295,column:7}},type:"switch",locations:[{start:{line:286,column:8},end:{line:286,column:21}},{start:{line:287,column:8},end:{line:287,column:20}},{start:{line:288,column:8},end:{line:288,column:23}},{start:{line:289,column:8},end:{line:289,column:21}},{start:{line:290,column:8},end:{line:290,column:20}},{start:{line:291,column:8},end:{line:291,column:19}},{start:{line:292,column:8},end:{line:294,column:16}}],line:285},"15":{loc:{start:{line:304,column:4},end:{line:305,column:51}},type:"if",locations:[{start:{line:304,column:4},end:{line:305,column:51}},{start:{line:304,column:4},end:{line:305,column:51}}],line:304},"16":{loc:{start:{line:330,column:4},end:{line:352,column:5}},type:"switch",locations:[{start:{line:331,column:6},end:{line:333,column:26}},{start:{line:334,column:6},end:{line:336,column:25}},{start:{line:337,column:6},end:{line:339,column:28}},{start:{line:340,column:6},end:{line:342,column:26}},{start:{line:343,column:6},end:{line:345,column:25}},{start:{line:346,column:6},end:{line:348,column:24}},{start:{line:349,column:6},end:{line:351,column:25}}],line:330},"17":{loc:{start:{line:354,column:11},end:{line:354,column:37}},type:"binary-expr",locations:[{start:{line:354,column:11},end:{line:354,column:29}},{start:{line:354,column:33},end:{line:354,column:37}}],line:354},"18":{loc:{start:{line:380,column:6},end:{line:383,column:7}},type:"if",locations:[{start:{line:380,column:6},end:{line:383,column:7}},{start:{line:380,column:6},end:{line:383,column:7}}],line:380},"19":{loc:{start:{line:395,column:6},end:{line:396,column:28}},type:"if",locations:[{start:{line:395,column:6},end:{line:396,column:28}},{start:{line:395,column:6},end:{line:396,column:28}}],line:395},"20":{loc:{start:{line:407,column:6},end:{line:408,column:29}},type:"if",locations:[{start:{line:407,column:6},end:{line:408,column:29}},{start:{line:407,column:6},end:{line:408,column:29}}],line:407}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0,0,0,0,0],"15":[0,0],"16":[0,0,0,0,0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"4e84159aa4756b10ce432051771ebf37ed95dd0d"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2adnldubfk=function(){return actualCoverage;};}return actualCoverage;}cov_2adnldubfk();const assert=(cov_2adnldubfk().s[0]++,require('bsert'));const EventEmitter=(cov_2adnldubfk().s[1]++,require('events'));const fs=(cov_2adnldubfk().s[2]++,require('bfile'));const Logger=(cov_2adnldubfk().s[3]++,require('blgr'));const Config=(cov_2adnldubfk().s[4]++,require('bcfg'));const Network=(cov_2adnldubfk().s[5]++,require('../protocol/network'));const WorkerPool=(cov_2adnldubfk().s[6]++,require('../workers/workerpool'));/**
 * Node
 * Base class from which every other
 * Node-like object inherits.
 * @alias module:node.Node
 * @extends EventEmitter
 * @abstract
 */class Node extends EventEmitter{/**
   * Create a node.
   * @constructor
   * @param {Object} options
   */constructor(module,config,file,options){cov_2adnldubfk().f[0]++;cov_2adnldubfk().s[7]++;super();cov_2adnldubfk().s[8]++;this.config=new Config(module,{suffix:'network',fallback:'main',alias:{'n':'network'}});cov_2adnldubfk().s[9]++;this.config.inject(options);cov_2adnldubfk().s[10]++;this.config.load(options);cov_2adnldubfk().s[11]++;if((cov_2adnldubfk().b[1][0]++,options.file)||(cov_2adnldubfk().b[1][1]++,options.config)){cov_2adnldubfk().b[0][0]++;cov_2adnldubfk().s[12]++;this.config.open(config);}else{cov_2adnldubfk().b[0][1]++;}cov_2adnldubfk().s[13]++;this.network=Network.get(this.config.getSuffix());cov_2adnldubfk().s[14]++;this.memory=this.config.bool('memory',true);cov_2adnldubfk().s[15]++;this.startTime=-1;cov_2adnldubfk().s[16]++;this.bound=[];cov_2adnldubfk().s[17]++;this.plugins=Object.create(null);cov_2adnldubfk().s[18]++;this.stack=[];cov_2adnldubfk().s[19]++;this.logger=null;cov_2adnldubfk().s[20]++;this.workers=null;cov_2adnldubfk().s[21]++;this.spv=false;cov_2adnldubfk().s[22]++;this.blocks=null;cov_2adnldubfk().s[23]++;this.chain=null;cov_2adnldubfk().s[24]++;this.fees=null;cov_2adnldubfk().s[25]++;this.mempool=null;cov_2adnldubfk().s[26]++;this.pool=null;cov_2adnldubfk().s[27]++;this.miner=null;cov_2adnldubfk().s[28]++;this.http=null;cov_2adnldubfk().s[29]++;this.txindex=null;cov_2adnldubfk().s[30]++;this.addrindex=null;cov_2adnldubfk().s[31]++;this.filterindex=null;cov_2adnldubfk().s[32]++;this._init(file);}/**
   * Initialize node.
   * @private
   * @param {Object} options
   */_init(file){cov_2adnldubfk().f[1]++;const config=(cov_2adnldubfk().s[33]++,this.config);let logger=(cov_2adnldubfk().s[34]++,new Logger());cov_2adnldubfk().s[35]++;if(config.has('logger')){cov_2adnldubfk().b[2][0]++;cov_2adnldubfk().s[36]++;logger=config.obj('logger');}else{cov_2adnldubfk().b[2][1]++;}cov_2adnldubfk().s[37]++;logger.set({filename:(cov_2adnldubfk().b[4][0]++,!this.memory)&&(cov_2adnldubfk().b[4][1]++,config.bool('log-file'))?(cov_2adnldubfk().b[3][0]++,config.location(file)):(cov_2adnldubfk().b[3][1]++,null),level:config.str('log-level'),console:config.bool('log-console'),shrink:config.bool('log-shrink')});cov_2adnldubfk().s[38]++;this.logger=logger.context('node');cov_2adnldubfk().s[39]++;this.workers=new WorkerPool({enabled:config.bool('workers'),size:config.uint('workers-size'),timeout:config.uint('workers-timeout'),file:config.str('worker-file')});cov_2adnldubfk().s[40]++;this.on('error',()=>{cov_2adnldubfk().f[2]++;});cov_2adnldubfk().s[41]++;this.workers.on('spawn',child=>{cov_2adnldubfk().f[3]++;cov_2adnldubfk().s[42]++;this.logger.info('Spawning worker process: %d.',child.id);});cov_2adnldubfk().s[43]++;this.workers.on('exit',(code,child)=>{cov_2adnldubfk().f[4]++;cov_2adnldubfk().s[44]++;this.logger.warning('Worker %d exited: %s.',child.id,code);});cov_2adnldubfk().s[45]++;this.workers.on('log',(text,child)=>{cov_2adnldubfk().f[5]++;cov_2adnldubfk().s[46]++;this.logger.debug('Worker %d says:',child.id);cov_2adnldubfk().s[47]++;this.logger.debug(text);});cov_2adnldubfk().s[48]++;this.workers.on('error',(err,child)=>{cov_2adnldubfk().f[6]++;cov_2adnldubfk().s[49]++;if(child){cov_2adnldubfk().b[5][0]++;cov_2adnldubfk().s[50]++;this.logger.error('Worker %d error: %s',child.id,err.message);cov_2adnldubfk().s[51]++;return;}else{cov_2adnldubfk().b[5][1]++;}cov_2adnldubfk().s[52]++;this.emit('error',err);});}/**
   * Ensure prefix directory.
   * @returns {Promise}
   */async ensure(){cov_2adnldubfk().f[7]++;cov_2adnldubfk().s[53]++;if(fs.unsupported){cov_2adnldubfk().b[6][0]++;cov_2adnldubfk().s[54]++;return undefined;}else{cov_2adnldubfk().b[6][1]++;}cov_2adnldubfk().s[55]++;if(this.memory){cov_2adnldubfk().b[7][0]++;cov_2adnldubfk().s[56]++;return undefined;}else{cov_2adnldubfk().b[7][1]++;}cov_2adnldubfk().s[57]++;if(this.blocks){cov_2adnldubfk().b[8][0]++;cov_2adnldubfk().s[58]++;await this.blocks.ensure();}else{cov_2adnldubfk().b[8][1]++;}cov_2adnldubfk().s[59]++;return fs.mkdirp(this.config.prefix);}/**
   * Create a file path using `prefix`.
   * @param {String} file
   * @returns {String}
   */location(name){cov_2adnldubfk().f[8]++;cov_2adnldubfk().s[60]++;return this.config.location(name);}/**
   * Open node. Bind all events.
   * @private
   */async handlePreopen(){cov_2adnldubfk().f[9]++;cov_2adnldubfk().s[61]++;await this.logger.open();cov_2adnldubfk().s[62]++;await this.workers.open();cov_2adnldubfk().s[63]++;this._bind(this.network.time,'offset',offset=>{cov_2adnldubfk().f[10]++;cov_2adnldubfk().s[64]++;this.logger.info('Time offset: %d (%d minutes).',offset,offset/60|0);});cov_2adnldubfk().s[65]++;this._bind(this.network.time,'sample',(sample,total)=>{cov_2adnldubfk().f[11]++;cov_2adnldubfk().s[66]++;this.logger.debug('Added time data: samples=%d, offset=%d (%d minutes).',total,sample,sample/60|0);});cov_2adnldubfk().s[67]++;this._bind(this.network.time,'mismatch',()=>{cov_2adnldubfk().f[12]++;cov_2adnldubfk().s[68]++;this.logger.warning('Adjusted time mismatch!');cov_2adnldubfk().s[69]++;this.logger.warning('Please make sure your system clock is correct!');});}/**
   * Open node.
   * @private
   */async handleOpen(){cov_2adnldubfk().f[13]++;cov_2adnldubfk().s[70]++;this.startTime=Date.now();cov_2adnldubfk().s[71]++;if(!this.workers.enabled){cov_2adnldubfk().b[9][0]++;cov_2adnldubfk().s[72]++;this.logger.warning('Warning: worker pool is disabled.');cov_2adnldubfk().s[73]++;this.logger.warning('Verification will be slow.');}else{cov_2adnldubfk().b[9][1]++;}}/**
   * Open node. Bind all events.
   * @private
   */async handlePreclose(){cov_2adnldubfk().f[14]++;;}/**
   * Close node. Unbind all events.
   * @private
   */async handleClose(){cov_2adnldubfk().f[15]++;cov_2adnldubfk().s[74]++;for(const[obj,event,listener]of this.bound){cov_2adnldubfk().s[75]++;obj.removeListener(event,listener);}cov_2adnldubfk().s[76]++;this.bound.length=0;cov_2adnldubfk().s[77]++;this.startTime=-1;cov_2adnldubfk().s[78]++;this.logger.info('Node is closed.');cov_2adnldubfk().s[79]++;await this.workers.close();cov_2adnldubfk().s[80]++;await this.logger.close();}/**
   * Bind to an event on `obj`, save listener for removal.
   * @private
   * @param {EventEmitter} obj
   * @param {String} event
   * @param {Function} listener
   */_bind(obj,event,listener){cov_2adnldubfk().f[16]++;cov_2adnldubfk().s[81]++;this.bound.push([obj,event,listener]);cov_2adnldubfk().s[82]++;obj.on(event,listener);}/**
   * Emit and log an error.
   * @private
   * @param {Error} err
   */error(err){cov_2adnldubfk().f[17]++;cov_2adnldubfk().s[83]++;this.logger.error(err);cov_2adnldubfk().s[84]++;this.emit('error',err);}/**
   * Get node uptime in seconds.
   * @returns {Number}
   */uptime(){cov_2adnldubfk().f[18]++;cov_2adnldubfk().s[85]++;if(this.startTime===-1){cov_2adnldubfk().b[10][0]++;cov_2adnldubfk().s[86]++;return 0;}else{cov_2adnldubfk().b[10][1]++;}cov_2adnldubfk().s[87]++;return Math.floor((Date.now()-this.startTime)/1000);}/**
   * Attach a plugin.
   * @param {Object} plugin
   * @returns {Object} Plugin instance.
   */use(plugin){cov_2adnldubfk().f[19]++;cov_2adnldubfk().s[88]++;assert(plugin,'Plugin must be an object.');cov_2adnldubfk().s[89]++;assert(typeof plugin.init==='function','`init` must be a function.');cov_2adnldubfk().s[90]++;assert(!this.loaded,'Cannot add plugin after node is loaded.');const instance=(cov_2adnldubfk().s[91]++,plugin.init(this));cov_2adnldubfk().s[92]++;assert((cov_2adnldubfk().b[11][0]++,!instance.open)||(cov_2adnldubfk().b[11][1]++,typeof instance.open==='function'),'`open` must be a function.');cov_2adnldubfk().s[93]++;assert((cov_2adnldubfk().b[12][0]++,!instance.close)||(cov_2adnldubfk().b[12][1]++,typeof instance.close==='function'),'`close` must be a function.');cov_2adnldubfk().s[94]++;if(plugin.id){cov_2adnldubfk().b[13][0]++;cov_2adnldubfk().s[95]++;assert(typeof plugin.id==='string','`id` must be a string.');// Reserved names
cov_2adnldubfk().s[96]++;switch(plugin.id){case'chain':cov_2adnldubfk().b[14][0]++;case'fees':cov_2adnldubfk().b[14][1]++;case'mempool':cov_2adnldubfk().b[14][2]++;case'miner':cov_2adnldubfk().b[14][3]++;case'pool':cov_2adnldubfk().b[14][4]++;case'rpc':cov_2adnldubfk().b[14][5]++;case'http':cov_2adnldubfk().b[14][6]++;cov_2adnldubfk().s[97]++;assert(false,`${plugin.id} is already added.`);cov_2adnldubfk().s[98]++;break;}cov_2adnldubfk().s[99]++;assert(!this.plugins[plugin.id],`${plugin.id} is already added.`);cov_2adnldubfk().s[100]++;this.plugins[plugin.id]=instance;}else{cov_2adnldubfk().b[13][1]++;}cov_2adnldubfk().s[101]++;this.stack.push(instance);cov_2adnldubfk().s[102]++;if(typeof instance.on==='function'){cov_2adnldubfk().b[15][0]++;cov_2adnldubfk().s[103]++;instance.on('error',err=>{cov_2adnldubfk().f[20]++;cov_2adnldubfk().s[104]++;return this.error(err);});}else{cov_2adnldubfk().b[15][1]++;}cov_2adnldubfk().s[105]++;return instance;}/**
   * Test whether a plugin is available.
   * @param {String} name
   * @returns {Boolean}
   */has(name){cov_2adnldubfk().f[21]++;cov_2adnldubfk().s[106]++;return this.plugins[name]!=null;}/**
   * Get a plugin.
   * @param {String} name
   * @returns {Object|null}
   */get(name){cov_2adnldubfk().f[22]++;cov_2adnldubfk().s[107]++;assert(typeof name==='string','Plugin name must be a string.');// Reserved names.
cov_2adnldubfk().s[108]++;switch(name){case'chain':cov_2adnldubfk().b[16][0]++;cov_2adnldubfk().s[109]++;assert(this.chain,'chain is not loaded.');cov_2adnldubfk().s[110]++;return this.chain;case'fees':cov_2adnldubfk().b[16][1]++;cov_2adnldubfk().s[111]++;assert(this.fees,'fees is not loaded.');cov_2adnldubfk().s[112]++;return this.fees;case'mempool':cov_2adnldubfk().b[16][2]++;cov_2adnldubfk().s[113]++;assert(this.mempool,'mempool is not loaded.');cov_2adnldubfk().s[114]++;return this.mempool;case'miner':cov_2adnldubfk().b[16][3]++;cov_2adnldubfk().s[115]++;assert(this.miner,'miner is not loaded.');cov_2adnldubfk().s[116]++;return this.miner;case'pool':cov_2adnldubfk().b[16][4]++;cov_2adnldubfk().s[117]++;assert(this.pool,'pool is not loaded.');cov_2adnldubfk().s[118]++;return this.pool;case'rpc':cov_2adnldubfk().b[16][5]++;cov_2adnldubfk().s[119]++;assert(this.rpc,'rpc is not loaded.');cov_2adnldubfk().s[120]++;return this.rpc;case'http':cov_2adnldubfk().b[16][6]++;cov_2adnldubfk().s[121]++;assert(this.http,'http is not loaded.');cov_2adnldubfk().s[122]++;return this.http;}cov_2adnldubfk().s[123]++;return(cov_2adnldubfk().b[17][0]++,this.plugins[name])||(cov_2adnldubfk().b[17][1]++,null);}/**
   * Require a plugin.
   * @param {String} name
   * @returns {Object}
   * @throws {Error} on onloaded plugin
   */require(name){cov_2adnldubfk().f[23]++;const plugin=(cov_2adnldubfk().s[124]++,this.get(name));cov_2adnldubfk().s[125]++;assert(plugin,`${name} is not loaded.`);cov_2adnldubfk().s[126]++;return plugin;}/**
   * Load plugins.
   * @private
   */loadPlugins(){cov_2adnldubfk().f[24]++;const plugins=(cov_2adnldubfk().s[127]++,this.config.array('plugins',[]));const loader=(cov_2adnldubfk().s[128]++,this.config.func('loader'));cov_2adnldubfk().s[129]++;for(let plugin of plugins){cov_2adnldubfk().s[130]++;if(typeof plugin==='string'){cov_2adnldubfk().b[18][0]++;cov_2adnldubfk().s[131]++;assert(loader,'Must pass a loader function.');cov_2adnldubfk().s[132]++;plugin=loader(plugin);}else{cov_2adnldubfk().b[18][1]++;}cov_2adnldubfk().s[133]++;this.use(plugin);}}/**
   * Open plugins.
   * @private
   */async openPlugins(){cov_2adnldubfk().f[25]++;cov_2adnldubfk().s[134]++;for(const plugin of this.stack){cov_2adnldubfk().s[135]++;if(plugin.open){cov_2adnldubfk().b[19][0]++;cov_2adnldubfk().s[136]++;await plugin.open();}else{cov_2adnldubfk().b[19][1]++;}}}/**
   * Close plugins.
   * @private
   */async closePlugins(){cov_2adnldubfk().f[26]++;cov_2adnldubfk().s[137]++;for(const plugin of this.stack){cov_2adnldubfk().s[138]++;if(plugin.close){cov_2adnldubfk().b[20][0]++;cov_2adnldubfk().s[139]++;await plugin.close();}else{cov_2adnldubfk().b[20][1]++;}}}}/*
 * Expose
 */cov_2adnldubfk().s[140]++;module.exports=Node;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGUuanMiXSwibmFtZXMiOlsiYXNzZXJ0IiwicmVxdWlyZSIsIkV2ZW50RW1pdHRlciIsImZzIiwiTG9nZ2VyIiwiQ29uZmlnIiwiTmV0d29yayIsIldvcmtlclBvb2wiLCJOb2RlIiwiY29uc3RydWN0b3IiLCJtb2R1bGUiLCJjb25maWciLCJmaWxlIiwib3B0aW9ucyIsInN1ZmZpeCIsImZhbGxiYWNrIiwiYWxpYXMiLCJpbmplY3QiLCJsb2FkIiwib3BlbiIsIm5ldHdvcmsiLCJnZXQiLCJnZXRTdWZmaXgiLCJtZW1vcnkiLCJib29sIiwic3RhcnRUaW1lIiwiYm91bmQiLCJwbHVnaW5zIiwiT2JqZWN0IiwiY3JlYXRlIiwic3RhY2siLCJsb2dnZXIiLCJ3b3JrZXJzIiwic3B2IiwiYmxvY2tzIiwiY2hhaW4iLCJmZWVzIiwibWVtcG9vbCIsInBvb2wiLCJtaW5lciIsImh0dHAiLCJ0eGluZGV4IiwiYWRkcmluZGV4IiwiZmlsdGVyaW5kZXgiLCJfaW5pdCIsImhhcyIsIm9iaiIsInNldCIsImZpbGVuYW1lIiwibG9jYXRpb24iLCJsZXZlbCIsInN0ciIsImNvbnNvbGUiLCJzaHJpbmsiLCJjb250ZXh0IiwiZW5hYmxlZCIsInNpemUiLCJ1aW50IiwidGltZW91dCIsIm9uIiwiY2hpbGQiLCJpbmZvIiwiaWQiLCJjb2RlIiwid2FybmluZyIsInRleHQiLCJkZWJ1ZyIsImVyciIsImVycm9yIiwibWVzc2FnZSIsImVtaXQiLCJlbnN1cmUiLCJ1bnN1cHBvcnRlZCIsInVuZGVmaW5lZCIsIm1rZGlycCIsInByZWZpeCIsIm5hbWUiLCJoYW5kbGVQcmVvcGVuIiwiX2JpbmQiLCJ0aW1lIiwib2Zmc2V0Iiwic2FtcGxlIiwidG90YWwiLCJoYW5kbGVPcGVuIiwiRGF0ZSIsIm5vdyIsImhhbmRsZVByZWNsb3NlIiwiaGFuZGxlQ2xvc2UiLCJldmVudCIsImxpc3RlbmVyIiwicmVtb3ZlTGlzdGVuZXIiLCJsZW5ndGgiLCJjbG9zZSIsInB1c2giLCJ1cHRpbWUiLCJNYXRoIiwiZmxvb3IiLCJ1c2UiLCJwbHVnaW4iLCJpbml0IiwibG9hZGVkIiwiaW5zdGFuY2UiLCJycGMiLCJsb2FkUGx1Z2lucyIsImFycmF5IiwibG9hZGVyIiwiZnVuYyIsIm9wZW5QbHVnaW5zIiwiY2xvc2VQbHVnaW5zIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBRUEsYSxna2xCQVFZOzJGQU5aLEtBQU1BLENBQUFBLE1BQU0sMEJBQUdDLE9BQU8sQ0FBQyxPQUFELENBQVYsQ0FBWixDQUNBLEtBQU1DLENBQUFBLFlBQVksMEJBQUdELE9BQU8sQ0FBQyxRQUFELENBQVYsQ0FBbEIsQ0FDQSxLQUFNRSxDQUFBQSxFQUFFLDBCQUFHRixPQUFPLENBQUMsT0FBRCxDQUFWLENBQVIsQ0FDQSxLQUFNRyxDQUFBQSxNQUFNLDBCQUFHSCxPQUFPLENBQUMsTUFBRCxDQUFWLENBQVosQ0FDQSxLQUFNSSxDQUFBQSxNQUFNLDBCQUFHSixPQUFPLENBQUMsTUFBRCxDQUFWLENBQVosQ0FDQSxLQUFNSyxDQUFBQSxPQUFPLDBCQUFHTCxPQUFPLENBQUMscUJBQUQsQ0FBVixDQUFiLENBQ0EsS0FBTU0sQ0FBQUEsVUFBVSwwQkFBR04sT0FBTyxDQUFDLHVCQUFELENBQVYsQ0FBaEIsQ0FFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBRUEsS0FBTU8sQ0FBQUEsSUFBTixRQUFtQk4sQ0FBQUEsWUFBYSxDQUM5QjtBQUNGO0FBQ0E7QUFDQTtBQUNBLEtBRUVPLFdBQVcsQ0FBQ0MsTUFBRCxDQUFTQyxNQUFULENBQWlCQyxJQUFqQixDQUF1QkMsT0FBdkIsQ0FBZ0MsaURBQ3pDLFFBRHlDLHdCQUd6QyxLQUFLRixNQUFMLENBQWMsR0FBSU4sQ0FBQUEsTUFBSixDQUFXSyxNQUFYLENBQW1CLENBQy9CSSxNQUFNLENBQUUsU0FEdUIsQ0FFL0JDLFFBQVEsQ0FBRSxNQUZxQixDQUcvQkMsS0FBSyxDQUFFLENBQUUsSUFBSyxT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QUEsT0FBbkIsQ0FBNEIsMkJBQzFCLEdBQUksTUFBT3VFLENBQUFBLE1BQVAsR0FBa0IsUUFBdEIsQ0FBZ0MsdURBQzlCbEcsTUFBTSxDQUFDeUcsTUFBRCxDQUFTLDhCQUFULENBQU4sQ0FEOEIsMEJBRTlCUCxNQUFNLENBQUdPLE1BQU0sQ0FBQ1AsTUFBRCxDQUFmLENBQ0QsQ0FIRCxrQ0FEMEIsMEJBSzFCLEtBQUtELEdBQUwsQ0FBU0MsTUFBVCxFQUNELENBQ0YsQ0FFRDtBQUNGO0FBQ0E7QUFDQSxLQUVFLEtBQU1TLENBQUFBLFdBQU4sRUFBb0Isb0RBQ2xCLElBQUssS0FBTVQsQ0FBQUEsTUFBWCxHQUFxQixNQUFLcEUsS0FBMUIsQ0FBaUMsMkJBQy9CLEdBQUlvRSxNQUFNLENBQUMvRSxJQUFYLENBQ0UsNERBQU0rRSxDQUFBQSxNQUFNLENBQUMvRSxJQUFQLEVBQU4sQ0FBb0IsQ0FEdEIsa0NBRUQsQ0FDRixDQUVEO0FBQ0Y7QUFDQTtBQUNBLEtBRUUsS0FBTXlGLENBQUFBLFlBQU4sRUFBcUIsb0RBQ25CLElBQUssS0FBTVYsQ0FBQUEsTUFBWCxHQUFxQixNQUFLcEUsS0FBMUIsQ0FBaUMsMkJBQy9CLEdBQUlvRSxNQUFNLENBQUNOLEtBQVgsQ0FDRSw0REFBTU0sQ0FBQUEsTUFBTSxDQUFDTixLQUFQLEVBQU4sQ0FBcUIsQ0FEdkIsa0NBRUQsQ0FDRixDQS9YNkIsQ0FrWWhDO0FBQ0E7QUFDQSxHLDBCQUVBbEYsTUFBTSxDQUFDbUcsT0FBUCxDQUFpQnJHLElBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiLyohXHJcbiAqIG5vZGUuanMgLSBub2RlIG9iamVjdCBmb3IgYmNvaW5cclxuICogQ29weXJpZ2h0IChjKSAyMDE0LTIwMTUsIEZlZG9yIEluZHV0bnkgKE1JVCBMaWNlbnNlKVxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQtMjAxNywgQ2hyaXN0b3BoZXIgSmVmZnJleSAoTUlUIExpY2Vuc2UpLlxyXG4gKiBodHRwczovL2dpdGh1Yi5jb20vYmNvaW4tb3JnL2Jjb2luXHJcbiAqL1xyXG5cclxuJ3VzZSBzdHJpY3QnO1xyXG5cclxuY29uc3QgYXNzZXJ0ID0gcmVxdWlyZSgnYnNlcnQnKTtcclxuY29uc3QgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJyk7XHJcbmNvbnN0IGZzID0gcmVxdWlyZSgnYmZpbGUnKTtcclxuY29uc3QgTG9nZ2VyID0gcmVxdWlyZSgnYmxncicpO1xyXG5jb25zdCBDb25maWcgPSByZXF1aXJlKCdiY2ZnJyk7XHJcbmNvbnN0IE5ldHdvcmsgPSByZXF1aXJlKCcuLi9wcm90b2NvbC9uZXR3b3JrJyk7XHJcbmNvbnN0IFdvcmtlclBvb2wgPSByZXF1aXJlKCcuLi93b3JrZXJzL3dvcmtlcnBvb2wnKTtcclxuXHJcbi8qKlxyXG4gKiBOb2RlXHJcbiAqIEJhc2UgY2xhc3MgZnJvbSB3aGljaCBldmVyeSBvdGhlclxyXG4gKiBOb2RlLWxpa2Ugb2JqZWN0IGluaGVyaXRzLlxyXG4gKiBAYWxpYXMgbW9kdWxlOm5vZGUuTm9kZVxyXG4gKiBAZXh0ZW5kcyBFdmVudEVtaXR0ZXJcclxuICogQGFic3RyYWN0XHJcbiAqL1xyXG5cclxuY2xhc3MgTm9kZSBleHRlbmRzIEV2ZW50RW1pdHRlciB7XHJcbiAgLyoqXHJcbiAgICogQ3JlYXRlIGEgbm9kZS5cclxuICAgKiBAY29uc3RydWN0b3JcclxuICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xyXG4gICAqL1xyXG5cclxuICBjb25zdHJ1Y3Rvcihtb2R1bGUsIGNvbmZpZywgZmlsZSwgb3B0aW9ucykge1xyXG4gICAgc3VwZXIoKTtcclxuXHJcbiAgICB0aGlzLmNvbmZpZyA9IG5ldyBDb25maWcobW9kdWxlLCB7XHJcbiAgICAgIHN1ZmZpeDogJ25ldHdvcmsnLFxyXG4gICAgICBmYWxsYmFjazogJ21haW4nLFxyXG4gICAgICBhbGlhczogeyAnbic6ICduZXR3b3JrJyB9XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLmNvbmZpZy5pbmplY3Qob3B0aW9ucyk7XHJcbiAgICB0aGlzLmNvbmZpZy5sb2FkKG9wdGlvbnMpO1xyXG5cclxuICAgIGlmIChvcHRpb25zLmZpbGUgfHwgb3B0aW9ucy5jb25maWcpXHJcbiAgICAgIHRoaXMuY29uZmlnLm9wZW4oY29uZmlnKTtcclxuXHJcbiAgICB0aGlzLm5ldHdvcmsgPSBOZXR3b3JrLmdldCh0aGlzLmNvbmZpZy5nZXRTdWZmaXgoKSk7XHJcbiAgICB0aGlzLm1lbW9yeSA9IHRoaXMuY29uZmlnLmJvb2woJ21lbW9yeScsIHRydWUpO1xyXG4gICAgdGhpcy5zdGFydFRpbWUgPSAtMTtcclxuICAgIHRoaXMuYm91bmQgPSBbXTtcclxuICAgIHRoaXMucGx1Z2lucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XHJcbiAgICB0aGlzLnN0YWNrID0gW107XHJcblxyXG4gICAgdGhpcy5sb2dnZXIgPSBudWxsO1xyXG4gICAgdGhpcy53b3JrZXJzID0gbnVsbDtcclxuXHJcbiAgICB0aGlzLnNwdiA9IGZhbHNlO1xyXG4gICAgdGhpcy5ibG9ja3MgPSBudWxsO1xyXG4gICAgdGhpcy5jaGFpbiA9IG51bGw7XHJcbiAgICB0aGlzLmZlZXMgPSBudWxsO1xyXG4gICAgdGhpcy5tZW1wb29sID0gbnVsbDtcclxuICAgIHRoaXMucG9vbCA9IG51bGw7XHJcbiAgICB0aGlzLm1pbmVyID0gbnVsbDtcclxuICAgIHRoaXMuaHR0cCA9IG51bGw7XHJcbiAgICB0aGlzLnR4aW5kZXggPSBudWxsO1xyXG4gICAgdGhpcy5hZGRyaW5kZXggPSBudWxsO1xyXG4gICAgdGhpcy5maWx0ZXJpbmRleCA9IG51bGw7XHJcblxyXG4gICAgdGhpcy5faW5pdChmaWxlKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEluaXRpYWxpemUgbm9kZS5cclxuICAgKiBAcHJpdmF0ZVxyXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zXHJcbiAgICovXHJcblxyXG4gIF9pbml0KGZpbGUpIHtcclxuICAgIGNvbnN0IGNvbmZpZyA9IHRoaXMuY29uZmlnO1xyXG5cclxuICAgIGxldCBsb2dnZXIgPSBuZXcgTG9nZ2VyKCk7XHJcblxyXG4gICAgaWYgKGNvbmZpZy5oYXMoJ2xvZ2dlcicpKVxyXG4gICAgICBsb2dnZXIgPSBjb25maWcub2JqKCdsb2dnZXInKTtcclxuXHJcbiAgICBsb2dnZXIuc2V0KHtcclxuICAgICAgZmlsZW5hbWU6ICF0aGlzLm1lbW9yeSAmJiBjb25maWcuYm9vbCgnbG9nLWZpbGUnKVxyXG4gICAgICAgID8gY29uZmlnLmxvY2F0aW9uKGZpbGUpXHJcbiAgICAgICAgOiBudWxsLFxyXG4gICAgICBsZXZlbDogY29uZmlnLnN0cignbG9nLWxldmVsJyksXHJcbiAgICAgIGNvbnNvbGU6IGNvbmZpZy5ib29sKCdsb2ctY29uc29sZScpLFxyXG4gICAgICBzaHJpbms6IGNvbmZpZy5ib29sKCdsb2ctc2hyaW5rJylcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMubG9nZ2VyID0gbG9nZ2VyLmNvbnRleHQoJ25vZGUnKTtcclxuXHJcbiAgICB0aGlzLndvcmtlcnMgPSBuZXcgV29ya2VyUG9vbCh7XHJcbiAgICAgIGVuYWJsZWQ6IGNvbmZpZy5ib29sKCd3b3JrZXJzJyksXHJcbiAgICAgIHNpemU6IGNvbmZpZy51aW50KCd3b3JrZXJzLXNpemUnKSxcclxuICAgICAgdGltZW91dDogY29uZmlnLnVpbnQoJ3dvcmtlcnMtdGltZW91dCcpLFxyXG4gICAgICBmaWxlOiBjb25maWcuc3RyKCd3b3JrZXItZmlsZScpXHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLm9uKCdlcnJvcicsICgpID0+IHt9KTtcclxuXHJcbiAgICB0aGlzLndvcmtlcnMub24oJ3NwYXduJywgKGNoaWxkKSA9PiB7XHJcbiAgICAgIHRoaXMubG9nZ2VyLmluZm8oJ1NwYXduaW5nIHdvcmtlciBwcm9jZXNzOiAlZC4nLCBjaGlsZC5pZCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLndvcmtlcnMub24oJ2V4aXQnLCAoY29kZSwgY2hpbGQpID0+IHtcclxuICAgICAgdGhpcy5sb2dnZXIud2FybmluZygnV29ya2VyICVkIGV4aXRlZDogJXMuJywgY2hpbGQuaWQsIGNvZGUpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy53b3JrZXJzLm9uKCdsb2cnLCAodGV4dCwgY2hpbGQpID0+IHtcclxuICAgICAgdGhpcy5sb2dnZXIuZGVidWcoJ1dvcmtlciAlZCBzYXlzOicsIGNoaWxkLmlkKTtcclxuICAgICAgdGhpcy5sb2dnZXIuZGVidWcodGV4dCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLndvcmtlcnMub24oJ2Vycm9yJywgKGVyciwgY2hpbGQpID0+IHtcclxuICAgICAgaWYgKGNoaWxkKSB7XHJcbiAgICAgICAgdGhpcy5sb2dnZXIuZXJyb3IoJ1dvcmtlciAlZCBlcnJvcjogJXMnLCBjaGlsZC5pZCwgZXJyLm1lc3NhZ2UpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICB0aGlzLmVtaXQoJ2Vycm9yJywgZXJyKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRW5zdXJlIHByZWZpeCBkaXJlY3RvcnkuXHJcbiAgICogQHJldHVybnMge1Byb21pc2V9XHJcbiAgICovXHJcblxyXG4gIGFzeW5jIGVuc3VyZSgpIHtcclxuICAgIGlmIChmcy51bnN1cHBvcnRlZClcclxuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcclxuXHJcbiAgICBpZiAodGhpcy5tZW1vcnkpXHJcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XHJcblxyXG4gICAgaWYgKHRoaXMuYmxvY2tzKVxyXG4gICAgICBhd2FpdCB0aGlzLmJsb2Nrcy5lbnN1cmUoKTtcclxuXHJcbiAgICByZXR1cm4gZnMubWtkaXJwKHRoaXMuY29uZmlnLnByZWZpeCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBDcmVhdGUgYSBmaWxlIHBhdGggdXNpbmcgYHByZWZpeGAuXHJcbiAgICogQHBhcmFtIHtTdHJpbmd9IGZpbGVcclxuICAgKiBAcmV0dXJucyB7U3RyaW5nfVxyXG4gICAqL1xyXG5cclxuICBsb2NhdGlvbihuYW1lKSB7XHJcbiAgICByZXR1cm4gdGhpcy5jb25maWcubG9jYXRpb24obmFtZSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBPcGVuIG5vZGUuIEJpbmQgYWxsIGV2ZW50cy5cclxuICAgKiBAcHJpdmF0ZVxyXG4gICAqL1xyXG5cclxuICBhc3luYyBoYW5kbGVQcmVvcGVuKCkge1xyXG4gICAgYXdhaXQgdGhpcy5sb2dnZXIub3BlbigpO1xyXG4gICAgYXdhaXQgdGhpcy53b3JrZXJzLm9wZW4oKTtcclxuXHJcbiAgICB0aGlzLl9iaW5kKHRoaXMubmV0d29yay50aW1lLCAnb2Zmc2V0JywgKG9mZnNldCkgPT4ge1xyXG4gICAgICB0aGlzLmxvZ2dlci5pbmZvKFxyXG4gICAgICAgICdUaW1lIG9mZnNldDogJWQgKCVkIG1pbnV0ZXMpLicsXHJcbiAgICAgICAgb2Zmc2V0LCBvZmZzZXQgLyA2MCB8IDApO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5fYmluZCh0aGlzLm5ldHdvcmsudGltZSwgJ3NhbXBsZScsIChzYW1wbGUsIHRvdGFsKSA9PiB7XHJcbiAgICAgIHRoaXMubG9nZ2VyLmRlYnVnKFxyXG4gICAgICAgICdBZGRlZCB0aW1lIGRhdGE6IHNhbXBsZXM9JWQsIG9mZnNldD0lZCAoJWQgbWludXRlcykuJyxcclxuICAgICAgICB0b3RhbCwgc2FtcGxlLCBzYW1wbGUgLyA2MCB8IDApO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5fYmluZCh0aGlzLm5ldHdvcmsudGltZSwgJ21pc21hdGNoJywgKCkgPT4ge1xyXG4gICAgICB0aGlzLmxvZ2dlci53YXJuaW5nKCdBZGp1c3RlZCB0aW1lIG1pc21hdGNoIScpO1xyXG4gICAgICB0aGlzLmxvZ2dlci53YXJuaW5nKCdQbGVhc2UgbWFrZSBzdXJlIHlvdXIgc3lzdGVtIGNsb2NrIGlzIGNvcnJlY3QhJyk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIE9wZW4gbm9kZS5cclxuICAgKiBAcHJpdmF0ZVxyXG4gICAqL1xyXG5cclxuICBhc3luYyBoYW5kbGVPcGVuKCkge1xyXG4gICAgdGhpcy5zdGFydFRpbWUgPSBEYXRlLm5vdygpO1xyXG5cclxuICAgIGlmICghdGhpcy53b3JrZXJzLmVuYWJsZWQpIHtcclxuICAgICAgdGhpcy5sb2dnZXIud2FybmluZygnV2FybmluZzogd29ya2VyIHBvb2wgaXMgZGlzYWJsZWQuJyk7XHJcbiAgICAgIHRoaXMubG9nZ2VyLndhcm5pbmcoJ1ZlcmlmaWNhdGlvbiB3aWxsIGJlIHNsb3cuJyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBPcGVuIG5vZGUuIEJpbmQgYWxsIGV2ZW50cy5cclxuICAgKiBAcHJpdmF0ZVxyXG4gICAqL1xyXG5cclxuICBhc3luYyBoYW5kbGVQcmVjbG9zZSgpIHtcclxuICAgIDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIENsb3NlIG5vZGUuIFVuYmluZCBhbGwgZXZlbnRzLlxyXG4gICAqIEBwcml2YXRlXHJcbiAgICovXHJcblxyXG4gIGFzeW5jIGhhbmRsZUNsb3NlKCkge1xyXG4gICAgZm9yIChjb25zdCBbb2JqLCBldmVudCwgbGlzdGVuZXJdIG9mIHRoaXMuYm91bmQpXHJcbiAgICAgIG9iai5yZW1vdmVMaXN0ZW5lcihldmVudCwgbGlzdGVuZXIpO1xyXG5cclxuICAgIHRoaXMuYm91bmQubGVuZ3RoID0gMDtcclxuICAgIHRoaXMuc3RhcnRUaW1lID0gLTE7XHJcblxyXG4gICAgdGhpcy5sb2dnZXIuaW5mbygnTm9kZSBpcyBjbG9zZWQuJyk7XHJcblxyXG4gICAgYXdhaXQgdGhpcy53b3JrZXJzLmNsb3NlKCk7XHJcbiAgICBhd2FpdCB0aGlzLmxvZ2dlci5jbG9zZSgpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQmluZCB0byBhbiBldmVudCBvbiBgb2JqYCwgc2F2ZSBsaXN0ZW5lciBmb3IgcmVtb3ZhbC5cclxuICAgKiBAcHJpdmF0ZVxyXG4gICAqIEBwYXJhbSB7RXZlbnRFbWl0dGVyfSBvYmpcclxuICAgKiBAcGFyYW0ge1N0cmluZ30gZXZlbnRcclxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBsaXN0ZW5lclxyXG4gICAqL1xyXG5cclxuICBfYmluZChvYmosIGV2ZW50LCBsaXN0ZW5lcikge1xyXG4gICAgdGhpcy5ib3VuZC5wdXNoKFtvYmosIGV2ZW50LCBsaXN0ZW5lcl0pO1xyXG4gICAgb2JqLm9uKGV2ZW50LCBsaXN0ZW5lcik7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBFbWl0IGFuZCBsb2cgYW4gZXJyb3IuXHJcbiAgICogQHByaXZhdGVcclxuICAgKiBAcGFyYW0ge0Vycm9yfSBlcnJcclxuICAgKi9cclxuXHJcbiAgZXJyb3IoZXJyKSB7XHJcbiAgICB0aGlzLmxvZ2dlci5lcnJvcihlcnIpO1xyXG4gICAgdGhpcy5lbWl0KCdlcnJvcicsIGVycik7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBHZXQgbm9kZSB1cHRpbWUgaW4gc2Vjb25kcy5cclxuICAgKiBAcmV0dXJucyB7TnVtYmVyfVxyXG4gICAqL1xyXG5cclxuICB1cHRpbWUoKSB7XHJcbiAgICBpZiAodGhpcy5zdGFydFRpbWUgPT09IC0xKVxyXG4gICAgICByZXR1cm4gMDtcclxuXHJcbiAgICByZXR1cm4gTWF0aC5mbG9vcigoRGF0ZS5ub3coKSAtIHRoaXMuc3RhcnRUaW1lKSAvIDEwMDApO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQXR0YWNoIGEgcGx1Z2luLlxyXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBwbHVnaW5cclxuICAgKiBAcmV0dXJucyB7T2JqZWN0fSBQbHVnaW4gaW5zdGFuY2UuXHJcbiAgICovXHJcblxyXG4gIHVzZShwbHVnaW4pIHtcclxuICAgIGFzc2VydChwbHVnaW4sICdQbHVnaW4gbXVzdCBiZSBhbiBvYmplY3QuJyk7XHJcbiAgICBhc3NlcnQodHlwZW9mIHBsdWdpbi5pbml0ID09PSAnZnVuY3Rpb24nLCAnYGluaXRgIG11c3QgYmUgYSBmdW5jdGlvbi4nKTtcclxuXHJcbiAgICBhc3NlcnQoIXRoaXMubG9hZGVkLCAnQ2Fubm90IGFkZCBwbHVnaW4gYWZ0ZXIgbm9kZSBpcyBsb2FkZWQuJyk7XHJcblxyXG4gICAgY29uc3QgaW5zdGFuY2UgPSBwbHVnaW4uaW5pdCh0aGlzKTtcclxuXHJcbiAgICBhc3NlcnQoIWluc3RhbmNlLm9wZW4gfHwgdHlwZW9mIGluc3RhbmNlLm9wZW4gPT09ICdmdW5jdGlvbicsXHJcbiAgICAgICdgb3BlbmAgbXVzdCBiZSBhIGZ1bmN0aW9uLicpO1xyXG4gICAgYXNzZXJ0KCFpbnN0YW5jZS5jbG9zZSB8fCB0eXBlb2YgaW5zdGFuY2UuY2xvc2UgPT09ICdmdW5jdGlvbicsXHJcbiAgICAgICdgY2xvc2VgIG11c3QgYmUgYSBmdW5jdGlvbi4nKTtcclxuXHJcbiAgICBpZiAocGx1Z2luLmlkKSB7XHJcbiAgICAgIGFzc2VydCh0eXBlb2YgcGx1Z2luLmlkID09PSAnc3RyaW5nJywgJ2BpZGAgbXVzdCBiZSBhIHN0cmluZy4nKTtcclxuXHJcbiAgICAgIC8vIFJlc2VydmVkIG5hbWVzXHJcbiAgICAgIHN3aXRjaCAocGx1Z2luLmlkKSB7XHJcbiAgICAgICAgY2FzZSAnY2hhaW4nOlxyXG4gICAgICAgIGNhc2UgJ2ZlZXMnOlxyXG4gICAgICAgIGNhc2UgJ21lbXBvb2wnOlxyXG4gICAgICAgIGNhc2UgJ21pbmVyJzpcclxuICAgICAgICBjYXNlICdwb29sJzpcclxuICAgICAgICBjYXNlICdycGMnOlxyXG4gICAgICAgIGNhc2UgJ2h0dHAnOlxyXG4gICAgICAgICAgYXNzZXJ0KGZhbHNlLCBgJHtwbHVnaW4uaWR9IGlzIGFscmVhZHkgYWRkZWQuYCk7XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgfVxyXG5cclxuICAgICAgYXNzZXJ0KCF0aGlzLnBsdWdpbnNbcGx1Z2luLmlkXSwgYCR7cGx1Z2luLmlkfSBpcyBhbHJlYWR5IGFkZGVkLmApO1xyXG5cclxuICAgICAgdGhpcy5wbHVnaW5zW3BsdWdpbi5pZF0gPSBpbnN0YW5jZTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLnN0YWNrLnB1c2goaW5zdGFuY2UpO1xyXG5cclxuICAgIGlmICh0eXBlb2YgaW5zdGFuY2Uub24gPT09ICdmdW5jdGlvbicpXHJcbiAgICAgIGluc3RhbmNlLm9uKCdlcnJvcicsIGVyciA9PiB0aGlzLmVycm9yKGVycikpO1xyXG5cclxuICAgIHJldHVybiBpbnN0YW5jZTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFRlc3Qgd2hldGhlciBhIHBsdWdpbiBpcyBhdmFpbGFibGUuXHJcbiAgICogQHBhcmFtIHtTdHJpbmd9IG5hbWVcclxuICAgKiBAcmV0dXJucyB7Qm9vbGVhbn1cclxuICAgKi9cclxuXHJcbiAgaGFzKG5hbWUpIHtcclxuICAgIHJldHVybiB0aGlzLnBsdWdpbnNbbmFtZV0gIT0gbnVsbDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEdldCBhIHBsdWdpbi5cclxuICAgKiBAcGFyYW0ge1N0cmluZ30gbmFtZVxyXG4gICAqIEByZXR1cm5zIHtPYmplY3R8bnVsbH1cclxuICAgKi9cclxuXHJcbiAgZ2V0KG5hbWUpIHtcclxuICAgIGFzc2VydCh0eXBlb2YgbmFtZSA9PT0gJ3N0cmluZycsICdQbHVnaW4gbmFtZSBtdXN0IGJlIGEgc3RyaW5nLicpO1xyXG5cclxuICAgIC8vIFJlc2VydmVkIG5hbWVzLlxyXG4gICAgc3dpdGNoIChuYW1lKSB7XHJcbiAgICAgIGNhc2UgJ2NoYWluJzpcclxuICAgICAgICBhc3NlcnQodGhpcy5jaGFpbiwgJ2NoYWluIGlzIG5vdCBsb2FkZWQuJyk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY2hhaW47XHJcbiAgICAgIGNhc2UgJ2ZlZXMnOlxyXG4gICAgICAgIGFzc2VydCh0aGlzLmZlZXMsICdmZWVzIGlzIG5vdCBsb2FkZWQuJyk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZmVlcztcclxuICAgICAgY2FzZSAnbWVtcG9vbCc6XHJcbiAgICAgICAgYXNzZXJ0KHRoaXMubWVtcG9vbCwgJ21lbXBvb2wgaXMgbm90IGxvYWRlZC4nKTtcclxuICAgICAgICByZXR1cm4gdGhpcy5tZW1wb29sO1xyXG4gICAgICBjYXNlICdtaW5lcic6XHJcbiAgICAgICAgYXNzZXJ0KHRoaXMubWluZXIsICdtaW5lciBpcyBub3QgbG9hZGVkLicpO1xyXG4gICAgICAgIHJldHVybiB0aGlzLm1pbmVyO1xyXG4gICAgICBjYXNlICdwb29sJzpcclxuICAgICAgICBhc3NlcnQodGhpcy5wb29sLCAncG9vbCBpcyBub3QgbG9hZGVkLicpO1xyXG4gICAgICAgIHJldHVybiB0aGlzLnBvb2w7XHJcbiAgICAgIGNhc2UgJ3JwYyc6XHJcbiAgICAgICAgYXNzZXJ0KHRoaXMucnBjLCAncnBjIGlzIG5vdCBsb2FkZWQuJyk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucnBjO1xyXG4gICAgICBjYXNlICdodHRwJzpcclxuICAgICAgICBhc3NlcnQodGhpcy5odHRwLCAnaHR0cCBpcyBub3QgbG9hZGVkLicpO1xyXG4gICAgICAgIHJldHVybiB0aGlzLmh0dHA7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRoaXMucGx1Z2luc1tuYW1lXSB8fCBudWxsO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogUmVxdWlyZSBhIHBsdWdpbi5cclxuICAgKiBAcGFyYW0ge1N0cmluZ30gbmFtZVxyXG4gICAqIEByZXR1cm5zIHtPYmplY3R9XHJcbiAgICogQHRocm93cyB7RXJyb3J9IG9uIG9ubG9hZGVkIHBsdWdpblxyXG4gICAqL1xyXG5cclxuICByZXF1aXJlKG5hbWUpIHtcclxuICAgIGNvbnN0IHBsdWdpbiA9IHRoaXMuZ2V0KG5hbWUpO1xyXG4gICAgYXNzZXJ0KHBsdWdpbiwgYCR7bmFtZX0gaXMgbm90IGxvYWRlZC5gKTtcclxuICAgIHJldHVybiBwbHVnaW47XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBMb2FkIHBsdWdpbnMuXHJcbiAgICogQHByaXZhdGVcclxuICAgKi9cclxuXHJcbiAgbG9hZFBsdWdpbnMoKSB7XHJcbiAgICBjb25zdCBwbHVnaW5zID0gdGhpcy5jb25maWcuYXJyYXkoJ3BsdWdpbnMnLCBbXSk7XHJcbiAgICBjb25zdCBsb2FkZXIgPSB0aGlzLmNvbmZpZy5mdW5jKCdsb2FkZXInKTtcclxuXHJcbiAgICBmb3IgKGxldCBwbHVnaW4gb2YgcGx1Z2lucykge1xyXG4gICAgICBpZiAodHlwZW9mIHBsdWdpbiA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgICBhc3NlcnQobG9hZGVyLCAnTXVzdCBwYXNzIGEgbG9hZGVyIGZ1bmN0aW9uLicpO1xyXG4gICAgICAgIHBsdWdpbiA9IGxvYWRlcihwbHVnaW4pO1xyXG4gICAgICB9XHJcbiAgICAgIHRoaXMudXNlKHBsdWdpbik7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBPcGVuIHBsdWdpbnMuXHJcbiAgICogQHByaXZhdGVcclxuICAgKi9cclxuXHJcbiAgYXN5bmMgb3BlblBsdWdpbnMoKSB7XHJcbiAgICBmb3IgKGNvbnN0IHBsdWdpbiBvZiB0aGlzLnN0YWNrKSB7XHJcbiAgICAgIGlmIChwbHVnaW4ub3BlbilcclxuICAgICAgICBhd2FpdCBwbHVnaW4ub3BlbigpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ2xvc2UgcGx1Z2lucy5cclxuICAgKiBAcHJpdmF0ZVxyXG4gICAqL1xyXG5cclxuICBhc3luYyBjbG9zZVBsdWdpbnMoKSB7XHJcbiAgICBmb3IgKGNvbnN0IHBsdWdpbiBvZiB0aGlzLnN0YWNrKSB7XHJcbiAgICAgIGlmIChwbHVnaW4uY2xvc2UpXHJcbiAgICAgICAgYXdhaXQgcGx1Z2luLmNsb3NlKCk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vKlxyXG4gKiBFeHBvc2VcclxuICovXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IE5vZGU7XHJcbiJdfQ==
/*!
 * cpuminer.js - inefficient cpu miner for bcoin (because we can)
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */'use strict';function cov_i9q0e4g1i(){var path="E:\\Projects\\Test\\bcoin\\lib\\mining\\cpuminer.js";var hash="f9849a6f1e9cbf43c3d4df174a148f2a5028dc14";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\Projects\\Test\\bcoin\\lib\\mining\\cpuminer.js",statementMap:{"0":{start:{line:10,column:15},end:{line:10,column:31}},"1":{start:{line:11,column:21},end:{line:11,column:38}},"2":{start:{line:12,column:15},end:{line:12,column:32}},"3":{start:{line:13,column:13},end:{line:13,column:37}},"4":{start:{line:14,column:13},end:{line:14,column:30}},"5":{start:{line:29,column:4},end:{line:29,column:12}},"6":{start:{line:31,column:4},end:{line:31,column:24}},"7":{start:{line:32,column:4},end:{line:32,column:23}},"8":{start:{line:33,column:4},end:{line:33,column:38}},"9":{start:{line:34,column:4},end:{line:34,column:56}},"10":{start:{line:35,column:4},end:{line:35,column:38}},"11":{start:{line:36,column:4},end:{line:36,column:34}},"12":{start:{line:37,column:4},end:{line:37,column:29}},"13":{start:{line:39,column:4},end:{line:39,column:25}},"14":{start:{line:40,column:4},end:{line:40,column:26}},"15":{start:{line:41,column:4},end:{line:41,column:20}},"16":{start:{line:42,column:4},end:{line:42,column:24}},"17":{start:{line:44,column:4},end:{line:44,column:16}},"18":{start:{line:53,column:4},end:{line:59,column:7}},"19":{start:{line:54,column:6},end:{line:55,column:15}},"20":{start:{line:55,column:8},end:{line:55,column:15}},"21":{start:{line:57,column:6},end:{line:58,column:27}},"22":{start:{line:58,column:8},end:{line:58,column:27}},"23":{start:{line:68,column:4},end:{line:68,column:54}},"24":{start:{line:69,column:4},end:{line:69,column:23}},"25":{start:{line:78,column:4},end:{line:78,column:49}},"26":{start:{line:79,column:4},end:{line:79,column:24}},"27":{start:{line:80,column:4},end:{line:80,column:23}},"28":{start:{line:89,column:4},end:{line:89,column:55}},"29":{start:{line:90,column:4},end:{line:90,column:34}},"30":{start:{line:101,column:4},end:{line:101,column:55}},"31":{start:{line:103,column:4},end:{line:103,column:24}},"32":{start:{line:104,column:4},end:{line:104,column:26}},"33":{start:{line:106,column:4},end:{line:166,column:5}},"34":{start:{line:107,column:6},end:{line:107,column:22}},"35":{start:{line:109,column:6},end:{line:116,column:7}},"36":{start:{line:110,column:8},end:{line:110,column:42}},"37":{start:{line:112,column:8},end:{line:113,column:16}},"38":{start:{line:113,column:10},end:{line:113,column:16}},"39":{start:{line:114,column:8},end:{line:114,column:30}},"40":{start:{line:115,column:8},end:{line:115,column:14}},"41":{start:{line:118,column:6},end:{line:119,column:14}},"42":{start:{line:119,column:8},end:{line:119,column:14}},"43":{start:{line:122,column:6},end:{line:129,column:7}},"44":{start:{line:123,column:8},end:{line:123,column:47}},"45":{start:{line:125,column:8},end:{line:126,column:16}},"46":{start:{line:126,column:10},end:{line:126,column:16}},"47":{start:{line:127,column:8},end:{line:127,column:30}},"48":{start:{line:128,column:8},end:{line:128,column:14}},"49":{start:{line:131,column:6},end:{line:132,column:14}},"50":{start:{line:132,column:8},end:{line:132,column:14}},"51":{start:{line:134,column:6},end:{line:135,column:17}},"52":{start:{line:135,column:8},end:{line:135,column:17}},"53":{start:{line:138,column:6},end:{line:152,column:7}},"54":{start:{line:139,column:8},end:{line:139,column:44}},"55":{start:{line:141,column:8},end:{line:142,column:16}},"56":{start:{line:142,column:10},end:{line:142,column:16}},"57":{start:{line:144,column:8},end:{line:148,column:9}},"58":{start:{line:145,column:10},end:{line:145,column:57}},"59":{start:{line:146,column:10},end:{line:146,column:31}},"60":{start:{line:147,column:10},end:{line:147,column:19}},"61":{start:{line:150,column:8},end:{line:150,column:30}},"62":{start:{line:151,column:8},end:{line:151,column:14}},"63":{start:{line:154,column:6},end:{line:157,column:7}},"64":{start:{line:155,column:8},end:{line:155,column:69}},"65":{start:{line:156,column:8},end:{line:156,column:17}},"66":{start:{line:159,column:6},end:{line:160,column:14}},"67":{start:{line:160,column:8},end:{line:160,column:14}},"68":{start:{line:163,column:6},end:{line:163,column:74}},"69":{start:{line:165,column:6},end:{line:165,column:39}},"70":{start:{line:168,column:16},end:{line:168,column:28}},"71":{start:{line:170,column:4},end:{line:173,column:5}},"72":{start:{line:171,column:6},end:{line:171,column:26}},"73":{start:{line:172,column:6},end:{line:172,column:20}},"74":{start:{line:183,column:19},end:{line:183,column:43}},"75":{start:{line:184,column:4},end:{line:188,column:5}},"76":{start:{line:185,column:6},end:{line:185,column:32}},"77":{start:{line:187,column:6},end:{line:187,column:15}},"78":{start:{line:198,column:4},end:{line:199,column:13}},"79":{start:{line:199,column:6},end:{line:199,column:13}},"80":{start:{line:201,column:4},end:{line:201,column:50}},"81":{start:{line:202,column:4},end:{line:202,column:57}},"82":{start:{line:204,column:4},end:{line:204,column:25}},"83":{start:{line:206,column:4},end:{line:209,column:5}},"84":{start:{line:207,column:6},end:{line:207,column:25}},"85":{start:{line:208,column:6},end:{line:208,column:22}},"86":{start:{line:211,column:4},end:{line:211,column:22}},"87":{start:{line:213,column:4},end:{line:213,column:25}},"88":{start:{line:214,column:4},end:{line:214,column:26}},"89":{start:{line:215,column:4},end:{line:215,column:20}},"90":{start:{line:225,column:4},end:{line:228,column:7}},"91":{start:{line:226,column:6},end:{line:226,column:28}},"92":{start:{line:227,column:6},end:{line:227,column:41}},"93":{start:{line:240,column:20},end:{line:240,column:62}},"94":{start:{line:241,column:4},end:{line:241,column:37}},"95":{start:{line:253,column:16},end:{line:253,column:50}},"96":{start:{line:254,column:4},end:{line:254,column:37}},"97":{start:{line:263,column:4},end:{line:264,column:13}},"98":{start:{line:264,column:6},end:{line:264,column:13}},"99":{start:{line:266,column:4},end:{line:267,column:13}},"100":{start:{line:267,column:6},end:{line:267,column:13}},"101":{start:{line:269,column:4},end:{line:272,column:5}},"102":{start:{line:270,column:6},end:{line:270,column:25}},"103":{start:{line:271,column:6},end:{line:271,column:22}},"104":{start:{line:282,column:17},end:{line:282,column:32}},"105":{start:{line:283,column:19},end:{line:283,column:37}},"106":{start:{line:284,column:21},end:{line:284,column:38}},"107":{start:{line:286,column:14},end:{line:286,column:15}},"108":{start:{line:287,column:14},end:{line:287,column:22}},"109":{start:{line:290,column:4},end:{line:300,column:5}},"110":{start:{line:291,column:6},end:{line:291,column:43}},"111":{start:{line:293,column:6},end:{line:294,column:14}},"112":{start:{line:294,column:8},end:{line:294,column:14}},"113":{start:{line:296,column:6},end:{line:296,column:32}},"114":{start:{line:298,column:6},end:{line:298,column:22}},"115":{start:{line:299,column:6},end:{line:299,column:22}},"116":{start:{line:302,column:4},end:{line:302,column:17}},"117":{start:{line:313,column:4},end:{line:314,column:33}},"118":{start:{line:314,column:6},end:{line:314,column:33}},"119":{start:{line:316,column:17},end:{line:316,column:32}},"120":{start:{line:317,column:19},end:{line:317,column:37}},"121":{start:{line:318,column:21},end:{line:318,column:38}},"122":{start:{line:320,column:14},end:{line:320,column:15}},"123":{start:{line:321,column:14},end:{line:321,column:22}},"124":{start:{line:324,column:4},end:{line:337,column:5}},"125":{start:{line:325,column:6},end:{line:325,column:62}},"126":{start:{line:327,column:6},end:{line:328,column:14}},"127":{start:{line:328,column:8},end:{line:328,column:14}},"128":{start:{line:330,column:6},end:{line:331,column:21}},"129":{start:{line:331,column:8},end:{line:331,column:21}},"130":{start:{line:333,column:6},end:{line:333,column:32}},"131":{start:{line:335,column:6},end:{line:335,column:22}},"132":{start:{line:336,column:6},end:{line:336,column:22}},"133":{start:{line:339,column:4},end:{line:339,column:17}},"134":{start:{line:349,column:4},end:{line:349,column:27}},"135":{start:{line:352,column:4},end:{line:361,column:5}},"136":{start:{line:353,column:6},end:{line:353,column:34}},"137":{start:{line:355,column:6},end:{line:356,column:14}},"138":{start:{line:356,column:8},end:{line:356,column:14}},"139":{start:{line:358,column:6},end:{line:358,column:24}},"140":{start:{line:360,column:6},end:{line:360,column:30}},"141":{start:{line:363,column:4},end:{line:363,column:29}},"142":{start:{line:376,column:4},end:{line:376,column:27}},"143":{start:{line:378,column:4},end:{line:390,column:5}},"144":{start:{line:379,column:6},end:{line:379,column:45}},"145":{start:{line:381,column:6},end:{line:382,column:14}},"146":{start:{line:382,column:8},end:{line:382,column:14}},"147":{start:{line:384,column:6},end:{line:385,column:20}},"148":{start:{line:385,column:8},end:{line:385,column:20}},"149":{start:{line:387,column:6},end:{line:387,column:24}},"150":{start:{line:389,column:6},end:{line:389,column:30}},"151":{start:{line:392,column:4},end:{line:392,column:29}},"152":{start:{line:402,column:20},end:{line:402,column:31}},"153":{start:{line:403,column:16},end:{line:403,column:33}},"154":{start:{line:404,column:19},end:{line:404,column:39}},"155":{start:{line:405,column:21},end:{line:405,column:39}},"156":{start:{line:407,column:4},end:{line:413,column:11}},"157":{start:{line:415,column:4},end:{line:415,column:47}},"158":{start:{line:425,column:0},end:{line:425,column:42}},"159":{start:{line:441,column:4},end:{line:441,column:23}},"160":{start:{line:442,column:4},end:{line:442,column:27}},"161":{start:{line:443,column:4},end:{line:443,column:27}},"162":{start:{line:444,column:4},end:{line:444,column:27}},"163":{start:{line:445,column:4},end:{line:445,column:28}},"164":{start:{line:446,column:4},end:{line:446,column:20}},"165":{start:{line:447,column:4},end:{line:447,column:20}},"166":{start:{line:448,column:4},end:{line:448,column:19}},"167":{start:{line:458,column:20},end:{line:458,column:32}},"168":{start:{line:459,column:15},end:{line:459,column:26}},"169":{start:{line:460,column:15},end:{line:460,column:26}},"170":{start:{line:461,column:17},end:{line:461,column:29}},"171":{start:{line:462,column:17},end:{line:462,column:40}},"172":{start:{line:463,column:17},end:{line:463,column:49}},"173":{start:{line:464,column:4},end:{line:464,column:16}},"174":{start:{line:474,column:20},end:{line:474,column:32}},"175":{start:{line:475,column:15},end:{line:475,column:26}},"176":{start:{line:476,column:15},end:{line:476,column:26}},"177":{start:{line:477,column:17},end:{line:477,column:29}},"178":{start:{line:479,column:4},end:{line:479,column:54}},"179":{start:{line:480,column:4},end:{line:480,column:26}},"180":{start:{line:482,column:18},end:{line:482,column:55}},"181":{start:{line:484,column:4},end:{line:484,column:33}},"182":{start:{line:493,column:4},end:{line:493,column:33}},"183":{start:{line:502,column:4},end:{line:502,column:38}},"184":{start:{line:510,column:4},end:{line:510,column:34}},"185":{start:{line:518,column:4},end:{line:521,column:5}},"186":{start:{line:519,column:6},end:{line:519,column:22}},"187":{start:{line:520,column:6},end:{line:520,column:20}},"188":{start:{line:529,column:4},end:{line:529,column:54}},"189":{start:{line:530,column:4},end:{line:530,column:26}},"190":{start:{line:540,column:18},end:{line:540,column:57}},"191":{start:{line:541,column:4},end:{line:541,column:38}},"192":{start:{line:551,column:19},end:{line:551,column:40}},"193":{start:{line:552,column:20},end:{line:552,column:43}},"194":{start:{line:553,column:4},end:{line:553,column:53}},"195":{start:{line:563,column:4},end:{line:563,column:40}},"196":{start:{line:574,column:4},end:{line:574,column:41}},"197":{start:{line:582,column:0},end:{line:582,column:26}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:28,column:2},end:{line:28,column:3}},loc:{start:{line:28,column:21},end:{line:45,column:3}},line:28},"1":{name:"(anonymous_1)",decl:{start:{line:52,column:2},end:{line:52,column:3}},loc:{start:{line:52,column:9},end:{line:60,column:3}},line:52},"2":{name:"(anonymous_2)",decl:{start:{line:53,column:25},end:{line:53,column:26}},loc:{start:{line:53,column:34},end:{line:59,column:5}},line:53},"3":{name:"(anonymous_3)",decl:{start:{line:67,column:2},end:{line:67,column:3}},loc:{start:{line:67,column:15},end:{line:70,column:3}},line:67},"4":{name:"(anonymous_4)",decl:{start:{line:77,column:2},end:{line:77,column:3}},loc:{start:{line:77,column:16},end:{line:81,column:3}},line:77},"5":{name:"(anonymous_5)",decl:{start:{line:88,column:2},end:{line:88,column:3}},loc:{start:{line:88,column:10},end:{line:91,column:3}},line:88},"6":{name:"(anonymous_6)",decl:{start:{line:90,column:24},end:{line:90,column:25}},loc:{start:{line:90,column:30},end:{line:90,column:32}},line:90},"7":{name:"(anonymous_7)",decl:{start:{line:100,column:2},end:{line:100,column:3}},loc:{start:{line:100,column:17},end:{line:174,column:3}},line:100},"8":{name:"(anonymous_8)",decl:{start:{line:182,column:2},end:{line:182,column:3}},loc:{start:{line:182,column:15},end:{line:189,column:3}},line:182},"9":{name:"(anonymous_9)",decl:{start:{line:197,column:2},end:{line:197,column:3}},loc:{start:{line:197,column:16},end:{line:216,column:3}},line:197},"10":{name:"(anonymous_10)",decl:{start:{line:224,column:2},end:{line:224,column:3}},loc:{start:{line:224,column:9},end:{line:229,column:3}},line:224},"11":{name:"(anonymous_11)",decl:{start:{line:225,column:23},end:{line:225,column:24}},loc:{start:{line:225,column:44},end:{line:228,column:5}},line:225},"12":{name:"(anonymous_12)",decl:{start:{line:239,column:2},end:{line:239,column:3}},loc:{start:{line:239,column:32},end:{line:242,column:3}},line:239},"13":{name:"(anonymous_13)",decl:{start:{line:252,column:2},end:{line:252,column:3}},loc:{start:{line:252,column:32},end:{line:255,column:3}},line:252},"14":{name:"(anonymous_14)",decl:{start:{line:262,column:2},end:{line:262,column:3}},loc:{start:{line:262,column:16},end:{line:273,column:3}},line:262},"15":{name:"(anonymous_15)",decl:{start:{line:281,column:2},end:{line:281,column:3}},loc:{start:{line:281,column:17},end:{line:303,column:3}},line:281},"16":{name:"(anonymous_16)",decl:{start:{line:312,column:2},end:{line:312,column:3}},loc:{start:{line:312,column:28},end:{line:340,column:3}},line:312},"17":{name:"(anonymous_17)",decl:{start:{line:348,column:2},end:{line:348,column:3}},loc:{start:{line:348,column:12},end:{line:364,column:3}},line:348},"18":{name:"(anonymous_18)",decl:{start:{line:373,column:2},end:{line:373,column:3}},loc:{start:{line:373,column:23},end:{line:393,column:3}},line:373},"19":{name:"(anonymous_19)",decl:{start:{line:401,column:2},end:{line:401,column:3}},loc:{start:{line:401,column:25},end:{line:416,column:3}},line:401},"20":{name:"(anonymous_20)",decl:{start:{line:440,column:2},end:{line:440,column:3}},loc:{start:{line:440,column:30},end:{line:449,column:3}},line:440},"21":{name:"(anonymous_21)",decl:{start:{line:457,column:2},end:{line:457,column:3}},loc:{start:{line:457,column:14},end:{line:465,column:3}},line:457},"22":{name:"(anonymous_22)",decl:{start:{line:473,column:2},end:{line:473,column:3}},loc:{start:{line:473,column:16},end:{line:485,column:3}},line:473},"23":{name:"(anonymous_23)",decl:{start:{line:492,column:2},end:{line:492,column:3}},loc:{start:{line:492,column:9},end:{line:494,column:3}},line:492},"24":{name:"(anonymous_24)",decl:{start:{line:501,column:2},end:{line:501,column:3}},loc:{start:{line:501,column:14},end:{line:503,column:3}},line:501},"25":{name:"(anonymous_25)",decl:{start:{line:509,column:2},end:{line:509,column:3}},loc:{start:{line:509,column:12},end:{line:511,column:3}},line:509},"26":{name:"(anonymous_26)",decl:{start:{line:517,column:2},end:{line:517,column:3}},loc:{start:{line:517,column:16},end:{line:522,column:3}},line:517},"27":{name:"(anonymous_27)",decl:{start:{line:528,column:2},end:{line:528,column:3}},loc:{start:{line:528,column:12},end:{line:531,column:3}},line:528},"28":{name:"(anonymous_28)",decl:{start:{line:539,column:2},end:{line:539,column:3}},loc:{start:{line:539,column:19},end:{line:542,column:3}},line:539},"29":{name:"(anonymous_29)",decl:{start:{line:550,column:2},end:{line:550,column:3}},loc:{start:{line:550,column:17},end:{line:554,column:3}},line:550},"30":{name:"(anonymous_30)",decl:{start:{line:562,column:2},end:{line:562,column:3}},loc:{start:{line:562,column:18},end:{line:564,column:3}},line:562},"31":{name:"(anonymous_31)",decl:{start:{line:573,column:2},end:{line:573,column:3}},loc:{start:{line:573,column:19},end:{line:575,column:3}},line:573}},branchMap:{"0":{loc:{start:{line:54,column:6},end:{line:55,column:15}},type:"if",locations:[{start:{line:54,column:6},end:{line:55,column:15}},{start:{line:54,column:6},end:{line:55,column:15}}],line:54},"1":{loc:{start:{line:57,column:6},end:{line:58,column:27}},type:"if",locations:[{start:{line:57,column:6},end:{line:58,column:27}},{start:{line:57,column:6},end:{line:58,column:27}}],line:57},"2":{loc:{start:{line:112,column:8},end:{line:113,column:16}},type:"if",locations:[{start:{line:112,column:8},end:{line:113,column:16}},{start:{line:112,column:8},end:{line:113,column:16}}],line:112},"3":{loc:{start:{line:118,column:6},end:{line:119,column:14}},type:"if",locations:[{start:{line:118,column:6},end:{line:119,column:14}},{start:{line:118,column:6},end:{line:119,column:14}}],line:118},"4":{loc:{start:{line:125,column:8},end:{line:126,column:16}},type:"if",locations:[{start:{line:125,column:8},end:{line:126,column:16}},{start:{line:125,column:8},end:{line:126,column:16}}],line:125},"5":{loc:{start:{line:131,column:6},end:{line:132,column:14}},type:"if",locations:[{start:{line:131,column:6},end:{line:132,column:14}},{start:{line:131,column:6},end:{line:132,column:14}}],line:131},"6":{loc:{start:{line:134,column:6},end:{line:135,column:17}},type:"if",locations:[{start:{line:134,column:6},end:{line:135,column:17}},{start:{line:134,column:6},end:{line:135,column:17}}],line:134},"7":{loc:{start:{line:141,column:8},end:{line:142,column:16}},type:"if",locations:[{start:{line:141,column:8},end:{line:142,column:16}},{start:{line:141,column:8},end:{line:142,column:16}}],line:141},"8":{loc:{start:{line:144,column:8},end:{line:148,column:9}},type:"if",locations:[{start:{line:144,column:8},end:{line:148,column:9}},{start:{line:144,column:8},end:{line:148,column:9}}],line:144},"9":{loc:{start:{line:154,column:6},end:{line:157,column:7}},type:"if",locations:[{start:{line:154,column:6},end:{line:157,column:7}},{start:{line:154,column:6},end:{line:157,column:7}}],line:154},"10":{loc:{start:{line:159,column:6},end:{line:160,column:14}},type:"if",locations:[{start:{line:159,column:6},end:{line:160,column:14}},{start:{line:159,column:6},end:{line:160,column:14}}],line:159},"11":{loc:{start:{line:170,column:4},end:{line:173,column:5}},type:"if",locations:[{start:{line:170,column:4},end:{line:173,column:5}},{start:{line:170,column:4},end:{line:173,column:5}}],line:170},"12":{loc:{start:{line:198,column:4},end:{line:199,column:13}},type:"if",locations:[{start:{line:198,column:4},end:{line:199,column:13}},{start:{line:198,column:4},end:{line:199,column:13}}],line:198},"13":{loc:{start:{line:206,column:4},end:{line:209,column:5}},type:"if",locations:[{start:{line:206,column:4},end:{line:209,column:5}},{start:{line:206,column:4},end:{line:209,column:5}}],line:206},"14":{loc:{start:{line:263,column:4},end:{line:264,column:13}},type:"if",locations:[{start:{line:263,column:4},end:{line:264,column:13}},{start:{line:263,column:4},end:{line:264,column:13}}],line:263},"15":{loc:{start:{line:266,column:4},end:{line:267,column:13}},type:"if",locations:[{start:{line:266,column:4},end:{line:267,column:13}},{start:{line:266,column:4},end:{line:267,column:13}}],line:266},"16":{loc:{start:{line:269,column:4},end:{line:272,column:5}},type:"if",locations:[{start:{line:269,column:4},end:{line:272,column:5}},{start:{line:269,column:4},end:{line:272,column:5}}],line:269},"17":{loc:{start:{line:293,column:6},end:{line:294,column:14}},type:"if",locations:[{start:{line:293,column:6},end:{line:294,column:14}},{start:{line:293,column:6},end:{line:294,column:14}}],line:293},"18":{loc:{start:{line:313,column:4},end:{line:314,column:33}},type:"if",locations:[{start:{line:313,column:4},end:{line:314,column:33}},{start:{line:313,column:4},end:{line:314,column:33}}],line:313},"19":{loc:{start:{line:327,column:6},end:{line:328,column:14}},type:"if",locations:[{start:{line:327,column:6},end:{line:328,column:14}},{start:{line:327,column:6},end:{line:328,column:14}}],line:327},"20":{loc:{start:{line:330,column:6},end:{line:331,column:21}},type:"if",locations:[{start:{line:330,column:6},end:{line:331,column:21}},{start:{line:330,column:6},end:{line:331,column:21}}],line:330},"21":{loc:{start:{line:355,column:6},end:{line:356,column:14}},type:"if",locations:[{start:{line:355,column:6},end:{line:356,column:14}},{start:{line:355,column:6},end:{line:356,column:14}}],line:355},"22":{loc:{start:{line:381,column:6},end:{line:382,column:14}},type:"if",locations:[{start:{line:381,column:6},end:{line:382,column:14}},{start:{line:381,column:6},end:{line:382,column:14}}],line:381},"23":{loc:{start:{line:384,column:6},end:{line:385,column:20}},type:"if",locations:[{start:{line:384,column:6},end:{line:385,column:20}},{start:{line:384,column:6},end:{line:385,column:20}}],line:384},"24":{loc:{start:{line:518,column:4},end:{line:521,column:5}},type:"if",locations:[{start:{line:518,column:4},end:{line:521,column:5}},{start:{line:518,column:4},end:{line:521,column:5}}],line:518}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"f9849a6f1e9cbf43c3d4df174a148f2a5028dc14"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_i9q0e4g1i=function(){return actualCoverage;};}return actualCoverage;}cov_i9q0e4g1i();const assert=(cov_i9q0e4g1i().s[0]++,require('bsert'));const EventEmitter=(cov_i9q0e4g1i().s[1]++,require('events'));const{Lock}=(cov_i9q0e4g1i().s[2]++,require('bmutex'));const util=(cov_i9q0e4g1i().s[3]++,require('../utils/util'));const mine=(cov_i9q0e4g1i().s[4]++,require('./mine'));/**
 * CPU miner.
 * @alias module:mining.CPUMiner
 */class CPUMiner extends EventEmitter{/**
   * Create a CPU miner.
   * @constructor
   * @param {Miner} miner
   */constructor(miner){cov_i9q0e4g1i().f[0]++;cov_i9q0e4g1i().s[5]++;super();cov_i9q0e4g1i().s[6]++;this.opened=false;cov_i9q0e4g1i().s[7]++;this.miner=miner;cov_i9q0e4g1i().s[8]++;this.network=this.miner.network;cov_i9q0e4g1i().s[9]++;this.logger=this.miner.logger.context('cpuminer');cov_i9q0e4g1i().s[10]++;this.workers=this.miner.workers;cov_i9q0e4g1i().s[11]++;this.chain=this.miner.chain;cov_i9q0e4g1i().s[12]++;this.locker=new Lock();cov_i9q0e4g1i().s[13]++;this.running=false;cov_i9q0e4g1i().s[14]++;this.stopping=false;cov_i9q0e4g1i().s[15]++;this.job=null;cov_i9q0e4g1i().s[16]++;this.stopJob=null;cov_i9q0e4g1i().s[17]++;this.init();}/**
   * Initialize the miner.
   * @private
   */init(){cov_i9q0e4g1i().f[1]++;cov_i9q0e4g1i().s[18]++;this.chain.on('tip',tip=>{cov_i9q0e4g1i().f[2]++;cov_i9q0e4g1i().s[19]++;if(!this.job){cov_i9q0e4g1i().b[0][0]++;cov_i9q0e4g1i().s[20]++;return;}else{cov_i9q0e4g1i().b[0][1]++;}cov_i9q0e4g1i().s[21]++;if(this.job.attempt.prevBlock.equals(tip.prevBlock)){cov_i9q0e4g1i().b[1][0]++;cov_i9q0e4g1i().s[22]++;this.job.destroy();}else{cov_i9q0e4g1i().b[1][1]++;}});}/**
   * Open the miner.
   * @returns {Promise}
   */async open(){cov_i9q0e4g1i().f[3]++;cov_i9q0e4g1i().s[23]++;assert(!this.opened,'CPUMiner is already open.');cov_i9q0e4g1i().s[24]++;this.opened=true;}/**
   * Close the miner.
   * @returns {Promise}
   */async close(){cov_i9q0e4g1i().f[4]++;cov_i9q0e4g1i().s[25]++;assert(this.opened,'CPUMiner is not open.');cov_i9q0e4g1i().s[26]++;this.opened=false;cov_i9q0e4g1i().s[27]++;return this.stop();}/**
   * Start mining.
   * @method
   */start(){cov_i9q0e4g1i().f[5]++;cov_i9q0e4g1i().s[28]++;assert(!this.running,'Miner is already running.');cov_i9q0e4g1i().s[29]++;this._start().catch(()=>{cov_i9q0e4g1i().f[6]++;});}/**
   * Start mining.
   * @method
   * @private
   * @returns {Promise}
   */async _start(){cov_i9q0e4g1i().f[7]++;cov_i9q0e4g1i().s[30]++;assert(!this.running,'Miner is already running.');cov_i9q0e4g1i().s[31]++;this.running=true;cov_i9q0e4g1i().s[32]++;this.stopping=false;cov_i9q0e4g1i().s[33]++;for(;;){cov_i9q0e4g1i().s[34]++;this.job=null;cov_i9q0e4g1i().s[35]++;try{cov_i9q0e4g1i().s[36]++;this.job=await this.createJob();}catch(e){cov_i9q0e4g1i().s[37]++;if(this.stopping){cov_i9q0e4g1i().b[2][0]++;cov_i9q0e4g1i().s[38]++;break;}else{cov_i9q0e4g1i().b[2][1]++;}cov_i9q0e4g1i().s[39]++;this.emit('error',e);cov_i9q0e4g1i().s[40]++;break;}cov_i9q0e4g1i().s[41]++;if(this.stopping){cov_i9q0e4g1i().b[3][0]++;cov_i9q0e4g1i().s[42]++;break;}else{cov_i9q0e4g1i().b[3][1]++;}let block;cov_i9q0e4g1i().s[43]++;try{cov_i9q0e4g1i().s[44]++;block=await this.mineAsync(this.job);}catch(e){cov_i9q0e4g1i().s[45]++;if(this.stopping){cov_i9q0e4g1i().b[4][0]++;cov_i9q0e4g1i().s[46]++;break;}else{cov_i9q0e4g1i().b[4][1]++;}cov_i9q0e4g1i().s[47]++;this.emit('error',e);cov_i9q0e4g1i().s[48]++;break;}cov_i9q0e4g1i().s[49]++;if(this.stopping){cov_i9q0e4g1i().b[5][0]++;cov_i9q0e4g1i().s[50]++;break;}else{cov_i9q0e4g1i().b[5][1]++;}cov_i9q0e4g1i().s[51]++;if(!block){cov_i9q0e4g1i().b[6][0]++;cov_i9q0e4g1i().s[52]++;continue;}else{cov_i9q0e4g1i().b[6][1]++;}let entry;cov_i9q0e4g1i().s[53]++;try{cov_i9q0e4g1i().s[54]++;entry=await this.chain.add(block);}catch(e){cov_i9q0e4g1i().s[55]++;if(this.stopping){cov_i9q0e4g1i().b[7][0]++;cov_i9q0e4g1i().s[56]++;break;}else{cov_i9q0e4g1i().b[7][1]++;}cov_i9q0e4g1i().s[57]++;if(e.type==='VerifyError'){cov_i9q0e4g1i().b[8][0]++;cov_i9q0e4g1i().s[58]++;this.logger.warning('Mined an invalid block!');cov_i9q0e4g1i().s[59]++;this.logger.error(e);cov_i9q0e4g1i().s[60]++;continue;}else{cov_i9q0e4g1i().b[8][1]++;}cov_i9q0e4g1i().s[61]++;this.emit('error',e);cov_i9q0e4g1i().s[62]++;break;}cov_i9q0e4g1i().s[63]++;if(!entry){cov_i9q0e4g1i().b[9][0]++;cov_i9q0e4g1i().s[64]++;this.logger.warning('Mined a bad-prevblk (race condition?)');cov_i9q0e4g1i().s[65]++;continue;}else{cov_i9q0e4g1i().b[9][1]++;}cov_i9q0e4g1i().s[66]++;if(this.stopping){cov_i9q0e4g1i().b[10][0]++;cov_i9q0e4g1i().s[67]++;break;}else{cov_i9q0e4g1i().b[10][1]++;}// Log the block hex as a failsafe (in case we can't send it).
cov_i9q0e4g1i().s[68]++;this.logger.info('Found block: %d (%h).',entry.height,entry.hash);cov_i9q0e4g1i().s[69]++;this.emit('block',block,entry);}const job=(cov_i9q0e4g1i().s[70]++,this.stopJob);cov_i9q0e4g1i().s[71]++;if(job){cov_i9q0e4g1i().b[11][0]++;cov_i9q0e4g1i().s[72]++;this.stopJob=null;cov_i9q0e4g1i().s[73]++;job.resolve();}else{cov_i9q0e4g1i().b[11][1]++;}}/**
   * Stop mining.
   * @method
   * @returns {Promise}
   */async stop(){cov_i9q0e4g1i().f[8]++;const unlock=(cov_i9q0e4g1i().s[74]++,await this.locker.lock());cov_i9q0e4g1i().s[75]++;try{cov_i9q0e4g1i().s[76]++;return await this._stop();}finally{cov_i9q0e4g1i().s[77]++;unlock();}}/**
   * Stop mining (without a lock).
   * @method
   * @returns {Promise}
   */async _stop(){cov_i9q0e4g1i().f[9]++;cov_i9q0e4g1i().s[78]++;if(!this.running){cov_i9q0e4g1i().b[12][0]++;cov_i9q0e4g1i().s[79]++;return;}else{cov_i9q0e4g1i().b[12][1]++;}cov_i9q0e4g1i().s[80]++;assert(this.running,'Miner is not running.');cov_i9q0e4g1i().s[81]++;assert(!this.stopping,'Miner is already stopping.');cov_i9q0e4g1i().s[82]++;this.stopping=true;cov_i9q0e4g1i().s[83]++;if(this.job){cov_i9q0e4g1i().b[13][0]++;cov_i9q0e4g1i().s[84]++;this.job.destroy();cov_i9q0e4g1i().s[85]++;this.job=null;}else{cov_i9q0e4g1i().b[13][1]++;}cov_i9q0e4g1i().s[86]++;await this.wait();cov_i9q0e4g1i().s[87]++;this.running=false;cov_i9q0e4g1i().s[88]++;this.stopping=false;cov_i9q0e4g1i().s[89]++;this.job=null;}/**
   * Wait for `done` event.
   * @private
   * @returns {Promise}
   */wait(){cov_i9q0e4g1i().f[10]++;cov_i9q0e4g1i().s[90]++;return new Promise((resolve,reject)=>{cov_i9q0e4g1i().f[11]++;cov_i9q0e4g1i().s[91]++;assert(!this.stopJob);cov_i9q0e4g1i().s[92]++;this.stopJob={resolve,reject};});}/**
   * Create a mining job.
   * @method
   * @param {ChainEntry?} tip
   * @param {Address?} address
   * @returns {Promise} - Returns {@link Job}.
   */async createJob(tip,address){cov_i9q0e4g1i().f[12]++;const attempt=(cov_i9q0e4g1i().s[93]++,await this.miner.createBlock(tip,address));cov_i9q0e4g1i().s[94]++;return new CPUJob(this,attempt);}/**
   * Mine a single block.
   * @method
   * @param {ChainEntry?} tip
   * @param {Address?} address
   * @returns {Promise} - Returns [{@link Block}].
   */async mineBlock(tip,address){cov_i9q0e4g1i().f[13]++;const job=(cov_i9q0e4g1i().s[95]++,await this.createJob(tip,address));cov_i9q0e4g1i().s[96]++;return await this.mineAsync(job);}/**
   * Notify the miner that a new
   * tx has entered the mempool.
   */notifyEntry(){cov_i9q0e4g1i().f[14]++;cov_i9q0e4g1i().s[97]++;if(!this.running){cov_i9q0e4g1i().b[14][0]++;cov_i9q0e4g1i().s[98]++;return;}else{cov_i9q0e4g1i().b[14][1]++;}cov_i9q0e4g1i().s[99]++;if(!this.job){cov_i9q0e4g1i().b[15][0]++;cov_i9q0e4g1i().s[100]++;return;}else{cov_i9q0e4g1i().b[15][1]++;}cov_i9q0e4g1i().s[101]++;if(util.now()-this.job.start>10){cov_i9q0e4g1i().b[16][0]++;cov_i9q0e4g1i().s[102]++;this.job.destroy();cov_i9q0e4g1i().s[103]++;this.job=null;}else{cov_i9q0e4g1i().b[16][1]++;}}/**
   * Hash until the nonce overflows.
   * @param {CPUJob} job
   * @returns {Number} nonce
   */findNonce(job){cov_i9q0e4g1i().f[15]++;const data=(cov_i9q0e4g1i().s[104]++,job.getHeader());const target=(cov_i9q0e4g1i().s[105]++,job.attempt.target);const interval=(cov_i9q0e4g1i().s[106]++,CPUMiner.INTERVAL);let min=(cov_i9q0e4g1i().s[107]++,0);let max=(cov_i9q0e4g1i().s[108]++,interval);let nonce;cov_i9q0e4g1i().s[109]++;while(max<=0xffffffff){cov_i9q0e4g1i().s[110]++;nonce=mine(data,target,min,max);cov_i9q0e4g1i().s[111]++;if(nonce!==-1){cov_i9q0e4g1i().b[17][0]++;cov_i9q0e4g1i().s[112]++;break;}else{cov_i9q0e4g1i().b[17][1]++;}cov_i9q0e4g1i().s[113]++;this.sendStatus(job,max);cov_i9q0e4g1i().s[114]++;min+=interval;cov_i9q0e4g1i().s[115]++;max+=interval;}cov_i9q0e4g1i().s[116]++;return nonce;}/**
   * Hash until the nonce overflows.
   * @method
   * @param {CPUJob} job
   * @returns {Promise} Returns Number.
   */async findNonceAsync(job){cov_i9q0e4g1i().f[16]++;cov_i9q0e4g1i().s[117]++;if(!this.workers){cov_i9q0e4g1i().b[18][0]++;cov_i9q0e4g1i().s[118]++;return this.findNonce(job);}else{cov_i9q0e4g1i().b[18][1]++;}const data=(cov_i9q0e4g1i().s[119]++,job.getHeader());const target=(cov_i9q0e4g1i().s[120]++,job.attempt.target);const interval=(cov_i9q0e4g1i().s[121]++,CPUMiner.INTERVAL);let min=(cov_i9q0e4g1i().s[122]++,0);let max=(cov_i9q0e4g1i().s[123]++,interval);let nonce;cov_i9q0e4g1i().s[124]++;while(max<=0xffffffff){cov_i9q0e4g1i().s[125]++;nonce=await this.workers.mine(data,target,min,max);cov_i9q0e4g1i().s[126]++;if(nonce!==-1){cov_i9q0e4g1i().b[19][0]++;cov_i9q0e4g1i().s[127]++;break;}else{cov_i9q0e4g1i().b[19][1]++;}cov_i9q0e4g1i().s[128]++;if(job.destroyed){cov_i9q0e4g1i().b[20][0]++;cov_i9q0e4g1i().s[129]++;return nonce;}else{cov_i9q0e4g1i().b[20][1]++;}cov_i9q0e4g1i().s[130]++;this.sendStatus(job,max);cov_i9q0e4g1i().s[131]++;min+=interval;cov_i9q0e4g1i().s[132]++;max+=interval;}cov_i9q0e4g1i().s[133]++;return nonce;}/**
   * Mine synchronously until the block is found.
   * @param {CPUJob} job
   * @returns {Block}
   */mine(job){cov_i9q0e4g1i().f[17]++;cov_i9q0e4g1i().s[134]++;job.start=util.now();let nonce;cov_i9q0e4g1i().s[135]++;for(;;){cov_i9q0e4g1i().s[136]++;nonce=this.findNonce(job);cov_i9q0e4g1i().s[137]++;if(nonce!==-1){cov_i9q0e4g1i().b[21][0]++;cov_i9q0e4g1i().s[138]++;break;}else{cov_i9q0e4g1i().b[21][1]++;}cov_i9q0e4g1i().s[139]++;job.updateNonce();cov_i9q0e4g1i().s[140]++;this.sendStatus(job,0);}cov_i9q0e4g1i().s[141]++;return job.commit(nonce);}/**
   * Mine asynchronously until the block is found.
   * @method
   * @param {CPUJob} job
   * @returns {Promise} - Returns {@link Block}.
   */async mineAsync(job){cov_i9q0e4g1i().f[18]++;let nonce;cov_i9q0e4g1i().s[142]++;job.start=util.now();cov_i9q0e4g1i().s[143]++;for(;;){cov_i9q0e4g1i().s[144]++;nonce=await this.findNonceAsync(job);cov_i9q0e4g1i().s[145]++;if(nonce!==-1){cov_i9q0e4g1i().b[22][0]++;cov_i9q0e4g1i().s[146]++;break;}else{cov_i9q0e4g1i().b[22][1]++;}cov_i9q0e4g1i().s[147]++;if(job.destroyed){cov_i9q0e4g1i().b[23][0]++;cov_i9q0e4g1i().s[148]++;return null;}else{cov_i9q0e4g1i().b[23][1]++;}cov_i9q0e4g1i().s[149]++;job.updateNonce();cov_i9q0e4g1i().s[150]++;this.sendStatus(job,0);}cov_i9q0e4g1i().s[151]++;return job.commit(nonce);}/**
   * Send a progress report (emits `status`).
   * @param {CPUJob} job
   * @param {Number} nonce
   */sendStatus(job,nonce){cov_i9q0e4g1i().f[19]++;const attempt=(cov_i9q0e4g1i().s[152]++,job.attempt);const tip=(cov_i9q0e4g1i().s[153]++,attempt.prevBlock);const hashes=(cov_i9q0e4g1i().s[154]++,job.getHashes(nonce));const hashrate=(cov_i9q0e4g1i().s[155]++,job.getRate(nonce));cov_i9q0e4g1i().s[156]++;this.logger.info('Status: hashrate=%dkhs hashes=%d target=%d height=%d tip=%h',Math.floor(hashrate/1000),hashes,attempt.bits,attempt.height,tip);cov_i9q0e4g1i().s[157]++;this.emit('status',job,hashes,hashrate);}}/**
 * Nonce range interval.
 * @const {Number}
 * @default
 */cov_i9q0e4g1i().s[158]++;CPUMiner.INTERVAL=0xffffffff/1500|0;/**
 * Mining Job
 * @ignore
 */class CPUJob{/**
   * Create a mining job.
   * @constructor
   * @param {CPUMiner} miner
   * @param {BlockTemplate} attempt
   */constructor(miner,attempt){cov_i9q0e4g1i().f[20]++;cov_i9q0e4g1i().s[159]++;this.miner=miner;cov_i9q0e4g1i().s[160]++;this.attempt=attempt;cov_i9q0e4g1i().s[161]++;this.destroyed=false;cov_i9q0e4g1i().s[162]++;this.committed=false;cov_i9q0e4g1i().s[163]++;this.start=util.now();cov_i9q0e4g1i().s[164]++;this.nonce1=0;cov_i9q0e4g1i().s[165]++;this.nonce2=0;cov_i9q0e4g1i().s[166]++;this.refresh();}/**
   * Get the raw block header.
   * @param {Number} nonce
   * @returns {Buffer}
   */getHeader(){cov_i9q0e4g1i().f[21]++;const attempt=(cov_i9q0e4g1i().s[167]++,this.attempt);const n1=(cov_i9q0e4g1i().s[168]++,this.nonce1);const n2=(cov_i9q0e4g1i().s[169]++,this.nonce2);const time=(cov_i9q0e4g1i().s[170]++,attempt.time);const root=(cov_i9q0e4g1i().s[171]++,attempt.getRoot(n1,n2));const data=(cov_i9q0e4g1i().s[172]++,attempt.getHeader(root,time,0));cov_i9q0e4g1i().s[173]++;return data;}/**
   * Commit job and return a block.
   * @param {Number} nonce
   * @returns {Block}
   */commit(nonce){cov_i9q0e4g1i().f[22]++;const attempt=(cov_i9q0e4g1i().s[174]++,this.attempt);const n1=(cov_i9q0e4g1i().s[175]++,this.nonce1);const n2=(cov_i9q0e4g1i().s[176]++,this.nonce2);const time=(cov_i9q0e4g1i().s[177]++,attempt.time);cov_i9q0e4g1i().s[178]++;assert(!this.committed,'Job already committed.');cov_i9q0e4g1i().s[179]++;this.committed=true;const proof=(cov_i9q0e4g1i().s[180]++,attempt.getProof(n1,n2,time,nonce));cov_i9q0e4g1i().s[181]++;return attempt.commit(proof);}/**
   * Mine block synchronously.
   * @returns {Block}
   */mine(){cov_i9q0e4g1i().f[23]++;cov_i9q0e4g1i().s[182]++;return this.miner.mine(this);}/**
   * Mine block asynchronously.
   * @returns {Promise}
   */mineAsync(){cov_i9q0e4g1i().f[24]++;cov_i9q0e4g1i().s[183]++;return this.miner.mineAsync(this);}/**
   * Refresh the block template.
   */refresh(){cov_i9q0e4g1i().f[25]++;cov_i9q0e4g1i().s[184]++;return this.attempt.refresh();}/**
   * Increment the extraNonce.
   */updateNonce(){cov_i9q0e4g1i().f[26]++;cov_i9q0e4g1i().s[185]++;if(++this.nonce2===0x100000000){cov_i9q0e4g1i().b[24][0]++;cov_i9q0e4g1i().s[186]++;this.nonce2=0;cov_i9q0e4g1i().s[187]++;this.nonce1++;}else{cov_i9q0e4g1i().b[24][1]++;}}/**
   * Destroy the job.
   */destroy(){cov_i9q0e4g1i().f[27]++;cov_i9q0e4g1i().s[188]++;assert(!this.destroyed,'Job already destroyed.');cov_i9q0e4g1i().s[189]++;this.destroyed=true;}/**
   * Calculate number of hashes computed.
   * @param {Number} nonce
   * @returns {Number}
   */getHashes(nonce){cov_i9q0e4g1i().f[28]++;const extra=(cov_i9q0e4g1i().s[190]++,this.nonce1*0x100000000+this.nonce2);cov_i9q0e4g1i().s[191]++;return extra*0xffffffff+nonce;}/**
   * Calculate hashrate.
   * @param {Number} nonce
   * @returns {Number}
   */getRate(nonce){cov_i9q0e4g1i().f[29]++;const hashes=(cov_i9q0e4g1i().s[192]++,this.getHashes(nonce));const seconds=(cov_i9q0e4g1i().s[193]++,util.now()-this.start);cov_i9q0e4g1i().s[194]++;return Math.floor(hashes/Math.max(1,seconds));}/**
   * Add a transaction to the block.
   * @param {TX} tx
   * @param {CoinView} view
   */addTX(tx,view){cov_i9q0e4g1i().f[30]++;cov_i9q0e4g1i().s[195]++;return this.attempt.addTX(tx,view);}/**
   * Add a transaction to the block
   * (less verification than addTX).
   * @param {TX} tx
   * @param {CoinView?} view
   */pushTX(tx,view){cov_i9q0e4g1i().f[31]++;cov_i9q0e4g1i().s[196]++;return this.attempt.pushTX(tx,view);}}/*
 * Expose
 */cov_i9q0e4g1i().s[197]++;module.exports=CPUMiner;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
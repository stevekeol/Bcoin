/*!
 * keyring.js - keyring object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */'use strict';function cov_2lhvf6xar9(){var path="E:\\Projects\\Test\\bcoin\\lib\\primitives\\keyring.js";var hash="6e9b7f7abc4f0dad3207cda4d9f6310685494ec8";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\Projects\\Test\\bcoin\\lib\\primitives\\keyring.js",statementMap:{"0":{start:{line:10,column:15},end:{line:10,column:31}},"1":{start:{line:11,column:15},end:{line:11,column:53}},"2":{start:{line:12,column:12},end:{line:12,column:28}},"3":{start:{line:13,column:16},end:{line:13,column:46}},"4":{start:{line:14,column:16},end:{line:14,column:46}},"5":{start:{line:15,column:16},end:{line:15,column:46}},"6":{start:{line:16,column:15},end:{line:16,column:42}},"7":{start:{line:17,column:16},end:{line:17,column:36}},"8":{start:{line:18,column:15},end:{line:18,column:34}},"9":{start:{line:19,column:18},end:{line:19,column:50}},"10":{start:{line:20,column:19},end:{line:20,column:22}},"11":{start:{line:21,column:24},end:{line:21,column:43}},"12":{start:{line:27,column:17},end:{line:27,column:39}},"13":{start:{line:43,column:4},end:{line:43,column:25}},"14":{start:{line:44,column:4},end:{line:44,column:24}},"15":{start:{line:45,column:4},end:{line:45,column:30}},"16":{start:{line:46,column:4},end:{line:46,column:27}},"17":{start:{line:47,column:4},end:{line:47,column:23}},"18":{start:{line:49,column:4},end:{line:49,column:25}},"19":{start:{line:50,column:4},end:{line:50,column:28}},"20":{start:{line:51,column:4},end:{line:51,column:25}},"21":{start:{line:52,column:4},end:{line:52,column:28}},"22":{start:{line:53,column:4},end:{line:53,column:31}},"23":{start:{line:54,column:4},end:{line:54,column:31}},"24":{start:{line:55,column:4},end:{line:55,column:31}},"25":{start:{line:56,column:4},end:{line:56,column:31}},"26":{start:{line:58,column:4},end:{line:59,column:32}},"27":{start:{line:59,column:6},end:{line:59,column:32}},"28":{start:{line:69,column:14},end:{line:69,column:28}},"29":{start:{line:71,column:4},end:{line:74,column:5}},"30":{start:{line:72,column:6},end:{line:72,column:51}},"31":{start:{line:73,column:6},end:{line:73,column:37}},"32":{start:{line:76,column:4},end:{line:79,column:5}},"33":{start:{line:77,column:6},end:{line:77,column:50}},"34":{start:{line:78,column:6},end:{line:78,column:35}},"35":{start:{line:81,column:4},end:{line:82,column:31}},"36":{start:{line:82,column:6},end:{line:82,column:31}},"37":{start:{line:84,column:4},end:{line:84,column:29}},"38":{start:{line:86,column:4},end:{line:87,column:37}},"39":{start:{line:87,column:6},end:{line:87,column:37}},"40":{start:{line:89,column:4},end:{line:90,column:38}},"41":{start:{line:90,column:6},end:{line:90,column:38}},"42":{start:{line:92,column:19},end:{line:92,column:33}},"43":{start:{line:93,column:21},end:{line:93,column:39}},"44":{start:{line:95,column:4},end:{line:96,column:52}},"45":{start:{line:96,column:6},end:{line:96,column:52}},"46":{start:{line:98,column:4},end:{line:98,column:39}},"47":{start:{line:108,column:4},end:{line:108,column:43}},"48":{start:{line:116,column:4},end:{line:116,column:25}},"49":{start:{line:117,column:4},end:{line:117,column:28}},"50":{start:{line:118,column:4},end:{line:118,column:25}},"51":{start:{line:119,column:4},end:{line:119,column:28}},"52":{start:{line:120,column:4},end:{line:120,column:31}},"53":{start:{line:121,column:4},end:{line:121,column:31}},"54":{start:{line:122,column:4},end:{line:122,column:31}},"55":{start:{line:123,column:4},end:{line:123,column:31}},"56":{start:{line:134,column:4},end:{line:134,column:66}},"57":{start:{line:135,column:4},end:{line:135,column:72}},"58":{start:{line:137,column:4},end:{line:137,column:26}},"59":{start:{line:138,column:4},end:{line:138,column:72}},"60":{start:{line:140,column:4},end:{line:140,column:16}},"61":{start:{line:151,column:4},end:{line:151,column:49}},"62":{start:{line:161,column:4},end:{line:161,column:65}},"63":{start:{line:162,column:4},end:{line:162,column:70}},"64":{start:{line:163,column:4},end:{line:163,column:25}},"65":{start:{line:164,column:4},end:{line:164,column:16}},"66":{start:{line:175,column:16},end:{line:175,column:46}},"67":{start:{line:176,column:4},end:{line:176,column:39}},"68":{start:{line:186,column:4},end:{line:186,column:41}},"69":{start:{line:196,column:4},end:{line:196,column:38}},"70":{start:{line:207,column:4},end:{line:207,column:58}},"71":{start:{line:209,column:4},end:{line:210,column:55}},"72":{start:{line:210,column:6},end:{line:210,column:55}},"73":{start:{line:212,column:4},end:{line:212,column:32}},"74":{start:{line:223,column:4},end:{line:223,column:45}},"75":{start:{line:235,column:4},end:{line:235,column:72}},"76":{start:{line:237,column:4},end:{line:237,column:32}},"77":{start:{line:238,column:4},end:{line:238,column:25}},"78":{start:{line:240,column:4},end:{line:240,column:16}},"79":{start:{line:252,column:4},end:{line:252,column:56}},"80":{start:{line:264,column:4},end:{line:264,column:59}},"81":{start:{line:265,column:4},end:{line:265,column:59}},"82":{start:{line:267,column:14},end:{line:267,column:33}},"83":{start:{line:268,column:4},end:{line:268,column:67}},"84":{start:{line:270,column:4},end:{line:270,column:42}},"85":{start:{line:272,column:4},end:{line:272,column:16}},"86":{start:{line:283,column:4},end:{line:283,column:52}},"87":{start:{line:292,column:15},end:{line:292,column:16}},"88":{start:{line:294,column:4},end:{line:294,column:14}},"89":{start:{line:295,column:4},end:{line:295,column:35}},"90":{start:{line:297,column:4},end:{line:298,column:16}},"91":{start:{line:298,column:6},end:{line:298,column:16}},"92":{start:{line:300,column:4},end:{line:300,column:14}},"93":{start:{line:302,column:4},end:{line:302,column:16}},"94":{start:{line:312,column:17},end:{line:312,column:37}},"95":{start:{line:313,column:15},end:{line:313,column:30}},"96":{start:{line:315,column:4},end:{line:315,column:69}},"97":{start:{line:317,column:4},end:{line:317,column:35}},"98":{start:{line:319,column:4},end:{line:319,column:42}},"99":{start:{line:320,column:4},end:{line:320,column:35}},"100":{start:{line:322,column:4},end:{line:323,column:20}},"101":{start:{line:323,column:6},end:{line:323,column:20}},"102":{start:{line:325,column:4},end:{line:325,column:37}},"103":{start:{line:327,column:4},end:{line:327,column:38}},"104":{start:{line:338,column:15},end:{line:338,column:50}},"105":{start:{line:340,column:20},end:{line:340,column:31}},"106":{start:{line:342,column:4},end:{line:342,column:38}},"107":{start:{line:344,column:16},end:{line:344,column:32}},"108":{start:{line:346,column:19},end:{line:346,column:24}},"109":{start:{line:348,column:4},end:{line:351,column:5}},"110":{start:{line:349,column:6},end:{line:349,column:57}},"111":{start:{line:350,column:6},end:{line:350,column:22}},"112":{start:{line:353,column:4},end:{line:353,column:38}},"113":{start:{line:355,column:4},end:{line:355,column:43}},"114":{start:{line:366,column:4},end:{line:366,column:48}},"115":{start:{line:376,column:4},end:{line:377,column:18}},"116":{start:{line:377,column:6},end:{line:377,column:18}},"117":{start:{line:379,column:4},end:{line:380,column:36}},"118":{start:{line:380,column:6},end:{line:380,column:36}},"119":{start:{line:382,column:4},end:{line:383,column:45}},"120":{start:{line:383,column:6},end:{line:383,column:45}},"121":{start:{line:385,column:4},end:{line:385,column:27}},"122":{start:{line:395,column:4},end:{line:396,column:43}},"123":{start:{line:396,column:6},end:{line:396,column:43}},"124":{start:{line:398,column:4},end:{line:399,column:44}},"125":{start:{line:399,column:6},end:{line:399,column:44}},"126":{start:{line:401,column:4},end:{line:401,column:26}},"127":{start:{line:410,column:4},end:{line:410,column:23}},"128":{start:{line:419,column:4},end:{line:420,column:18}},"129":{start:{line:420,column:6},end:{line:420,column:18}},"130":{start:{line:422,column:4},end:{line:432,column:5}},"131":{start:{line:424,column:6},end:{line:430,column:7}},"132":{start:{line:425,column:21},end:{line:425,column:51}},"133":{start:{line:426,column:8},end:{line:426,column:46}},"134":{start:{line:428,column:21},end:{line:428,column:41}},"135":{start:{line:429,column:8},end:{line:429,column:46}},"136":{start:{line:431,column:6},end:{line:431,column:30}},"137":{start:{line:434,column:4},end:{line:434,column:25}},"138":{start:{line:445,column:4},end:{line:446,column:18}},"139":{start:{line:446,column:6},end:{line:446,column:18}},"140":{start:{line:448,column:4},end:{line:449,column:53}},"141":{start:{line:449,column:6},end:{line:449,column:53}},"142":{start:{line:451,column:4},end:{line:453,column:25}},"143":{start:{line:463,column:4},end:{line:464,column:18}},"144":{start:{line:464,column:6},end:{line:464,column:18}},"145":{start:{line:466,column:4},end:{line:470,column:5}},"146":{start:{line:467,column:19},end:{line:467,column:39}},"147":{start:{line:468,column:19},end:{line:468,column:47}},"148":{start:{line:469,column:6},end:{line:469,column:33}},"149":{start:{line:472,column:4},end:{line:473,column:51}},"150":{start:{line:473,column:6},end:{line:473,column:51}},"151":{start:{line:475,column:4},end:{line:476,column:51}},"152":{start:{line:476,column:6},end:{line:476,column:51}},"153":{start:{line:478,column:4},end:{line:478,column:31}},"154":{start:{line:488,column:4},end:{line:489,column:40}},"155":{start:{line:489,column:6},end:{line:489,column:40}},"156":{start:{line:490,column:4},end:{line:490,column:38}},"157":{start:{line:500,column:4},end:{line:501,column:18}},"158":{start:{line:501,column:6},end:{line:501,column:18}},"159":{start:{line:503,column:4},end:{line:504,column:50}},"160":{start:{line:504,column:6},end:{line:504,column:50}},"161":{start:{line:506,column:4},end:{line:508,column:28}},"162":{start:{line:518,column:4},end:{line:519,column:18}},"163":{start:{line:519,column:6},end:{line:519,column:18}},"164":{start:{line:521,column:4},end:{line:522,column:49}},"165":{start:{line:522,column:6},end:{line:522,column:49}},"166":{start:{line:524,column:4},end:{line:526,column:28}},"167":{start:{line:536,column:4},end:{line:537,column:18}},"168":{start:{line:537,column:6},end:{line:537,column:18}},"169":{start:{line:539,column:4},end:{line:549,column:5}},"170":{start:{line:541,column:6},end:{line:547,column:7}},"171":{start:{line:542,column:21},end:{line:542,column:44}},"172":{start:{line:543,column:8},end:{line:543,column:51}},"173":{start:{line:545,column:21},end:{line:545,column:44}},"174":{start:{line:546,column:8},end:{line:546,column:44}},"175":{start:{line:548,column:6},end:{line:548,column:33}},"176":{start:{line:551,column:4},end:{line:552,column:51}},"177":{start:{line:552,column:6},end:{line:552,column:51}},"178":{start:{line:554,column:4},end:{line:555,column:51}},"179":{start:{line:555,column:6},end:{line:555,column:51}},"180":{start:{line:557,column:4},end:{line:557,column:31}},"181":{start:{line:567,column:4},end:{line:568,column:53}},"182":{start:{line:568,column:6},end:{line:568,column:53}},"183":{start:{line:570,column:4},end:{line:572,column:22}},"184":{start:{line:582,column:4},end:{line:592,column:5}},"185":{start:{line:583,column:19},end:{line:583,column:36}},"186":{start:{line:586,column:6},end:{line:589,column:44}},"187":{start:{line:587,column:8},end:{line:587,column:51}},"188":{start:{line:589,column:8},end:{line:589,column:44}},"189":{start:{line:591,column:6},end:{line:591,column:30}},"190":{start:{line:594,column:4},end:{line:595,column:48}},"191":{start:{line:595,column:6},end:{line:595,column:48}},"192":{start:{line:597,column:4},end:{line:598,column:48}},"193":{start:{line:598,column:6},end:{line:598,column:48}},"194":{start:{line:600,column:4},end:{line:600,column:28}},"195":{start:{line:610,column:4},end:{line:611,column:37}},"196":{start:{line:611,column:6},end:{line:611,column:37}},"197":{start:{line:613,column:4},end:{line:614,column:37}},"198":{start:{line:614,column:6},end:{line:614,column:37}},"199":{start:{line:616,column:4},end:{line:616,column:32}},"200":{start:{line:626,column:4},end:{line:627,column:49}},"201":{start:{line:627,column:6},end:{line:627,column:49}},"202":{start:{line:629,column:4},end:{line:630,column:49}},"203":{start:{line:630,column:6},end:{line:630,column:49}},"204":{start:{line:632,column:4},end:{line:632,column:44}},"205":{start:{line:642,column:4},end:{line:643,column:19}},"206":{start:{line:643,column:6},end:{line:643,column:19}},"207":{start:{line:645,column:4},end:{line:646,column:18}},"208":{start:{line:646,column:6},end:{line:646,column:18}},"209":{start:{line:648,column:4},end:{line:651,column:5}},"210":{start:{line:649,column:6},end:{line:650,column:20}},"211":{start:{line:650,column:8},end:{line:650,column:20}},"212":{start:{line:653,column:4},end:{line:656,column:5}},"213":{start:{line:654,column:6},end:{line:655,column:20}},"214":{start:{line:655,column:8},end:{line:655,column:20}},"215":{start:{line:658,column:4},end:{line:658,column:17}},"216":{start:{line:671,column:4},end:{line:676,column:5}},"217":{start:{line:672,column:6},end:{line:672,column:18}},"218":{start:{line:674,column:6},end:{line:674,column:33}},"219":{start:{line:675,column:6},end:{line:675,column:47}},"220":{start:{line:678,column:4},end:{line:678,column:42}},"221":{start:{line:689,column:4},end:{line:692,column:5}},"222":{start:{line:690,column:6},end:{line:691,column:33}},"223":{start:{line:691,column:8},end:{line:691,column:33}},"224":{start:{line:694,column:4},end:{line:700,column:5}},"225":{start:{line:695,column:6},end:{line:696,column:27}},"226":{start:{line:696,column:8},end:{line:696,column:27}},"227":{start:{line:698,column:6},end:{line:699,column:27}},"228":{start:{line:699,column:8},end:{line:699,column:27}},"229":{start:{line:702,column:4},end:{line:702,column:16}},"230":{start:{line:712,column:4},end:{line:712,column:64}},"231":{start:{line:713,column:4},end:{line:713,column:51}},"232":{start:{line:724,column:4},end:{line:724,column:57}},"233":{start:{line:733,column:4},end:{line:734,column:16}},"234":{start:{line:734,column:6},end:{line:734,column:16}},"235":{start:{line:736,column:4},end:{line:737,column:16}},"236":{start:{line:737,column:6},end:{line:737,column:16}},"237":{start:{line:739,column:4},end:{line:739,column:13}},"238":{start:{line:748,column:4},end:{line:749,column:38}},"239":{start:{line:749,column:6},end:{line:749,column:38}},"240":{start:{line:751,column:4},end:{line:752,column:35}},"241":{start:{line:752,column:6},end:{line:752,column:35}},"242":{start:{line:754,column:4},end:{line:755,column:38}},"243":{start:{line:755,column:6},end:{line:755,column:38}},"244":{start:{line:757,column:4},end:{line:757,column:36}},"245":{start:{line:766,column:4},end:{line:766,column:25}},"246":{start:{line:775,column:4},end:{line:783,column:6}},"247":{start:{line:793,column:4},end:{line:793,column:17}},"248":{start:{line:794,column:4},end:{line:794,column:46}},"249":{start:{line:795,column:4},end:{line:795,column:45}},"250":{start:{line:796,column:4},end:{line:796,column:47}},"251":{start:{line:797,column:4},end:{line:797,column:60}},"252":{start:{line:799,column:4},end:{line:799,column:32}},"253":{start:{line:800,column:4},end:{line:800,column:30}},"254":{start:{line:801,column:4},end:{line:801,column:56}},"255":{start:{line:803,column:4},end:{line:804,column:52}},"256":{start:{line:804,column:6},end:{line:804,column:52}},"257":{start:{line:806,column:4},end:{line:806,column:16}},"258":{start:{line:816,column:4},end:{line:816,column:37}},"259":{start:{line:825,column:15},end:{line:825,column:16}},"260":{start:{line:826,column:4},end:{line:826,column:14}},"261":{start:{line:827,column:4},end:{line:832,column:5}},"262":{start:{line:828,column:6},end:{line:828,column:53}},"263":{start:{line:829,column:6},end:{line:829,column:16}},"264":{start:{line:831,column:6},end:{line:831,column:52}},"265":{start:{line:833,column:4},end:{line:833,column:55}},"266":{start:{line:834,column:4},end:{line:834,column:16}},"267":{start:{line:843,column:16},end:{line:843,column:17}},"268":{start:{line:845,column:4},end:{line:846,column:17}},"269":{start:{line:846,column:6},end:{line:846,column:17}},"270":{start:{line:848,column:4},end:{line:849,column:17}},"271":{start:{line:849,column:6},end:{line:849,column:17}},"272":{start:{line:851,column:4},end:{line:851,column:22}},"273":{start:{line:853,column:4},end:{line:858,column:5}},"274":{start:{line:854,column:6},end:{line:854,column:40}},"275":{start:{line:855,column:6},end:{line:855,column:55}},"276":{start:{line:857,column:6},end:{line:857,column:39}},"277":{start:{line:860,column:4},end:{line:863,column:24}},"278":{start:{line:861,column:6},end:{line:861,column:44}},"279":{start:{line:863,column:6},end:{line:863,column:24}},"280":{start:{line:865,column:4},end:{line:865,column:14}},"281":{start:{line:874,column:17},end:{line:874,column:31}},"282":{start:{line:875,column:4},end:{line:875,column:51}},"283":{start:{line:885,column:18},end:{line:885,column:29}},"284":{start:{line:887,column:4},end:{line:887,column:37}},"285":{start:{line:888,column:4},end:{line:888,column:36}},"286":{start:{line:890,column:16},end:{line:890,column:33}},"287":{start:{line:892,column:4},end:{line:899,column:5}},"288":{start:{line:893,column:23},end:{line:893,column:40}},"289":{start:{line:894,column:6},end:{line:894,column:28}},"290":{start:{line:895,column:6},end:{line:895,column:64}},"291":{start:{line:897,column:6},end:{line:897,column:27}},"292":{start:{line:898,column:6},end:{line:898,column:68}},"293":{start:{line:901,column:19},end:{line:901,column:36}},"294":{start:{line:903,column:4},end:{line:904,column:43}},"295":{start:{line:904,column:6},end:{line:904,column:43}},"296":{start:{line:906,column:4},end:{line:906,column:16}},"297":{start:{line:916,column:4},end:{line:916,column:43}},"298":{start:{line:926,column:4},end:{line:926,column:37}},"299":{start:{line:936,column:4},end:{line:936,column:36}},"300":{start:{line:946,column:4},end:{line:946,column:34}},"301":{start:{line:955,column:2},end:{line:956,column:15}},"302":{start:{line:956,column:4},end:{line:956,column:15}},"303":{start:{line:958,column:2},end:{line:959,column:26}},"304":{start:{line:959,column:4},end:{line:959,column:26}},"305":{start:{line:961,column:2},end:{line:962,column:25}},"306":{start:{line:962,column:4},end:{line:962,column:25}},"307":{start:{line:964,column:2},end:{line:964,column:13}},"308":{start:{line:971,column:0},end:{line:971,column:25}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:42,column:2},end:{line:42,column:3}},loc:{start:{line:42,column:23},end:{line:60,column:3}},line:42},"1":{name:"(anonymous_1)",decl:{start:{line:68,column:2},end:{line:68,column:3}},loc:{start:{line:68,column:23},end:{line:99,column:3}},line:68},"2":{name:"(anonymous_2)",decl:{start:{line:107,column:2},end:{line:107,column:3}},loc:{start:{line:107,column:30},end:{line:109,column:3}},line:107},"3":{name:"(anonymous_3)",decl:{start:{line:115,column:2},end:{line:115,column:3}},loc:{start:{line:115,column:12},end:{line:124,column:3}},line:115},"4":{name:"(anonymous_4)",decl:{start:{line:133,column:2},end:{line:133,column:3}},loc:{start:{line:133,column:29},end:{line:141,column:3}},line:133},"5":{name:"(anonymous_5)",decl:{start:{line:150,column:2},end:{line:150,column:3}},loc:{start:{line:150,column:36},end:{line:152,column:3}},line:150},"6":{name:"(anonymous_6)",decl:{start:{line:160,column:2},end:{line:160,column:3}},loc:{start:{line:160,column:18},end:{line:165,column:3}},line:160},"7":{name:"(anonymous_7)",decl:{start:{line:174,column:2},end:{line:174,column:3}},loc:{start:{line:174,column:21},end:{line:177,column:3}},line:174},"8":{name:"(anonymous_8)",decl:{start:{line:185,column:2},end:{line:185,column:3}},loc:{start:{line:185,column:28},end:{line:187,column:3}},line:185},"9":{name:"(anonymous_9)",decl:{start:{line:195,column:2},end:{line:195,column:3}},loc:{start:{line:195,column:25},end:{line:197,column:3}},line:195},"10":{name:"(anonymous_10)",decl:{start:{line:206,column:2},end:{line:206,column:3}},loc:{start:{line:206,column:25},end:{line:213,column:3}},line:206},"11":{name:"(anonymous_11)",decl:{start:{line:222,column:2},end:{line:222,column:3}},loc:{start:{line:222,column:32},end:{line:224,column:3}},line:222},"12":{name:"(anonymous_12)",decl:{start:{line:234,column:2},end:{line:234,column:3}},loc:{start:{line:234,column:36},end:{line:241,column:3}},line:234},"13":{name:"(anonymous_13)",decl:{start:{line:251,column:2},end:{line:251,column:3}},loc:{start:{line:251,column:43},end:{line:253,column:3}},line:251},"14":{name:"(anonymous_14)",decl:{start:{line:263,column:2},end:{line:263,column:3}},loc:{start:{line:263,column:32},end:{line:273,column:3}},line:263},"15":{name:"(anonymous_15)",decl:{start:{line:282,column:2},end:{line:282,column:3}},loc:{start:{line:282,column:39},end:{line:284,column:3}},line:282},"16":{name:"(anonymous_16)",decl:{start:{line:291,column:2},end:{line:291,column:3}},loc:{start:{line:291,column:18},end:{line:303,column:3}},line:291},"17":{name:"(anonymous_17)",decl:{start:{line:311,column:2},end:{line:311,column:3}},loc:{start:{line:311,column:20},end:{line:328,column:3}},line:311},"18":{name:"(anonymous_18)",decl:{start:{line:337,column:2},end:{line:337,column:3}},loc:{start:{line:337,column:28},end:{line:356,column:3}},line:337},"19":{name:"(anonymous_19)",decl:{start:{line:365,column:2},end:{line:365,column:3}},loc:{start:{line:365,column:35},end:{line:367,column:3}},line:365},"20":{name:"(anonymous_20)",decl:{start:{line:375,column:2},end:{line:375,column:3}},loc:{start:{line:375,column:30},end:{line:386,column:3}},line:375},"21":{name:"(anonymous_21)",decl:{start:{line:394,column:2},end:{line:394,column:3}},loc:{start:{line:394,column:20},end:{line:402,column:3}},line:394},"22":{name:"(anonymous_22)",decl:{start:{line:409,column:2},end:{line:409,column:3}},loc:{start:{line:409,column:14},end:{line:411,column:3}},line:409},"23":{name:"(anonymous_23)",decl:{start:{line:418,column:2},end:{line:418,column:3}},loc:{start:{line:418,column:15},end:{line:435,column:3}},line:418},"24":{name:"(anonymous_24)",decl:{start:{line:444,column:2},end:{line:444,column:3}},loc:{start:{line:444,column:21},end:{line:454,column:3}},line:444},"25":{name:"(anonymous_25)",decl:{start:{line:462,column:2},end:{line:462,column:3}},loc:{start:{line:462,column:33},end:{line:479,column:3}},line:462},"26":{name:"(anonymous_26)",decl:{start:{line:487,column:2},end:{line:487,column:3}},loc:{start:{line:487,column:21},end:{line:491,column:3}},line:487},"27":{name:"(anonymous_27)",decl:{start:{line:499,column:2},end:{line:499,column:3}},loc:{start:{line:499,column:24},end:{line:509,column:3}},line:499},"28":{name:"(anonymous_28)",decl:{start:{line:517,column:2},end:{line:517,column:3}},loc:{start:{line:517,column:24},end:{line:527,column:3}},line:517},"29":{name:"(anonymous_29)",decl:{start:{line:535,column:2},end:{line:535,column:3}},loc:{start:{line:535,column:33},end:{line:558,column:3}},line:535},"30":{name:"(anonymous_30)",decl:{start:{line:566,column:2},end:{line:566,column:3}},loc:{start:{line:566,column:18},end:{line:573,column:3}},line:566},"31":{name:"(anonymous_31)",decl:{start:{line:581,column:2},end:{line:581,column:3}},loc:{start:{line:581,column:30},end:{line:601,column:3}},line:581},"32":{name:"(anonymous_32)",decl:{start:{line:609,column:2},end:{line:609,column:3}},loc:{start:{line:609,column:15},end:{line:617,column:3}},line:609},"33":{name:"(anonymous_33)",decl:{start:{line:625,column:2},end:{line:625,column:3}},loc:{start:{line:625,column:27},end:{line:633,column:3}},line:625},"34":{name:"(anonymous_34)",decl:{start:{line:641,column:2},end:{line:641,column:3}},loc:{start:{line:641,column:16},end:{line:659,column:3}},line:641},"35":{name:"(anonymous_35)",decl:{start:{line:668,column:2},end:{line:668,column:3}},loc:{start:{line:668,column:23},end:{line:679,column:3}},line:668},"36":{name:"(anonymous_36)",decl:{start:{line:688,column:2},end:{line:688,column:3}},loc:{start:{line:688,column:18},end:{line:703,column:3}},line:688},"37":{name:"(anonymous_37)",decl:{start:{line:711,column:2},end:{line:711,column:3}},loc:{start:{line:711,column:12},end:{line:714,column:3}},line:711},"38":{name:"(anonymous_38)",decl:{start:{line:723,column:2},end:{line:723,column:3}},loc:{start:{line:723,column:19},end:{line:725,column:3}},line:723},"39":{name:"(anonymous_39)",decl:{start:{line:732,column:2},end:{line:732,column:3}},loc:{start:{line:732,column:15},end:{line:740,column:3}},line:732},"40":{name:"(anonymous_40)",decl:{start:{line:747,column:2},end:{line:747,column:3}},loc:{start:{line:747,column:12},end:{line:758,column:3}},line:747},"41":{name:"(anonymous_41)",decl:{start:{line:765,column:2},end:{line:765,column:3}},loc:{start:{line:765,column:20},end:{line:767,column:3}},line:765},"42":{name:"(anonymous_42)",decl:{start:{line:774,column:2},end:{line:774,column:3}},loc:{start:{line:774,column:18},end:{line:784,column:3}},line:774},"43":{name:"(anonymous_43)",decl:{start:{line:792,column:2},end:{line:792,column:3}},loc:{start:{line:792,column:17},end:{line:807,column:3}},line:792},"44":{name:"(anonymous_44)",decl:{start:{line:815,column:2},end:{line:815,column:3}},loc:{start:{line:815,column:24},end:{line:817,column:3}},line:815},"45":{name:"(anonymous_45)",decl:{start:{line:824,column:2},end:{line:824,column:3}},loc:{start:{line:824,column:12},end:{line:835,column:3}},line:824},"46":{name:"(anonymous_46)",decl:{start:{line:842,column:2},end:{line:842,column:3}},loc:{start:{line:842,column:15},end:{line:866,column:3}},line:842},"47":{name:"(anonymous_47)",decl:{start:{line:873,column:2},end:{line:873,column:3}},loc:{start:{line:873,column:10},end:{line:876,column:3}},line:873},"48":{name:"(anonymous_48)",decl:{start:{line:884,column:2},end:{line:884,column:3}},loc:{start:{line:884,column:17},end:{line:907,column:3}},line:884},"49":{name:"(anonymous_49)",decl:{start:{line:915,column:2},end:{line:915,column:3}},loc:{start:{line:915,column:16},end:{line:917,column:3}},line:915},"50":{name:"(anonymous_50)",decl:{start:{line:925,column:2},end:{line:925,column:3}},loc:{start:{line:925,column:24},end:{line:927,column:3}},line:925},"51":{name:"(anonymous_51)",decl:{start:{line:935,column:2},end:{line:935,column:3}},loc:{start:{line:935,column:23},end:{line:937,column:3}},line:935},"52":{name:"(anonymous_52)",decl:{start:{line:945,column:2},end:{line:945,column:3}},loc:{start:{line:945,column:24},end:{line:947,column:3}},line:945},"53":{name:"toKey",decl:{start:{line:954,column:9},end:{line:954,column:14}},loc:{start:{line:954,column:20},end:{line:965,column:1}},line:954}},branchMap:{"0":{loc:{start:{line:58,column:4},end:{line:59,column:32}},type:"if",locations:[{start:{line:58,column:4},end:{line:59,column:32}},{start:{line:58,column:4},end:{line:59,column:32}}],line:58},"1":{loc:{start:{line:71,column:4},end:{line:74,column:5}},type:"if",locations:[{start:{line:71,column:4},end:{line:74,column:5}},{start:{line:71,column:4},end:{line:74,column:5}}],line:71},"2":{loc:{start:{line:76,column:4},end:{line:79,column:5}},type:"if",locations:[{start:{line:76,column:4},end:{line:79,column:5}},{start:{line:76,column:4},end:{line:79,column:5}}],line:76},"3":{loc:{start:{line:81,column:4},end:{line:82,column:31}},type:"if",locations:[{start:{line:81,column:4},end:{line:82,column:31}},{start:{line:81,column:4},end:{line:82,column:31}}],line:81},"4":{loc:{start:{line:86,column:4},end:{line:87,column:37}},type:"if",locations:[{start:{line:86,column:4},end:{line:87,column:37}},{start:{line:86,column:4},end:{line:87,column:37}}],line:86},"5":{loc:{start:{line:89,column:4},end:{line:90,column:38}},type:"if",locations:[{start:{line:89,column:4},end:{line:90,column:38}},{start:{line:89,column:4},end:{line:90,column:38}}],line:89},"6":{loc:{start:{line:95,column:4},end:{line:96,column:52}},type:"if",locations:[{start:{line:95,column:4},end:{line:96,column:52}},{start:{line:95,column:4},end:{line:96,column:52}}],line:95},"7":{loc:{start:{line:209,column:4},end:{line:210,column:55}},type:"if",locations:[{start:{line:209,column:4},end:{line:210,column:55}},{start:{line:209,column:4},end:{line:210,column:55}}],line:209},"8":{loc:{start:{line:268,column:11},end:{line:268,column:27}},type:"binary-expr",locations:[{start:{line:268,column:11},end:{line:268,column:17}},{start:{line:268,column:21},end:{line:268,column:27}}],line:268},"9":{loc:{start:{line:297,column:4},end:{line:298,column:16}},type:"if",locations:[{start:{line:297,column:4},end:{line:298,column:16}},{start:{line:297,column:4},end:{line:298,column:16}}],line:297},"10":{loc:{start:{line:322,column:4},end:{line:323,column:20}},type:"if",locations:[{start:{line:322,column:4},end:{line:323,column:20}},{start:{line:322,column:4},end:{line:323,column:20}}],line:322},"11":{loc:{start:{line:348,column:4},end:{line:351,column:5}},type:"if",locations:[{start:{line:348,column:4},end:{line:351,column:5}},{start:{line:348,column:4},end:{line:351,column:5}}],line:348},"12":{loc:{start:{line:376,column:4},end:{line:377,column:18}},type:"if",locations:[{start:{line:376,column:4},end:{line:377,column:18}},{start:{line:376,column:4},end:{line:377,column:18}}],line:376},"13":{loc:{start:{line:379,column:4},end:{line:380,column:36}},type:"if",locations:[{start:{line:379,column:4},end:{line:380,column:36}},{start:{line:379,column:4},end:{line:380,column:36}}],line:379},"14":{loc:{start:{line:382,column:4},end:{line:383,column:45}},type:"if",locations:[{start:{line:382,column:4},end:{line:383,column:45}},{start:{line:382,column:4},end:{line:383,column:45}}],line:382},"15":{loc:{start:{line:395,column:4},end:{line:396,column:43}},type:"if",locations:[{start:{line:395,column:4},end:{line:396,column:43}},{start:{line:395,column:4},end:{line:396,column:43}}],line:395},"16":{loc:{start:{line:398,column:4},end:{line:399,column:44}},type:"if",locations:[{start:{line:398,column:4},end:{line:399,column:44}},{start:{line:398,column:4},end:{line:399,column:44}}],line:398},"17":{loc:{start:{line:419,column:4},end:{line:420,column:18}},type:"if",locations:[{start:{line:419,column:4},end:{line:420,column:18}},{start:{line:419,column:4},end:{line:420,column:18}}],line:419},"18":{loc:{start:{line:422,column:4},end:{line:432,column:5}},type:"if",locations:[{start:{line:422,column:4},end:{line:432,column:5}},{start:{line:422,column:4},end:{line:432,column:5}}],line:422},"19":{loc:{start:{line:424,column:6},end:{line:430,column:7}},type:"if",locations:[{start:{line:424,column:6},end:{line:430,column:7}},{start:{line:424,column:6},end:{line:430,column:7}}],line:424},"20":{loc:{start:{line:445,column:4},end:{line:446,column:18}},type:"if",locations:[{start:{line:445,column:4},end:{line:446,column:18}},{start:{line:445,column:4},end:{line:446,column:18}}],line:445},"21":{loc:{start:{line:448,column:4},end:{line:449,column:53}},type:"if",locations:[{start:{line:448,column:4},end:{line:449,column:53}},{start:{line:448,column:4},end:{line:449,column:53}}],line:448},"22":{loc:{start:{line:451,column:11},end:{line:453,column:24}},type:"cond-expr",locations:[{start:{line:452,column:8},end:{line:452,column:40}},{start:{line:453,column:8},end:{line:453,column:24}}],line:451},"23":{loc:{start:{line:463,column:4},end:{line:464,column:18}},type:"if",locations:[{start:{line:463,column:4},end:{line:464,column:18}},{start:{line:463,column:4},end:{line:464,column:18}}],line:463},"24":{loc:{start:{line:466,column:4},end:{line:470,column:5}},type:"if",locations:[{start:{line:466,column:4},end:{line:470,column:5}},{start:{line:466,column:4},end:{line:470,column:5}}],line:466},"25":{loc:{start:{line:472,column:4},end:{line:473,column:51}},type:"if",locations:[{start:{line:472,column:4},end:{line:473,column:51}},{start:{line:472,column:4},end:{line:473,column:51}}],line:472},"26":{loc:{start:{line:475,column:4},end:{line:476,column:51}},type:"if",locations:[{start:{line:475,column:4},end:{line:476,column:51}},{start:{line:475,column:4},end:{line:476,column:51}}],line:475},"27":{loc:{start:{line:488,column:4},end:{line:489,column:40}},type:"if",locations:[{start:{line:488,column:4},end:{line:489,column:40}},{start:{line:488,column:4},end:{line:489,column:40}}],line:488},"28":{loc:{start:{line:500,column:4},end:{line:501,column:18}},type:"if",locations:[{start:{line:500,column:4},end:{line:501,column:18}},{start:{line:500,column:4},end:{line:501,column:18}}],line:500},"29":{loc:{start:{line:503,column:4},end:{line:504,column:50}},type:"if",locations:[{start:{line:503,column:4},end:{line:504,column:50}},{start:{line:503,column:4},end:{line:504,column:50}}],line:503},"30":{loc:{start:{line:506,column:11},end:{line:508,column:27}},type:"cond-expr",locations:[{start:{line:507,column:8},end:{line:507,column:43}},{start:{line:508,column:8},end:{line:508,column:27}}],line:506},"31":{loc:{start:{line:518,column:4},end:{line:519,column:18}},type:"if",locations:[{start:{line:518,column:4},end:{line:519,column:18}},{start:{line:518,column:4},end:{line:519,column:18}}],line:518},"32":{loc:{start:{line:521,column:4},end:{line:522,column:49}},type:"if",locations:[{start:{line:521,column:4},end:{line:522,column:49}},{start:{line:521,column:4},end:{line:522,column:49}}],line:521},"33":{loc:{start:{line:524,column:11},end:{line:526,column:27}},type:"cond-expr",locations:[{start:{line:525,column:8},end:{line:525,column:43}},{start:{line:526,column:8},end:{line:526,column:27}}],line:524},"34":{loc:{start:{line:536,column:4},end:{line:537,column:18}},type:"if",locations:[{start:{line:536,column:4},end:{line:537,column:18}},{start:{line:536,column:4},end:{line:537,column:18}}],line:536},"35":{loc:{start:{line:539,column:4},end:{line:549,column:5}},type:"if",locations:[{start:{line:539,column:4},end:{line:549,column:5}},{start:{line:539,column:4},end:{line:549,column:5}}],line:539},"36":{loc:{start:{line:541,column:6},end:{line:547,column:7}},type:"if",locations:[{start:{line:541,column:6},end:{line:547,column:7}},{start:{line:541,column:6},end:{line:547,column:7}}],line:541},"37":{loc:{start:{line:551,column:4},end:{line:552,column:51}},type:"if",locations:[{start:{line:551,column:4},end:{line:552,column:51}},{start:{line:551,column:4},end:{line:552,column:51}}],line:551},"38":{loc:{start:{line:554,column:4},end:{line:555,column:51}},type:"if",locations:[{start:{line:554,column:4},end:{line:555,column:51}},{start:{line:554,column:4},end:{line:555,column:51}}],line:554},"39":{loc:{start:{line:567,column:4},end:{line:568,column:53}},type:"if",locations:[{start:{line:567,column:4},end:{line:568,column:53}},{start:{line:567,column:4},end:{line:568,column:53}}],line:567},"40":{loc:{start:{line:570,column:11},end:{line:572,column:21}},type:"cond-expr",locations:[{start:{line:571,column:8},end:{line:571,column:37}},{start:{line:572,column:8},end:{line:572,column:21}}],line:570},"41":{loc:{start:{line:582,column:4},end:{line:592,column:5}},type:"if",locations:[{start:{line:582,column:4},end:{line:592,column:5}},{start:{line:582,column:4},end:{line:592,column:5}}],line:582},"42":{loc:{start:{line:586,column:6},end:{line:589,column:44}},type:"if",locations:[{start:{line:586,column:6},end:{line:589,column:44}},{start:{line:586,column:6},end:{line:589,column:44}}],line:586},"43":{loc:{start:{line:594,column:4},end:{line:595,column:48}},type:"if",locations:[{start:{line:594,column:4},end:{line:595,column:48}},{start:{line:594,column:4},end:{line:595,column:48}}],line:594},"44":{loc:{start:{line:597,column:4},end:{line:598,column:48}},type:"if",locations:[{start:{line:597,column:4},end:{line:598,column:48}},{start:{line:597,column:4},end:{line:598,column:48}}],line:597},"45":{loc:{start:{line:610,column:4},end:{line:611,column:37}},type:"if",locations:[{start:{line:610,column:4},end:{line:611,column:37}},{start:{line:610,column:4},end:{line:611,column:37}}],line:610},"46":{loc:{start:{line:613,column:4},end:{line:614,column:37}},type:"if",locations:[{start:{line:613,column:4},end:{line:614,column:37}},{start:{line:613,column:4},end:{line:614,column:37}}],line:613},"47":{loc:{start:{line:626,column:4},end:{line:627,column:49}},type:"if",locations:[{start:{line:626,column:4},end:{line:627,column:49}},{start:{line:626,column:4},end:{line:627,column:49}}],line:626},"48":{loc:{start:{line:629,column:4},end:{line:630,column:49}},type:"if",locations:[{start:{line:629,column:4},end:{line:630,column:49}},{start:{line:629,column:4},end:{line:630,column:49}}],line:629},"49":{loc:{start:{line:642,column:4},end:{line:643,column:19}},type:"if",locations:[{start:{line:642,column:4},end:{line:643,column:19}},{start:{line:642,column:4},end:{line:643,column:19}}],line:642},"50":{loc:{start:{line:645,column:4},end:{line:646,column:18}},type:"if",locations:[{start:{line:645,column:4},end:{line:646,column:18}},{start:{line:645,column:4},end:{line:646,column:18}}],line:645},"51":{loc:{start:{line:648,column:4},end:{line:651,column:5}},type:"if",locations:[{start:{line:648,column:4},end:{line:651,column:5}},{start:{line:648,column:4},end:{line:651,column:5}}],line:648},"52":{loc:{start:{line:649,column:6},end:{line:650,column:20}},type:"if",locations:[{start:{line:649,column:6},end:{line:650,column:20}},{start:{line:649,column:6},end:{line:650,column:20}}],line:649},"53":{loc:{start:{line:653,column:4},end:{line:656,column:5}},type:"if",locations:[{start:{line:653,column:4},end:{line:656,column:5}},{start:{line:653,column:4},end:{line:656,column:5}}],line:653},"54":{loc:{start:{line:654,column:6},end:{line:655,column:20}},type:"if",locations:[{start:{line:654,column:6},end:{line:655,column:20}},{start:{line:654,column:6},end:{line:655,column:20}}],line:654},"55":{loc:{start:{line:671,column:4},end:{line:676,column:5}},type:"if",locations:[{start:{line:671,column:4},end:{line:676,column:5}},{start:{line:671,column:4},end:{line:676,column:5}}],line:671},"56":{loc:{start:{line:689,column:4},end:{line:692,column:5}},type:"if",locations:[{start:{line:689,column:4},end:{line:692,column:5}},{start:{line:689,column:4},end:{line:692,column:5}}],line:689},"57":{loc:{start:{line:690,column:6},end:{line:691,column:33}},type:"if",locations:[{start:{line:690,column:6},end:{line:691,column:33}},{start:{line:690,column:6},end:{line:691,column:33}}],line:690},"58":{loc:{start:{line:694,column:4},end:{line:700,column:5}},type:"if",locations:[{start:{line:694,column:4},end:{line:700,column:5}},{start:{line:694,column:4},end:{line:700,column:5}}],line:694},"59":{loc:{start:{line:695,column:6},end:{line:696,column:27}},type:"if",locations:[{start:{line:695,column:6},end:{line:696,column:27}},{start:{line:695,column:6},end:{line:696,column:27}}],line:695},"60":{loc:{start:{line:698,column:6},end:{line:699,column:27}},type:"if",locations:[{start:{line:698,column:6},end:{line:699,column:27}},{start:{line:698,column:6},end:{line:699,column:27}}],line:698},"61":{loc:{start:{line:733,column:4},end:{line:734,column:16}},type:"if",locations:[{start:{line:733,column:4},end:{line:734,column:16}},{start:{line:733,column:4},end:{line:734,column:16}}],line:733},"62":{loc:{start:{line:736,column:4},end:{line:737,column:16}},type:"if",locations:[{start:{line:736,column:4},end:{line:737,column:16}},{start:{line:736,column:4},end:{line:737,column:16}}],line:736},"63":{loc:{start:{line:748,column:4},end:{line:749,column:38}},type:"if",locations:[{start:{line:748,column:4},end:{line:749,column:38}},{start:{line:748,column:4},end:{line:749,column:38}}],line:748},"64":{loc:{start:{line:751,column:4},end:{line:752,column:35}},type:"if",locations:[{start:{line:751,column:4},end:{line:752,column:35}},{start:{line:751,column:4},end:{line:752,column:35}}],line:751},"65":{loc:{start:{line:754,column:4},end:{line:755,column:38}},type:"if",locations:[{start:{line:754,column:4},end:{line:755,column:38}},{start:{line:754,column:4},end:{line:755,column:38}}],line:754},"66":{loc:{start:{line:779,column:14},end:{line:779,column:70}},type:"cond-expr",locations:[{start:{line:779,column:28},end:{line:779,column:63}},{start:{line:779,column:66},end:{line:779,column:70}}],line:779},"67":{loc:{start:{line:780,column:15},end:{line:780,column:78}},type:"cond-expr",locations:[{start:{line:780,column:30},end:{line:780,column:71}},{start:{line:780,column:74},end:{line:780,column:78}}],line:780},"68":{loc:{start:{line:797,column:11},end:{line:797,column:58}},type:"binary-expr",locations:[{start:{line:797,column:11},end:{line:797,column:23}},{start:{line:797,column:27},end:{line:797,column:58}}],line:797},"69":{loc:{start:{line:803,column:4},end:{line:804,column:52}},type:"if",locations:[{start:{line:803,column:4},end:{line:804,column:52}},{start:{line:803,column:4},end:{line:804,column:52}}],line:803},"70":{loc:{start:{line:827,column:4},end:{line:832,column:5}},type:"if",locations:[{start:{line:827,column:4},end:{line:832,column:5}},{start:{line:827,column:4},end:{line:832,column:5}}],line:827},"71":{loc:{start:{line:833,column:12},end:{line:833,column:54}},type:"cond-expr",locations:[{start:{line:833,column:26},end:{line:833,column:50}},{start:{line:833,column:53},end:{line:833,column:54}}],line:833},"72":{loc:{start:{line:845,column:4},end:{line:846,column:17}},type:"if",locations:[{start:{line:845,column:4},end:{line:846,column:17}},{start:{line:845,column:4},end:{line:846,column:17}}],line:845},"73":{loc:{start:{line:848,column:4},end:{line:849,column:17}},type:"if",locations:[{start:{line:848,column:4},end:{line:849,column:17}},{start:{line:848,column:4},end:{line:849,column:17}}],line:848},"74":{loc:{start:{line:853,column:4},end:{line:858,column:5}},type:"if",locations:[{start:{line:853,column:4},end:{line:858,column:5}},{start:{line:853,column:4},end:{line:858,column:5}}],line:853},"75":{loc:{start:{line:855,column:17},end:{line:855,column:53}},type:"cond-expr",locations:[{start:{line:855,column:48},end:{line:855,column:49}},{start:{line:855,column:52},end:{line:855,column:53}}],line:855},"76":{loc:{start:{line:860,column:4},end:{line:863,column:24}},type:"if",locations:[{start:{line:860,column:4},end:{line:863,column:24}},{start:{line:860,column:4},end:{line:863,column:24}}],line:860},"77":{loc:{start:{line:892,column:4},end:{line:899,column:5}},type:"if",locations:[{start:{line:892,column:4},end:{line:899,column:5}},{start:{line:892,column:4},end:{line:899,column:5}}],line:892},"78":{loc:{start:{line:903,column:4},end:{line:904,column:43}},type:"if",locations:[{start:{line:903,column:4},end:{line:904,column:43}},{start:{line:903,column:4},end:{line:904,column:43}}],line:903},"79":{loc:{start:{line:955,column:2},end:{line:956,column:15}},type:"if",locations:[{start:{line:955,column:2},end:{line:956,column:15}},{start:{line:955,column:2},end:{line:956,column:15}}],line:955},"80":{loc:{start:{line:958,column:2},end:{line:959,column:26}},type:"if",locations:[{start:{line:958,column:2},end:{line:959,column:26}},{start:{line:958,column:2},end:{line:959,column:26}}],line:958},"81":{loc:{start:{line:961,column:2},end:{line:962,column:25}},type:"if",locations:[{start:{line:961,column:2},end:{line:962,column:25}},{start:{line:961,column:2},end:{line:962,column:25}}],line:961}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"6e9b7f7abc4f0dad3207cda4d9f6310685494ec8"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2lhvf6xar9=function(){return actualCoverage;};}return actualCoverage;}cov_2lhvf6xar9();const assert=(cov_2lhvf6xar9().s[0]++,require('bsert'));const base58=(cov_2lhvf6xar9().s[1]++,require('bcrypto/lib/encoding/base58'));const bio=(cov_2lhvf6xar9().s[2]++,require('bufio'));const hash160=(cov_2lhvf6xar9().s[3]++,require('bcrypto/lib/hash160'));const hash256=(cov_2lhvf6xar9().s[4]++,require('bcrypto/lib/hash256'));const Network=(cov_2lhvf6xar9().s[5]++,require('../protocol/network'));const Script=(cov_2lhvf6xar9().s[6]++,require('../script/script'));const Address=(cov_2lhvf6xar9().s[7]++,require('./address'));const Output=(cov_2lhvf6xar9().s[8]++,require('./output'));const secp256k1=(cov_2lhvf6xar9().s[9]++,require('bcrypto/lib/secp256k1'));const{encoding}=(cov_2lhvf6xar9().s[10]++,bio);const{inspectSymbol}=(cov_2lhvf6xar9().s[11]++,require('../utils'));/*
 * Constants
 */const ZERO_KEY=(cov_2lhvf6xar9().s[12]++,Buffer.alloc(33,0x00));/**
 * Key Ring
 * Represents a key ring which amounts to an address.
 * @alias module:primitives.KeyRing
 */class KeyRing{/**
   * Create a key ring.
   * @constructor
   * @param {Object} options
   */constructor(options){cov_2lhvf6xar9().f[0]++;cov_2lhvf6xar9().s[13]++;this.witness=false;cov_2lhvf6xar9().s[14]++;this.nested=false;cov_2lhvf6xar9().s[15]++;this.publicKey=ZERO_KEY;cov_2lhvf6xar9().s[16]++;this.privateKey=null;cov_2lhvf6xar9().s[17]++;this.script=null;cov_2lhvf6xar9().s[18]++;this._keyHash=null;cov_2lhvf6xar9().s[19]++;this._keyAddress=null;cov_2lhvf6xar9().s[20]++;this._program=null;cov_2lhvf6xar9().s[21]++;this._nestedHash=null;cov_2lhvf6xar9().s[22]++;this._nestedAddress=null;cov_2lhvf6xar9().s[23]++;this._scriptHash160=null;cov_2lhvf6xar9().s[24]++;this._scriptHash256=null;cov_2lhvf6xar9().s[25]++;this._scriptAddress=null;cov_2lhvf6xar9().s[26]++;if(options){cov_2lhvf6xar9().b[0][0]++;cov_2lhvf6xar9().s[27]++;this.fromOptions(options);}else{cov_2lhvf6xar9().b[0][1]++;}}/**
   * Inject properties from options object.
   * @private
   * @param {Object} options
   */fromOptions(options){cov_2lhvf6xar9().f[1]++;let key=(cov_2lhvf6xar9().s[28]++,toKey(options));cov_2lhvf6xar9().s[29]++;if(options.witness!=null){cov_2lhvf6xar9().b[1][0]++;cov_2lhvf6xar9().s[30]++;assert(typeof options.witness==='boolean');cov_2lhvf6xar9().s[31]++;this.witness=options.witness;}else{cov_2lhvf6xar9().b[1][1]++;}cov_2lhvf6xar9().s[32]++;if(options.nested!=null){cov_2lhvf6xar9().b[2][0]++;cov_2lhvf6xar9().s[33]++;assert(typeof options.nested==='boolean');cov_2lhvf6xar9().s[34]++;this.nested=options.nested;}else{cov_2lhvf6xar9().b[2][1]++;}cov_2lhvf6xar9().s[35]++;if(Buffer.isBuffer(key)){cov_2lhvf6xar9().b[3][0]++;cov_2lhvf6xar9().s[36]++;return this.fromKey(key);}else{cov_2lhvf6xar9().b[3][1]++;}cov_2lhvf6xar9().s[37]++;key=toKey(options.key);cov_2lhvf6xar9().s[38]++;if(options.publicKey){cov_2lhvf6xar9().b[4][0]++;cov_2lhvf6xar9().s[39]++;key=toKey(options.publicKey);}else{cov_2lhvf6xar9().b[4][1]++;}cov_2lhvf6xar9().s[40]++;if(options.privateKey){cov_2lhvf6xar9().b[5][0]++;cov_2lhvf6xar9().s[41]++;key=toKey(options.privateKey);}else{cov_2lhvf6xar9().b[5][1]++;}const script=(cov_2lhvf6xar9().s[42]++,options.script);const compress=(cov_2lhvf6xar9().s[43]++,options.compressed);cov_2lhvf6xar9().s[44]++;if(script){cov_2lhvf6xar9().b[6][0]++;cov_2lhvf6xar9().s[45]++;return this.fromScript(key,script,compress);}else{cov_2lhvf6xar9().b[6][1]++;}cov_2lhvf6xar9().s[46]++;return this.fromKey(key,compress);}/**
   * Instantiate key ring from options.
   * @param {Object} options
   * @returns {KeyRing}
   */static fromOptions(options){cov_2lhvf6xar9().f[2]++;cov_2lhvf6xar9().s[47]++;return new this().fromOptions(options);}/**
   * Clear cached key/script hashes.
   */refresh(){cov_2lhvf6xar9().f[3]++;cov_2lhvf6xar9().s[48]++;this._keyHash=null;cov_2lhvf6xar9().s[49]++;this._keyAddress=null;cov_2lhvf6xar9().s[50]++;this._program=null;cov_2lhvf6xar9().s[51]++;this._nestedHash=null;cov_2lhvf6xar9().s[52]++;this._nestedAddress=null;cov_2lhvf6xar9().s[53]++;this._scriptHash160=null;cov_2lhvf6xar9().s[54]++;this._scriptHash256=null;cov_2lhvf6xar9().s[55]++;this._scriptAddress=null;}/**
   * Inject data from private key.
   * @private
   * @param {Buffer} key
   * @param {Boolean?} compress
   */fromPrivate(key,compress){cov_2lhvf6xar9().f[4]++;cov_2lhvf6xar9().s[56]++;assert(Buffer.isBuffer(key),'Private key must be a buffer.');cov_2lhvf6xar9().s[57]++;assert(secp256k1.privateKeyVerify(key),'Not a valid private key.');cov_2lhvf6xar9().s[58]++;this.privateKey=key;cov_2lhvf6xar9().s[59]++;this.publicKey=secp256k1.publicKeyCreate(key,compress!==false);cov_2lhvf6xar9().s[60]++;return this;}/**
   * Instantiate keyring from a private key.
   * @param {Buffer} key
   * @param {Boolean?} compress
   * @returns {KeyRing}
   */static fromPrivate(key,compress){cov_2lhvf6xar9().f[5]++;cov_2lhvf6xar9().s[61]++;return new this().fromPrivate(key,compress);}/**
   * Inject data from public key.
   * @private
   * @param {Buffer} key
   */fromPublic(key){cov_2lhvf6xar9().f[6]++;cov_2lhvf6xar9().s[62]++;assert(Buffer.isBuffer(key),'Public key must be a buffer.');cov_2lhvf6xar9().s[63]++;assert(secp256k1.publicKeyVerify(key),'Not a valid public key.');cov_2lhvf6xar9().s[64]++;this.publicKey=key;cov_2lhvf6xar9().s[65]++;return this;}/**
   * Generate a keyring.
   * @private
   * @param {Boolean?} compress
   * @returns {KeyRing}
   */generate(compress){cov_2lhvf6xar9().f[7]++;const key=(cov_2lhvf6xar9().s[66]++,secp256k1.privateKeyGenerate());cov_2lhvf6xar9().s[67]++;return this.fromKey(key,compress);}/**
   * Generate a keyring.
   * @param {Boolean?} compress
   * @returns {KeyRing}
   */static generate(compress){cov_2lhvf6xar9().f[8]++;cov_2lhvf6xar9().s[68]++;return new this().generate(compress);}/**
   * Instantiate keyring from a public key.
   * @param {Buffer} publicKey
   * @returns {KeyRing}
   */static fromPublic(key){cov_2lhvf6xar9().f[9]++;cov_2lhvf6xar9().s[69]++;return new this().fromPublic(key);}/**
   * Inject data from public key.
   * @private
   * @param {Buffer} privateKey
   * @param {Boolean?} compress
   */fromKey(key,compress){cov_2lhvf6xar9().f[10]++;cov_2lhvf6xar9().s[70]++;assert(Buffer.isBuffer(key),'Key must be a buffer.');cov_2lhvf6xar9().s[71]++;if(key.length===32){cov_2lhvf6xar9().b[7][0]++;cov_2lhvf6xar9().s[72]++;return this.fromPrivate(key,compress!==false);}else{cov_2lhvf6xar9().b[7][1]++;}cov_2lhvf6xar9().s[73]++;return this.fromPublic(key);}/**
   * Instantiate keyring from a public key.
   * @param {Buffer} publicKey
   * @param {Boolean?} compress
   * @returns {KeyRing}
   */static fromKey(key,compress){cov_2lhvf6xar9().f[11]++;cov_2lhvf6xar9().s[74]++;return new this().fromKey(key,compress);}/**
   * Inject data from script.
   * @private
   * @param {Buffer} key
   * @param {Script} script
   * @param {Boolean?} compress
   */fromScript(key,script,compress){cov_2lhvf6xar9().f[12]++;cov_2lhvf6xar9().s[75]++;assert(script instanceof Script,'Non-script passed into KeyRing.');cov_2lhvf6xar9().s[76]++;this.fromKey(key,compress);cov_2lhvf6xar9().s[77]++;this.script=script;cov_2lhvf6xar9().s[78]++;return this;}/**
   * Instantiate keyring from script.
   * @param {Buffer} key
   * @param {Script} script
   * @param {Boolean?} compress
   * @returns {KeyRing}
   */static fromScript(key,script,compress){cov_2lhvf6xar9().f[13]++;cov_2lhvf6xar9().s[79]++;return new this().fromScript(key,script,compress);}/**
   * Get ith public key from multisig script.
   * @private
   * @param {Script} script
   * @param {Number} i
   * @returns {KeyRing}
   */fromMultisigScript(script,i){cov_2lhvf6xar9().f[14]++;cov_2lhvf6xar9().s[80]++;assert(script instanceof Script,'Non-script passed.');cov_2lhvf6xar9().s[81]++;assert(script.isMultisig(),'Script must be multisig');const n=(cov_2lhvf6xar9().s[82]++,script.getSmall(-2));cov_2lhvf6xar9().s[83]++;assert((cov_2lhvf6xar9().b[8][0]++,i>=1)&&(cov_2lhvf6xar9().b[8][1]++,i<=n),'Requested `i`th key, `n` available');cov_2lhvf6xar9().s[84]++;this.fromKey(script.code[i].toData());cov_2lhvf6xar9().s[85]++;return this;}/**
   * Instantiate keyring from ith key in multisig script.
   * @param {Script} script
   * @param {Number} i
   * @returns {KeyRing}
   */static fromMultisigScript(script,i){cov_2lhvf6xar9().f[15]++;cov_2lhvf6xar9().s[86]++;return new this().fromMultisigScript(script,i);}/**
   * Calculate WIF serialization size.
   * @returns {Number}
   */getSecretSize(){cov_2lhvf6xar9().f[16]++;let size=(cov_2lhvf6xar9().s[87]++,0);cov_2lhvf6xar9().s[88]++;size+=1;cov_2lhvf6xar9().s[89]++;size+=this.privateKey.length;cov_2lhvf6xar9().s[90]++;if(this.publicKey.length===33){cov_2lhvf6xar9().b[9][0]++;cov_2lhvf6xar9().s[91]++;size+=1;}else{cov_2lhvf6xar9().b[9][1]++;}cov_2lhvf6xar9().s[92]++;size+=4;cov_2lhvf6xar9().s[93]++;return size;}/**
   * Convert key to a CBitcoinSecret.
   * @param {(Network|NetworkType)?} network
   * @returns {Base58String}
   */toSecret(network){cov_2lhvf6xar9().f[17]++;const size=(cov_2lhvf6xar9().s[94]++,this.getSecretSize());const bw=(cov_2lhvf6xar9().s[95]++,bio.write(size));cov_2lhvf6xar9().s[96]++;assert(this.privateKey,'Cannot serialize without private key.');cov_2lhvf6xar9().s[97]++;network=Network.get(network);cov_2lhvf6xar9().s[98]++;bw.writeU8(network.keyPrefix.privkey);cov_2lhvf6xar9().s[99]++;bw.writeBytes(this.privateKey);cov_2lhvf6xar9().s[100]++;if(this.publicKey.length===33){cov_2lhvf6xar9().b[10][0]++;cov_2lhvf6xar9().s[101]++;bw.writeU8(1);}else{cov_2lhvf6xar9().b[10][1]++;}cov_2lhvf6xar9().s[102]++;bw.writeChecksum(hash256.digest);cov_2lhvf6xar9().s[103]++;return base58.encode(bw.render());}/**
   * Inject properties from serialized CBitcoinSecret.
   * @private
   * @param {Base58String} secret
   * @param {(Network|NetworkType)?} network
   */fromSecret(data,network){cov_2lhvf6xar9().f[18]++;const br=(cov_2lhvf6xar9().s[104]++,bio.read(base58.decode(data),true));const version=(cov_2lhvf6xar9().s[105]++,br.readU8());cov_2lhvf6xar9().s[106]++;Network.fromWIF(version,network);const key=(cov_2lhvf6xar9().s[107]++,br.readBytes(32));let compress=(cov_2lhvf6xar9().s[108]++,false);cov_2lhvf6xar9().s[109]++;if(br.left()>4){cov_2lhvf6xar9().b[11][0]++;cov_2lhvf6xar9().s[110]++;assert(br.readU8()===1,'Bad compression flag.');cov_2lhvf6xar9().s[111]++;compress=true;}else{cov_2lhvf6xar9().b[11][1]++;}cov_2lhvf6xar9().s[112]++;br.verifyChecksum(hash256.digest);cov_2lhvf6xar9().s[113]++;return this.fromPrivate(key,compress);}/**
   * Instantiate a keyring from a serialized CBitcoinSecret.
   * @param {Base58String} secret
   * @param {(Network|NetworkType)?} network
   * @returns {KeyRing}
   */static fromSecret(data,network){cov_2lhvf6xar9().f[19]++;cov_2lhvf6xar9().s[114]++;return new this().fromSecret(data,network);}/**
   * Get private key.
   * @param {String?} enc - Can be `"hex"`, `"base58"`, or `null`.
   * @returns {Buffer} Private key.
   */getPrivateKey(enc,network){cov_2lhvf6xar9().f[20]++;cov_2lhvf6xar9().s[115]++;if(!this.privateKey){cov_2lhvf6xar9().b[12][0]++;cov_2lhvf6xar9().s[116]++;return null;}else{cov_2lhvf6xar9().b[12][1]++;}cov_2lhvf6xar9().s[117]++;if(enc==='base58'){cov_2lhvf6xar9().b[13][0]++;cov_2lhvf6xar9().s[118]++;return this.toSecret(network);}else{cov_2lhvf6xar9().b[13][1]++;}cov_2lhvf6xar9().s[119]++;if(enc==='hex'){cov_2lhvf6xar9().b[14][0]++;cov_2lhvf6xar9().s[120]++;return this.privateKey.toString('hex');}else{cov_2lhvf6xar9().b[14][1]++;}cov_2lhvf6xar9().s[121]++;return this.privateKey;}/**
   * Get public key.
   * @param {String?} enc - `"hex"` or `null`.
   * @returns {Buffer}
   */getPublicKey(enc){cov_2lhvf6xar9().f[21]++;cov_2lhvf6xar9().s[122]++;if(enc==='base58'){cov_2lhvf6xar9().b[15][0]++;cov_2lhvf6xar9().s[123]++;return base58.encode(this.publicKey);}else{cov_2lhvf6xar9().b[15][1]++;}cov_2lhvf6xar9().s[124]++;if(enc==='hex'){cov_2lhvf6xar9().b[16][0]++;cov_2lhvf6xar9().s[125]++;return this.publicKey.toString('hex');}else{cov_2lhvf6xar9().b[16][1]++;}cov_2lhvf6xar9().s[126]++;return this.publicKey;}/**
   * Get redeem script.
   * @returns {Script}
   */getScript(){cov_2lhvf6xar9().f[22]++;cov_2lhvf6xar9().s[127]++;return this.script;}/**
   * Get witness program.
   * @returns {Buffer}
   */getProgram(){cov_2lhvf6xar9().f[23]++;cov_2lhvf6xar9().s[128]++;if(!this.witness){cov_2lhvf6xar9().b[17][0]++;cov_2lhvf6xar9().s[129]++;return null;}else{cov_2lhvf6xar9().b[17][1]++;}cov_2lhvf6xar9().s[130]++;if(!this._program){cov_2lhvf6xar9().b[18][0]++;let program;cov_2lhvf6xar9().s[131]++;if(!this.script){cov_2lhvf6xar9().b[19][0]++;const hash=(cov_2lhvf6xar9().s[132]++,hash160.digest(this.publicKey));cov_2lhvf6xar9().s[133]++;program=Script.fromProgram(0,hash);}else{cov_2lhvf6xar9().b[19][1]++;const hash=(cov_2lhvf6xar9().s[134]++,this.script.sha256());cov_2lhvf6xar9().s[135]++;program=Script.fromProgram(0,hash);}cov_2lhvf6xar9().s[136]++;this._program=program;}else{cov_2lhvf6xar9().b[18][1]++;}cov_2lhvf6xar9().s[137]++;return this._program;}/**
   * Get address' ripemd160 program scripthash
   * (for witness programs behind a scripthash).
   * @param {String?} enc - `"hex"` or `null`.
   * @returns {Buffer}
   */getNestedHash(enc){cov_2lhvf6xar9().f[24]++;cov_2lhvf6xar9().s[138]++;if(!this.witness){cov_2lhvf6xar9().b[20][0]++;cov_2lhvf6xar9().s[139]++;return null;}else{cov_2lhvf6xar9().b[20][1]++;}cov_2lhvf6xar9().s[140]++;if(!this._nestedHash){cov_2lhvf6xar9().b[21][0]++;cov_2lhvf6xar9().s[141]++;this._nestedHash=this.getProgram().hash160();}else{cov_2lhvf6xar9().b[21][1]++;}cov_2lhvf6xar9().s[142]++;return enc==='hex'?(cov_2lhvf6xar9().b[22][0]++,this._nestedHash.toString('hex')):(cov_2lhvf6xar9().b[22][1]++,this._nestedHash);}/**
   * Get address' scripthash address for witness program.
   * @param {String?} enc - `"base58"` or `null`.
   * @returns {Address|AddressString}
   */getNestedAddress(enc,network){cov_2lhvf6xar9().f[25]++;cov_2lhvf6xar9().s[143]++;if(!this.witness){cov_2lhvf6xar9().b[23][0]++;cov_2lhvf6xar9().s[144]++;return null;}else{cov_2lhvf6xar9().b[23][1]++;}cov_2lhvf6xar9().s[145]++;if(!this._nestedAddress){cov_2lhvf6xar9().b[24][0]++;const hash=(cov_2lhvf6xar9().s[146]++,this.getNestedHash());const addr=(cov_2lhvf6xar9().s[147]++,Address.fromScripthash(hash));cov_2lhvf6xar9().s[148]++;this._nestedAddress=addr;}else{cov_2lhvf6xar9().b[24][1]++;}cov_2lhvf6xar9().s[149]++;if(enc==='base58'){cov_2lhvf6xar9().b[25][0]++;cov_2lhvf6xar9().s[150]++;return this._nestedAddress.toBase58(network);}else{cov_2lhvf6xar9().b[25][1]++;}cov_2lhvf6xar9().s[151]++;if(enc==='string'){cov_2lhvf6xar9().b[26][0]++;cov_2lhvf6xar9().s[152]++;return this._nestedAddress.toString(network);}else{cov_2lhvf6xar9().b[26][1]++;}cov_2lhvf6xar9().s[153]++;return this._nestedAddress;}/**
   * Get scripthash.
   * @param {String?} enc - `"hex"` or `null`.
   * @returns {Buffer}
   */getScriptHash(enc){cov_2lhvf6xar9().f[26]++;cov_2lhvf6xar9().s[154]++;if(this.witness){cov_2lhvf6xar9().b[27][0]++;cov_2lhvf6xar9().s[155]++;return this.getScriptHash256(enc);}else{cov_2lhvf6xar9().b[27][1]++;}cov_2lhvf6xar9().s[156]++;return this.getScriptHash160(enc);}/**
   * Get ripemd160 scripthash.
   * @param {String?} enc - `"hex"` or `null`.
   * @returns {Buffer}
   */getScriptHash160(enc){cov_2lhvf6xar9().f[27]++;cov_2lhvf6xar9().s[157]++;if(!this.script){cov_2lhvf6xar9().b[28][0]++;cov_2lhvf6xar9().s[158]++;return null;}else{cov_2lhvf6xar9().b[28][1]++;}cov_2lhvf6xar9().s[159]++;if(!this._scriptHash160){cov_2lhvf6xar9().b[29][0]++;cov_2lhvf6xar9().s[160]++;this._scriptHash160=this.script.hash160();}else{cov_2lhvf6xar9().b[29][1]++;}cov_2lhvf6xar9().s[161]++;return enc==='hex'?(cov_2lhvf6xar9().b[30][0]++,this._scriptHash160.toString('hex')):(cov_2lhvf6xar9().b[30][1]++,this._scriptHash160);}/**
   * Get sha256 scripthash.
   * @param {String?} enc - `"hex"` or `null`.
   * @returns {Buffer}
   */getScriptHash256(enc){cov_2lhvf6xar9().f[28]++;cov_2lhvf6xar9().s[162]++;if(!this.script){cov_2lhvf6xar9().b[31][0]++;cov_2lhvf6xar9().s[163]++;return null;}else{cov_2lhvf6xar9().b[31][1]++;}cov_2lhvf6xar9().s[164]++;if(!this._scriptHash256){cov_2lhvf6xar9().b[32][0]++;cov_2lhvf6xar9().s[165]++;this._scriptHash256=this.script.sha256();}else{cov_2lhvf6xar9().b[32][1]++;}cov_2lhvf6xar9().s[166]++;return enc==='hex'?(cov_2lhvf6xar9().b[33][0]++,this._scriptHash256.toString('hex')):(cov_2lhvf6xar9().b[33][1]++,this._scriptHash256);}/**
   * Get scripthash address.
   * @param {String?} enc - `"base58"` or `null`.
   * @returns {Address|AddressString}
   */getScriptAddress(enc,network){cov_2lhvf6xar9().f[29]++;cov_2lhvf6xar9().s[167]++;if(!this.script){cov_2lhvf6xar9().b[34][0]++;cov_2lhvf6xar9().s[168]++;return null;}else{cov_2lhvf6xar9().b[34][1]++;}cov_2lhvf6xar9().s[169]++;if(!this._scriptAddress){cov_2lhvf6xar9().b[35][0]++;let addr;cov_2lhvf6xar9().s[170]++;if(this.witness){cov_2lhvf6xar9().b[36][0]++;const hash=(cov_2lhvf6xar9().s[171]++,this.getScriptHash256());cov_2lhvf6xar9().s[172]++;addr=Address.fromWitnessScripthash(hash);}else{cov_2lhvf6xar9().b[36][1]++;const hash=(cov_2lhvf6xar9().s[173]++,this.getScriptHash160());cov_2lhvf6xar9().s[174]++;addr=Address.fromScripthash(hash);}cov_2lhvf6xar9().s[175]++;this._scriptAddress=addr;}else{cov_2lhvf6xar9().b[35][1]++;}cov_2lhvf6xar9().s[176]++;if(enc==='base58'){cov_2lhvf6xar9().b[37][0]++;cov_2lhvf6xar9().s[177]++;return this._scriptAddress.toBase58(network);}else{cov_2lhvf6xar9().b[37][1]++;}cov_2lhvf6xar9().s[178]++;if(enc==='string'){cov_2lhvf6xar9().b[38][0]++;cov_2lhvf6xar9().s[179]++;return this._scriptAddress.toString(network);}else{cov_2lhvf6xar9().b[38][1]++;}cov_2lhvf6xar9().s[180]++;return this._scriptAddress;}/**
   * Get public key hash.
   * @param {String?} enc - `"hex"` or `null`.
   * @returns {Buffer}
   */getKeyHash(enc){cov_2lhvf6xar9().f[30]++;cov_2lhvf6xar9().s[181]++;if(!this._keyHash){cov_2lhvf6xar9().b[39][0]++;cov_2lhvf6xar9().s[182]++;this._keyHash=hash160.digest(this.publicKey);}else{cov_2lhvf6xar9().b[39][1]++;}cov_2lhvf6xar9().s[183]++;return enc==='hex'?(cov_2lhvf6xar9().b[40][0]++,this._keyHash.toString('hex')):(cov_2lhvf6xar9().b[40][1]++,this._keyHash);}/**
   * Get pubkeyhash address.
   * @param {String?} enc - `"base58"` or `null`.
   * @returns {Address|AddressString}
   */getKeyAddress(enc,network){cov_2lhvf6xar9().f[31]++;cov_2lhvf6xar9().s[184]++;if(!this._keyAddress){cov_2lhvf6xar9().b[41][0]++;const hash=(cov_2lhvf6xar9().s[185]++,this.getKeyHash());let addr;cov_2lhvf6xar9().s[186]++;if(this.witness){cov_2lhvf6xar9().b[42][0]++;cov_2lhvf6xar9().s[187]++;addr=Address.fromWitnessPubkeyhash(hash);}else{cov_2lhvf6xar9().b[42][1]++;cov_2lhvf6xar9().s[188]++;addr=Address.fromPubkeyhash(hash);}cov_2lhvf6xar9().s[189]++;this._keyAddress=addr;}else{cov_2lhvf6xar9().b[41][1]++;}cov_2lhvf6xar9().s[190]++;if(enc==='base58'){cov_2lhvf6xar9().b[43][0]++;cov_2lhvf6xar9().s[191]++;return this._keyAddress.toBase58(network);}else{cov_2lhvf6xar9().b[43][1]++;}cov_2lhvf6xar9().s[192]++;if(enc==='string'){cov_2lhvf6xar9().b[44][0]++;cov_2lhvf6xar9().s[193]++;return this._keyAddress.toString(network);}else{cov_2lhvf6xar9().b[44][1]++;}cov_2lhvf6xar9().s[194]++;return this._keyAddress;}/**
   * Get hash.
   * @param {String?} enc - `"hex"` or `null`.
   * @returns {Buffer}
   */getHash(enc){cov_2lhvf6xar9().f[32]++;cov_2lhvf6xar9().s[195]++;if(this.nested){cov_2lhvf6xar9().b[45][0]++;cov_2lhvf6xar9().s[196]++;return this.getNestedHash(enc);}else{cov_2lhvf6xar9().b[45][1]++;}cov_2lhvf6xar9().s[197]++;if(this.script){cov_2lhvf6xar9().b[46][0]++;cov_2lhvf6xar9().s[198]++;return this.getScriptHash(enc);}else{cov_2lhvf6xar9().b[46][1]++;}cov_2lhvf6xar9().s[199]++;return this.getKeyHash(enc);}/**
   * Get base58 address.
   * @param {String?} enc - `"base58"` or `null`.
   * @returns {Address|AddressString}
   */getAddress(enc,network){cov_2lhvf6xar9().f[33]++;cov_2lhvf6xar9().s[200]++;if(this.nested){cov_2lhvf6xar9().b[47][0]++;cov_2lhvf6xar9().s[201]++;return this.getNestedAddress(enc,network);}else{cov_2lhvf6xar9().b[47][1]++;}cov_2lhvf6xar9().s[202]++;if(this.script){cov_2lhvf6xar9().b[48][0]++;cov_2lhvf6xar9().s[203]++;return this.getScriptAddress(enc,network);}else{cov_2lhvf6xar9().b[48][1]++;}cov_2lhvf6xar9().s[204]++;return this.getKeyAddress(enc,network);}/**
   * Test an address hash against hash and program hash.
   * @param {Buffer} hash
   * @returns {Boolean}
   */ownHash(hash){cov_2lhvf6xar9().f[34]++;cov_2lhvf6xar9().s[205]++;if(!hash){cov_2lhvf6xar9().b[49][0]++;cov_2lhvf6xar9().s[206]++;return false;}else{cov_2lhvf6xar9().b[49][1]++;}cov_2lhvf6xar9().s[207]++;if(hash.equals(this.getKeyHash())){cov_2lhvf6xar9().b[50][0]++;cov_2lhvf6xar9().s[208]++;return true;}else{cov_2lhvf6xar9().b[50][1]++;}cov_2lhvf6xar9().s[209]++;if(this.script){cov_2lhvf6xar9().b[51][0]++;cov_2lhvf6xar9().s[210]++;if(hash.equals(this.getScriptHash())){cov_2lhvf6xar9().b[52][0]++;cov_2lhvf6xar9().s[211]++;return true;}else{cov_2lhvf6xar9().b[52][1]++;}}else{cov_2lhvf6xar9().b[51][1]++;}cov_2lhvf6xar9().s[212]++;if(this.witness){cov_2lhvf6xar9().b[53][0]++;cov_2lhvf6xar9().s[213]++;if(hash.equals(this.getNestedHash())){cov_2lhvf6xar9().b[54][0]++;cov_2lhvf6xar9().s[214]++;return true;}else{cov_2lhvf6xar9().b[54][1]++;}}else{cov_2lhvf6xar9().b[53][1]++;}cov_2lhvf6xar9().s[215]++;return false;}/**
   * Check whether transaction output belongs to this address.
   * @param {TX|Output} tx - Transaction or Output.
   * @param {Number?} index - Output index.
   * @returns {Boolean}
   */ownOutput(tx,index){cov_2lhvf6xar9().f[35]++;let output;cov_2lhvf6xar9().s[216]++;if(tx instanceof Output){cov_2lhvf6xar9().b[55][0]++;cov_2lhvf6xar9().s[217]++;output=tx;}else{cov_2lhvf6xar9().b[55][1]++;cov_2lhvf6xar9().s[218]++;output=tx.outputs[index];cov_2lhvf6xar9().s[219]++;assert(output,'Output does not exist.');}cov_2lhvf6xar9().s[220]++;return this.ownHash(output.getHash());}/**
   * Test a hash against script hashes to
   * find the correct redeem script, if any.
   * @param {Buffer} hash
   * @returns {Script|null}
   */getRedeem(hash){cov_2lhvf6xar9().f[36]++;cov_2lhvf6xar9().s[221]++;if(this.witness){cov_2lhvf6xar9().b[56][0]++;cov_2lhvf6xar9().s[222]++;if(hash.equals(this.getNestedHash())){cov_2lhvf6xar9().b[57][0]++;cov_2lhvf6xar9().s[223]++;return this.getProgram();}else{cov_2lhvf6xar9().b[57][1]++;}}else{cov_2lhvf6xar9().b[56][1]++;}cov_2lhvf6xar9().s[224]++;if(this.script){cov_2lhvf6xar9().b[58][0]++;cov_2lhvf6xar9().s[225]++;if(hash.equals(this.getScriptHash160())){cov_2lhvf6xar9().b[59][0]++;cov_2lhvf6xar9().s[226]++;return this.script;}else{cov_2lhvf6xar9().b[59][1]++;}cov_2lhvf6xar9().s[227]++;if(hash.equals(this.getScriptHash256())){cov_2lhvf6xar9().b[60][0]++;cov_2lhvf6xar9().s[228]++;return this.script;}else{cov_2lhvf6xar9().b[60][1]++;}}else{cov_2lhvf6xar9().b[58][1]++;}cov_2lhvf6xar9().s[229]++;return null;}/**
   * Sign a message.
   * @param {Buffer} msg
   * @returns {Buffer} Signature in DER format.
   */sign(msg){cov_2lhvf6xar9().f[37]++;cov_2lhvf6xar9().s[230]++;assert(this.privateKey,'Cannot sign without private key.');cov_2lhvf6xar9().s[231]++;return secp256k1.signDER(msg,this.privateKey);}/**
   * Verify a message.
   * @param {Buffer} msg
   * @param {Buffer} sig - Signature in DER format.
   * @returns {Boolean}
   */verify(msg,sig){cov_2lhvf6xar9().f[38]++;cov_2lhvf6xar9().s[232]++;return secp256k1.verifyDER(msg,sig,this.publicKey);}/**
   * Get witness program version.
   * @returns {Number}
   */getVersion(){cov_2lhvf6xar9().f[39]++;cov_2lhvf6xar9().s[233]++;if(!this.witness){cov_2lhvf6xar9().b[61][0]++;cov_2lhvf6xar9().s[234]++;return-1;}else{cov_2lhvf6xar9().b[61][1]++;}cov_2lhvf6xar9().s[235]++;if(this.nested){cov_2lhvf6xar9().b[62][0]++;cov_2lhvf6xar9().s[236]++;return-1;}else{cov_2lhvf6xar9().b[62][1]++;}cov_2lhvf6xar9().s[237]++;return 0;}/**
   * Get address type.
   * @returns {ScriptType}
   */getType(){cov_2lhvf6xar9().f[40]++;cov_2lhvf6xar9().s[238]++;if(this.nested){cov_2lhvf6xar9().b[63][0]++;cov_2lhvf6xar9().s[239]++;return Address.types.SCRIPTHASH;}else{cov_2lhvf6xar9().b[63][1]++;}cov_2lhvf6xar9().s[240]++;if(this.witness){cov_2lhvf6xar9().b[64][0]++;cov_2lhvf6xar9().s[241]++;return Address.types.WITNESS;}else{cov_2lhvf6xar9().b[64][1]++;}cov_2lhvf6xar9().s[242]++;if(this.script){cov_2lhvf6xar9().b[65][0]++;cov_2lhvf6xar9().s[243]++;return Address.types.SCRIPTHASH;}else{cov_2lhvf6xar9().b[65][1]++;}cov_2lhvf6xar9().s[244]++;return Address.types.PUBKEYHASH;}/**
   * Inspect keyring.
   * @returns {Object}
   */[inspectSymbol](){cov_2lhvf6xar9().f[41]++;cov_2lhvf6xar9().s[245]++;return this.toJSON();}/**
   * Convert an KeyRing to a more json-friendly object.
   * @returns {Object}
   */toJSON(network){cov_2lhvf6xar9().f[42]++;cov_2lhvf6xar9().s[246]++;return{witness:this.witness,nested:this.nested,publicKey:this.publicKey.toString('hex'),script:this.script?(cov_2lhvf6xar9().b[66][0]++,this.script.toRaw().toString('hex')):(cov_2lhvf6xar9().b[66][1]++,null),program:this.witness?(cov_2lhvf6xar9().b[67][0]++,this.getProgram().toRaw().toString('hex')):(cov_2lhvf6xar9().b[67][1]++,null),type:Address.typesByVal[this.getType()].toLowerCase(),address:this.getAddress('string',network)};}/**
   * Inject properties from json object.
   * @private
   * @param {Object} json
   */fromJSON(json){cov_2lhvf6xar9().f[43]++;cov_2lhvf6xar9().s[247]++;assert(json);cov_2lhvf6xar9().s[248]++;assert(typeof json.witness==='boolean');cov_2lhvf6xar9().s[249]++;assert(typeof json.nested==='boolean');cov_2lhvf6xar9().s[250]++;assert(typeof json.publicKey==='string');cov_2lhvf6xar9().s[251]++;assert((cov_2lhvf6xar9().b[68][0]++,!json.script)||(cov_2lhvf6xar9().b[68][1]++,typeof json.script==='string'));cov_2lhvf6xar9().s[252]++;this.witness=json.witness;cov_2lhvf6xar9().s[253]++;this.nested=json.nested;cov_2lhvf6xar9().s[254]++;this.publicKey=Buffer.from(json.publicKey,'hex');cov_2lhvf6xar9().s[255]++;if(json.script){cov_2lhvf6xar9().b[69][0]++;cov_2lhvf6xar9().s[256]++;this.script=Buffer.from(json.script,'hex');}else{cov_2lhvf6xar9().b[69][1]++;}cov_2lhvf6xar9().s[257]++;return this;}/**
   * Instantiate an KeyRing from a jsonified transaction object.
   * @param {Object} json - The jsonified transaction object.
   * @returns {KeyRing}
   */static fromJSON(json){cov_2lhvf6xar9().f[44]++;cov_2lhvf6xar9().s[258]++;return new this().fromJSON(json);}/**
   * Calculate serialization size.
   * @returns {Number}
   */getSize(){cov_2lhvf6xar9().f[45]++;let size=(cov_2lhvf6xar9().s[259]++,0);cov_2lhvf6xar9().s[260]++;size+=1;cov_2lhvf6xar9().s[261]++;if(this.privateKey){cov_2lhvf6xar9().b[70][0]++;cov_2lhvf6xar9().s[262]++;size+=encoding.sizeVarBytes(this.privateKey);cov_2lhvf6xar9().s[263]++;size+=1;}else{cov_2lhvf6xar9().b[70][1]++;cov_2lhvf6xar9().s[264]++;size+=encoding.sizeVarBytes(this.publicKey);}cov_2lhvf6xar9().s[265]++;size+=this.script?(cov_2lhvf6xar9().b[71][0]++,this.script.getVarSize()):(cov_2lhvf6xar9().b[71][1]++,1);cov_2lhvf6xar9().s[266]++;return size;}/**
   * Write the keyring to a buffer writer.
   * @param {BufferWriter} bw
   */toWriter(bw){cov_2lhvf6xar9().f[46]++;let field=(cov_2lhvf6xar9().s[267]++,0);cov_2lhvf6xar9().s[268]++;if(this.witness){cov_2lhvf6xar9().b[72][0]++;cov_2lhvf6xar9().s[269]++;field|=1;}else{cov_2lhvf6xar9().b[72][1]++;}cov_2lhvf6xar9().s[270]++;if(this.nested){cov_2lhvf6xar9().b[73][0]++;cov_2lhvf6xar9().s[271]++;field|=2;}else{cov_2lhvf6xar9().b[73][1]++;}cov_2lhvf6xar9().s[272]++;bw.writeU8(field);cov_2lhvf6xar9().s[273]++;if(this.privateKey){cov_2lhvf6xar9().b[74][0]++;cov_2lhvf6xar9().s[274]++;bw.writeVarBytes(this.privateKey);cov_2lhvf6xar9().s[275]++;bw.writeU8(this.publicKey.length===33?(cov_2lhvf6xar9().b[75][0]++,1):(cov_2lhvf6xar9().b[75][1]++,0));}else{cov_2lhvf6xar9().b[74][1]++;cov_2lhvf6xar9().s[276]++;bw.writeVarBytes(this.publicKey);}cov_2lhvf6xar9().s[277]++;if(this.script){cov_2lhvf6xar9().b[76][0]++;cov_2lhvf6xar9().s[278]++;bw.writeVarBytes(this.script.toRaw());}else{cov_2lhvf6xar9().b[76][1]++;cov_2lhvf6xar9().s[279]++;bw.writeVarint(0);}cov_2lhvf6xar9().s[280]++;return bw;}/**
   * Serialize the keyring.
   * @returns {Buffer}
   */toRaw(){cov_2lhvf6xar9().f[47]++;const size=(cov_2lhvf6xar9().s[281]++,this.getSize());cov_2lhvf6xar9().s[282]++;return this.toWriter(bio.write(size)).render();}/**
   * Inject properties from buffer reader.
   * @private
   * @param {BufferReader} br
   */fromReader(br){cov_2lhvf6xar9().f[48]++;const field=(cov_2lhvf6xar9().s[283]++,br.readU8());cov_2lhvf6xar9().s[284]++;this.witness=(field&1)!==0;cov_2lhvf6xar9().s[285]++;this.nested=(field&2)!==0;const key=(cov_2lhvf6xar9().s[286]++,br.readVarBytes());cov_2lhvf6xar9().s[287]++;if(key.length===32){cov_2lhvf6xar9().b[77][0]++;const compress=(cov_2lhvf6xar9().s[288]++,br.readU8()===1);cov_2lhvf6xar9().s[289]++;this.privateKey=key;cov_2lhvf6xar9().s[290]++;this.publicKey=secp256k1.publicKeyCreate(key,compress);}else{cov_2lhvf6xar9().b[77][1]++;cov_2lhvf6xar9().s[291]++;this.publicKey=key;cov_2lhvf6xar9().s[292]++;assert(secp256k1.publicKeyVerify(key),'Invalid public key.');}const script=(cov_2lhvf6xar9().s[293]++,br.readVarBytes());cov_2lhvf6xar9().s[294]++;if(script.length>0){cov_2lhvf6xar9().b[78][0]++;cov_2lhvf6xar9().s[295]++;this.script=Script.fromRaw(script);}else{cov_2lhvf6xar9().b[78][1]++;}cov_2lhvf6xar9().s[296]++;return this;}/**
   * Inject properties from serialized data.
   * @private
   * @param {Buffer} data
   */fromRaw(data){cov_2lhvf6xar9().f[49]++;cov_2lhvf6xar9().s[297]++;return this.fromReader(bio.read(data));}/**
   * Instantiate a keyring from buffer reader.
   * @param {BufferReader} br
   * @returns {KeyRing}
   */static fromReader(br){cov_2lhvf6xar9().f[50]++;cov_2lhvf6xar9().s[298]++;return new this().fromReader(br);}/**
   * Instantiate a keyring from serialized data.
   * @param {Buffer} data
   * @returns {KeyRing}
   */static fromRaw(data){cov_2lhvf6xar9().f[51]++;cov_2lhvf6xar9().s[299]++;return new this().fromRaw(data);}/**
   * Test whether an object is a KeyRing.
   * @param {Object} obj
   * @returns {Boolean}
   */static isKeyRing(obj){cov_2lhvf6xar9().f[52]++;cov_2lhvf6xar9().s[300]++;return obj instanceof KeyRing;}}/*
 * Helpers
 */function toKey(opt){cov_2lhvf6xar9().f[53]++;cov_2lhvf6xar9().s[301]++;if(!opt){cov_2lhvf6xar9().b[79][0]++;cov_2lhvf6xar9().s[302]++;return opt;}else{cov_2lhvf6xar9().b[79][1]++;}cov_2lhvf6xar9().s[303]++;if(opt.privateKey){cov_2lhvf6xar9().b[80][0]++;cov_2lhvf6xar9().s[304]++;return opt.privateKey;}else{cov_2lhvf6xar9().b[80][1]++;}cov_2lhvf6xar9().s[305]++;if(opt.publicKey){cov_2lhvf6xar9().b[81][0]++;cov_2lhvf6xar9().s[306]++;return opt.publicKey;}else{cov_2lhvf6xar9().b[81][1]++;}cov_2lhvf6xar9().s[307]++;return opt;}/*
 * Expose
 */cov_2lhvf6xar9().s[308]++;module.exports=KeyRing;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
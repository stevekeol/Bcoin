/*!
 * common.js - common script functions for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */'use strict';/**
 * @module script/common
 */function cov_11sus1y5cu(){var path="E:\\Projects\\Test\\bcoin\\lib\\script\\common.js";var hash="65fc84bfb6c390be29b256047cdbd76de18ac3cb";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\Projects\\Test\\bcoin\\lib\\script\\common.js",statementMap:{"0":{start:{line:14,column:15},end:{line:14,column:31}},"1":{start:{line:15,column:18},end:{line:15,column:50}},"2":{start:{line:16,column:18},end:{line:16,column:40}},"3":{start:{line:24,column:0},end:{line:158,column:2}},"4":{start:{line:165,column:0},end:{line:299,column:2}},"5":{start:{line:306,column:0},end:{line:325,column:2}},"6":{start:{line:332,column:0},end:{line:351,column:2}},"7":{start:{line:359,column:0},end:{line:359,column:65}},"8":{start:{line:367,column:0},end:{line:383,column:42}},"9":{start:{line:391,column:0},end:{line:392,column:78}},"10":{start:{line:400,column:0},end:{line:424,column:2}},"11":{start:{line:431,column:0},end:{line:436,column:2}},"12":{start:{line:443,column:0},end:{line:453,column:2}},"13":{start:{line:460,column:0},end:{line:470,column:2}},"14":{start:{line:478,column:0},end:{line:490,column:2}},"15":{start:{line:479,column:2},end:{line:479,column:31}},"16":{start:{line:481,column:2},end:{line:482,column:17}},"17":{start:{line:482,column:4},end:{line:482,column:17}},"18":{start:{line:484,column:15},end:{line:484,column:67}},"19":{start:{line:486,column:2},end:{line:487,column:17}},"20":{start:{line:487,column:4},end:{line:487,column:17}},"21":{start:{line:489,column:2},end:{line:489,column:14}},"22":{start:{line:498,column:0},end:{line:503,column:2}},"23":{start:{line:499,column:2},end:{line:500,column:17}},"24":{start:{line:500,column:4},end:{line:500,column:17}},"25":{start:{line:502,column:2},end:{line:502,column:46}},"26":{start:{line:511,column:0},end:{line:528,column:2}},"27":{start:{line:512,column:2},end:{line:512,column:31}},"28":{start:{line:514,column:2},end:{line:515,column:17}},"29":{start:{line:515,column:4},end:{line:515,column:17}},"30":{start:{line:517,column:2},end:{line:525,column:3}},"31":{start:{line:518,column:4},end:{line:519,column:19}},"32":{start:{line:519,column:6},end:{line:519,column:19}},"33":{start:{line:520,column:9},end:{line:525,column:3}},"34":{start:{line:521,column:4},end:{line:522,column:19}},"35":{start:{line:522,column:6},end:{line:522,column:19}},"36":{start:{line:524,column:4},end:{line:524,column:17}},"37":{start:{line:527,column:2},end:{line:527,column:14}},"38":{start:{line:536,column:0},end:{line:546,column:2}},"39":{start:{line:537,column:2},end:{line:537,column:31}},"40":{start:{line:539,column:2},end:{line:540,column:17}},"41":{start:{line:540,column:4},end:{line:540,column:17}},"42":{start:{line:542,column:2},end:{line:543,column:17}},"43":{start:{line:543,column:4},end:{line:543,column:17}},"44":{start:{line:545,column:2},end:{line:545,column:14}},"45":{start:{line:555,column:0},end:{line:637,column:2}},"46":{start:{line:556,column:2},end:{line:556,column:31}},"47":{start:{line:573,column:2},end:{line:574,column:17}},"48":{start:{line:574,column:4},end:{line:574,column:17}},"49":{start:{line:576,column:2},end:{line:577,column:17}},"50":{start:{line:577,column:4},end:{line:577,column:17}},"51":{start:{line:580,column:2},end:{line:581,column:17}},"52":{start:{line:581,column:4},end:{line:581,column:17}},"53":{start:{line:584,column:2},end:{line:585,column:17}},"54":{start:{line:585,column:4},end:{line:585,column:17}},"55":{start:{line:588,column:15},end:{line:588,column:21}},"56":{start:{line:591,column:2},end:{line:592,column:17}},"57":{start:{line:592,column:4},end:{line:592,column:17}},"58":{start:{line:595,column:15},end:{line:595,column:28}},"59":{start:{line:599,column:2},end:{line:600,column:17}},"60":{start:{line:600,column:4},end:{line:600,column:17}},"61":{start:{line:603,column:2},end:{line:604,column:17}},"62":{start:{line:604,column:4},end:{line:604,column:17}},"63":{start:{line:607,column:2},end:{line:608,column:17}},"64":{start:{line:608,column:4},end:{line:608,column:17}},"65":{start:{line:611,column:2},end:{line:612,column:17}},"66":{start:{line:612,column:4},end:{line:612,column:17}},"67":{start:{line:616,column:2},end:{line:617,column:17}},"68":{start:{line:617,column:4},end:{line:617,column:17}},"69":{start:{line:620,column:2},end:{line:621,column:17}},"70":{start:{line:621,column:4},end:{line:621,column:17}},"71":{start:{line:624,column:2},end:{line:625,column:17}},"72":{start:{line:625,column:4},end:{line:625,column:17}},"73":{start:{line:628,column:2},end:{line:629,column:17}},"74":{start:{line:629,column:4},end:{line:629,column:17}},"75":{start:{line:633,column:2},end:{line:634,column:17}},"76":{start:{line:634,column:4},end:{line:634,column:17}},"77":{start:{line:636,column:2},end:{line:636,column:14}},"78":{start:{line:646,column:0},end:{line:667,column:2}},"79":{start:{line:647,column:2},end:{line:650,column:3}},"80":{start:{line:648,column:16},end:{line:648,column:38}},"81":{start:{line:649,column:4},end:{line:649,column:28}},"82":{start:{line:652,column:2},end:{line:664,column:3}},"83":{start:{line:653,column:17},end:{line:653,column:38}},"84":{start:{line:655,column:17},end:{line:655,column:57}},"85":{start:{line:657,column:4},end:{line:661,column:5}},"86":{start:{line:658,column:6},end:{line:659,column:34}},"87":{start:{line:659,column:8},end:{line:659,column:34}},"88":{start:{line:660,column:6},end:{line:660,column:29}},"89":{start:{line:663,column:4},end:{line:663,column:54}},"90":{start:{line:666,column:2},end:{line:666,column:30}}},fnMap:{"0":{name:"isHashType",decl:{start:{line:478,column:30},end:{line:478,column:40}},loc:{start:{line:478,column:46},end:{line:490,column:1}},line:478},"1":{name:"isLowDER",decl:{start:{line:498,column:28},end:{line:498,column:36}},loc:{start:{line:498,column:42},end:{line:503,column:1}},line:498},"2":{name:"isKeyEncoding",decl:{start:{line:511,column:33},end:{line:511,column:46}},loc:{start:{line:511,column:52},end:{line:528,column:1}},line:511},"3":{name:"isCompressedEncoding",decl:{start:{line:536,column:40},end:{line:536,column:60}},loc:{start:{line:536,column:66},end:{line:546,column:1}},line:536},"4":{name:"isSignatureEncoding",decl:{start:{line:555,column:39},end:{line:555,column:58}},loc:{start:{line:555,column:64},end:{line:637,column:1}},line:555},"5":{name:"toASM",decl:{start:{line:646,column:25},end:{line:646,column:30}},loc:{start:{line:646,column:45},end:{line:667,column:1}},line:646}},branchMap:{"0":{loc:{start:{line:481,column:2},end:{line:482,column:17}},type:"if",locations:[{start:{line:481,column:2},end:{line:482,column:17}},{start:{line:481,column:2},end:{line:482,column:17}}],line:481},"1":{loc:{start:{line:486,column:2},end:{line:487,column:17}},type:"if",locations:[{start:{line:486,column:2},end:{line:487,column:17}},{start:{line:486,column:2},end:{line:487,column:17}}],line:486},"2":{loc:{start:{line:486,column:6},end:{line:486,column:67}},type:"binary-expr",locations:[{start:{line:486,column:6},end:{line:486,column:33}},{start:{line:486,column:37},end:{line:486,column:67}}],line:486},"3":{loc:{start:{line:499,column:2},end:{line:500,column:17}},type:"if",locations:[{start:{line:499,column:2},end:{line:500,column:17}},{start:{line:499,column:2},end:{line:500,column:17}}],line:499},"4":{loc:{start:{line:514,column:2},end:{line:515,column:17}},type:"if",locations:[{start:{line:514,column:2},end:{line:515,column:17}},{start:{line:514,column:2},end:{line:515,column:17}}],line:514},"5":{loc:{start:{line:517,column:2},end:{line:525,column:3}},type:"if",locations:[{start:{line:517,column:2},end:{line:525,column:3}},{start:{line:517,column:2},end:{line:525,column:3}}],line:517},"6":{loc:{start:{line:518,column:4},end:{line:519,column:19}},type:"if",locations:[{start:{line:518,column:4},end:{line:519,column:19}},{start:{line:518,column:4},end:{line:519,column:19}}],line:518},"7":{loc:{start:{line:520,column:9},end:{line:525,column:3}},type:"if",locations:[{start:{line:520,column:9},end:{line:525,column:3}},{start:{line:520,column:9},end:{line:525,column:3}}],line:520},"8":{loc:{start:{line:520,column:13},end:{line:520,column:47}},type:"binary-expr",locations:[{start:{line:520,column:13},end:{line:520,column:28}},{start:{line:520,column:32},end:{line:520,column:47}}],line:520},"9":{loc:{start:{line:521,column:4},end:{line:522,column:19}},type:"if",locations:[{start:{line:521,column:4},end:{line:522,column:19}},{start:{line:521,column:4},end:{line:522,column:19}}],line:521},"10":{loc:{start:{line:539,column:2},end:{line:540,column:17}},type:"if",locations:[{start:{line:539,column:2},end:{line:540,column:17}},{start:{line:539,column:2},end:{line:540,column:17}}],line:539},"11":{loc:{start:{line:542,column:2},end:{line:543,column:17}},type:"if",locations:[{start:{line:542,column:2},end:{line:543,column:17}},{start:{line:542,column:2},end:{line:543,column:17}}],line:542},"12":{loc:{start:{line:542,column:6},end:{line:542,column:40}},type:"binary-expr",locations:[{start:{line:542,column:6},end:{line:542,column:21}},{start:{line:542,column:25},end:{line:542,column:40}}],line:542},"13":{loc:{start:{line:573,column:2},end:{line:574,column:17}},type:"if",locations:[{start:{line:573,column:2},end:{line:574,column:17}},{start:{line:573,column:2},end:{line:574,column:17}}],line:573},"14":{loc:{start:{line:576,column:2},end:{line:577,column:17}},type:"if",locations:[{start:{line:576,column:2},end:{line:577,column:17}},{start:{line:576,column:2},end:{line:577,column:17}}],line:576},"15":{loc:{start:{line:580,column:2},end:{line:581,column:17}},type:"if",locations:[{start:{line:580,column:2},end:{line:581,column:17}},{start:{line:580,column:2},end:{line:581,column:17}}],line:580},"16":{loc:{start:{line:584,column:2},end:{line:585,column:17}},type:"if",locations:[{start:{line:584,column:2},end:{line:585,column:17}},{start:{line:584,column:2},end:{line:585,column:17}}],line:584},"17":{loc:{start:{line:591,column:2},end:{line:592,column:17}},type:"if",locations:[{start:{line:591,column:2},end:{line:592,column:17}},{start:{line:591,column:2},end:{line:592,column:17}}],line:591},"18":{loc:{start:{line:599,column:2},end:{line:600,column:17}},type:"if",locations:[{start:{line:599,column:2},end:{line:600,column:17}},{start:{line:599,column:2},end:{line:600,column:17}}],line:599},"19":{loc:{start:{line:603,column:2},end:{line:604,column:17}},type:"if",locations:[{start:{line:603,column:2},end:{line:604,column:17}},{start:{line:603,column:2},end:{line:604,column:17}}],line:603},"20":{loc:{start:{line:607,column:2},end:{line:608,column:17}},type:"if",locations:[{start:{line:607,column:2},end:{line:608,column:17}},{start:{line:607,column:2},end:{line:608,column:17}}],line:607},"21":{loc:{start:{line:611,column:2},end:{line:612,column:17}},type:"if",locations:[{start:{line:611,column:2},end:{line:612,column:17}},{start:{line:611,column:2},end:{line:612,column:17}}],line:611},"22":{loc:{start:{line:616,column:2},end:{line:617,column:17}},type:"if",locations:[{start:{line:616,column:2},end:{line:617,column:17}},{start:{line:616,column:2},end:{line:617,column:17}}],line:616},"23":{loc:{start:{line:616,column:6},end:{line:616,column:55}},type:"binary-expr",locations:[{start:{line:616,column:6},end:{line:616,column:14}},{start:{line:616,column:19},end:{line:616,column:34}},{start:{line:616,column:39},end:{line:616,column:55}}],line:616},"24":{loc:{start:{line:620,column:2},end:{line:621,column:17}},type:"if",locations:[{start:{line:620,column:2},end:{line:621,column:17}},{start:{line:620,column:2},end:{line:621,column:17}}],line:620},"25":{loc:{start:{line:624,column:2},end:{line:625,column:17}},type:"if",locations:[{start:{line:624,column:2},end:{line:625,column:17}},{start:{line:624,column:2},end:{line:625,column:17}}],line:624},"26":{loc:{start:{line:628,column:2},end:{line:629,column:17}},type:"if",locations:[{start:{line:628,column:2},end:{line:629,column:17}},{start:{line:628,column:2},end:{line:629,column:17}}],line:628},"27":{loc:{start:{line:633,column:2},end:{line:634,column:17}},type:"if",locations:[{start:{line:633,column:2},end:{line:634,column:17}},{start:{line:633,column:2},end:{line:634,column:17}}],line:633},"28":{loc:{start:{line:633,column:6},end:{line:633,column:69}},type:"binary-expr",locations:[{start:{line:633,column:6},end:{line:633,column:14}},{start:{line:633,column:19},end:{line:633,column:41}},{start:{line:633,column:46},end:{line:633,column:69}}],line:633},"29":{loc:{start:{line:647,column:2},end:{line:650,column:3}},type:"if",locations:[{start:{line:647,column:2},end:{line:650,column:3}},{start:{line:647,column:2},end:{line:650,column:3}}],line:647},"30":{loc:{start:{line:652,column:2},end:{line:664,column:3}},type:"if",locations:[{start:{line:652,column:2},end:{line:664,column:3}},{start:{line:652,column:2},end:{line:664,column:3}}],line:652},"31":{loc:{start:{line:652,column:6},end:{line:652,column:49}},type:"binary-expr",locations:[{start:{line:652,column:6},end:{line:652,column:12}},{start:{line:652,column:16},end:{line:652,column:49}}],line:652},"32":{loc:{start:{line:655,column:17},end:{line:655,column:57}},type:"binary-expr",locations:[{start:{line:655,column:17},end:{line:655,column:51}},{start:{line:655,column:55},end:{line:655,column:57}}],line:655},"33":{loc:{start:{line:657,column:4},end:{line:661,column:5}},type:"if",locations:[{start:{line:657,column:4},end:{line:661,column:5}},{start:{line:657,column:4},end:{line:661,column:5}}],line:657},"34":{loc:{start:{line:658,column:6},end:{line:659,column:34}},type:"if",locations:[{start:{line:658,column:6},end:{line:659,column:34}},{start:{line:658,column:6},end:{line:659,column:34}}],line:658}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"65fc84bfb6c390be29b256047cdbd76de18ac3cb"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_11sus1y5cu=function(){return actualCoverage;};}return actualCoverage;}cov_11sus1y5cu();const assert=(cov_11sus1y5cu().s[0]++,require('bsert'));const secp256k1=(cov_11sus1y5cu().s[1]++,require('bcrypto/lib/secp256k1'));const ScriptNum=(cov_11sus1y5cu().s[2]++,require('./scriptnum'));/**
 * Script opcodes.
 * @enum {Number}
 * @default
 */cov_11sus1y5cu().s[3]++;exports.opcodes={// Push
OP_0:0x00,OP_PUSHDATA1:0x4c,OP_PUSHDATA2:0x4d,OP_PUSHDATA4:0x4e,OP_1NEGATE:0x4f,OP_RESERVED:0x50,OP_1:0x51,OP_2:0x52,OP_3:0x53,OP_4:0x54,OP_5:0x55,OP_6:0x56,OP_7:0x57,OP_8:0x58,OP_9:0x59,OP_10:0x5a,OP_11:0x5b,OP_12:0x5c,OP_13:0x5d,OP_14:0x5e,OP_15:0x5f,OP_16:0x60,// Control
OP_NOP:0x61,OP_VER:0x62,OP_IF:0x63,OP_NOTIF:0x64,OP_VERIF:0x65,OP_VERNOTIF:0x66,OP_ELSE:0x67,OP_ENDIF:0x68,OP_VERIFY:0x69,OP_RETURN:0x6a,// Stack
OP_TOALTSTACK:0x6b,OP_FROMALTSTACK:0x6c,OP_2DROP:0x6d,OP_2DUP:0x6e,OP_3DUP:0x6f,OP_2OVER:0x70,OP_2ROT:0x71,OP_2SWAP:0x72,OP_IFDUP:0x73,OP_DEPTH:0x74,OP_DROP:0x75,OP_DUP:0x76,OP_NIP:0x77,OP_OVER:0x78,OP_PICK:0x79,OP_ROLL:0x7a,OP_ROT:0x7b,OP_SWAP:0x7c,OP_TUCK:0x7d,// Splice
OP_CAT:0x7e,OP_SUBSTR:0x7f,OP_LEFT:0x80,OP_RIGHT:0x81,OP_SIZE:0x82,// Bit
OP_INVERT:0x83,OP_AND:0x84,OP_OR:0x85,OP_XOR:0x86,OP_EQUAL:0x87,OP_EQUALVERIFY:0x88,OP_RESERVED1:0x89,OP_RESERVED2:0x8a,// Numeric
OP_1ADD:0x8b,OP_1SUB:0x8c,OP_2MUL:0x8d,OP_2DIV:0x8e,OP_NEGATE:0x8f,OP_ABS:0x90,OP_NOT:0x91,OP_0NOTEQUAL:0x92,OP_ADD:0x93,OP_SUB:0x94,OP_MUL:0x95,OP_DIV:0x96,OP_MOD:0x97,OP_LSHIFT:0x98,OP_RSHIFT:0x99,OP_BOOLAND:0x9a,OP_BOOLOR:0x9b,OP_NUMEQUAL:0x9c,OP_NUMEQUALVERIFY:0x9d,OP_NUMNOTEQUAL:0x9e,OP_LESSTHAN:0x9f,OP_GREATERTHAN:0xa0,OP_LESSTHANOREQUAL:0xa1,OP_GREATERTHANOREQUAL:0xa2,OP_MIN:0xa3,OP_MAX:0xa4,OP_WITHIN:0xa5,// Crypto
OP_RIPEMD160:0xa6,OP_SHA1:0xa7,OP_SHA256:0xa8,OP_HASH160:0xa9,OP_HASH256:0xaa,OP_CODESEPARATOR:0xab,OP_CHECKSIG:0xac,OP_CHECKSIGVERIFY:0xad,OP_CHECKMULTISIG:0xae,OP_CHECKMULTISIGVERIFY:0xaf,// Expansion
OP_NOP1:0xb0,OP_CHECKLOCKTIMEVERIFY:0xb1,OP_CHECKSEQUENCEVERIFY:0xb2,OP_NOP4:0xb3,OP_NOP5:0xb4,OP_NOP6:0xb5,OP_NOP7:0xb6,OP_NOP8:0xb7,OP_NOP9:0xb8,OP_NOP10:0xb9,// Custom
OP_INVALIDOPCODE:0xff};/**
 * Opcodes by value.
 * @const {Object}
 */cov_11sus1y5cu().s[4]++;exports.opcodesByVal={// Push
0x00:'OP_0',0x4c:'OP_PUSHDATA1',0x4d:'OP_PUSHDATA2',0x4e:'OP_PUSHDATA4',0x4f:'OP_1NEGATE',0x50:'OP_RESERVED',0x51:'OP_1',0x52:'OP_2',0x53:'OP_3',0x54:'OP_4',0x55:'OP_5',0x56:'OP_6',0x57:'OP_7',0x58:'OP_8',0x59:'OP_9',0x5a:'OP_10',0x5b:'OP_11',0x5c:'OP_12',0x5d:'OP_13',0x5e:'OP_14',0x5f:'OP_15',0x60:'OP_16',// Control
0x61:'OP_NOP',0x62:'OP_VER',0x63:'OP_IF',0x64:'OP_NOTIF',0x65:'OP_VERIF',0x66:'OP_VERNOTIF',0x67:'OP_ELSE',0x68:'OP_ENDIF',0x69:'OP_VERIFY',0x6a:'OP_RETURN',// Stack
0x6b:'OP_TOALTSTACK',0x6c:'OP_FROMALTSTACK',0x6d:'OP_2DROP',0x6e:'OP_2DUP',0x6f:'OP_3DUP',0x70:'OP_2OVER',0x71:'OP_2ROT',0x72:'OP_2SWAP',0x73:'OP_IFDUP',0x74:'OP_DEPTH',0x75:'OP_DROP',0x76:'OP_DUP',0x77:'OP_NIP',0x78:'OP_OVER',0x79:'OP_PICK',0x7a:'OP_ROLL',0x7b:'OP_ROT',0x7c:'OP_SWAP',0x7d:'OP_TUCK',// Splice
0x7e:'OP_CAT',0x7f:'OP_SUBSTR',0x80:'OP_LEFT',0x81:'OP_RIGHT',0x82:'OP_SIZE',// Bit
0x83:'OP_INVERT',0x84:'OP_AND',0x85:'OP_OR',0x86:'OP_XOR',0x87:'OP_EQUAL',0x88:'OP_EQUALVERIFY',0x89:'OP_RESERVED1',0x8a:'OP_RESERVED2',// Numeric
0x8b:'OP_1ADD',0x8c:'OP_1SUB',0x8d:'OP_2MUL',0x8e:'OP_2DIV',0x8f:'OP_NEGATE',0x90:'OP_ABS',0x91:'OP_NOT',0x92:'OP_0NOTEQUAL',0x93:'OP_ADD',0x94:'OP_SUB',0x95:'OP_MUL',0x96:'OP_DIV',0x97:'OP_MOD',0x98:'OP_LSHIFT',0x99:'OP_RSHIFT',0x9a:'OP_BOOLAND',0x9b:'OP_BOOLOR',0x9c:'OP_NUMEQUAL',0x9d:'OP_NUMEQUALVERIFY',0x9e:'OP_NUMNOTEQUAL',0x9f:'OP_LESSTHAN',0xa0:'OP_GREATERTHAN',0xa1:'OP_LESSTHANOREQUAL',0xa2:'OP_GREATERTHANOREQUAL',0xa3:'OP_MIN',0xa4:'OP_MAX',0xa5:'OP_WITHIN',// Crypto
0xa6:'OP_RIPEMD160',0xa7:'OP_SHA1',0xa8:'OP_SHA256',0xa9:'OP_HASH160',0xaa:'OP_HASH256',0xab:'OP_CODESEPARATOR',0xac:'OP_CHECKSIG',0xad:'OP_CHECKSIGVERIFY',0xae:'OP_CHECKMULTISIG',0xaf:'OP_CHECKMULTISIGVERIFY',// Expansion
0xb0:'OP_NOP1',0xb1:'OP_CHECKLOCKTIMEVERIFY',0xb2:'OP_CHECKSEQUENCEVERIFY',0xb3:'OP_NOP4',0xb4:'OP_NOP5',0xb5:'OP_NOP6',0xb6:'OP_NOP7',0xb7:'OP_NOP8',0xb8:'OP_NOP9',0xb9:'OP_NOP10',// Custom
0xff:'OP_INVALIDOPCODE'};/**
 * Small ints (1 indexed, 1==0).
 * @const {Buffer[]}
 */cov_11sus1y5cu().s[5]++;exports.small=[Buffer.from([0x81]),Buffer.from([]),Buffer.from([0x01]),Buffer.from([0x02]),Buffer.from([0x03]),Buffer.from([0x04]),Buffer.from([0x05]),Buffer.from([0x06]),Buffer.from([0x07]),Buffer.from([0x08]),Buffer.from([0x09]),Buffer.from([0x0a]),Buffer.from([0x0b]),Buffer.from([0x0c]),Buffer.from([0x0d]),Buffer.from([0x0e]),Buffer.from([0x0f]),Buffer.from([0x10])];/**
 * Script and locktime flags. See {@link VerifyFlags}.
 * @enum {Number}
 */cov_11sus1y5cu().s[6]++;exports.flags={VERIFY_NONE:0,VERIFY_P2SH:1<<0,VERIFY_STRICTENC:1<<1,VERIFY_DERSIG:1<<2,VERIFY_LOW_S:1<<3,VERIFY_NULLDUMMY:1<<4,VERIFY_SIGPUSHONLY:1<<5,VERIFY_MINIMALDATA:1<<6,VERIFY_DISCOURAGE_UPGRADABLE_NOPS:1<<7,VERIFY_CLEANSTACK:1<<8,VERIFY_CHECKLOCKTIMEVERIFY:1<<9,VERIFY_CHECKSEQUENCEVERIFY:1<<10,VERIFY_WITNESS:1<<11,VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM:1<<12,VERIFY_MINIMALIF:1<<13,VERIFY_NULLFAIL:1<<14,VERIFY_WITNESS_PUBKEYTYPE:1<<15,VERIFY_CONST_SCRIPTCODE:1<<16};/**
 * Consensus verify flags (used for block validation).
 * @const {VerifyFlags}
 * @default
 */cov_11sus1y5cu().s[7]++;exports.flags.MANDATORY_VERIFY_FLAGS=exports.flags.VERIFY_P2SH;/**
 * Standard verify flags (used for mempool validation).
 * @const {VerifyFlags}
 * @default
 */cov_11sus1y5cu().s[8]++;exports.flags.STANDARD_VERIFY_FLAGS=0|exports.flags.MANDATORY_VERIFY_FLAGS|exports.flags.VERIFY_DERSIG|exports.flags.VERIFY_STRICTENC|exports.flags.VERIFY_MINIMALDATA|exports.flags.VERIFY_NULLDUMMY|exports.flags.VERIFY_DISCOURAGE_UPGRADABLE_NOPS|exports.flags.VERIFY_CLEANSTACK|exports.flags.VERIFY_MINIMALIF|exports.flags.VERIFY_NULLFAIL|exports.flags.VERIFY_CHECKLOCKTIMEVERIFY|exports.flags.VERIFY_CHECKSEQUENCEVERIFY|exports.flags.VERIFY_LOW_S|exports.flags.VERIFY_WITNESS|exports.flags.VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM|exports.flags.VERIFY_WITNESS_PUBKEYTYPE|exports.flags.VERIFY_CONST_SCRIPTCODE;/**
 * Standard flags without mandatory bits.
 * @const {VerifyFlags}
 * @default
 */cov_11sus1y5cu().s[9]++;exports.flags.ONLY_STANDARD_VERIFY_FLAGS=exports.flags.STANDARD_VERIFY_FLAGS&~exports.flags.MANDATORY_VERIFY_FLAGS;/**
 * Sighash Types.
 * @enum {SighashType}
 * @default
 */cov_11sus1y5cu().s[10]++;exports.hashType={/*
   * Sign all outputs.
   */ALL:1,/*
   * Do not sign outputs (zero sequences).
   */NONE:2,/*
   * Sign output at the same index (zero sequences).
   */SINGLE:3,/*
   * Sign only the current input (mask).
   */ANYONECANPAY:0x80};/**
 * Sighash types by value.
 * @const {Object}
 */cov_11sus1y5cu().s[11]++;exports.hashTypeByVal={1:'ALL',2:'NONE',3:'SINGLE',0x80:'ANYONECANPAY'};/**
 * Output script types.
 * @enum {Number}
 */cov_11sus1y5cu().s[12]++;exports.types={NONSTANDARD:0,PUBKEY:1,PUBKEYHASH:2,SCRIPTHASH:3,MULTISIG:4,NULLDATA:5,WITNESSMALFORMED:0x80,WITNESSSCRIPTHASH:0x81,WITNESSPUBKEYHASH:0x82};/**
 * Output script types by value.
 * @const {Object}
 */cov_11sus1y5cu().s[13]++;exports.typesByVal={0:'NONSTANDARD',1:'PUBKEY',2:'PUBKEYHASH',3:'SCRIPTHASH',4:'MULTISIG',5:'NULLDATA',0x80:'WITNESSMALFORMED',0x81:'WITNESSSCRIPTHASH',0x82:'WITNESSPUBKEYHASH'};/**
 * Test a signature to see whether it contains a valid sighash type.
 * @param {Buffer} sig
 * @returns {Boolean}
 */cov_11sus1y5cu().s[14]++;exports.isHashType=function isHashType(sig){cov_11sus1y5cu().f[0]++;cov_11sus1y5cu().s[15]++;assert(Buffer.isBuffer(sig));cov_11sus1y5cu().s[16]++;if(sig.length===0){cov_11sus1y5cu().b[0][0]++;cov_11sus1y5cu().s[17]++;return false;}else{cov_11sus1y5cu().b[0][1]++;}const type=(cov_11sus1y5cu().s[18]++,sig[sig.length-1]&~exports.hashType.ANYONECANPAY);cov_11sus1y5cu().s[19]++;if((cov_11sus1y5cu().b[2][0]++,type<exports.hashType.ALL)||(cov_11sus1y5cu().b[2][1]++,type>exports.hashType.SINGLE)){cov_11sus1y5cu().b[1][0]++;cov_11sus1y5cu().s[20]++;return false;}else{cov_11sus1y5cu().b[1][1]++;}cov_11sus1y5cu().s[21]++;return true;};/**
 * Test a signature to see whether it contains a low S value.
 * @param {Buffer} sig
 * @returns {Boolean}
 */cov_11sus1y5cu().s[22]++;exports.isLowDER=function isLowDER(sig){cov_11sus1y5cu().f[1]++;cov_11sus1y5cu().s[23]++;if(!exports.isSignatureEncoding(sig)){cov_11sus1y5cu().b[3][0]++;cov_11sus1y5cu().s[24]++;return false;}else{cov_11sus1y5cu().b[3][1]++;}cov_11sus1y5cu().s[25]++;return secp256k1.isLowDER(sig.slice(0,-1));};/**
 * Test whether the data element is a valid key.
 * @param {Buffer} key
 * @returns {Boolean}
 */cov_11sus1y5cu().s[26]++;exports.isKeyEncoding=function isKeyEncoding(key){cov_11sus1y5cu().f[2]++;cov_11sus1y5cu().s[27]++;assert(Buffer.isBuffer(key));cov_11sus1y5cu().s[28]++;if(key.length<33){cov_11sus1y5cu().b[4][0]++;cov_11sus1y5cu().s[29]++;return false;}else{cov_11sus1y5cu().b[4][1]++;}cov_11sus1y5cu().s[30]++;if(key[0]===0x04){cov_11sus1y5cu().b[5][0]++;cov_11sus1y5cu().s[31]++;if(key.length!==65){cov_11sus1y5cu().b[6][0]++;cov_11sus1y5cu().s[32]++;return false;}else{cov_11sus1y5cu().b[6][1]++;}}else{cov_11sus1y5cu().b[5][1]++;cov_11sus1y5cu().s[33]++;if((cov_11sus1y5cu().b[8][0]++,key[0]===0x02)||(cov_11sus1y5cu().b[8][1]++,key[0]===0x03)){cov_11sus1y5cu().b[7][0]++;cov_11sus1y5cu().s[34]++;if(key.length!==33){cov_11sus1y5cu().b[9][0]++;cov_11sus1y5cu().s[35]++;return false;}else{cov_11sus1y5cu().b[9][1]++;}}else{cov_11sus1y5cu().b[7][1]++;cov_11sus1y5cu().s[36]++;return false;}}cov_11sus1y5cu().s[37]++;return true;};/**
 * Test whether the data element is a compressed key.
 * @param {Buffer} key
 * @returns {Boolean}
 */cov_11sus1y5cu().s[38]++;exports.isCompressedEncoding=function isCompressedEncoding(key){cov_11sus1y5cu().f[3]++;cov_11sus1y5cu().s[39]++;assert(Buffer.isBuffer(key));cov_11sus1y5cu().s[40]++;if(key.length!==33){cov_11sus1y5cu().b[10][0]++;cov_11sus1y5cu().s[41]++;return false;}else{cov_11sus1y5cu().b[10][1]++;}cov_11sus1y5cu().s[42]++;if((cov_11sus1y5cu().b[12][0]++,key[0]!==0x02)&&(cov_11sus1y5cu().b[12][1]++,key[0]!==0x03)){cov_11sus1y5cu().b[11][0]++;cov_11sus1y5cu().s[43]++;return false;}else{cov_11sus1y5cu().b[11][1]++;}cov_11sus1y5cu().s[44]++;return true;};/**
 * Test a signature to see if it abides by BIP66.
 * @see https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki
 * @param {Buffer} sig
 * @returns {Boolean}
 */cov_11sus1y5cu().s[45]++;exports.isSignatureEncoding=function isSignatureEncoding(sig){cov_11sus1y5cu().f[4]++;cov_11sus1y5cu().s[46]++;assert(Buffer.isBuffer(sig));// Format:
//   0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S] [sighash]
// * total-length: 1-byte length descriptor of everything that follows,
//   excluding the sighash byte.
// * R-length: 1-byte length descriptor of the R value that follows.
// * R: arbitrary-length big-endian encoded R value. It must use the shortest
//   possible encoding for a positive integers (which means no null bytes at
//   the start, except a single one when the next byte has its highest bit
//   set).
// * S-length: 1-byte length descriptor of the S value that follows.
// * S: arbitrary-length big-endian encoded S value. The same rules apply.
// * sighash: 1-byte value indicating what data is hashed (not part of the DER
//   signature)
// Minimum and maximum size constraints.
cov_11sus1y5cu().s[47]++;if(sig.length<9){cov_11sus1y5cu().b[13][0]++;cov_11sus1y5cu().s[48]++;return false;}else{cov_11sus1y5cu().b[13][1]++;}cov_11sus1y5cu().s[49]++;if(sig.length>73){cov_11sus1y5cu().b[14][0]++;cov_11sus1y5cu().s[50]++;return false;}else{cov_11sus1y5cu().b[14][1]++;}// A signature is of type 0x30 (compound).
cov_11sus1y5cu().s[51]++;if(sig[0]!==0x30){cov_11sus1y5cu().b[15][0]++;cov_11sus1y5cu().s[52]++;return false;}else{cov_11sus1y5cu().b[15][1]++;}// Make sure the length covers the entire signature.
cov_11sus1y5cu().s[53]++;if(sig[1]!==sig.length-3){cov_11sus1y5cu().b[16][0]++;cov_11sus1y5cu().s[54]++;return false;}else{cov_11sus1y5cu().b[16][1]++;}// Extract the length of the R element.
const lenR=(cov_11sus1y5cu().s[55]++,sig[3]);// Make sure the length of the S element is still inside the signature.
cov_11sus1y5cu().s[56]++;if(5+lenR>=sig.length){cov_11sus1y5cu().b[17][0]++;cov_11sus1y5cu().s[57]++;return false;}else{cov_11sus1y5cu().b[17][1]++;}// Extract the length of the S element.
const lenS=(cov_11sus1y5cu().s[58]++,sig[5+lenR]);// Verify that the length of the signature matches the sum of the length
// of the elements.
cov_11sus1y5cu().s[59]++;if(lenR+lenS+7!==sig.length){cov_11sus1y5cu().b[18][0]++;cov_11sus1y5cu().s[60]++;return false;}else{cov_11sus1y5cu().b[18][1]++;}// Check whether the R element is an integer.
cov_11sus1y5cu().s[61]++;if(sig[2]!==0x02){cov_11sus1y5cu().b[19][0]++;cov_11sus1y5cu().s[62]++;return false;}else{cov_11sus1y5cu().b[19][1]++;}// Zero-length integers are not allowed for R.
cov_11sus1y5cu().s[63]++;if(lenR===0){cov_11sus1y5cu().b[20][0]++;cov_11sus1y5cu().s[64]++;return false;}else{cov_11sus1y5cu().b[20][1]++;}// Negative numbers are not allowed for R.
cov_11sus1y5cu().s[65]++;if(sig[4]&0x80){cov_11sus1y5cu().b[21][0]++;cov_11sus1y5cu().s[66]++;return false;}else{cov_11sus1y5cu().b[21][1]++;}// Null bytes at the start of R are not allowed, unless R would
// otherwise be interpreted as a negative number.
cov_11sus1y5cu().s[67]++;if((cov_11sus1y5cu().b[23][0]++,lenR>1)&&(cov_11sus1y5cu().b[23][1]++,sig[4]===0x00)&&(cov_11sus1y5cu().b[23][2]++,!(sig[5]&0x80))){cov_11sus1y5cu().b[22][0]++;cov_11sus1y5cu().s[68]++;return false;}else{cov_11sus1y5cu().b[22][1]++;}// Check whether the S element is an integer.
cov_11sus1y5cu().s[69]++;if(sig[lenR+4]!==0x02){cov_11sus1y5cu().b[24][0]++;cov_11sus1y5cu().s[70]++;return false;}else{cov_11sus1y5cu().b[24][1]++;}// Zero-length integers are not allowed for S.
cov_11sus1y5cu().s[71]++;if(lenS===0){cov_11sus1y5cu().b[25][0]++;cov_11sus1y5cu().s[72]++;return false;}else{cov_11sus1y5cu().b[25][1]++;}// Negative numbers are not allowed for S.
cov_11sus1y5cu().s[73]++;if(sig[lenR+6]&0x80){cov_11sus1y5cu().b[26][0]++;cov_11sus1y5cu().s[74]++;return false;}else{cov_11sus1y5cu().b[26][1]++;}// Null bytes at the start of S are not allowed, unless S would otherwise be
// interpreted as a negative number.
cov_11sus1y5cu().s[75]++;if((cov_11sus1y5cu().b[28][0]++,lenS>1)&&(cov_11sus1y5cu().b[28][1]++,sig[lenR+6]===0x00)&&(cov_11sus1y5cu().b[28][2]++,!(sig[lenR+7]&0x80))){cov_11sus1y5cu().b[27][0]++;cov_11sus1y5cu().s[76]++;return false;}else{cov_11sus1y5cu().b[27][1]++;}cov_11sus1y5cu().s[77]++;return true;};/**
 * Format stack item into bitcoind asm format.
 * @param {Buffer} item
 * @param {Boolean?} decode - Attempt to decode hash types.
 * @returns {String} Human-readable string.
 */cov_11sus1y5cu().s[78]++;exports.toASM=function toASM(item,decode){cov_11sus1y5cu().f[5]++;cov_11sus1y5cu().s[79]++;if(item.length<=4){cov_11sus1y5cu().b[29][0]++;const num=(cov_11sus1y5cu().s[80]++,ScriptNum.decode(item));cov_11sus1y5cu().s[81]++;return num.toString(10);}else{cov_11sus1y5cu().b[29][1]++;}cov_11sus1y5cu().s[82]++;if((cov_11sus1y5cu().b[31][0]++,decode)&&(cov_11sus1y5cu().b[31][1]++,exports.isSignatureEncoding(item))){cov_11sus1y5cu().b[30][0]++;const type=(cov_11sus1y5cu().s[83]++,item[item.length-1]);let symbol=(cov_11sus1y5cu().s[84]++,(cov_11sus1y5cu().b[32][0]++,exports.hashTypeByVal[type&0x1f])||(cov_11sus1y5cu().b[32][1]++,''));cov_11sus1y5cu().s[85]++;if(symbol){cov_11sus1y5cu().b[33][0]++;cov_11sus1y5cu().s[86]++;if(type&exports.hashType.ANYONECANPAY){cov_11sus1y5cu().b[34][0]++;cov_11sus1y5cu().s[87]++;symbol+='|ANYONECANPAY';}else{cov_11sus1y5cu().b[34][1]++;}cov_11sus1y5cu().s[88]++;symbol=`[${symbol}]`;}else{cov_11sus1y5cu().b[33][1]++;}cov_11sus1y5cu().s[89]++;return item.slice(0,-1).toString('hex')+symbol;}else{cov_11sus1y5cu().b[30][1]++;}cov_11sus1y5cu().s[90]++;return item.toString('hex');};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
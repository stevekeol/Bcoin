/*!
 * master.js - master process for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */'use strict';function cov_m2llyef2f(){var path="E:\\Projects\\Test\\bcoin\\lib\\workers\\master.js";var hash="4f5a64024a4342f5c8b89c7e3d27b990d15fa5d9";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\Projects\\Test\\bcoin\\lib\\workers\\master.js",statementMap:{"0":{start:{line:10,column:15},end:{line:10,column:31}},"1":{start:{line:11,column:21},end:{line:11,column:38}},"2":{start:{line:12,column:17},end:{line:12,column:32}},"3":{start:{line:13,column:16},end:{line:13,column:46}},"4":{start:{line:14,column:13},end:{line:14,column:30}},"5":{start:{line:15,column:15},end:{line:15,column:34}},"6":{start:{line:16,column:15},end:{line:16,column:34}},"7":{start:{line:17,column:16},end:{line:17,column:36}},"8":{start:{line:18,column:15},end:{line:18,column:34}},"9":{start:{line:34,column:4},end:{line:34,column:12}},"10":{start:{line:36,column:4},end:{line:36,column:31}},"11":{start:{line:37,column:4},end:{line:37,column:31}},"12":{start:{line:38,column:4},end:{line:38,column:31}},"13":{start:{line:39,column:4},end:{line:39,column:27}},"14":{start:{line:40,column:4},end:{line:40,column:23}},"15":{start:{line:42,column:4},end:{line:42,column:16}},"16":{start:{line:51,column:4},end:{line:53,column:7}},"17":{start:{line:52,column:6},end:{line:52,column:29}},"18":{start:{line:55,column:4},end:{line:57,column:7}},"19":{start:{line:56,column:6},end:{line:56,column:30}},"20":{start:{line:59,column:4},end:{line:62,column:7}},"21":{start:{line:60,column:6},end:{line:60,column:46}},"22":{start:{line:61,column:6},end:{line:61,column:45}},"23":{start:{line:61,column:23},end:{line:61,column:37}},"24":{start:{line:64,column:4},end:{line:66,column:7}},"25":{start:{line:65,column:6},end:{line:65,column:30}},"26":{start:{line:68,column:4},end:{line:70,column:7}},"27":{start:{line:69,column:6},end:{line:69,column:34}},"28":{start:{line:79,column:4},end:{line:79,column:48}},"29":{start:{line:80,column:4},end:{line:80,column:39}},"30":{start:{line:89,column:4},end:{line:89,column:32}},"31":{start:{line:99,column:4},end:{line:99,column:35}},"32":{start:{line:109,column:4},end:{line:109,column:50}},"33":{start:{line:120,column:4},end:{line:120,column:53}},"34":{start:{line:128,column:4},end:{line:128,column:33}},"35":{start:{line:138,column:17},end:{line:138,column:46}},"36":{start:{line:139,column:4},end:{line:139,column:43}},"37":{start:{line:147,column:4},end:{line:147,column:50}},"38":{start:{line:149,column:4},end:{line:149,column:26}},"39":{start:{line:151,column:4},end:{line:153,column:7}},"40":{start:{line:152,column:6},end:{line:152,column:46}},"41":{start:{line:155,column:4},end:{line:161,column:7}},"42":{start:{line:156,column:6},end:{line:160,column:7}},"43":{start:{line:157,column:8},end:{line:157,column:34}},"44":{start:{line:159,column:8},end:{line:159,column:30}},"45":{start:{line:173,column:4},end:{line:189,column:5}},"46":{start:{line:175,column:8},end:{line:175,column:32}},"47":{start:{line:176,column:8},end:{line:176,column:14}},"48":{start:{line:178,column:8},end:{line:178,column:41}},"49":{start:{line:179,column:8},end:{line:179,column:35}},"50":{start:{line:180,column:8},end:{line:180,column:14}},"51":{start:{line:182,column:8},end:{line:182,column:41}},"52":{start:{line:183,column:8},end:{line:183,column:14}},"53":{start:{line:185,column:8},end:{line:185,column:38}},"54":{start:{line:186,column:8},end:{line:186,column:30}},"55":{start:{line:187,column:8},end:{line:187,column:26}},"56":{start:{line:188,column:8},end:{line:188,column:14}},"57":{start:{line:197,column:0},end:{line:197,column:24}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:33,column:2},end:{line:33,column:3}},loc:{start:{line:33,column:16},end:{line:43,column:3}},line:33},"1":{name:"(anonymous_1)",decl:{start:{line:50,column:2},end:{line:50,column:3}},loc:{start:{line:50,column:9},end:{line:71,column:3}},line:50},"2":{name:"(anonymous_2)",decl:{start:{line:51,column:27},end:{line:51,column:28}},loc:{start:{line:51,column:37},end:{line:53,column:5}},line:51},"3":{name:"(anonymous_3)",decl:{start:{line:55,column:28},end:{line:55,column:29}},loc:{start:{line:55,column:37},end:{line:57,column:5}},line:55},"4":{name:"(anonymous_4)",decl:{start:{line:59,column:32},end:{line:59,column:33}},loc:{start:{line:59,column:41},end:{line:62,column:5}},line:59},"5":{name:"(anonymous_5)",decl:{start:{line:61,column:17},end:{line:61,column:18}},loc:{start:{line:61,column:23},end:{line:61,column:37}},line:61},"6":{name:"(anonymous_6)",decl:{start:{line:64,column:28},end:{line:64,column:29}},loc:{start:{line:64,column:37},end:{line:66,column:5}},line:64},"7":{name:"(anonymous_7)",decl:{start:{line:68,column:29},end:{line:68,column:30}},loc:{start:{line:68,column:41},end:{line:70,column:5}},line:68},"8":{name:"(anonymous_8)",decl:{start:{line:78,column:2},end:{line:78,column:3}},loc:{start:{line:78,column:14},end:{line:81,column:3}},line:78},"9":{name:"(anonymous_9)",decl:{start:{line:88,column:2},end:{line:88,column:3}},loc:{start:{line:88,column:15},end:{line:90,column:3}},line:88},"10":{name:"(anonymous_10)",decl:{start:{line:98,column:2},end:{line:98,column:3}},loc:{start:{line:98,column:14},end:{line:100,column:3}},line:98},"11":{name:"(anonymous_11)",decl:{start:{line:108,column:2},end:{line:108,column:3}},loc:{start:{line:108,column:15},end:{line:110,column:3}},line:108},"12":{name:"(anonymous_12)",decl:{start:{line:119,column:2},end:{line:119,column:3}},loc:{start:{line:119,column:22},end:{line:121,column:3}},line:119},"13":{name:"(anonymous_13)",decl:{start:{line:127,column:2},end:{line:127,column:3}},loc:{start:{line:127,column:12},end:{line:129,column:3}},line:127},"14":{name:"(anonymous_14)",decl:{start:{line:137,column:2},end:{line:137,column:3}},loc:{start:{line:137,column:8},end:{line:140,column:3}},line:137},"15":{name:"(anonymous_15)",decl:{start:{line:146,column:2},end:{line:146,column:3}},loc:{start:{line:146,column:11},end:{line:162,column:3}},line:146},"16":{name:"(anonymous_16)",decl:{start:{line:151,column:21},end:{line:151,column:22}},loc:{start:{line:151,column:30},end:{line:153,column:5}},line:151},"17":{name:"(anonymous_17)",decl:{start:{line:155,column:22},end:{line:155,column:23}},loc:{start:{line:155,column:34},end:{line:161,column:5}},line:155},"18":{name:"(anonymous_18)",decl:{start:{line:170,column:2},end:{line:170,column:3}},loc:{start:{line:170,column:23},end:{line:190,column:3}},line:170}},branchMap:{"0":{loc:{start:{line:173,column:4},end:{line:189,column:5}},type:"switch",locations:[{start:{line:174,column:6},end:{line:176,column:14}},{start:{line:177,column:6},end:{line:180,column:14}},{start:{line:181,column:6},end:{line:183,column:14}},{start:{line:184,column:6},end:{line:188,column:14}}],line:173}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},b:{"0":[0,0,0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"4f5a64024a4342f5c8b89c7e3d27b990d15fa5d9"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_m2llyef2f=function(){return actualCoverage;};}return actualCoverage;}cov_m2llyef2f();const assert=(cov_m2llyef2f().s[0]++,require('bsert'));const EventEmitter=(cov_m2llyef2f().s[1]++,require('events'));const{format}=(cov_m2llyef2f().s[2]++,require('util'));const Network=(cov_m2llyef2f().s[3]++,require('../protocol/network'));const jobs=(cov_m2llyef2f().s[4]++,require('./jobs'));const Parser=(cov_m2llyef2f().s[5]++,require('./parser'));const Framer=(cov_m2llyef2f().s[6]++,require('./framer'));const packets=(cov_m2llyef2f().s[7]++,require('./packets'));const Parent=(cov_m2llyef2f().s[8]++,require('./parent'));/**
 * Master
 * Represents the master process.
 * @alias module:workers.Master
 * @extends EventEmitter
 */class Master extends EventEmitter{/**
   * Create the master process.
   * @constructor
   */constructor(){cov_m2llyef2f().f[0]++;cov_m2llyef2f().s[9]++;super();cov_m2llyef2f().s[10]++;this.parent=new Parent();cov_m2llyef2f().s[11]++;this.framer=new Framer();cov_m2llyef2f().s[12]++;this.parser=new Parser();cov_m2llyef2f().s[13]++;this.listening=false;cov_m2llyef2f().s[14]++;this.color=false;cov_m2llyef2f().s[15]++;this.init();}/**
   * Initialize master. Bind events.
   * @private
   */init(){cov_m2llyef2f().f[1]++;cov_m2llyef2f().s[16]++;this.parent.on('data',data=>{cov_m2llyef2f().f[2]++;cov_m2llyef2f().s[17]++;this.parser.feed(data);});cov_m2llyef2f().s[18]++;this.parent.on('error',err=>{cov_m2llyef2f().f[3]++;cov_m2llyef2f().s[19]++;this.emit('error',err);});cov_m2llyef2f().s[20]++;this.parent.on('exception',err=>{cov_m2llyef2f().f[4]++;cov_m2llyef2f().s[21]++;this.send(new packets.ErrorPacket(err));cov_m2llyef2f().s[22]++;setTimeout(()=>{cov_m2llyef2f().f[5]++;cov_m2llyef2f().s[23]++;return this.destroy();},1000);});cov_m2llyef2f().s[24]++;this.parser.on('error',err=>{cov_m2llyef2f().f[6]++;cov_m2llyef2f().s[25]++;this.emit('error',err);});cov_m2llyef2f().s[26]++;this.parser.on('packet',packet=>{cov_m2llyef2f().f[7]++;cov_m2llyef2f().s[27]++;this.emit('packet',packet);});}/**
   * Set environment.
   * @param {Object} env
   */setEnv(env){cov_m2llyef2f().f[8]++;cov_m2llyef2f().s[28]++;this.color=env.BCOIN_WORKER_ISTTY==='1';cov_m2llyef2f().s[29]++;this.set(env.BCOIN_WORKER_NETWORK);}/**
   * Set primary network.
   * @param {NetworkType|Network} network
   */set(network){cov_m2llyef2f().f[9]++;cov_m2llyef2f().s[30]++;return Network.set(network);}/**
   * Send data to worker.
   * @param {Buffer} data
   * @returns {Boolean}
   */write(data){cov_m2llyef2f().f[10]++;cov_m2llyef2f().s[31]++;return this.parent.write(data);}/**
   * Frame and send a packet.
   * @param {Packet} packet
   * @returns {Boolean}
   */send(packet){cov_m2llyef2f().f[11]++;cov_m2llyef2f().s[32]++;return this.write(this.framer.packet(packet));}/**
   * Emit an event on the worker side.
   * @param {String} event
   * @param {...Object} arg
   * @returns {Boolean}
   */sendEvent(...items){cov_m2llyef2f().f[12]++;cov_m2llyef2f().s[33]++;return this.send(new packets.EventPacket(items));}/**
   * Destroy the worker.
   */destroy(){cov_m2llyef2f().f[13]++;cov_m2llyef2f().s[34]++;return this.parent.destroy();}/**
   * Write a message to stdout in the master process.
   * @param {Object|String} obj
   * @param {...String} args
   */log(){cov_m2llyef2f().f[14]++;const text=(cov_m2llyef2f().s[35]++,format.apply(null,arguments));cov_m2llyef2f().s[36]++;this.send(new packets.LogPacket(text));}/**
   * Listen for messages from master process (only if worker).
   */listen(){cov_m2llyef2f().f[15]++;cov_m2llyef2f().s[37]++;assert(!this.listening,'Already listening.');cov_m2llyef2f().s[38]++;this.listening=true;cov_m2llyef2f().s[39]++;this.on('error',err=>{cov_m2llyef2f().f[16]++;cov_m2llyef2f().s[40]++;this.send(new packets.ErrorPacket(err));});cov_m2llyef2f().s[41]++;this.on('packet',packet=>{cov_m2llyef2f().f[17]++;cov_m2llyef2f().s[42]++;try{cov_m2llyef2f().s[43]++;this.handlePacket(packet);}catch(e){cov_m2llyef2f().s[44]++;this.emit('error',e);}});}/**
   * Handle packet.
   * @private
   * @param {Packet}
   */handlePacket(packet){cov_m2llyef2f().f[18]++;let result;cov_m2llyef2f().s[45]++;switch(packet.cmd){case packets.types.ENV:cov_m2llyef2f().b[0][0]++;cov_m2llyef2f().s[46]++;this.setEnv(packet.env);cov_m2llyef2f().s[47]++;break;case packets.types.EVENT:cov_m2llyef2f().b[0][1]++;cov_m2llyef2f().s[48]++;this.emit('event',packet.items);cov_m2llyef2f().s[49]++;this.emit(...packet.items);cov_m2llyef2f().s[50]++;break;case packets.types.ERROR:cov_m2llyef2f().b[0][2]++;cov_m2llyef2f().s[51]++;this.emit('error',packet.error);cov_m2llyef2f().s[52]++;break;default:cov_m2llyef2f().b[0][3]++;cov_m2llyef2f().s[53]++;result=jobs.execute(packet);cov_m2llyef2f().s[54]++;result.id=packet.id;cov_m2llyef2f().s[55]++;this.send(result);cov_m2llyef2f().s[56]++;break;}}}/*
 * Expose
 */cov_m2llyef2f().s[57]++;module.exports=Master;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
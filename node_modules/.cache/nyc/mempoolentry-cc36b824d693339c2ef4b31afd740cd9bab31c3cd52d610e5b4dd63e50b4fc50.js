/*!
 * mempoolentry.js - mempool entry object for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */'use strict';function cov_2l4ix4cihs(){var path="E:\\Projects\\Test\\bcoin\\lib\\mempool\\mempoolentry.js";var hash="042d7c7f5777a7148315ed363c1d4a4513456ced";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\Projects\\Test\\bcoin\\lib\\mempool\\mempoolentry.js",statementMap:{"0":{start:{line:9,column:12},end:{line:9,column:28}},"1":{start:{line:10,column:15},end:{line:10,column:44}},"2":{start:{line:11,column:13},end:{line:11,column:37}},"3":{start:{line:12,column:15},end:{line:12,column:42}},"4":{start:{line:13,column:11},end:{line:13,column:38}},"5":{start:{line:39,column:4},end:{line:39,column:19}},"6":{start:{line:40,column:4},end:{line:40,column:21}},"7":{start:{line:41,column:4},end:{line:41,column:18}},"8":{start:{line:42,column:4},end:{line:42,column:20}},"9":{start:{line:43,column:4},end:{line:43,column:22}},"10":{start:{line:44,column:4},end:{line:44,column:17}},"11":{start:{line:45,column:4},end:{line:45,column:22}},"12":{start:{line:46,column:4},end:{line:46,column:18}},"13":{start:{line:47,column:4},end:{line:47,column:19}},"14":{start:{line:48,column:4},end:{line:48,column:26}},"15":{start:{line:49,column:4},end:{line:49,column:30}},"16":{start:{line:50,column:4},end:{line:50,column:21}},"17":{start:{line:51,column:4},end:{line:51,column:22}},"18":{start:{line:53,column:4},end:{line:54,column:32}},"19":{start:{line:54,column:6},end:{line:54,column:32}},"20":{start:{line:64,column:4},end:{line:64,column:25}},"21":{start:{line:65,column:4},end:{line:65,column:33}},"22":{start:{line:66,column:4},end:{line:66,column:29}},"23":{start:{line:67,column:4},end:{line:67,column:33}},"24":{start:{line:68,column:4},end:{line:68,column:37}},"25":{start:{line:69,column:4},end:{line:69,column:27}},"26":{start:{line:70,column:4},end:{line:70,column:37}},"27":{start:{line:71,column:4},end:{line:71,column:29}},"28":{start:{line:72,column:4},end:{line:72,column:31}},"29":{start:{line:73,column:4},end:{line:73,column:37}},"30":{start:{line:74,column:4},end:{line:74,column:45}},"31":{start:{line:75,column:4},end:{line:75,column:35}},"32":{start:{line:76,column:4},end:{line:76,column:37}},"33":{start:{line:77,column:4},end:{line:77,column:16}},"34":{start:{line:87,column:4},end:{line:87,column:43}},"35":{start:{line:98,column:18},end:{line:98,column:52}},"36":{start:{line:99,column:18},end:{line:99,column:40}},"37":{start:{line:100,column:19},end:{line:100,column:48}},"38":{start:{line:101,column:17},end:{line:101,column:41}},"39":{start:{line:102,column:21},end:{line:102,column:55}},"40":{start:{line:103,column:16},end:{line:103,column:31}},"41":{start:{line:105,column:23},end:{line:105,column:28}},"42":{start:{line:106,column:19},end:{line:106,column:24}},"43":{start:{line:108,column:4},end:{line:114,column:5}},"44":{start:{line:109,column:6},end:{line:110,column:24}},"45":{start:{line:110,column:8},end:{line:110,column:24}},"46":{start:{line:112,column:6},end:{line:113,column:28}},"47":{start:{line:113,column:8},end:{line:113,column:28}},"48":{start:{line:116,column:4},end:{line:116,column:17}},"49":{start:{line:117,column:4},end:{line:117,column:25}},"50":{start:{line:118,column:4},end:{line:118,column:21}},"51":{start:{line:119,column:4},end:{line:119,column:25}},"52":{start:{line:120,column:4},end:{line:120,column:29}},"53":{start:{line:121,column:4},end:{line:121,column:19}},"54":{start:{line:122,column:4},end:{line:122,column:24}},"55":{start:{line:123,column:4},end:{line:123,column:27}},"56":{start:{line:124,column:4},end:{line:124,column:23}},"57":{start:{line:125,column:4},end:{line:125,column:29}},"58":{start:{line:126,column:4},end:{line:126,column:37}},"59":{start:{line:127,column:4},end:{line:127,column:23}},"60":{start:{line:128,column:4},end:{line:128,column:25}},"61":{start:{line:130,column:4},end:{line:130,column:16}},"62":{start:{line:141,column:4},end:{line:141,column:47}},"63":{start:{line:151,column:4},end:{line:151,column:29}},"64":{start:{line:160,column:4},end:{line:160,column:26}},"65":{start:{line:172,column:18},end:{line:172,column:38}},"66":{start:{line:173,column:21},end:{line:173,column:53}},"67":{start:{line:175,column:17},end:{line:175,column:53}},"68":{start:{line:177,column:4},end:{line:178,column:17}},"69":{start:{line:178,column:6},end:{line:178,column:17}},"70":{start:{line:180,column:4},end:{line:180,column:18}},"71":{start:{line:189,column:4},end:{line:189,column:20}},"72":{start:{line:198,column:4},end:{line:198,column:25}},"73":{start:{line:207,column:4},end:{line:207,column:47}},"74":{start:{line:216,column:4},end:{line:216,column:52}},"75":{start:{line:225,column:4},end:{line:225,column:55}},"76":{start:{line:239,column:15},end:{line:239,column:22}},"77":{start:{line:240,column:16},end:{line:240,column:17}},"78":{start:{line:242,column:4},end:{line:242,column:17}},"79":{start:{line:243,column:4},end:{line:243,column:16}},"80":{start:{line:244,column:4},end:{line:244,column:16}},"81":{start:{line:246,column:4},end:{line:246,column:17}},"82":{start:{line:247,column:4},end:{line:247,column:16}},"83":{start:{line:248,column:4},end:{line:248,column:16}},"84":{start:{line:249,column:4},end:{line:249,column:16}},"85":{start:{line:250,column:4},end:{line:250,column:16}},"86":{start:{line:251,column:4},end:{line:251,column:16}},"87":{start:{line:253,column:4},end:{line:253,column:16}},"88":{start:{line:255,column:4},end:{line:273,column:5}},"89":{start:{line:256,column:6},end:{line:256,column:19}},"90":{start:{line:257,column:6},end:{line:257,column:19}},"91":{start:{line:258,column:6},end:{line:258,column:18}},"92":{start:{line:260,column:6},end:{line:260,column:18}},"93":{start:{line:261,column:6},end:{line:261,column:18}},"94":{start:{line:262,column:6},end:{line:262,column:18}},"95":{start:{line:263,column:6},end:{line:263,column:45}},"96":{start:{line:265,column:6},end:{line:268,column:7}},"97":{start:{line:266,column:8},end:{line:267,column:22}},"98":{start:{line:267,column:10},end:{line:267,column:22}},"99":{start:{line:270,column:6},end:{line:270,column:18}},"100":{start:{line:271,column:6},end:{line:271,column:18}},"101":{start:{line:272,column:6},end:{line:272,column:47}},"102":{start:{line:275,column:4},end:{line:275,column:16}},"103":{start:{line:277,column:4},end:{line:288,column:5}},"104":{start:{line:278,column:6},end:{line:278,column:19}},"105":{start:{line:279,column:6},end:{line:279,column:18}},"106":{start:{line:280,column:6},end:{line:280,column:18}},"107":{start:{line:281,column:6},end:{line:281,column:18}},"108":{start:{line:282,column:6},end:{line:282,column:46}},"109":{start:{line:284,column:6},end:{line:287,column:7}},"110":{start:{line:285,column:8},end:{line:286,column:22}},"111":{start:{line:286,column:10},end:{line:286,column:22}},"112":{start:{line:290,column:4},end:{line:290,column:17}},"113":{start:{line:302,column:21},end:{line:302,column:45}},"114":{start:{line:303,column:4},end:{line:303,column:44}},"115":{start:{line:312,column:4},end:{line:312,column:34}},"116":{start:{line:321,column:15},end:{line:321,column:40}},"117":{start:{line:322,column:4},end:{line:322,column:35}},"118":{start:{line:323,column:4},end:{line:323,column:29}},"119":{start:{line:324,column:4},end:{line:324,column:27}},"120":{start:{line:325,column:4},end:{line:325,column:29}},"121":{start:{line:326,column:4},end:{line:326,column:34}},"122":{start:{line:327,column:4},end:{line:327,column:26}},"123":{start:{line:328,column:4},end:{line:328,column:27}},"124":{start:{line:329,column:4},end:{line:329,column:28}},"125":{start:{line:330,column:4},end:{line:330,column:38}},"126":{start:{line:331,column:4},end:{line:331,column:42}},"127":{start:{line:332,column:4},end:{line:332,column:23}},"128":{start:{line:343,column:15},end:{line:343,column:29}},"129":{start:{line:344,column:4},end:{line:344,column:32}},"130":{start:{line:345,column:4},end:{line:345,column:31}},"131":{start:{line:346,column:4},end:{line:346,column:29}},"132":{start:{line:347,column:4},end:{line:347,column:31}},"133":{start:{line:348,column:4},end:{line:348,column:36}},"134":{start:{line:349,column:4},end:{line:349,column:28}},"135":{start:{line:350,column:4},end:{line:350,column:29}},"136":{start:{line:351,column:4},end:{line:351,column:29}},"137":{start:{line:352,column:4},end:{line:352,column:30}},"138":{start:{line:353,column:4},end:{line:353,column:38}},"139":{start:{line:354,column:4},end:{line:354,column:42}},"140":{start:{line:355,column:4},end:{line:355,column:28}},"141":{start:{line:356,column:4},end:{line:356,column:30}},"142":{start:{line:357,column:4},end:{line:357,column:16}},"143":{start:{line:367,column:4},end:{line:367,column:36}},"144":{start:{line:375,column:0},end:{line:375,column:30}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:38,column:2},end:{line:38,column:3}},loc:{start:{line:38,column:23},end:{line:55,column:3}},line:38},"1":{name:"(anonymous_1)",decl:{start:{line:63,column:2},end:{line:63,column:3}},loc:{start:{line:63,column:23},end:{line:78,column:3}},line:63},"2":{name:"(anonymous_2)",decl:{start:{line:86,column:2},end:{line:86,column:3}},loc:{start:{line:86,column:30},end:{line:88,column:3}},line:86},"3":{name:"(anonymous_3)",decl:{start:{line:97,column:2},end:{line:97,column:3}},loc:{start:{line:97,column:27},end:{line:131,column:3}},line:97},"4":{name:"(anonymous_4)",decl:{start:{line:140,column:2},end:{line:140,column:3}},loc:{start:{line:140,column:34},end:{line:142,column:3}},line:140},"5":{name:"(anonymous_5)",decl:{start:{line:150,column:2},end:{line:150,column:3}},loc:{start:{line:150,column:12},end:{line:152,column:3}},line:150},"6":{name:"(anonymous_6)",decl:{start:{line:159,column:2},end:{line:159,column:3}},loc:{start:{line:159,column:9},end:{line:161,column:3}},line:159},"7":{name:"(anonymous_7)",decl:{start:{line:171,column:2},end:{line:171,column:3}},loc:{start:{line:171,column:22},end:{line:181,column:3}},line:171},"8":{name:"(anonymous_8)",decl:{start:{line:188,column:2},end:{line:188,column:3}},loc:{start:{line:188,column:11},end:{line:190,column:3}},line:188},"9":{name:"(anonymous_9)",decl:{start:{line:197,column:2},end:{line:197,column:3}},loc:{start:{line:197,column:16},end:{line:199,column:3}},line:197},"10":{name:"(anonymous_10)",decl:{start:{line:206,column:2},end:{line:206,column:3}},loc:{start:{line:206,column:12},end:{line:208,column:3}},line:206},"11":{name:"(anonymous_11)",decl:{start:{line:215,column:2},end:{line:215,column:3}},loc:{start:{line:215,column:17},end:{line:217,column:3}},line:215},"12":{name:"(anonymous_12)",decl:{start:{line:224,column:2},end:{line:224,column:3}},loc:{start:{line:224,column:16},end:{line:226,column:3}},line:224},"13":{name:"(anonymous_13)",decl:{start:{line:238,column:2},end:{line:238,column:3}},loc:{start:{line:238,column:13},end:{line:291,column:3}},line:238},"14":{name:"(anonymous_14)",decl:{start:{line:301,column:2},end:{line:301,column:3}},loc:{start:{line:301,column:17},end:{line:304,column:3}},line:301},"15":{name:"(anonymous_15)",decl:{start:{line:311,column:2},end:{line:311,column:3}},loc:{start:{line:311,column:12},end:{line:313,column:3}},line:311},"16":{name:"(anonymous_16)",decl:{start:{line:320,column:2},end:{line:320,column:3}},loc:{start:{line:320,column:10},end:{line:333,column:3}},line:320},"17":{name:"(anonymous_17)",decl:{start:{line:342,column:2},end:{line:342,column:3}},loc:{start:{line:342,column:16},end:{line:358,column:3}},line:342},"18":{name:"(anonymous_18)",decl:{start:{line:366,column:2},end:{line:366,column:3}},loc:{start:{line:366,column:23},end:{line:368,column:3}},line:366}},branchMap:{"0":{loc:{start:{line:53,column:4},end:{line:54,column:32}},type:"if",locations:[{start:{line:53,column:4},end:{line:54,column:32}},{start:{line:53,column:4},end:{line:54,column:32}}],line:53},"1":{loc:{start:{line:109,column:6},end:{line:110,column:24}},type:"if",locations:[{start:{line:109,column:6},end:{line:110,column:24}},{start:{line:109,column:6},end:{line:110,column:24}}],line:109},"2":{loc:{start:{line:112,column:6},end:{line:113,column:28}},type:"if",locations:[{start:{line:112,column:6},end:{line:113,column:28}},{start:{line:112,column:6},end:{line:113,column:28}}],line:112},"3":{loc:{start:{line:177,column:4},end:{line:178,column:17}},type:"if",locations:[{start:{line:177,column:4},end:{line:178,column:17}},{start:{line:177,column:4},end:{line:178,column:17}}],line:177},"4":{loc:{start:{line:266,column:8},end:{line:267,column:22}},type:"if",locations:[{start:{line:266,column:8},end:{line:267,column:22}},{start:{line:266,column:8},end:{line:267,column:22}}],line:266},"5":{loc:{start:{line:285,column:8},end:{line:286,column:22}},type:"if",locations:[{start:{line:285,column:8},end:{line:286,column:22}},{start:{line:285,column:8},end:{line:286,column:22}}],line:285},"6":{loc:{start:{line:330,column:15},end:{line:330,column:36}},type:"cond-expr",locations:[{start:{line:330,column:31},end:{line:330,column:32}},{start:{line:330,column:35},end:{line:330,column:36}}],line:330},"7":{loc:{start:{line:331,column:15},end:{line:331,column:40}},type:"cond-expr",locations:[{start:{line:331,column:35},end:{line:331,column:36}},{start:{line:331,column:39},end:{line:331,column:40}}],line:331}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"042d7c7f5777a7148315ed363c1d4a4513456ced"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2l4ix4cihs=function(){return actualCoverage;};}return actualCoverage;}cov_2l4ix4cihs();const bio=(cov_2l4ix4cihs().s[0]++,require('bufio'));const policy=(cov_2l4ix4cihs().s[1]++,require('../protocol/policy'));const util=(cov_2l4ix4cihs().s[2]++,require('../utils/util'));const Script=(cov_2l4ix4cihs().s[3]++,require('../script/script'));const TX=(cov_2l4ix4cihs().s[4]++,require('../primitives/tx'));/**
 * Mempool Entry
 * Represents a mempool entry.
 * @alias module:mempool.MempoolEntry
 * @property {TX} tx
 * @property {Number} height
 * @property {Number} priority
 * @property {Number} time
 * @property {Amount} value
 */class MempoolEntry{/**
   * Create a mempool entry.
   * @constructor
   * @param {Object} options
   * @param {TX} options.tx - Transaction in mempool.
   * @param {Number} options.height - Entry height.
   * @param {Number} options.priority - Entry priority.
   * @param {Number} options.time - Entry time.
   * @param {Amount} options.value - Value of on-chain coins.
   */constructor(options){cov_2l4ix4cihs().f[0]++;cov_2l4ix4cihs().s[5]++;this.tx=null;cov_2l4ix4cihs().s[6]++;this.height=-1;cov_2l4ix4cihs().s[7]++;this.size=0;cov_2l4ix4cihs().s[8]++;this.sigops=0;cov_2l4ix4cihs().s[9]++;this.priority=0;cov_2l4ix4cihs().s[10]++;this.fee=0;cov_2l4ix4cihs().s[11]++;this.deltaFee=0;cov_2l4ix4cihs().s[12]++;this.time=0;cov_2l4ix4cihs().s[13]++;this.value=0;cov_2l4ix4cihs().s[14]++;this.coinbase=false;cov_2l4ix4cihs().s[15]++;this.dependencies=false;cov_2l4ix4cihs().s[16]++;this.descFee=0;cov_2l4ix4cihs().s[17]++;this.descSize=0;cov_2l4ix4cihs().s[18]++;if(options){cov_2l4ix4cihs().b[0][0]++;cov_2l4ix4cihs().s[19]++;this.fromOptions(options);}else{cov_2l4ix4cihs().b[0][1]++;}}/**
   * Inject properties from options object.
   * @private
   * @param {Object} options
   */fromOptions(options){cov_2l4ix4cihs().f[1]++;cov_2l4ix4cihs().s[20]++;this.tx=options.tx;cov_2l4ix4cihs().s[21]++;this.height=options.height;cov_2l4ix4cihs().s[22]++;this.size=options.size;cov_2l4ix4cihs().s[23]++;this.sigops=options.sigops;cov_2l4ix4cihs().s[24]++;this.priority=options.priority;cov_2l4ix4cihs().s[25]++;this.fee=options.fee;cov_2l4ix4cihs().s[26]++;this.deltaFee=options.deltaFee;cov_2l4ix4cihs().s[27]++;this.time=options.time;cov_2l4ix4cihs().s[28]++;this.value=options.value;cov_2l4ix4cihs().s[29]++;this.coinbase=options.coinbase;cov_2l4ix4cihs().s[30]++;this.dependencies=options.dependencies;cov_2l4ix4cihs().s[31]++;this.descFee=options.descFee;cov_2l4ix4cihs().s[32]++;this.descSize=options.descSize;cov_2l4ix4cihs().s[33]++;return this;}/**
   * Instantiate mempool entry from options.
   * @param {Object} options
   * @returns {MempoolEntry}
   */static fromOptions(options){cov_2l4ix4cihs().f[2]++;cov_2l4ix4cihs().s[34]++;return new this().fromOptions(options);}/**
   * Inject properties from transaction.
   * @private
   * @param {TX} tx
   * @param {Number} height
   */fromTX(tx,view,height){cov_2l4ix4cihs().f[3]++;const flags=(cov_2l4ix4cihs().s[35]++,Script.flags.STANDARD_VERIFY_FLAGS);const value=(cov_2l4ix4cihs().s[36]++,tx.getChainValue(view));const sigops=(cov_2l4ix4cihs().s[37]++,tx.getSigopsCost(view,flags));const size=(cov_2l4ix4cihs().s[38]++,tx.getSigopsSize(sigops));const priority=(cov_2l4ix4cihs().s[39]++,tx.getPriority(view,height,size));const fee=(cov_2l4ix4cihs().s[40]++,tx.getFee(view));let dependencies=(cov_2l4ix4cihs().s[41]++,false);let coinbase=(cov_2l4ix4cihs().s[42]++,false);cov_2l4ix4cihs().s[43]++;for(const{prevout}of tx.inputs){cov_2l4ix4cihs().s[44]++;if(view.isCoinbase(prevout)){cov_2l4ix4cihs().b[1][0]++;cov_2l4ix4cihs().s[45]++;coinbase=true;}else{cov_2l4ix4cihs().b[1][1]++;}cov_2l4ix4cihs().s[46]++;if(view.getHeight(prevout)===-1){cov_2l4ix4cihs().b[2][0]++;cov_2l4ix4cihs().s[47]++;dependencies=true;}else{cov_2l4ix4cihs().b[2][1]++;}}cov_2l4ix4cihs().s[48]++;this.tx=tx;cov_2l4ix4cihs().s[49]++;this.height=height;cov_2l4ix4cihs().s[50]++;this.size=size;cov_2l4ix4cihs().s[51]++;this.sigops=sigops;cov_2l4ix4cihs().s[52]++;this.priority=priority;cov_2l4ix4cihs().s[53]++;this.fee=fee;cov_2l4ix4cihs().s[54]++;this.deltaFee=fee;cov_2l4ix4cihs().s[55]++;this.time=util.now();cov_2l4ix4cihs().s[56]++;this.value=value;cov_2l4ix4cihs().s[57]++;this.coinbase=coinbase;cov_2l4ix4cihs().s[58]++;this.dependencies=dependencies;cov_2l4ix4cihs().s[59]++;this.descFee=fee;cov_2l4ix4cihs().s[60]++;this.descSize=size;cov_2l4ix4cihs().s[61]++;return this;}/**
   * Create a mempool entry from a TX.
   * @param {TX} tx
   * @param {Number} height - Entry height.
   * @returns {MempoolEntry}
   */static fromTX(tx,view,height){cov_2l4ix4cihs().f[4]++;cov_2l4ix4cihs().s[62]++;return new this().fromTX(tx,view,height);}/**
   * Calculate transaction hash.
   * @param {String?} enc
   * @returns {Hash}
   */hash(enc){cov_2l4ix4cihs().f[5]++;cov_2l4ix4cihs().s[63]++;return this.tx.hash(enc);}/**
   * Calculate reverse transaction hash.
   * @returns {Hash}
   */txid(){cov_2l4ix4cihs().f[6]++;cov_2l4ix4cihs().s[64]++;return this.tx.txid();}/**
   * Calculate priority, taking into account
   * the entry height delta, modified size,
   * and chain value.
   * @param {Number} height
   * @returns {Number} Priority.
   */getPriority(height){cov_2l4ix4cihs().f[7]++;const delta=(cov_2l4ix4cihs().s[65]++,height-this.height);const priority=(cov_2l4ix4cihs().s[66]++,delta*this.value/this.size);let result=(cov_2l4ix4cihs().s[67]++,this.priority+Math.floor(priority));cov_2l4ix4cihs().s[68]++;if(result<0){cov_2l4ix4cihs().b[3][0]++;cov_2l4ix4cihs().s[69]++;result=0;}else{cov_2l4ix4cihs().b[3][1]++;}cov_2l4ix4cihs().s[70]++;return result;}/**
   * Get fee.
   * @returns {Amount}
   */getFee(){cov_2l4ix4cihs().f[8]++;cov_2l4ix4cihs().s[71]++;return this.fee;}/**
   * Get delta fee.
   * @returns {Amount}
   */getDeltaFee(){cov_2l4ix4cihs().f[9]++;cov_2l4ix4cihs().s[72]++;return this.deltaFee;}/**
   * Calculate fee rate.
   * @returns {Rate}
   */getRate(){cov_2l4ix4cihs().f[10]++;cov_2l4ix4cihs().s[73]++;return policy.getRate(this.size,this.fee);}/**
   * Calculate delta fee rate.
   * @returns {Rate}
   */getDeltaRate(){cov_2l4ix4cihs().f[11]++;cov_2l4ix4cihs().s[74]++;return policy.getRate(this.size,this.deltaFee);}/**
   * Calculate fee cumulative descendant rate.
   * @returns {Rate}
   */getDescRate(){cov_2l4ix4cihs().f[12]++;cov_2l4ix4cihs().s[75]++;return policy.getRate(this.descSize,this.descFee);}/**
   * Calculate the memory usage of a transaction.
   * Note that this only calculates the JS heap
   * size. Sizes of buffers are ignored (the v8
   * heap is what we care most about). All numbers
   * are based on the output of v8 heap snapshots
   * of TX objects.
   * @returns {Number} Usage in bytes.
   */memUsage(){cov_2l4ix4cihs().f[13]++;const tx=(cov_2l4ix4cihs().s[76]++,this.tx);let total=(cov_2l4ix4cihs().s[77]++,0);cov_2l4ix4cihs().s[78]++;total+=176;// mempool entry
cov_2l4ix4cihs().s[79]++;total+=48;// coinbase
cov_2l4ix4cihs().s[80]++;total+=48;// dependencies
cov_2l4ix4cihs().s[81]++;total+=208;// tx
cov_2l4ix4cihs().s[82]++;total+=80;// _hash
cov_2l4ix4cihs().s[83]++;total+=88;// _hhash
cov_2l4ix4cihs().s[84]++;total+=80;// _raw
cov_2l4ix4cihs().s[85]++;total+=80;// _whash
cov_2l4ix4cihs().s[86]++;total+=48;// mutable
cov_2l4ix4cihs().s[87]++;total+=32;// input array
cov_2l4ix4cihs().s[88]++;for(const input of tx.inputs){cov_2l4ix4cihs().s[89]++;total+=120;// input
cov_2l4ix4cihs().s[90]++;total+=104;// prevout
cov_2l4ix4cihs().s[91]++;total+=88;// prevout hash
cov_2l4ix4cihs().s[92]++;total+=40;// script
cov_2l4ix4cihs().s[93]++;total+=80;// script raw buffer
cov_2l4ix4cihs().s[94]++;total+=32;// script code array
cov_2l4ix4cihs().s[95]++;total+=input.script.code.length*40;// opcodes
cov_2l4ix4cihs().s[96]++;for(const op of input.script.code){cov_2l4ix4cihs().s[97]++;if(op.data){cov_2l4ix4cihs().b[4][0]++;cov_2l4ix4cihs().s[98]++;total+=80;}else{cov_2l4ix4cihs().b[4][1]++;}// op buffers
}cov_2l4ix4cihs().s[99]++;total+=96;// witness
cov_2l4ix4cihs().s[100]++;total+=32;// witness items
cov_2l4ix4cihs().s[101]++;total+=input.witness.items.length*80;// witness buffers
}cov_2l4ix4cihs().s[102]++;total+=32;// output array
cov_2l4ix4cihs().s[103]++;for(const output of tx.outputs){cov_2l4ix4cihs().s[104]++;total+=104;// output
cov_2l4ix4cihs().s[105]++;total+=40;// script
cov_2l4ix4cihs().s[106]++;total+=80;// script raw buffer
cov_2l4ix4cihs().s[107]++;total+=32;// script code array
cov_2l4ix4cihs().s[108]++;total+=output.script.code.length*40;// opcodes
cov_2l4ix4cihs().s[109]++;for(const op of output.script.code){cov_2l4ix4cihs().s[110]++;if(op.data){cov_2l4ix4cihs().b[5][0]++;cov_2l4ix4cihs().s[111]++;total+=80;}else{cov_2l4ix4cihs().b[5][1]++;}// op buffers
}}cov_2l4ix4cihs().s[112]++;return total;}/**
   * Test whether the entry is free with
   * the current priority (calculated by
   * current height).
   * @param {Number} height
   * @returns {Boolean}
   */isFree(height){cov_2l4ix4cihs().f[14]++;const priority=(cov_2l4ix4cihs().s[113]++,this.getPriority(height));cov_2l4ix4cihs().s[114]++;return priority>policy.FREE_THRESHOLD;}/**
   * Get entry serialization size.
   * @returns {Number}
   */getSize(){cov_2l4ix4cihs().f[15]++;cov_2l4ix4cihs().s[115]++;return this.tx.getSize()+42;}/**
   * Serialize entry to a buffer.
   * @returns {Buffer}
   */toRaw(){cov_2l4ix4cihs().f[16]++;const bw=(cov_2l4ix4cihs().s[116]++,bio.write(this.getSize()));cov_2l4ix4cihs().s[117]++;bw.writeBytes(this.tx.toRaw());cov_2l4ix4cihs().s[118]++;bw.writeU32(this.height);cov_2l4ix4cihs().s[119]++;bw.writeU32(this.size);cov_2l4ix4cihs().s[120]++;bw.writeU32(this.sigops);cov_2l4ix4cihs().s[121]++;bw.writeDouble(this.priority);cov_2l4ix4cihs().s[122]++;bw.writeU64(this.fee);cov_2l4ix4cihs().s[123]++;bw.writeU32(this.time);cov_2l4ix4cihs().s[124]++;bw.writeU64(this.value);cov_2l4ix4cihs().s[125]++;bw.writeU8(this.coinbase?(cov_2l4ix4cihs().b[6][0]++,1):(cov_2l4ix4cihs().b[6][1]++,0));cov_2l4ix4cihs().s[126]++;bw.writeU8(this.dependencies?(cov_2l4ix4cihs().b[7][0]++,1):(cov_2l4ix4cihs().b[7][1]++,0));cov_2l4ix4cihs().s[127]++;return bw.render();}/**
   * Inject properties from serialized data.
   * @private
   * @param {Buffer} data
   * @returns {MempoolEntry}
   */fromRaw(data){cov_2l4ix4cihs().f[17]++;const br=(cov_2l4ix4cihs().s[128]++,bio.read(data));cov_2l4ix4cihs().s[129]++;this.tx=TX.fromReader(br);cov_2l4ix4cihs().s[130]++;this.height=br.readU32();cov_2l4ix4cihs().s[131]++;this.size=br.readU32();cov_2l4ix4cihs().s[132]++;this.sigops=br.readU32();cov_2l4ix4cihs().s[133]++;this.priority=br.readDouble();cov_2l4ix4cihs().s[134]++;this.fee=br.readU64();cov_2l4ix4cihs().s[135]++;this.deltaFee=this.fee;cov_2l4ix4cihs().s[136]++;this.time=br.readU32();cov_2l4ix4cihs().s[137]++;this.value=br.readU64();cov_2l4ix4cihs().s[138]++;this.coinbase=br.readU8()===1;cov_2l4ix4cihs().s[139]++;this.dependencies=br.readU8()===1;cov_2l4ix4cihs().s[140]++;this.descFee=this.fee;cov_2l4ix4cihs().s[141]++;this.descSize=this.size;cov_2l4ix4cihs().s[142]++;return this;}/**
   * Instantiate entry from serialized data.
   * @param {Buffer} data
   * @returns {MempoolEntry}
   */static fromRaw(data){cov_2l4ix4cihs().f[18]++;cov_2l4ix4cihs().s[143]++;return new this().fromRaw(data);}}/*
 * Expose
 */cov_2l4ix4cihs().s[144]++;module.exports=MempoolEntry;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
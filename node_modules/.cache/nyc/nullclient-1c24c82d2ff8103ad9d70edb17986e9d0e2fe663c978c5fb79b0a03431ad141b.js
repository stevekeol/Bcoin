/*!
 * nullclient.js - node client for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */'use strict';function cov_z9z13bgms(){var path="E:\\Projects\\Test\\bcoin\\lib\\wallet\\nullclient.js";var hash="a82d40ce320fe0ad906a00a1dc5a5f725779ace5";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\Projects\\Test\\bcoin\\lib\\wallet\\nullclient.js",statementMap:{"0":{start:{line:9,column:15},end:{line:9,column:31}},"1":{start:{line:10,column:21},end:{line:10,column:38}},"2":{start:{line:25,column:4},end:{line:25,column:12}},"3":{start:{line:27,column:4},end:{line:27,column:19}},"4":{start:{line:28,column:4},end:{line:28,column:31}},"5":{start:{line:29,column:4},end:{line:29,column:24}},"6":{start:{line:38,column:4},end:{line:38,column:56}},"7":{start:{line:39,column:4},end:{line:39,column:23}},"8":{start:{line:40,column:4},end:{line:40,column:45}},"9":{start:{line:40,column:23},end:{line:40,column:43}},"10":{start:{line:49,column:4},end:{line:49,column:51}},"11":{start:{line:50,column:4},end:{line:50,column:24}},"12":{start:{line:51,column:4},end:{line:51,column:48}},"13":{start:{line:51,column:23},end:{line:51,column:46}},"14":{start:{line:61,column:4},end:{line:61,column:34}},"15":{start:{line:71,column:4},end:{line:71,column:34}},"16":{start:{line:80,column:33},end:{line:80,column:53}},"17":{start:{line:81,column:4},end:{line:81,column:34}},"18":{start:{line:91,column:4},end:{line:91,column:40}},"19":{start:{line:101,column:4},end:{line:101,column:30}},"20":{start:{line:111,column:4},end:{line:111,column:40}},"21":{start:{line:121,column:4},end:{line:121,column:38}},"22":{start:{line:130,column:4},end:{line:130,column:34}},"23":{start:{line:140,column:4},end:{line:140,column:40}},"24":{start:{line:151,column:4},end:{line:151,column:39}},"25":{start:{line:171,column:0},end:{line:171,column:28}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:24,column:2},end:{line:24,column:3}},loc:{start:{line:24,column:19},end:{line:30,column:3}},line:24},"1":{name:"(anonymous_1)",decl:{start:{line:37,column:2},end:{line:37,column:3}},loc:{start:{line:37,column:22},end:{line:41,column:3}},line:37},"2":{name:"(anonymous_2)",decl:{start:{line:40,column:17},end:{line:40,column:18}},loc:{start:{line:40,column:23},end:{line:40,column:43}},line:40},"3":{name:"(anonymous_3)",decl:{start:{line:48,column:2},end:{line:48,column:3}},loc:{start:{line:48,column:16},end:{line:52,column:3}},line:48},"4":{name:"(anonymous_4)",decl:{start:{line:51,column:17},end:{line:51,column:18}},loc:{start:{line:51,column:23},end:{line:51,column:46}},line:51},"5":{name:"(anonymous_5)",decl:{start:{line:60,column:2},end:{line:60,column:3}},loc:{start:{line:60,column:22},end:{line:62,column:3}},line:60},"6":{name:"(anonymous_6)",decl:{start:{line:70,column:2},end:{line:70,column:3}},loc:{start:{line:70,column:22},end:{line:72,column:3}},line:70},"7":{name:"(anonymous_7)",decl:{start:{line:79,column:2},end:{line:79,column:3}},loc:{start:{line:79,column:17},end:{line:82,column:3}},line:79},"8":{name:"(anonymous_8)",decl:{start:{line:90,column:2},end:{line:90,column:3}},loc:{start:{line:90,column:23},end:{line:92,column:3}},line:90},"9":{name:"(anonymous_9)",decl:{start:{line:100,column:2},end:{line:100,column:3}},loc:{start:{line:100,column:17},end:{line:102,column:3}},line:100},"10":{name:"(anonymous_10)",decl:{start:{line:110,column:2},end:{line:110,column:3}},loc:{start:{line:110,column:26},end:{line:112,column:3}},line:110},"11":{name:"(anonymous_11)",decl:{start:{line:120,column:2},end:{line:120,column:3}},loc:{start:{line:120,column:24},end:{line:122,column:3}},line:120},"12":{name:"(anonymous_12)",decl:{start:{line:129,column:2},end:{line:129,column:3}},loc:{start:{line:129,column:22},end:{line:131,column:3}},line:129},"13":{name:"(anonymous_13)",decl:{start:{line:139,column:2},end:{line:139,column:3}},loc:{start:{line:139,column:28},end:{line:141,column:3}},line:139},"14":{name:"(anonymous_14)",decl:{start:{line:150,column:2},end:{line:150,column:3}},loc:{start:{line:150,column:40},end:{line:152,column:3}},line:150},"15":{name:"(anonymous_15)",decl:{start:{line:162,column:2},end:{line:162,column:3}},loc:{start:{line:162,column:22},end:{line:164,column:3}},line:162}},branchMap:{"0":{loc:{start:{line:150,column:18},end:{line:150,column:28}},type:"default-arg",locations:[{start:{line:150,column:26},end:{line:150,column:28}}],line:150},"1":{loc:{start:{line:150,column:30},end:{line:150,column:38}},type:"default-arg",locations:[{start:{line:150,column:36},end:{line:150,column:38}}],line:150}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},b:{"0":[0],"1":[0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"a82d40ce320fe0ad906a00a1dc5a5f725779ace5"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_z9z13bgms=function(){return actualCoverage;};}return actualCoverage;}cov_z9z13bgms();const assert=(cov_z9z13bgms().s[0]++,require('bsert'));const EventEmitter=(cov_z9z13bgms().s[1]++,require('events'));/**
 * Null Client
 * Sort of a fake local client for separation of concerns.
 * @alias module:node.NullClient
 */class NullClient extends EventEmitter{/**
   * Create a client.
   * @constructor
   */constructor(wdb){cov_z9z13bgms().f[0]++;cov_z9z13bgms().s[2]++;super();cov_z9z13bgms().s[3]++;this.wdb=wdb;cov_z9z13bgms().s[4]++;this.network=wdb.network;cov_z9z13bgms().s[5]++;this.opened=false;}/**
   * Open the client.
   * @returns {Promise}
   */async open(options){cov_z9z13bgms().f[1]++;cov_z9z13bgms().s[6]++;assert(!this.opened,'NullClient is already open.');cov_z9z13bgms().s[7]++;this.opened=true;cov_z9z13bgms().s[8]++;setImmediate(()=>{cov_z9z13bgms().f[2]++;cov_z9z13bgms().s[9]++;return this.emit('connect');});}/**
   * Close the client.
   * @returns {Promise}
   */async close(){cov_z9z13bgms().f[3]++;cov_z9z13bgms().s[10]++;assert(this.opened,'NullClient is not open.');cov_z9z13bgms().s[11]++;this.opened=false;cov_z9z13bgms().s[12]++;setImmediate(()=>{cov_z9z13bgms().f[4]++;cov_z9z13bgms().s[13]++;return this.emit('disconnect');});}/**
   * Add a listener.
   * @param {String} type
   * @param {Function} handler
   */bind(type,handler){cov_z9z13bgms().f[5]++;cov_z9z13bgms().s[14]++;return this.on(type,handler);}/**
   * Add a listener.
   * @param {String} type
   * @param {Function} handler
   */hook(type,handler){cov_z9z13bgms().f[6]++;cov_z9z13bgms().s[15]++;return this.on(type,handler);}/**
   * Get chain tip.
   * @returns {Promise}
   */async getTip(){cov_z9z13bgms().f[7]++;const{hash,height,time}=(cov_z9z13bgms().s[16]++,this.network.genesis);cov_z9z13bgms().s[17]++;return{hash,height,time};}/**
   * Get chain entry.
   * @param {Hash} hash
   * @returns {Promise}
   */async getEntry(hash){cov_z9z13bgms().f[8]++;cov_z9z13bgms().s[18]++;return{hash,height:0,time:0};}/**
   * Send a transaction. Do not wait for promise.
   * @param {TX} tx
   * @returns {Promise}
   */async send(tx){cov_z9z13bgms().f[9]++;cov_z9z13bgms().s[19]++;this.wdb.emit('send',tx);}/**
   * Set bloom filter.
   * @param {Bloom} filter
   * @returns {Promise}
   */async setFilter(filter){cov_z9z13bgms().f[10]++;cov_z9z13bgms().s[20]++;this.wdb.emit('set filter',filter);}/**
   * Add data to filter.
   * @param {Buffer} data
   * @returns {Promise}
   */async addFilter(data){cov_z9z13bgms().f[11]++;cov_z9z13bgms().s[21]++;this.wdb.emit('add filter',data);}/**
   * Reset filter.
   * @returns {Promise}
   */async resetFilter(){cov_z9z13bgms().f[12]++;cov_z9z13bgms().s[22]++;this.wdb.emit('reset filter');}/**
   * Esimate smart fee.
   * @param {Number?} blocks
   * @returns {Promise}
   */async estimateFee(blocks){cov_z9z13bgms().f[13]++;cov_z9z13bgms().s[23]++;return{rate:this.network.feeRate};}/**
   * Get hash range.
   * @param {Number} start
   * @param {Number} end
   * @returns {Promise}
   */async getHashes(start=(cov_z9z13bgms().b[0][0]++,-1),end=(cov_z9z13bgms().b[1][0]++,-1)){cov_z9z13bgms().f[14]++;cov_z9z13bgms().s[24]++;return[this.network.genesis.hash];}/**
   * Rescan for any missed transactions.
   * @param {Number|Hash} start - Start block.
   * @param {Bloom} filter
   * @param {Function} iter - Iterator.
   * @returns {Promise}
   */async rescan(start){cov_z9z13bgms().f[15]++;;}}/*
 * Expose
 */cov_z9z13bgms().s[25]++;module.exports=NullClient;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
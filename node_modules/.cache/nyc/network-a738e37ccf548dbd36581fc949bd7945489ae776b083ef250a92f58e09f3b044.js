/*!
 * network.js - network object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */'use strict';function cov_14131ejbej(){var path="E:\\Projects\\Test\\bcoin\\lib\\protocol\\network.js";var hash="a7eaa70fc6474697607abc5da84c36419b4f4402";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\Projects\\Test\\bcoin\\lib\\protocol\\network.js",statementMap:{"0":{start:{line:10,column:15},end:{line:10,column:31}},"1":{start:{line:11,column:15},end:{line:11,column:41}},"2":{start:{line:12,column:17},end:{line:12,column:38}},"3":{start:{line:13,column:18},end:{line:13,column:40}},"4":{start:{line:14,column:17},end:{line:14,column:38}},"5":{start:{line:15,column:24},end:{line:15,column:43}},"6":{start:{line:31,column:4},end:{line:31,column:66}},"7":{start:{line:33,column:4},end:{line:33,column:29}},"8":{start:{line:34,column:4},end:{line:34,column:31}},"9":{start:{line:35,column:4},end:{line:35,column:31}},"10":{start:{line:36,column:4},end:{line:36,column:29}},"11":{start:{line:37,column:4},end:{line:37,column:47}},"12":{start:{line:38,column:4},end:{line:38,column:49}},"13":{start:{line:39,column:4},end:{line:39,column:26}},"14":{start:{line:40,column:4},end:{line:40,column:51}},"15":{start:{line:41,column:4},end:{line:41,column:35}},"16":{start:{line:42,column:4},end:{line:42,column:45}},"17":{start:{line:43,column:4},end:{line:43,column:27}},"18":{start:{line:44,column:4},end:{line:44,column:31}},"19":{start:{line:45,column:4},end:{line:45,column:31}},"20":{start:{line:46,column:4},end:{line:46,column:59}},"21":{start:{line:47,column:4},end:{line:47,column:43}},"22":{start:{line:48,column:4},end:{line:48,column:43}},"23":{start:{line:49,column:4},end:{line:49,column:35}},"24":{start:{line:50,column:4},end:{line:50,column:51}},"25":{start:{line:51,column:4},end:{line:51,column:39}},"26":{start:{line:52,column:4},end:{line:52,column:47}},"27":{start:{line:53,column:4},end:{line:53,column:51}},"28":{start:{line:54,column:4},end:{line:54,column:35}},"29":{start:{line:55,column:4},end:{line:55,column:41}},"30":{start:{line:56,column:4},end:{line:56,column:37}},"31":{start:{line:57,column:4},end:{line:57,column:35}},"32":{start:{line:58,column:4},end:{line:58,column:41}},"33":{start:{line:59,column:4},end:{line:59,column:43}},"34":{start:{line:60,column:4},end:{line:60,column:49}},"35":{start:{line:61,column:4},end:{line:61,column:31}},"36":{start:{line:63,column:4},end:{line:63,column:16}},"37":{start:{line:73,column:15},end:{line:73,column:16}},"38":{start:{line:75,column:4},end:{line:76,column:34}},"39":{start:{line:76,column:6},end:{line:76,column:34}},"40":{start:{line:78,column:4},end:{line:78,column:39}},"41":{start:{line:80,column:4},end:{line:80,column:35}},"42":{start:{line:82,column:4},end:{line:87,column:5}},"43":{start:{line:83,column:19},end:{line:83,column:42}},"44":{start:{line:84,column:21},end:{line:84,column:32}},"45":{start:{line:86,column:6},end:{line:86,column:46}},"46":{start:{line:89,column:4},end:{line:89,column:35}},"47":{start:{line:99,column:18},end:{line:99,column:58}},"48":{start:{line:101,column:4},end:{line:102,column:18}},"49":{start:{line:102,column:6},end:{line:102,column:18}},"50":{start:{line:104,column:4},end:{line:104,column:31}},"51":{start:{line:113,column:4},end:{line:113,column:27}},"52":{start:{line:122,column:4},end:{line:122,column:26}},"53":{start:{line:132,column:4},end:{line:133,column:34}},"54":{start:{line:133,column:6},end:{line:133,column:34}},"55":{start:{line:135,column:4},end:{line:135,column:40}},"56":{start:{line:137,column:4},end:{line:138,column:35}},"57":{start:{line:138,column:6},end:{line:138,column:35}},"58":{start:{line:140,column:20},end:{line:140,column:40}},"59":{start:{line:142,column:4},end:{line:142,column:36}},"60":{start:{line:144,column:4},end:{line:145,column:32}},"61":{start:{line:145,column:6},end:{line:145,column:32}},"62":{start:{line:147,column:4},end:{line:147,column:19}},"63":{start:{line:159,column:4},end:{line:159,column:53}},"64":{start:{line:160,column:4},end:{line:160,column:40}},"65":{start:{line:161,column:4},end:{line:161,column:24}},"66":{start:{line:162,column:4},end:{line:162,column:27}},"67":{start:{line:172,column:4},end:{line:175,column:5}},"68":{start:{line:173,column:6},end:{line:173,column:53}},"69":{start:{line:174,column:6},end:{line:174,column:29}},"70":{start:{line:177,column:4},end:{line:178,column:18}},"71":{start:{line:178,column:6},end:{line:178,column:18}},"72":{start:{line:180,column:4},end:{line:181,column:34}},"73":{start:{line:181,column:6},end:{line:181,column:34}},"74":{start:{line:183,column:4},end:{line:183,column:40}},"75":{start:{line:193,column:4},end:{line:196,column:5}},"76":{start:{line:194,column:6},end:{line:194,column:53}},"77":{start:{line:195,column:6},end:{line:195,column:29}},"78":{start:{line:198,column:4},end:{line:199,column:18}},"79":{start:{line:199,column:6},end:{line:199,column:18}},"80":{start:{line:201,column:4},end:{line:204,column:5}},"81":{start:{line:202,column:6},end:{line:203,column:36}},"82":{start:{line:203,column:8},end:{line:203,column:36}},"83":{start:{line:206,column:4},end:{line:206,column:51}},"84":{start:{line:208,column:4},end:{line:208,column:27}},"85":{start:{line:222,column:4},end:{line:227,column:5}},"86":{start:{line:223,column:6},end:{line:223,column:37}},"87":{start:{line:224,column:6},end:{line:225,column:23}},"88":{start:{line:225,column:8},end:{line:225,column:23}},"89":{start:{line:226,column:6},end:{line:226,column:55}},"90":{start:{line:229,column:4},end:{line:233,column:5}},"91":{start:{line:230,column:6},end:{line:230,column:31}},"92":{start:{line:231,column:6},end:{line:232,column:33}},"93":{start:{line:232,column:8},end:{line:232,column:33}},"94":{start:{line:235,column:4},end:{line:235,column:54}},"95":{start:{line:246,column:4},end:{line:246,column:64}},"96":{start:{line:257,column:4},end:{line:257,column:54}},"97":{start:{line:268,column:4},end:{line:268,column:58}},"98":{start:{line:279,column:4},end:{line:279,column:60}},"99":{start:{line:290,column:4},end:{line:290,column:60}},"100":{start:{line:301,column:4},end:{line:301,column:62}},"101":{start:{line:312,column:4},end:{line:312,column:69}},"102":{start:{line:323,column:4},end:{line:323,column:65}},"103":{start:{line:332,column:4},end:{line:332,column:21}},"104":{start:{line:341,column:4},end:{line:341,column:37}},"105":{start:{line:351,column:4},end:{line:351,column:34}},"106":{start:{line:360,column:0},end:{line:360,column:23}},"107":{start:{line:367,column:0},end:{line:367,column:20}},"108":{start:{line:373,column:0},end:{line:373,column:20}},"109":{start:{line:374,column:0},end:{line:374,column:23}},"110":{start:{line:375,column:0},end:{line:375,column:23}},"111":{start:{line:376,column:0},end:{line:376,column:22}},"112":{start:{line:382,column:0},end:{line:382,column:49}},"113":{start:{line:389,column:2},end:{line:389,column:19}},"114":{start:{line:393,column:2},end:{line:393,column:29}},"115":{start:{line:397,column:2},end:{line:397,column:33}},"116":{start:{line:401,column:2},end:{line:401,column:46}},"117":{start:{line:405,column:2},end:{line:405,column:46}},"118":{start:{line:409,column:2},end:{line:409,column:47}},"119":{start:{line:413,column:2},end:{line:413,column:48}},"120":{start:{line:417,column:2},end:{line:417,column:49}},"121":{start:{line:421,column:19},end:{line:421,column:40}},"122":{start:{line:423,column:2},end:{line:429,column:3}},"123":{start:{line:428,column:6},end:{line:428,column:18}},"124":{start:{line:431,column:2},end:{line:431,column:15}},"125":{start:{line:435,column:2},end:{line:435,column:46}},"126":{start:{line:442,column:0},end:{line:442,column:25}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:30,column:2},end:{line:30,column:3}},loc:{start:{line:30,column:23},end:{line:64,column:3}},line:30},"1":{name:"(anonymous_1)",decl:{start:{line:72,column:2},end:{line:72,column:3}},loc:{start:{line:72,column:9},end:{line:90,column:3}},line:72},"2":{name:"(anonymous_2)",decl:{start:{line:98,column:2},end:{line:98,column:3}},loc:{start:{line:98,column:13},end:{line:105,column:3}},line:98},"3":{name:"(anonymous_3)",decl:{start:{line:112,column:2},end:{line:112,column:3}},loc:{start:{line:112,column:8},end:{line:114,column:3}},line:112},"4":{name:"(anonymous_4)",decl:{start:{line:121,column:2},end:{line:121,column:3}},loc:{start:{line:121,column:7},end:{line:123,column:3}},line:121},"5":{name:"(anonymous_5)",decl:{start:{line:131,column:2},end:{line:131,column:3}},loc:{start:{line:131,column:25},end:{line:148,column:3}},line:131},"6":{name:"(anonymous_6)",decl:{start:{line:158,column:2},end:{line:158,column:3}},loc:{start:{line:158,column:19},end:{line:163,column:3}},line:158},"7":{name:"(anonymous_7)",decl:{start:{line:171,column:2},end:{line:171,column:3}},loc:{start:{line:171,column:19},end:{line:184,column:3}},line:171},"8":{name:"(anonymous_8)",decl:{start:{line:192,column:2},end:{line:192,column:3}},loc:{start:{line:192,column:22},end:{line:209,column:3}},line:192},"9":{name:"(anonymous_9)",decl:{start:{line:221,column:2},end:{line:221,column:3}},loc:{start:{line:221,column:43},end:{line:236,column:3}},line:221},"10":{name:"(anonymous_10)",decl:{start:{line:245,column:2},end:{line:245,column:3}},loc:{start:{line:245,column:35},end:{line:247,column:3}},line:245},"11":{name:"(anonymous_11)",decl:{start:{line:256,column:2},end:{line:256,column:3}},loc:{start:{line:256,column:34},end:{line:258,column:3}},line:256},"12":{name:"(anonymous_12)",decl:{start:{line:267,column:2},end:{line:267,column:3}},loc:{start:{line:267,column:37},end:{line:269,column:3}},line:267},"13":{name:"(anonymous_13)",decl:{start:{line:278,column:2},end:{line:278,column:3}},loc:{start:{line:278,column:38},end:{line:280,column:3}},line:278},"14":{name:"(anonymous_14)",decl:{start:{line:289,column:2},end:{line:289,column:3}},loc:{start:{line:289,column:39},end:{line:291,column:3}},line:289},"15":{name:"(anonymous_15)",decl:{start:{line:300,column:2},end:{line:300,column:3}},loc:{start:{line:300,column:40},end:{line:302,column:3}},line:300},"16":{name:"(anonymous_16)",decl:{start:{line:311,column:2},end:{line:311,column:3}},loc:{start:{line:311,column:38},end:{line:313,column:3}},line:311},"17":{name:"(anonymous_17)",decl:{start:{line:322,column:2},end:{line:322,column:3}},loc:{start:{line:322,column:34},end:{line:324,column:3}},line:322},"18":{name:"(anonymous_18)",decl:{start:{line:331,column:2},end:{line:331,column:3}},loc:{start:{line:331,column:13},end:{line:333,column:3}},line:331},"19":{name:"(anonymous_19)",decl:{start:{line:340,column:2},end:{line:340,column:3}},loc:{start:{line:340,column:20},end:{line:342,column:3}},line:340},"20":{name:"(anonymous_20)",decl:{start:{line:350,column:2},end:{line:350,column:3}},loc:{start:{line:350,column:24},end:{line:352,column:3}},line:350},"21":{name:"cmpBit",decl:{start:{line:388,column:9},end:{line:388,column:15}},loc:{start:{line:388,column:22},end:{line:390,column:1}},line:388},"22":{name:"cmpNode",decl:{start:{line:392,column:9},end:{line:392,column:16}},loc:{start:{line:392,column:23},end:{line:394,column:1}},line:392},"23":{name:"cmpMagic",decl:{start:{line:396,column:9},end:{line:396,column:17}},loc:{start:{line:396,column:34},end:{line:398,column:1}},line:396},"24":{name:"cmpWIF",decl:{start:{line:400,column:9},end:{line:400,column:15}},loc:{start:{line:400,column:33},end:{line:402,column:1}},line:400},"25":{name:"cmpPub",decl:{start:{line:404,column:9},end:{line:404,column:15}},loc:{start:{line:404,column:33},end:{line:406,column:1}},line:404},"26":{name:"cmpPriv",decl:{start:{line:408,column:9},end:{line:408,column:16}},loc:{start:{line:408,column:34},end:{line:410,column:1}},line:408},"27":{name:"cmpPub58",decl:{start:{line:412,column:9},end:{line:412,column:17}},loc:{start:{line:412,column:35},end:{line:414,column:1}},line:412},"28":{name:"cmpPriv58",decl:{start:{line:416,column:9},end:{line:416,column:18}},loc:{start:{line:416,column:36},end:{line:418,column:1}},line:416},"29":{name:"cmpAddress",decl:{start:{line:420,column:9},end:{line:420,column:19}},loc:{start:{line:420,column:37},end:{line:432,column:1}},line:420},"30":{name:"cmpBech32",decl:{start:{line:434,column:9},end:{line:434,column:18}},loc:{start:{line:434,column:33},end:{line:436,column:1}},line:434}},branchMap:{"0":{loc:{start:{line:101,column:4},end:{line:102,column:18}},type:"if",locations:[{start:{line:101,column:4},end:{line:102,column:18}},{start:{line:101,column:4},end:{line:102,column:18}}],line:101},"1":{loc:{start:{line:132,column:4},end:{line:133,column:34}},type:"if",locations:[{start:{line:132,column:4},end:{line:133,column:34}},{start:{line:132,column:4},end:{line:133,column:34}}],line:132},"2":{loc:{start:{line:137,column:4},end:{line:138,column:35}},type:"if",locations:[{start:{line:137,column:4},end:{line:138,column:35}},{start:{line:137,column:4},end:{line:138,column:35}}],line:137},"3":{loc:{start:{line:144,column:4},end:{line:145,column:32}},type:"if",locations:[{start:{line:144,column:4},end:{line:145,column:32}},{start:{line:144,column:4},end:{line:145,column:32}}],line:144},"4":{loc:{start:{line:172,column:4},end:{line:175,column:5}},type:"if",locations:[{start:{line:172,column:4},end:{line:175,column:5}},{start:{line:172,column:4},end:{line:175,column:5}}],line:172},"5":{loc:{start:{line:177,column:4},end:{line:178,column:18}},type:"if",locations:[{start:{line:177,column:4},end:{line:178,column:18}},{start:{line:177,column:4},end:{line:178,column:18}}],line:177},"6":{loc:{start:{line:180,column:4},end:{line:181,column:34}},type:"if",locations:[{start:{line:180,column:4},end:{line:181,column:34}},{start:{line:180,column:4},end:{line:181,column:34}}],line:180},"7":{loc:{start:{line:193,column:4},end:{line:196,column:5}},type:"if",locations:[{start:{line:193,column:4},end:{line:196,column:5}},{start:{line:193,column:4},end:{line:196,column:5}}],line:193},"8":{loc:{start:{line:198,column:4},end:{line:199,column:18}},type:"if",locations:[{start:{line:198,column:4},end:{line:199,column:18}},{start:{line:198,column:4},end:{line:199,column:18}}],line:198},"9":{loc:{start:{line:201,column:4},end:{line:204,column:5}},type:"if",locations:[{start:{line:201,column:4},end:{line:204,column:5}},{start:{line:201,column:4},end:{line:204,column:5}}],line:201},"10":{loc:{start:{line:202,column:6},end:{line:203,column:36}},type:"if",locations:[{start:{line:202,column:6},end:{line:203,column:36}},{start:{line:202,column:6},end:{line:203,column:36}}],line:202},"11":{loc:{start:{line:222,column:4},end:{line:227,column:5}},type:"if",locations:[{start:{line:222,column:4},end:{line:227,column:5}},{start:{line:222,column:4},end:{line:227,column:5}}],line:222},"12":{loc:{start:{line:224,column:6},end:{line:225,column:23}},type:"if",locations:[{start:{line:224,column:6},end:{line:225,column:23}},{start:{line:224,column:6},end:{line:225,column:23}}],line:224},"13":{loc:{start:{line:231,column:6},end:{line:232,column:33}},type:"if",locations:[{start:{line:231,column:6},end:{line:232,column:33}},{start:{line:231,column:6},end:{line:232,column:33}}],line:231},"14":{loc:{start:{line:382,column:12},end:{line:382,column:47}},type:"binary-expr",locations:[{start:{line:382,column:12},end:{line:382,column:37}},{start:{line:382,column:41},end:{line:382,column:47}}],line:382},"15":{loc:{start:{line:423,column:2},end:{line:429,column:3}},type:"switch",locations:[{start:{line:424,column:4},end:{line:424,column:29}},{start:{line:425,column:4},end:{line:425,column:29}},{start:{line:426,column:4},end:{line:426,column:36}},{start:{line:427,column:4},end:{line:428,column:18}}],line:423}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"a7eaa70fc6474697607abc5da84c36419b4f4402"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_14131ejbej=function(){return actualCoverage;};}return actualCoverage;}cov_14131ejbej();const assert=(cov_14131ejbej().s[0]++,require('bsert'));const binary=(cov_14131ejbej().s[1]++,require('../utils/binary'));const networks=(cov_14131ejbej().s[2]++,require('./networks'));const consensus=(cov_14131ejbej().s[3]++,require('./consensus'));const TimeData=(cov_14131ejbej().s[4]++,require('./timedata'));const{inspectSymbol}=(cov_14131ejbej().s[5]++,require('../utils'));/**
 * Network
 * Represents a network.
 * @alias module:protocol.Network
 */class Network{/**
   * Create a network.
   * @constructor
   * @param {Object} options
   */constructor(options){cov_14131ejbej().f[0]++;cov_14131ejbej().s[6]++;assert(!Network[options.type],'Cannot create two networks.');cov_14131ejbej().s[7]++;this.type=options.type;cov_14131ejbej().s[8]++;this.seeds=options.seeds;cov_14131ejbej().s[9]++;this.magic=options.magic;cov_14131ejbej().s[10]++;this.port=options.port;cov_14131ejbej().s[11]++;this.checkpointMap=options.checkpointMap;cov_14131ejbej().s[12]++;this.lastCheckpoint=options.lastCheckpoint;cov_14131ejbej().s[13]++;this.checkpoints=[];cov_14131ejbej().s[14]++;this.halvingInterval=options.halvingInterval;cov_14131ejbej().s[15]++;this.genesis=options.genesis;cov_14131ejbej().s[16]++;this.genesisBlock=options.genesisBlock;cov_14131ejbej().s[17]++;this.pow=options.pow;cov_14131ejbej().s[18]++;this.block=options.block;cov_14131ejbej().s[19]++;this.bip30=options.bip30;cov_14131ejbej().s[20]++;this.activationThreshold=options.activationThreshold;cov_14131ejbej().s[21]++;this.minerWindow=options.minerWindow;cov_14131ejbej().s[22]++;this.deployments=options.deployments;cov_14131ejbej().s[23]++;this.deploys=options.deploys;cov_14131ejbej().s[24]++;this.unknownBits=~consensus.VERSION_TOP_MASK;cov_14131ejbej().s[25]++;this.keyPrefix=options.keyPrefix;cov_14131ejbej().s[26]++;this.addressPrefix=options.addressPrefix;cov_14131ejbej().s[27]++;this.requireStandard=options.requireStandard;cov_14131ejbej().s[28]++;this.rpcPort=options.rpcPort;cov_14131ejbej().s[29]++;this.walletPort=options.walletPort;cov_14131ejbej().s[30]++;this.minRelay=options.minRelay;cov_14131ejbej().s[31]++;this.feeRate=options.feeRate;cov_14131ejbej().s[32]++;this.maxFeeRate=options.maxFeeRate;cov_14131ejbej().s[33]++;this.selfConnect=options.selfConnect;cov_14131ejbej().s[34]++;this.requestMempool=options.requestMempool;cov_14131ejbej().s[35]++;this.time=new TimeData();cov_14131ejbej().s[36]++;this.init();}/**
   * Get a deployment by bit index.
   * @param {Number} bit
   * @returns {Object}
   */init(){cov_14131ejbej().f[1]++;let bits=(cov_14131ejbej().s[37]++,0);cov_14131ejbej().s[38]++;for(const deployment of this.deploys){cov_14131ejbej().s[39]++;bits|=1<<deployment.bit;}cov_14131ejbej().s[40]++;bits|=consensus.VERSION_TOP_MASK;cov_14131ejbej().s[41]++;this.unknownBits=~bits>>>0;cov_14131ejbej().s[42]++;for(const key of Object.keys(this.checkpointMap)){const hash=(cov_14131ejbej().s[43]++,this.checkpointMap[key]);const height=(cov_14131ejbej().s[44]++,Number(key));cov_14131ejbej().s[45]++;this.checkpoints.push({hash,height});}cov_14131ejbej().s[46]++;this.checkpoints.sort(cmpNode);}/**
   * Get a deployment by bit index.
   * @param {Number} bit
   * @returns {Object}
   */byBit(bit){cov_14131ejbej().f[2]++;const index=(cov_14131ejbej().s[47]++,binary.search(this.deploys,bit,cmpBit));cov_14131ejbej().s[48]++;if(index===-1){cov_14131ejbej().b[0][0]++;cov_14131ejbej().s[49]++;return null;}else{cov_14131ejbej().b[0][1]++;}cov_14131ejbej().s[50]++;return this.deploys[index];}/**
   * Get network adjusted time.
   * @returns {Number}
   */now(){cov_14131ejbej().f[3]++;cov_14131ejbej().s[51]++;return this.time.now();}/**
   * Get network adjusted time in milliseconds.
   * @returns {Number}
   */ms(){cov_14131ejbej().f[4]++;cov_14131ejbej().s[52]++;return this.time.ms();}/**
   * Create a network. Get existing network if possible.
   * @param {NetworkType|Object} options
   * @returns {Network}
   */static create(options){cov_14131ejbej().f[5]++;cov_14131ejbej().s[53]++;if(typeof options==='string'){cov_14131ejbej().b[1][0]++;cov_14131ejbej().s[54]++;options=networks[options];}else{cov_14131ejbej().b[1][1]++;}cov_14131ejbej().s[55]++;assert(options,'Unknown network.');cov_14131ejbej().s[56]++;if(Network[options.type]){cov_14131ejbej().b[2][0]++;cov_14131ejbej().s[57]++;return Network[options.type];}else{cov_14131ejbej().b[2][1]++;}const network=(cov_14131ejbej().s[58]++,new Network(options));cov_14131ejbej().s[59]++;Network[network.type]=network;cov_14131ejbej().s[60]++;if(!Network.primary){cov_14131ejbej().b[3][0]++;cov_14131ejbej().s[61]++;Network.primary=network;}else{cov_14131ejbej().b[3][1]++;}cov_14131ejbej().s[62]++;return network;}/**
   * Set the default network. This network will be used
   * if nothing is passed as the `network` option for
   * certain objects.
   * @param {NetworkType} type - Network type.
   * @returns {Network}
   */static set(type){cov_14131ejbej().f[6]++;cov_14131ejbej().s[63]++;assert(typeof type==='string','Bad network.');cov_14131ejbej().s[64]++;Network.primary=Network.get(type);cov_14131ejbej().s[65]++;Network.type=type;cov_14131ejbej().s[66]++;return Network.primary;}/**
   * Get a network with a string or a Network object.
   * @param {NetworkType|Network} type - Network type.
   * @returns {Network}
   */static get(type){cov_14131ejbej().f[7]++;cov_14131ejbej().s[67]++;if(!type){cov_14131ejbej().b[4][0]++;cov_14131ejbej().s[68]++;assert(Network.primary,'No default network.');cov_14131ejbej().s[69]++;return Network.primary;}else{cov_14131ejbej().b[4][1]++;}cov_14131ejbej().s[70]++;if(type instanceof Network){cov_14131ejbej().b[5][0]++;cov_14131ejbej().s[71]++;return type;}else{cov_14131ejbej().b[5][1]++;}cov_14131ejbej().s[72]++;if(typeof type==='string'){cov_14131ejbej().b[6][0]++;cov_14131ejbej().s[73]++;return Network.create(type);}else{cov_14131ejbej().b[6][1]++;}cov_14131ejbej().s[74]++;throw new Error('Unknown network.');}/**
   * Get a network with a string or a Network object.
   * @param {NetworkType|Network} type - Network type.
   * @returns {Network}
   */static ensure(type){cov_14131ejbej().f[8]++;cov_14131ejbej().s[75]++;if(!type){cov_14131ejbej().b[7][0]++;cov_14131ejbej().s[76]++;assert(Network.primary,'No default network.');cov_14131ejbej().s[77]++;return Network.primary;}else{cov_14131ejbej().b[7][1]++;}cov_14131ejbej().s[78]++;if(type instanceof Network){cov_14131ejbej().b[8][0]++;cov_14131ejbej().s[79]++;return type;}else{cov_14131ejbej().b[8][1]++;}cov_14131ejbej().s[80]++;if(typeof type==='string'){cov_14131ejbej().b[9][0]++;cov_14131ejbej().s[81]++;if(networks[type]){cov_14131ejbej().b[10][0]++;cov_14131ejbej().s[82]++;return Network.create(type);}else{cov_14131ejbej().b[10][1]++;}}else{cov_14131ejbej().b[9][1]++;}cov_14131ejbej().s[83]++;assert(Network.primary,'No default network.');cov_14131ejbej().s[84]++;return Network.primary;}/**
   * Get a network by an associated comparator.
   * @private
   * @param {Object} value
   * @param {Function} compare
   * @param {Network|null} network
   * @param {String} name
   * @returns {Network}
   */static by(value,compare,network,name){cov_14131ejbej().f[9]++;cov_14131ejbej().s[85]++;if(network){cov_14131ejbej().b[11][0]++;cov_14131ejbej().s[86]++;network=Network.get(network);cov_14131ejbej().s[87]++;if(compare(network,value)){cov_14131ejbej().b[12][0]++;cov_14131ejbej().s[88]++;return network;}else{cov_14131ejbej().b[12][1]++;}cov_14131ejbej().s[89]++;throw new Error(`Network mismatch for ${name}.`);}else{cov_14131ejbej().b[11][1]++;}cov_14131ejbej().s[90]++;for(const type of networks.types){cov_14131ejbej().s[91]++;network=networks[type];cov_14131ejbej().s[92]++;if(compare(network,value)){cov_14131ejbej().b[13][0]++;cov_14131ejbej().s[93]++;return Network.get(type);}else{cov_14131ejbej().b[13][1]++;}}cov_14131ejbej().s[94]++;throw new Error(`Network not found for ${name}.`);}/**
   * Get a network by its magic number.
   * @param {Number} value
   * @param {Network?} network
   * @returns {Network}
   */static fromMagic(value,network){cov_14131ejbej().f[10]++;cov_14131ejbej().s[95]++;return Network.by(value,cmpMagic,network,'magic number');}/**
   * Get a network by its WIF prefix.
   * @param {Number} value
   * @param {Network?} network
   * @returns {Network}
   */static fromWIF(prefix,network){cov_14131ejbej().f[11]++;cov_14131ejbej().s[96]++;return Network.by(prefix,cmpWIF,network,'WIF');}/**
   * Get a network by its xpubkey prefix.
   * @param {Number} value
   * @param {Network?} network
   * @returns {Network}
   */static fromPublic(prefix,network){cov_14131ejbej().f[12]++;cov_14131ejbej().s[97]++;return Network.by(prefix,cmpPub,network,'xpubkey');}/**
   * Get a network by its xprivkey prefix.
   * @param {Number} value
   * @param {Network?} network
   * @returns {Network}
   */static fromPrivate(prefix,network){cov_14131ejbej().f[13]++;cov_14131ejbej().s[98]++;return Network.by(prefix,cmpPriv,network,'xprivkey');}/**
   * Get a network by its xpubkey base58 prefix.
   * @param {String} prefix
   * @param {Network?} network
   * @returns {Network}
   */static fromPublic58(prefix,network){cov_14131ejbej().f[14]++;cov_14131ejbej().s[99]++;return Network.by(prefix,cmpPub58,network,'xpubkey');}/**
   * Get a network by its xprivkey base58 prefix.
   * @param {String} prefix
   * @param {Network?} network
   * @returns {Network}
   */static fromPrivate58(prefix,network){cov_14131ejbej().f[15]++;cov_14131ejbej().s[100]++;return Network.by(prefix,cmpPriv58,network,'xprivkey');}/**
   * Get a network by its base58 address prefix.
   * @param {Number} value
   * @param {Network?} network
   * @returns {Network}
   */static fromAddress(prefix,network){cov_14131ejbej().f[16]++;cov_14131ejbej().s[101]++;return Network.by(prefix,cmpAddress,network,'base58 address');}/**
   * Get a network by its bech32 address prefix.
   * @param {String} hrp
   * @param {Network?} network
   * @returns {Network}
   */static fromBech32(hrp,network){cov_14131ejbej().f[17]++;cov_14131ejbej().s[102]++;return Network.by(hrp,cmpBech32,network,'bech32 address');}/**
   * Convert the network to a string.
   * @returns {String}
   */toString(){cov_14131ejbej().f[18]++;cov_14131ejbej().s[103]++;return this.type;}/**
   * Inspect the network.
   * @returns {String}
   */[inspectSymbol](){cov_14131ejbej().f[19]++;cov_14131ejbej().s[104]++;return`<Network: ${this.type}>`;}/**
   * Test an object to see if it is a Network.
   * @param {Object} obj
   * @returns {Boolean}
   */static isNetwork(obj){cov_14131ejbej().f[20]++;cov_14131ejbej().s[105]++;return obj instanceof Network;}}/**
 * Default network.
 * @type {Network}
 */cov_14131ejbej().s[106]++;Network.primary=null;/**
 * Default network type.
 * @type {String}
 */cov_14131ejbej().s[107]++;Network.type=null;/*
 * Networks (to avoid hash table mode).
 */cov_14131ejbej().s[108]++;Network.main=null;cov_14131ejbej().s[109]++;Network.testnet=null;cov_14131ejbej().s[110]++;Network.regtest=null;cov_14131ejbej().s[111]++;Network.simnet=null;/*
 * Set initial network.
 */cov_14131ejbej().s[112]++;Network.set((cov_14131ejbej().b[14][0]++,process.env.BCOIN_NETWORK)||(cov_14131ejbej().b[14][1]++,'main'));/*
 * Helpers
 */function cmpBit(a,b){cov_14131ejbej().f[21]++;cov_14131ejbej().s[113]++;return a.bit-b;}function cmpNode(a,b){cov_14131ejbej().f[22]++;cov_14131ejbej().s[114]++;return a.height-b.height;}function cmpMagic(network,magic){cov_14131ejbej().f[23]++;cov_14131ejbej().s[115]++;return network.magic===magic;}function cmpWIF(network,prefix){cov_14131ejbej().f[24]++;cov_14131ejbej().s[116]++;return network.keyPrefix.privkey===prefix;}function cmpPub(network,prefix){cov_14131ejbej().f[25]++;cov_14131ejbej().s[117]++;return network.keyPrefix.xpubkey===prefix;}function cmpPriv(network,prefix){cov_14131ejbej().f[26]++;cov_14131ejbej().s[118]++;return network.keyPrefix.xprivkey===prefix;}function cmpPub58(network,prefix){cov_14131ejbej().f[27]++;cov_14131ejbej().s[119]++;return network.keyPrefix.xpubkey58===prefix;}function cmpPriv58(network,prefix){cov_14131ejbej().f[28]++;cov_14131ejbej().s[120]++;return network.keyPrefix.xprivkey58===prefix;}function cmpAddress(network,prefix){cov_14131ejbej().f[29]++;const prefixes=(cov_14131ejbej().s[121]++,network.addressPrefix);cov_14131ejbej().s[122]++;switch(prefix){case prefixes.pubkeyhash:cov_14131ejbej().b[15][0]++;case prefixes.scripthash:cov_14131ejbej().b[15][1]++;case prefixes.witnesspubkeyhash:cov_14131ejbej().b[15][2]++;case prefixes.witnessscripthash:cov_14131ejbej().b[15][3]++;cov_14131ejbej().s[123]++;return true;}cov_14131ejbej().s[124]++;return false;}function cmpBech32(network,hrp){cov_14131ejbej().f[30]++;cov_14131ejbej().s[125]++;return network.addressPrefix.bech32===hrp;}/*
 * Expose
 */cov_14131ejbej().s[126]++;module.exports=Network;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
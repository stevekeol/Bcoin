/*!
 * mempool.js - mempool for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */'use strict';function cov_26fb9b08th(){var path="E:\\Projects\\Test\\bcoin\\lib\\mempool\\mempool.js";var hash="24e5522268adb479f977b8c2dcc6682845093de3";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\Projects\\Test\\bcoin\\lib\\mempool\\mempool.js",statementMap:{"0":{start:{line:9,column:15},end:{line:9,column:31}},"1":{start:{line:10,column:13},end:{line:10,column:28}},"2":{start:{line:11,column:21},end:{line:11,column:38}},"3":{start:{line:12,column:12},end:{line:12,column:26}},"4":{start:{line:13,column:24},end:{line:13,column:42}},"5":{start:{line:14,column:13},end:{line:14,column:29}},"6":{start:{line:15,column:31},end:{line:15,column:52}},"7":{start:{line:16,column:15},end:{line:16,column:46}},"8":{start:{line:17,column:18},end:{line:17,column:50}},"9":{start:{line:18,column:15},end:{line:18,column:44}},"10":{start:{line:19,column:13},end:{line:19,column:37}},"11":{start:{line:20,column:15},end:{line:20,column:44}},"12":{start:{line:21,column:22},end:{line:21,column:51}},"13":{start:{line:22,column:15},end:{line:22,column:42}},"14":{start:{line:23,column:17},end:{line:23,column:50}},"15":{start:{line:24,column:11},end:{line:24,column:38}},"16":{start:{line:25,column:13},end:{line:25,column:42}},"17":{start:{line:26,column:15},end:{line:26,column:46}},"18":{start:{line:27,column:21},end:{line:27,column:46}},"19":{start:{line:28,column:16},end:{line:28,column:46}},"20":{start:{line:29,column:15},end:{line:29,column:34}},"21":{start:{line:30,column:20},end:{line:30,column:44}},"22":{start:{line:31,column:13},end:{line:31,column:30}},"23":{start:{line:32,column:17},end:{line:32,column:45}},"24":{start:{line:49,column:4},end:{line:49,column:12}},"25":{start:{line:51,column:4},end:{line:51,column:24}},"26":{start:{line:52,column:4},end:{line:52,column:47}},"27":{start:{line:54,column:4},end:{line:54,column:40}},"28":{start:{line:55,column:4},end:{line:55,column:57}},"29":{start:{line:56,column:4},end:{line:56,column:40}},"30":{start:{line:57,column:4},end:{line:57,column:36}},"31":{start:{line:58,column:4},end:{line:58,column:34}},"32":{start:{line:60,column:4},end:{line:60,column:36}},"33":{start:{line:62,column:4},end:{line:62,column:48}},"34":{start:{line:64,column:4},end:{line:64,column:18}},"35":{start:{line:65,column:4},end:{line:65,column:23}},"36":{start:{line:66,column:4},end:{line:66,column:22}},"37":{start:{line:67,column:4},end:{line:67,column:23}},"38":{start:{line:68,column:4},end:{line:68,column:41}},"39":{start:{line:70,column:4},end:{line:70,column:35}},"40":{start:{line:71,column:4},end:{line:71,column:35}},"41":{start:{line:72,column:4},end:{line:72,column:31}},"42":{start:{line:73,column:4},end:{line:73,column:34}},"43":{start:{line:74,column:4},end:{line:74,column:55}},"44":{start:{line:76,column:4},end:{line:76,column:51}},"45":{start:{line:85,column:4},end:{line:85,column:53}},"46":{start:{line:86,column:4},end:{line:86,column:23}},"47":{start:{line:88,column:4},end:{line:88,column:28}},"48":{start:{line:90,column:4},end:{line:119,column:5}},"49":{start:{line:91,column:22},end:{line:91,column:51}},"50":{start:{line:93,column:6},end:{line:94,column:31}},"51":{start:{line:94,column:8},end:{line:94,column:31}},"52":{start:{line:96,column:6},end:{line:103,column:7}},"53":{start:{line:97,column:8},end:{line:97,column:44}},"54":{start:{line:99,column:8},end:{line:102,column:9}},"55":{start:{line:100,column:23},end:{line:100,column:55}},"56":{start:{line:101,column:10},end:{line:101,column:39}},"57":{start:{line:105,column:6},end:{line:107,column:24}},"58":{start:{line:109,column:6},end:{line:118,column:7}},"59":{start:{line:110,column:21},end:{line:110,column:47}},"60":{start:{line:112,column:8},end:{line:117,column:9}},"61":{start:{line:113,column:10},end:{line:113,column:33}},"62":{start:{line:114,column:10},end:{line:116,column:37}},"63":{start:{line:121,column:4},end:{line:121,column:35}},"64":{start:{line:123,column:17},end:{line:123,column:57}},"65":{start:{line:125,column:4},end:{line:125,column:61}},"66":{start:{line:134,column:4},end:{line:134,column:48}},"67":{start:{line:135,column:4},end:{line:135,column:24}},"68":{start:{line:136,column:4},end:{line:136,column:30}},"69":{start:{line:150,column:19},end:{line:150,column:43}},"70":{start:{line:151,column:4},end:{line:155,column:5}},"71":{start:{line:152,column:6},end:{line:152,column:46}},"72":{start:{line:154,column:6},end:{line:154,column:15}},"73":{start:{line:168,column:4},end:{line:171,column:5}},"74":{start:{line:169,column:6},end:{line:169,column:28}},"75":{start:{line:170,column:6},end:{line:170,column:13}},"76":{start:{line:173,column:20},end:{line:173,column:22}},"77":{start:{line:175,column:4},end:{line:193,column:5}},"78":{start:{line:175,column:17},end:{line:175,column:31}},"79":{start:{line:176,column:17},end:{line:176,column:23}},"80":{start:{line:177,column:19},end:{line:177,column:28}},"81":{start:{line:178,column:20},end:{line:178,column:39}},"82":{start:{line:180,column:6},end:{line:186,column:7}},"83":{start:{line:181,column:8},end:{line:181,column:32}},"84":{start:{line:182,column:8},end:{line:182,column:36}},"85":{start:{line:183,column:8},end:{line:184,column:39}},"86":{start:{line:184,column:10},end:{line:184,column:39}},"87":{start:{line:185,column:8},end:{line:185,column:17}},"88":{start:{line:188,column:6},end:{line:188,column:30}},"89":{start:{line:190,column:6},end:{line:190,column:40}},"90":{start:{line:192,column:6},end:{line:192,column:26}},"91":{start:{line:197,column:4},end:{line:197,column:25}},"92":{start:{line:199,column:4},end:{line:202,column:5}},"93":{start:{line:200,column:6},end:{line:200,column:71}},"94":{start:{line:201,column:6},end:{line:201,column:38}},"95":{start:{line:204,column:4},end:{line:204,column:32}},"96":{start:{line:206,column:4},end:{line:206,column:29}},"97":{start:{line:208,column:4},end:{line:208,column:26}},"98":{start:{line:210,column:4},end:{line:211,column:13}},"99":{start:{line:211,column:6},end:{line:211,column:13}},"100":{start:{line:213,column:4},end:{line:215,column:36}},"101":{start:{line:228,column:19},end:{line:228,column:43}},"102":{start:{line:229,column:4},end:{line:233,column:5}},"103":{start:{line:230,column:6},end:{line:230,column:49}},"104":{start:{line:232,column:6},end:{line:232,column:15}},"105":{start:{line:247,column:4},end:{line:250,column:5}},"106":{start:{line:248,column:6},end:{line:248,column:33}},"107":{start:{line:249,column:6},end:{line:249,column:13}},"108":{start:{line:252,column:16},end:{line:252,column:17}},"109":{start:{line:254,column:4},end:{line:270,column:5}},"110":{start:{line:254,column:17},end:{line:254,column:18}},"111":{start:{line:255,column:17},end:{line:255,column:23}},"112":{start:{line:256,column:19},end:{line:256,column:28}},"113":{start:{line:258,column:6},end:{line:259,column:17}},"114":{start:{line:259,column:8},end:{line:259,column:17}},"115":{start:{line:261,column:6},end:{line:267,column:7}},"116":{start:{line:262,column:8},end:{line:262,column:36}},"117":{start:{line:263,column:8},end:{line:263,column:16}},"118":{start:{line:265,column:8},end:{line:265,column:30}},"119":{start:{line:266,column:8},end:{line:266,column:17}},"120":{start:{line:269,column:6},end:{line:269,column:42}},"121":{start:{line:272,column:4},end:{line:272,column:25}},"122":{start:{line:274,column:4},end:{line:274,column:37}},"123":{start:{line:276,column:4},end:{line:276,column:29}},"124":{start:{line:278,column:4},end:{line:278,column:31}},"125":{start:{line:280,column:4},end:{line:281,column:13}},"126":{start:{line:281,column:6},end:{line:281,column:13}},"127":{start:{line:283,column:4},end:{line:285,column:27}},"128":{start:{line:295,column:19},end:{line:295,column:40}},"129":{start:{line:296,column:16},end:{line:296,column:62}},"130":{start:{line:297,column:19},end:{line:297,column:21}},"131":{start:{line:299,column:4},end:{line:325,column:5}},"132":{start:{line:300,column:19},end:{line:300,column:24}},"133":{start:{line:302,column:6},end:{line:305,column:7}},"134":{start:{line:303,column:8},end:{line:303,column:26}},"135":{start:{line:304,column:8},end:{line:304,column:17}},"136":{start:{line:307,column:6},end:{line:321,column:7}},"137":{start:{line:308,column:23},end:{line:308,column:28}},"138":{start:{line:310,column:8},end:{line:315,column:9}},"139":{start:{line:311,column:10},end:{line:314,column:11}},"140":{start:{line:312,column:12},end:{line:312,column:28}},"141":{start:{line:313,column:12},end:{line:313,column:18}},"142":{start:{line:317,column:8},end:{line:320,column:9}},"143":{start:{line:318,column:10},end:{line:318,column:28}},"144":{start:{line:319,column:10},end:{line:319,column:19}},"145":{start:{line:323,column:6},end:{line:324,column:26}},"146":{start:{line:324,column:8},end:{line:324,column:26}},"147":{start:{line:327,column:4},end:{line:334,column:5}},"148":{start:{line:328,column:20},end:{line:328,column:39}},"149":{start:{line:330,column:6},end:{line:331,column:17}},"150":{start:{line:331,column:8},end:{line:331,column:17}},"151":{start:{line:333,column:6},end:{line:333,column:29}},"152":{start:{line:344,column:19},end:{line:344,column:43}},"153":{start:{line:345,column:4},end:{line:349,column:5}},"154":{start:{line:346,column:6},end:{line:346,column:33}},"155":{start:{line:348,column:6},end:{line:348,column:15}},"156":{start:{line:358,column:4},end:{line:358,column:71}},"157":{start:{line:360,column:4},end:{line:360,column:18}},"158":{start:{line:362,column:4},end:{line:362,column:25}},"159":{start:{line:363,column:4},end:{line:363,column:25}},"160":{start:{line:364,column:4},end:{line:364,column:21}},"161":{start:{line:365,column:4},end:{line:365,column:24}},"162":{start:{line:366,column:4},end:{line:366,column:27}},"163":{start:{line:368,column:4},end:{line:368,column:23}},"164":{start:{line:369,column:4},end:{line:369,column:22}},"165":{start:{line:371,column:4},end:{line:372,column:24}},"166":{start:{line:372,column:6},end:{line:372,column:24}},"167":{start:{line:374,column:4},end:{line:374,column:25}},"168":{start:{line:376,column:4},end:{line:379,column:5}},"169":{start:{line:377,column:6},end:{line:377,column:30}},"170":{start:{line:378,column:6},end:{line:378,column:25}},"171":{start:{line:381,column:4},end:{line:381,column:35}},"172":{start:{line:392,column:20},end:{line:392,column:40}},"173":{start:{line:394,column:4},end:{line:395,column:19}},"174":{start:{line:395,column:6},end:{line:395,column:19}},"175":{start:{line:397,column:22},end:{line:397,column:46}},"176":{start:{line:398,column:23},end:{line:398,column:46}},"177":{start:{line:400,column:16},end:{line:400,column:26}},"178":{start:{line:401,column:16},end:{line:401,column:28}},"179":{start:{line:402,column:18},end:{line:402,column:35}},"180":{start:{line:404,column:4},end:{line:418,column:5}},"181":{start:{line:405,column:6},end:{line:406,column:17}},"182":{start:{line:406,column:8},end:{line:406,column:17}},"183":{start:{line:408,column:6},end:{line:411,column:7}},"184":{start:{line:409,column:8},end:{line:409,column:28}},"185":{start:{line:410,column:8},end:{line:410,column:17}},"186":{start:{line:413,column:6},end:{line:415,column:22}},"187":{start:{line:417,column:6},end:{line:417,column:29}},"188":{start:{line:420,column:4},end:{line:421,column:35}},"189":{start:{line:421,column:6},end:{line:421,column:35}},"190":{start:{line:423,column:4},end:{line:425,column:25}},"191":{start:{line:427,column:4},end:{line:427,column:25}},"192":{start:{line:429,column:4},end:{line:431,column:20}},"193":{start:{line:433,column:4},end:{line:447,column:5}},"194":{start:{line:434,column:20},end:{line:434,column:33}},"195":{start:{line:435,column:19},end:{line:435,column:31}},"196":{start:{line:437,column:6},end:{line:437,column:34}},"197":{start:{line:439,column:6},end:{line:441,column:22}},"198":{start:{line:443,column:6},end:{line:443,column:29}},"199":{start:{line:445,column:6},end:{line:446,column:14}},"200":{start:{line:446,column:8},end:{line:446,column:14}},"201":{start:{line:449,column:4},end:{line:451,column:25}},"202":{start:{line:453,column:4},end:{line:453,column:33}},"203":{start:{line:463,column:18},end:{line:463,column:36}},"204":{start:{line:465,column:4},end:{line:466,column:18}},"205":{start:{line:466,column:6},end:{line:466,column:18}},"206":{start:{line:468,column:4},end:{line:468,column:20}},"207":{start:{line:478,column:4},end:{line:478,column:30}},"208":{start:{line:489,column:18},end:{line:489,column:36}},"209":{start:{line:491,column:4},end:{line:492,column:18}},"210":{start:{line:492,column:6},end:{line:492,column:18}},"211":{start:{line:494,column:4},end:{line:495,column:18}},"212":{start:{line:495,column:6},end:{line:495,column:18}},"213":{start:{line:497,column:4},end:{line:498,column:18}},"214":{start:{line:498,column:6},end:{line:498,column:18}},"215":{start:{line:500,column:4},end:{line:500,column:44}},"216":{start:{line:511,column:18},end:{line:511,column:36}},"217":{start:{line:513,column:4},end:{line:514,column:19}},"218":{start:{line:514,column:6},end:{line:514,column:19}},"219":{start:{line:516,column:4},end:{line:517,column:19}},"220":{start:{line:517,column:6},end:{line:517,column:19}},"221":{start:{line:519,column:4},end:{line:520,column:19}},"222":{start:{line:520,column:6},end:{line:520,column:19}},"223":{start:{line:522,column:4},end:{line:522,column:16}},"224":{start:{line:536,column:16},end:{line:536,column:43}},"225":{start:{line:537,column:4},end:{line:537,column:32}},"226":{start:{line:548,column:16},end:{line:548,column:43}},"227":{start:{line:549,column:4},end:{line:549,column:32}},"228":{start:{line:560,column:16},end:{line:560,column:43}},"229":{start:{line:561,column:18},end:{line:561,column:38}},"230":{start:{line:563,column:4},end:{line:564,column:18}},"231":{start:{line:564,column:6},end:{line:564,column:18}},"232":{start:{line:566,column:4},end:{line:566,column:20}},"233":{start:{line:580,column:4},end:{line:580,column:45}},"234":{start:{line:594,column:4},end:{line:594,column:49}},"235":{start:{line:604,column:18},end:{line:604,column:37}},"236":{start:{line:606,column:4},end:{line:607,column:18}},"237":{start:{line:607,column:6},end:{line:607,column:18}},"238":{start:{line:609,column:17},end:{line:609,column:40}},"239":{start:{line:610,column:4},end:{line:610,column:28}},"240":{start:{line:612,column:4},end:{line:612,column:16}},"241":{start:{line:622,column:4},end:{line:622,column:30}},"242":{start:{line:633,column:4},end:{line:634,column:18}},"243":{start:{line:634,column:6},end:{line:634,column:18}},"244":{start:{line:636,column:4},end:{line:637,column:18}},"245":{start:{line:637,column:6},end:{line:637,column:18}},"246":{start:{line:639,column:4},end:{line:639,column:31}},"247":{start:{line:651,column:4},end:{line:652,column:18}},"248":{start:{line:652,column:6},end:{line:652,column:18}},"249":{start:{line:654,column:4},end:{line:655,column:18}},"250":{start:{line:655,column:6},end:{line:655,column:18}},"251":{start:{line:657,column:4},end:{line:657,column:31}},"252":{start:{line:668,column:4},end:{line:668,column:35}},"253":{start:{line:682,column:17},end:{line:682,column:26}},"254":{start:{line:683,column:19},end:{line:683,column:47}},"255":{start:{line:684,column:4},end:{line:688,column:5}},"256":{start:{line:685,column:6},end:{line:685,column:39}},"257":{start:{line:687,column:6},end:{line:687,column:15}},"258":{start:{line:701,column:4},end:{line:702,column:14}},"259":{start:{line:702,column:6},end:{line:702,column:14}},"260":{start:{line:705,column:4},end:{line:713,column:5}},"261":{start:{line:706,column:6},end:{line:706,column:44}},"262":{start:{line:708,column:6},end:{line:711,column:7}},"263":{start:{line:709,column:8},end:{line:710,column:38}},"264":{start:{line:710,column:10},end:{line:710,column:38}},"265":{start:{line:712,column:6},end:{line:712,column:16}},"266":{start:{line:715,column:4},end:{line:718,column:5}},"267":{start:{line:716,column:6},end:{line:716,column:31}},"268":{start:{line:717,column:6},end:{line:717,column:34}},"269":{start:{line:720,column:4},end:{line:720,column:19}},"270":{start:{line:733,column:4},end:{line:733,column:61}},"271":{start:{line:735,column:22},end:{line:735,column:62}},"272":{start:{line:736,column:19},end:{line:736,column:36}},"273":{start:{line:737,column:17},end:{line:737,column:26}},"274":{start:{line:742,column:35},end:{line:742,column:51}},"275":{start:{line:744,column:4},end:{line:745,column:58}},"276":{start:{line:745,column:6},end:{line:745,column:58}},"277":{start:{line:749,column:4},end:{line:754,column:5}},"278":{start:{line:750,column:6},end:{line:753,column:13}},"279":{start:{line:757,column:4},end:{line:764,column:5}},"280":{start:{line:758,column:6},end:{line:763,column:7}},"281":{start:{line:759,column:8},end:{line:762,column:13}},"282":{start:{line:767,column:4},end:{line:775,column:5}},"283":{start:{line:768,column:6},end:{line:774,column:7}},"284":{start:{line:769,column:8},end:{line:773,column:16}},"285":{start:{line:778,column:4},end:{line:792,column:5}},"286":{start:{line:779,column:37},end:{line:779,column:55}},"287":{start:{line:781,column:6},end:{line:782,column:64}},"288":{start:{line:782,column:8},end:{line:782,column:64}},"289":{start:{line:784,column:6},end:{line:791,column:7}},"290":{start:{line:785,column:8},end:{line:790,column:9}},"291":{start:{line:786,column:10},end:{line:789,column:15}},"292":{start:{line:795,column:4},end:{line:800,column:5}},"293":{start:{line:796,column:6},end:{line:799,column:11}},"294":{start:{line:803,column:4},end:{line:808,column:5}},"295":{start:{line:804,column:6},end:{line:807,column:11}},"296":{start:{line:813,column:4},end:{line:818,column:5}},"297":{start:{line:814,column:6},end:{line:817,column:11}},"298":{start:{line:823,column:4},end:{line:829,column:5}},"299":{start:{line:824,column:6},end:{line:824,column:32}},"300":{start:{line:825,column:6},end:{line:828,column:11}},"301":{start:{line:833,column:17},end:{line:833,column:43}},"302":{start:{line:836,column:20},end:{line:836,column:50}},"303":{start:{line:839,column:4},end:{line:840,column:21}},"304":{start:{line:840,column:6},end:{line:840,column:21}},"305":{start:{line:844,column:18},end:{line:844,column:55}},"306":{start:{line:847,column:4},end:{line:847,column:35}},"307":{start:{line:850,column:4},end:{line:850,column:37}},"308":{start:{line:853,column:4},end:{line:858,column:5}},"309":{start:{line:854,column:6},end:{line:857,column:11}},"310":{start:{line:860,column:4},end:{line:860,column:16}},"311":{start:{line:872,column:19},end:{line:872,column:40}},"312":{start:{line:873,column:22},end:{line:873,column:62}},"313":{start:{line:874,column:15},end:{line:874,column:23}},"314":{start:{line:877,column:4},end:{line:882,column:5}},"315":{start:{line:878,column:6},end:{line:881,column:11}},"316":{start:{line:885,column:4},end:{line:901,column:5}},"317":{start:{line:886,column:6},end:{line:891,column:7}},"318":{start:{line:887,column:8},end:{line:890,column:13}},"319":{start:{line:892,column:6},end:{line:900,column:7}},"320":{start:{line:893,column:8},end:{line:899,column:9}},"321":{start:{line:894,column:10},end:{line:898,column:18}},"322":{start:{line:904,column:4},end:{line:909,column:5}},"323":{start:{line:905,column:6},end:{line:908,column:11}},"324":{start:{line:912,column:19},end:{line:912,column:70}},"325":{start:{line:914,column:4},end:{line:921,column:5}},"326":{start:{line:915,column:6},end:{line:920,column:7}},"327":{start:{line:916,column:8},end:{line:919,column:13}},"328":{start:{line:925,column:4},end:{line:942,column:5}},"329":{start:{line:926,column:18},end:{line:926,column:28}},"330":{start:{line:929,column:6},end:{line:929,column:67}},"331":{start:{line:930,column:6},end:{line:930,column:26}},"332":{start:{line:934,column:6},end:{line:939,column:7}},"333":{start:{line:935,column:8},end:{line:938,column:13}},"334":{start:{line:941,column:6},end:{line:941,column:35}},"335":{start:{line:945,column:4},end:{line:946,column:67}},"336":{start:{line:946,column:6},end:{line:946,column:67}},"337":{start:{line:949,column:4},end:{line:954,column:5}},"338":{start:{line:950,column:6},end:{line:953,column:11}},"339":{start:{line:957,column:33},end:{line:957,column:61}},"340":{start:{line:959,column:4},end:{line:960,column:58}},"341":{start:{line:960,column:6},end:{line:960,column:58}},"342":{start:{line:963,column:16},end:{line:963,column:50}},"343":{start:{line:964,column:4},end:{line:990,column:5}},"344":{start:{line:965,column:6},end:{line:965,column:47}},"345":{start:{line:967,column:6},end:{line:968,column:18}},"346":{start:{line:968,column:8},end:{line:968,column:18}},"347":{start:{line:971,column:6},end:{line:971,column:44}},"348":{start:{line:972,column:6},end:{line:972,column:47}},"349":{start:{line:976,column:6},end:{line:977,column:18}},"350":{start:{line:977,column:8},end:{line:977,column:18}},"351":{start:{line:981,column:6},end:{line:981,column:43}},"352":{start:{line:984,column:6},end:{line:985,column:18}},"353":{start:{line:985,column:8},end:{line:985,column:18}},"354":{start:{line:988,column:6},end:{line:988,column:27}},"355":{start:{line:989,column:6},end:{line:989,column:16}},"356":{start:{line:993,column:4},end:{line:997,column:5}},"357":{start:{line:994,column:20},end:{line:994,column:55}},"358":{start:{line:995,column:6},end:{line:996,column:62}},"359":{start:{line:1011,column:4},end:{line:1017,column:5}},"360":{start:{line:1012,column:6},end:{line:1012,column:47}},"361":{start:{line:1014,column:6},end:{line:1015,column:21}},"362":{start:{line:1015,column:8},end:{line:1015,column:21}},"363":{start:{line:1016,column:6},end:{line:1016,column:16}},"364":{start:{line:1018,column:4},end:{line:1018,column:16}},"365":{start:{line:1032,column:4},end:{line:1033,column:13}},"366":{start:{line:1033,column:6},end:{line:1033,column:13}},"367":{start:{line:1035,column:4},end:{line:1044,column:5}},"368":{start:{line:1036,column:6},end:{line:1036,column:56}},"369":{start:{line:1038,column:6},end:{line:1043,column:7}},"370":{start:{line:1039,column:8},end:{line:1042,column:13}},"371":{start:{line:1046,column:4},end:{line:1049,column:11}},"372":{start:{line:1065,column:15},end:{line:1065,column:23}},"373":{start:{line:1067,column:4},end:{line:1067,column:33}},"374":{start:{line:1069,column:4},end:{line:1069,column:40}},"375":{start:{line:1071,column:4},end:{line:1071,column:30}},"376":{start:{line:1072,column:4},end:{line:1072,column:34}},"377":{start:{line:1074,column:4},end:{line:1075,column:52}},"378":{start:{line:1075,column:6},end:{line:1075,column:52}},"379":{start:{line:1077,column:4},end:{line:1079,column:32}},"380":{start:{line:1081,column:4},end:{line:1081,column:27}},"381":{start:{line:1083,column:4},end:{line:1083,column:33}},"382":{start:{line:1094,column:15},end:{line:1094,column:23}},"383":{start:{line:1095,column:17},end:{line:1095,column:26}},"384":{start:{line:1097,column:4},end:{line:1097,column:29}},"385":{start:{line:1099,column:4},end:{line:1100,column:31}},"386":{start:{line:1100,column:6},end:{line:1100,column:31}},"387":{start:{line:1102,column:4},end:{line:1102,column:28}},"388":{start:{line:1104,column:4},end:{line:1104,column:37}},"389":{start:{line:1114,column:4},end:{line:1114,column:31}},"390":{start:{line:1115,column:4},end:{line:1115,column:43}},"391":{start:{line:1116,column:4},end:{line:1116,column:28}},"392":{start:{line:1126,column:15},end:{line:1126,column:23}},"393":{start:{line:1127,column:17},end:{line:1127,column:26}},"394":{start:{line:1129,column:4},end:{line:1137,column:5}},"395":{start:{line:1129,column:17},end:{line:1129,column:18}},"396":{start:{line:1130,column:22},end:{line:1130,column:44}},"397":{start:{line:1132,column:6},end:{line:1133,column:17}},"398":{start:{line:1133,column:8},end:{line:1133,column:17}},"399":{start:{line:1135,column:6},end:{line:1135,column:35}},"400":{start:{line:1136,column:6},end:{line:1136,column:32}},"401":{start:{line:1148,column:4},end:{line:1148,column:68}},"402":{start:{line:1161,column:4},end:{line:1161,column:68}},"403":{start:{line:1175,column:15},end:{line:1175,column:23}},"404":{start:{line:1177,column:4},end:{line:1198,column:5}},"405":{start:{line:1178,column:19},end:{line:1178,column:31}},"406":{start:{line:1179,column:21},end:{line:1179,column:40}},"407":{start:{line:1181,column:6},end:{line:1182,column:17}},"408":{start:{line:1182,column:8},end:{line:1182,column:17}},"409":{start:{line:1184,column:6},end:{line:1185,column:17}},"410":{start:{line:1185,column:8},end:{line:1185,column:17}},"411":{start:{line:1187,column:6},end:{line:1187,column:20}},"412":{start:{line:1189,column:6},end:{line:1189,column:25}},"413":{start:{line:1191,column:6},end:{line:1192,column:14}},"414":{start:{line:1192,column:8},end:{line:1192,column:14}},"415":{start:{line:1194,column:6},end:{line:1194,column:52}},"416":{start:{line:1196,column:6},end:{line:1197,column:14}},"417":{start:{line:1197,column:8},end:{line:1197,column:14}},"418":{start:{line:1200,column:4},end:{line:1200,column:20}},"419":{start:{line:1211,column:4},end:{line:1211,column:58}},"420":{start:{line:1224,column:15},end:{line:1224,column:23}},"421":{start:{line:1225,column:17},end:{line:1225,column:26}},"422":{start:{line:1227,column:4},end:{line:1241,column:5}},"423":{start:{line:1227,column:17},end:{line:1227,column:18}},"424":{start:{line:1228,column:20},end:{line:1228,column:42}},"425":{start:{line:1230,column:6},end:{line:1231,column:17}},"426":{start:{line:1231,column:8},end:{line:1231,column:17}},"427":{start:{line:1233,column:19},end:{line:1233,column:31}},"428":{start:{line:1235,column:6},end:{line:1236,column:17}},"429":{start:{line:1236,column:8},end:{line:1236,column:17}},"430":{start:{line:1238,column:6},end:{line:1238,column:20}},"431":{start:{line:1240,column:6},end:{line:1240,column:41}},"432":{start:{line:1243,column:4},end:{line:1243,column:20}},"433":{start:{line:1253,column:4},end:{line:1253,column:58}},"434":{start:{line:1266,column:15},end:{line:1266,column:23}},"435":{start:{line:1268,column:4},end:{line:1282,column:5}},"436":{start:{line:1269,column:19},end:{line:1269,column:31}},"437":{start:{line:1270,column:21},end:{line:1270,column:40}},"438":{start:{line:1272,column:6},end:{line:1273,column:17}},"439":{start:{line:1273,column:8},end:{line:1273,column:17}},"440":{start:{line:1275,column:6},end:{line:1276,column:17}},"441":{start:{line:1276,column:8},end:{line:1276,column:17}},"442":{start:{line:1278,column:6},end:{line:1278,column:20}},"443":{start:{line:1279,column:6},end:{line:1279,column:27}},"444":{start:{line:1281,column:6},end:{line:1281,column:47}},"445":{start:{line:1284,column:4},end:{line:1284,column:19}},"446":{start:{line:1294,column:4},end:{line:1294,column:60}},"447":{start:{line:1306,column:15},end:{line:1306,column:23}},"448":{start:{line:1307,column:17},end:{line:1307,column:26}},"449":{start:{line:1309,column:4},end:{line:1324,column:5}},"450":{start:{line:1309,column:17},end:{line:1309,column:18}},"451":{start:{line:1310,column:20},end:{line:1310,column:42}},"452":{start:{line:1312,column:6},end:{line:1313,column:17}},"453":{start:{line:1313,column:8},end:{line:1313,column:17}},"454":{start:{line:1315,column:19},end:{line:1315,column:31}},"455":{start:{line:1317,column:6},end:{line:1318,column:17}},"456":{start:{line:1318,column:8},end:{line:1318,column:17}},"457":{start:{line:1320,column:6},end:{line:1320,column:20}},"458":{start:{line:1321,column:6},end:{line:1321,column:26}},"459":{start:{line:1323,column:6},end:{line:1323,column:48}},"460":{start:{line:1326,column:4},end:{line:1326,column:19}},"461":{start:{line:1337,column:20},end:{line:1337,column:35}},"462":{start:{line:1338,column:20},end:{line:1338,column:22}},"463":{start:{line:1340,column:4},end:{line:1343,column:5}},"464":{start:{line:1341,column:6},end:{line:1342,column:27}},"465":{start:{line:1342,column:8},end:{line:1342,column:27}},"466":{start:{line:1345,column:4},end:{line:1345,column:19}},"467":{start:{line:1355,column:4},end:{line:1358,column:5}},"468":{start:{line:1356,column:6},end:{line:1357,column:20}},"469":{start:{line:1357,column:8},end:{line:1357,column:20}},"470":{start:{line:1359,column:4},end:{line:1359,column:17}},"471":{start:{line:1369,column:16},end:{line:1369,column:17}},"472":{start:{line:1371,column:4},end:{line:1378,column:5}},"473":{start:{line:1372,column:17},end:{line:1372,column:25}},"474":{start:{line:1373,column:6},end:{line:1377,column:7}},"475":{start:{line:1373,column:19},end:{line:1373,column:20}},"476":{start:{line:1374,column:21},end:{line:1374,column:42}},"477":{start:{line:1375,column:8},end:{line:1376,column:30}},"478":{start:{line:1376,column:10},end:{line:1376,column:30}},"479":{start:{line:1380,column:4},end:{line:1380,column:17}},"480":{start:{line:1389,column:16},end:{line:1389,column:18}},"481":{start:{line:1391,column:4},end:{line:1392,column:25}},"482":{start:{line:1392,column:6},end:{line:1392,column:25}},"483":{start:{line:1394,column:4},end:{line:1394,column:15}},"484":{start:{line:1404,column:4},end:{line:1404,column:34}},"485":{start:{line:1413,column:4},end:{line:1413,column:34}},"486":{start:{line:1424,column:19},end:{line:1424,column:34}},"487":{start:{line:1425,column:20},end:{line:1425,column:22}},"488":{start:{line:1427,column:4},end:{line:1448,column:5}},"489":{start:{line:1428,column:6},end:{line:1429,column:17}},"490":{start:{line:1429,column:8},end:{line:1429,column:17}},"491":{start:{line:1431,column:6},end:{line:1437,column:7}},"492":{start:{line:1432,column:8},end:{line:1434,column:21}},"493":{start:{line:1435,column:8},end:{line:1435,column:36}},"494":{start:{line:1436,column:8},end:{line:1436,column:23}},"495":{start:{line:1439,column:6},end:{line:1445,column:7}},"496":{start:{line:1440,column:8},end:{line:1442,column:21}},"497":{start:{line:1443,column:8},end:{line:1443,column:36}},"498":{start:{line:1444,column:8},end:{line:1444,column:23}},"499":{start:{line:1447,column:6},end:{line:1447,column:31}},"500":{start:{line:1451,column:4},end:{line:1452,column:18}},"501":{start:{line:1452,column:6},end:{line:1452,column:18}},"502":{start:{line:1455,column:4},end:{line:1460,column:5}},"503":{start:{line:1456,column:6},end:{line:1456,column:64}},"504":{start:{line:1457,column:6},end:{line:1458,column:36}},"505":{start:{line:1458,column:8},end:{line:1458,column:36}},"506":{start:{line:1459,column:6},end:{line:1459,column:21}},"507":{start:{line:1462,column:4},end:{line:1463,column:21}},"508":{start:{line:1463,column:6},end:{line:1463,column:21}},"509":{start:{line:1465,column:4},end:{line:1465,column:24}},"510":{start:{line:1467,column:17},end:{line:1467,column:26}},"511":{start:{line:1469,column:4},end:{line:1476,column:5}},"512":{start:{line:1470,column:6},end:{line:1471,column:48}},"513":{start:{line:1471,column:8},end:{line:1471,column:48}},"514":{start:{line:1473,column:6},end:{line:1473,column:39}},"515":{start:{line:1475,column:6},end:{line:1475,column:25}},"516":{start:{line:1478,column:4},end:{line:1478,column:63}},"517":{start:{line:1480,column:4},end:{line:1480,column:64}},"518":{start:{line:1482,column:4},end:{line:1482,column:32}},"519":{start:{line:1484,column:4},end:{line:1484,column:19}},"520":{start:{line:1495,column:21},end:{line:1495,column:48}},"521":{start:{line:1497,column:4},end:{line:1539,column:5}},"522":{start:{line:1500,column:6},end:{line:1507,column:7}},"523":{start:{line:1501,column:8},end:{line:1501,column:27}},"524":{start:{line:1503,column:8},end:{line:1505,column:44}},"525":{start:{line:1506,column:8},end:{line:1506,column:17}},"526":{start:{line:1509,column:6},end:{line:1525,column:7}},"527":{start:{line:1510,column:8},end:{line:1510,column:53}},"528":{start:{line:1512,column:8},end:{line:1523,column:9}},"529":{start:{line:1513,column:10},end:{line:1515,column:36}},"530":{start:{line:1517,column:10},end:{line:1518,column:40}},"531":{start:{line:1518,column:12},end:{line:1518,column:40}},"532":{start:{line:1520,column:10},end:{line:1520,column:50}},"533":{start:{line:1522,column:10},end:{line:1522,column:19}},"534":{start:{line:1524,column:8},end:{line:1524,column:18}},"535":{start:{line:1530,column:6},end:{line:1536,column:7}},"536":{start:{line:1531,column:8},end:{line:1533,column:21}},"537":{start:{line:1534,column:8},end:{line:1534,column:37}},"538":{start:{line:1535,column:8},end:{line:1535,column:17}},"539":{start:{line:1538,column:6},end:{line:1538,column:69}},"540":{start:{line:1552,column:17},end:{line:1552,column:30}},"541":{start:{line:1553,column:16},end:{line:1553,column:38}},"542":{start:{line:1555,column:4},end:{line:1556,column:16}},"543":{start:{line:1556,column:6},end:{line:1556,column:16}},"544":{start:{line:1558,column:4},end:{line:1558,column:25}},"545":{start:{line:1560,column:21},end:{line:1560,column:23}},"546":{start:{line:1562,column:4},end:{line:1571,column:5}},"547":{start:{line:1563,column:21},end:{line:1563,column:41}},"548":{start:{line:1565,column:6},end:{line:1565,column:21}},"549":{start:{line:1567,column:6},end:{line:1570,column:7}},"550":{start:{line:1568,column:8},end:{line:1568,column:34}},"551":{start:{line:1569,column:8},end:{line:1569,column:30}},"552":{start:{line:1573,column:4},end:{line:1573,column:30}},"553":{start:{line:1575,column:4},end:{line:1575,column:20}},"554":{start:{line:1585,column:19},end:{line:1585,column:39}},"555":{start:{line:1587,column:4},end:{line:1588,column:19}},"556":{start:{line:1588,column:6},end:{line:1588,column:19}},"557":{start:{line:1591,column:4},end:{line:1599,column:5}},"558":{start:{line:1592,column:6},end:{line:1592,column:25}},"559":{start:{line:1594,column:6},end:{line:1594,column:32}},"560":{start:{line:1595,column:6},end:{line:1597,column:42}},"561":{start:{line:1598,column:6},end:{line:1598,column:19}},"562":{start:{line:1601,column:4},end:{line:1613,column:5}},"563":{start:{line:1602,column:18},end:{line:1602,column:40}},"564":{start:{line:1604,column:6},end:{line:1605,column:17}},"565":{start:{line:1605,column:8},end:{line:1605,column:17}},"566":{start:{line:1607,column:6},end:{line:1607,column:28}},"567":{start:{line:1609,column:6},end:{line:1609,column:23}},"568":{start:{line:1611,column:6},end:{line:1612,column:34}},"569":{start:{line:1612,column:8},end:{line:1612,column:34}},"570":{start:{line:1615,column:4},end:{line:1615,column:30}},"571":{start:{line:1617,column:4},end:{line:1617,column:35}},"572":{start:{line:1619,column:4},end:{line:1619,column:16}},"573":{start:{line:1628,column:4},end:{line:1629,column:19}},"574":{start:{line:1629,column:6},end:{line:1629,column:19}},"575":{start:{line:1631,column:16},end:{line:1631,column:56}},"576":{start:{line:1634,column:4},end:{line:1638,column:5}},"577":{start:{line:1635,column:6},end:{line:1636,column:14}},"578":{start:{line:1636,column:8},end:{line:1636,column:14}},"579":{start:{line:1637,column:6},end:{line:1637,column:14}},"580":{start:{line:1640,column:4},end:{line:1640,column:17}},"581":{start:{line:1642,column:4},end:{line:1642,column:64}},"582":{start:{line:1644,column:4},end:{line:1644,column:28}},"583":{start:{line:1646,column:4},end:{line:1646,column:16}},"584":{start:{line:1660,column:4},end:{line:1664,column:5}},"585":{start:{line:1661,column:28},end:{line:1661,column:35}},"586":{start:{line:1662,column:6},end:{line:1663,column:20}},"587":{start:{line:1663,column:8},end:{line:1663,column:20}},"588":{start:{line:1666,column:4},end:{line:1666,column:17}},"589":{start:{line:1679,column:19},end:{line:1679,column:43}},"590":{start:{line:1680,column:4},end:{line:1684,column:5}},"591":{start:{line:1681,column:6},end:{line:1681,column:42}},"592":{start:{line:1683,column:6},end:{line:1683,column:15}},"593":{start:{line:1694,column:17},end:{line:1694,column:31}},"594":{start:{line:1696,column:4},end:{line:1710,column:5}},"595":{start:{line:1697,column:28},end:{line:1697,column:35}},"596":{start:{line:1698,column:17},end:{line:1698,column:33}},"597":{start:{line:1700,column:6},end:{line:1704,column:7}},"598":{start:{line:1701,column:8},end:{line:1702,column:39}},"599":{start:{line:1702,column:10},end:{line:1702,column:39}},"600":{start:{line:1703,column:8},end:{line:1703,column:17}},"601":{start:{line:1706,column:19},end:{line:1706,column:53}},"602":{start:{line:1708,column:6},end:{line:1709,column:37}},"603":{start:{line:1709,column:8},end:{line:1709,column:37}},"604":{start:{line:1712,column:4},end:{line:1712,column:16}},"605":{start:{line:1723,column:17},end:{line:1723,column:31}},"606":{start:{line:1725,column:4},end:{line:1739,column:5}},"607":{start:{line:1726,column:28},end:{line:1726,column:35}},"608":{start:{line:1727,column:17},end:{line:1727,column:33}},"609":{start:{line:1729,column:6},end:{line:1733,column:7}},"610":{start:{line:1730,column:8},end:{line:1731,column:39}},"611":{start:{line:1731,column:10},end:{line:1731,column:39}},"612":{start:{line:1732,column:8},end:{line:1732,column:17}},"613":{start:{line:1735,column:19},end:{line:1735,column:53}},"614":{start:{line:1737,column:6},end:{line:1738,column:37}},"615":{start:{line:1738,column:8},end:{line:1738,column:37}},"616":{start:{line:1741,column:4},end:{line:1741,column:16}},"617":{start:{line:1751,column:17},end:{line:1751,column:19}},"618":{start:{line:1753,column:4},end:{line:1754,column:22}},"619":{start:{line:1754,column:6},end:{line:1754,column:22}},"620":{start:{line:1756,column:4},end:{line:1756,column:16}},"621":{start:{line:1768,column:4},end:{line:1768,column:67}},"622":{start:{line:1779,column:4},end:{line:1779,column:61}},"623":{start:{line:1790,column:15},end:{line:1790,column:23}},"624":{start:{line:1791,column:17},end:{line:1791,column:26}},"625":{start:{line:1793,column:4},end:{line:1793,column:32}},"626":{start:{line:1794,column:4},end:{line:1794,column:30}},"627":{start:{line:1796,column:4},end:{line:1796,column:29}},"628":{start:{line:1798,column:4},end:{line:1801,column:5}},"629":{start:{line:1799,column:18},end:{line:1799,column:33}},"630":{start:{line:1800,column:6},end:{line:1800,column:34}},"631":{start:{line:1803,column:4},end:{line:1804,column:35}},"632":{start:{line:1804,column:6},end:{line:1804,column:35}},"633":{start:{line:1806,column:4},end:{line:1806,column:34}},"634":{start:{line:1816,column:15},end:{line:1816,column:23}},"635":{start:{line:1817,column:17},end:{line:1817,column:26}},"636":{start:{line:1819,column:4},end:{line:1819,column:31}},"637":{start:{line:1820,column:4},end:{line:1820,column:26}},"638":{start:{line:1822,column:4},end:{line:1822,column:29}},"639":{start:{line:1824,column:4},end:{line:1827,column:5}},"640":{start:{line:1825,column:18},end:{line:1825,column:33}},"641":{start:{line:1826,column:6},end:{line:1826,column:30}},"642":{start:{line:1829,column:4},end:{line:1830,column:31}},"643":{start:{line:1830,column:6},end:{line:1830,column:31}},"644":{start:{line:1832,column:4},end:{line:1832,column:34}},"645":{start:{line:1843,column:4},end:{line:1843,column:39}},"646":{start:{line:1853,column:17},end:{line:1853,column:32}},"647":{start:{line:1854,column:4},end:{line:1854,column:32}},"648":{start:{line:1865,column:4},end:{line:1879,column:5}},"649":{start:{line:1866,column:28},end:{line:1866,column:35}},"650":{start:{line:1867,column:20},end:{line:1867,column:46}},"651":{start:{line:1869,column:6},end:{line:1870,column:17}},"652":{start:{line:1870,column:8},end:{line:1870,column:17}},"653":{start:{line:1872,column:6},end:{line:1874,column:22}},"654":{start:{line:1876,column:6},end:{line:1876,column:29}},"655":{start:{line:1878,column:6},end:{line:1878,column:39}},"656":{start:{line:1889,column:4},end:{line:1889,column:21}},"657":{start:{line:1900,column:4},end:{line:1901,column:28}},"658":{start:{line:1901,column:6},end:{line:1901,column:28}},"659":{start:{line:1903,column:4},end:{line:1903,column:26}},"660":{start:{line:1905,column:4},end:{line:1906,column:28}},"661":{start:{line:1906,column:6},end:{line:1906,column:28}},"662":{start:{line:1908,column:4},end:{line:1909,column:13}},"663":{start:{line:1909,column:6},end:{line:1909,column:13}},"664":{start:{line:1911,column:4},end:{line:1911,column:47}},"665":{start:{line:1913,column:4},end:{line:1913,column:26}},"666":{start:{line:1914,column:4},end:{line:1914,column:25}},"667":{start:{line:1916,column:4},end:{line:1916,column:48}},"668":{start:{line:1933,column:4},end:{line:1933,column:35}},"669":{start:{line:1934,column:4},end:{line:1934,column:22}},"670":{start:{line:1935,column:4},end:{line:1935,column:23}},"671":{start:{line:1936,column:4},end:{line:1936,column:24}},"672":{start:{line:1937,column:4},end:{line:1937,column:21}},"673":{start:{line:1939,column:4},end:{line:1939,column:26}},"674":{start:{line:1940,column:4},end:{line:1940,column:29}},"675":{start:{line:1941,column:4},end:{line:1941,column:30}},"676":{start:{line:1942,column:4},end:{line:1942,column:56}},"677":{start:{line:1943,column:4},end:{line:1943,column:33}},"678":{start:{line:1944,column:4},end:{line:1944,column:34}},"679":{start:{line:1945,column:4},end:{line:1945,column:32}},"680":{start:{line:1946,column:4},end:{line:1946,column:30}},"681":{start:{line:1948,column:4},end:{line:1948,column:43}},"682":{start:{line:1949,column:4},end:{line:1949,column:49}},"683":{start:{line:1950,column:4},end:{line:1950,column:53}},"684":{start:{line:1951,column:4},end:{line:1951,column:49}},"685":{start:{line:1952,column:4},end:{line:1952,column:42}},"686":{start:{line:1954,column:4},end:{line:1954,column:23}},"687":{start:{line:1955,column:4},end:{line:1955,column:25}},"688":{start:{line:1956,column:4},end:{line:1956,column:23}},"689":{start:{line:1957,column:4},end:{line:1957,column:23}},"690":{start:{line:1958,column:4},end:{line:1958,column:30}},"691":{start:{line:1959,column:4},end:{line:1959,column:28}},"692":{start:{line:1961,column:4},end:{line:1961,column:28}},"693":{start:{line:1963,column:4},end:{line:1963,column:30}},"694":{start:{line:1974,column:4},end:{line:1974,column:49}},"695":{start:{line:1975,column:4},end:{line:1976,column:40}},"696":{start:{line:1978,column:4},end:{line:1978,column:31}},"697":{start:{line:1979,column:4},end:{line:1979,column:41}},"698":{start:{line:1980,column:4},end:{line:1980,column:39}},"699":{start:{line:1981,column:4},end:{line:1981,column:41}},"700":{start:{line:1983,column:4},end:{line:1983,column:56}},"701":{start:{line:1984,column:4},end:{line:1984,column:42}},"702":{start:{line:1986,column:4},end:{line:1989,column:5}},"703":{start:{line:1987,column:6},end:{line:1987,column:49}},"704":{start:{line:1988,column:6},end:{line:1988,column:35}},"705":{start:{line:1991,column:4},end:{line:1994,column:5}},"706":{start:{line:1992,column:6},end:{line:1992,column:50}},"707":{start:{line:1993,column:6},end:{line:1993,column:37}},"708":{start:{line:1996,column:4},end:{line:1999,column:5}},"709":{start:{line:1997,column:6},end:{line:1997,column:47}},"710":{start:{line:1998,column:6},end:{line:1998,column:31}},"711":{start:{line:2001,column:4},end:{line:2004,column:5}},"712":{start:{line:2002,column:6},end:{line:2002,column:53}},"713":{start:{line:2003,column:6},end:{line:2003,column:41}},"714":{start:{line:2006,column:4},end:{line:2009,column:5}},"715":{start:{line:2007,column:6},end:{line:2007,column:72}},"716":{start:{line:2008,column:6},end:{line:2008,column:51}},"717":{start:{line:2011,column:4},end:{line:2014,column:5}},"718":{start:{line:2012,column:6},end:{line:2012,column:57}},"719":{start:{line:2013,column:6},end:{line:2013,column:49}},"720":{start:{line:2016,column:4},end:{line:2019,column:5}},"721":{start:{line:2017,column:6},end:{line:2017,column:59}},"722":{start:{line:2018,column:6},end:{line:2018,column:53}},"723":{start:{line:2021,column:4},end:{line:2024,column:5}},"724":{start:{line:2022,column:6},end:{line:2022,column:60}},"725":{start:{line:2023,column:6},end:{line:2023,column:55}},"726":{start:{line:2026,column:4},end:{line:2029,column:5}},"727":{start:{line:2027,column:6},end:{line:2027,column:60}},"728":{start:{line:2028,column:6},end:{line:2028,column:55}},"729":{start:{line:2031,column:4},end:{line:2034,column:5}},"730":{start:{line:2032,column:6},end:{line:2032,column:58}},"731":{start:{line:2033,column:6},end:{line:2033,column:51}},"732":{start:{line:2036,column:4},end:{line:2039,column:5}},"733":{start:{line:2037,column:6},end:{line:2037,column:56}},"734":{start:{line:2038,column:6},end:{line:2038,column:47}},"735":{start:{line:2041,column:4},end:{line:2044,column:5}},"736":{start:{line:2042,column:6},end:{line:2042,column:58}},"737":{start:{line:2043,column:6},end:{line:2043,column:37}},"738":{start:{line:2046,column:4},end:{line:2049,column:5}},"739":{start:{line:2047,column:6},end:{line:2047,column:64}},"740":{start:{line:2048,column:6},end:{line:2048,column:43}},"741":{start:{line:2051,column:4},end:{line:2054,column:5}},"742":{start:{line:2052,column:6},end:{line:2052,column:68}},"743":{start:{line:2053,column:6},end:{line:2053,column:47}},"744":{start:{line:2056,column:4},end:{line:2059,column:5}},"745":{start:{line:2057,column:6},end:{line:2057,column:64}},"746":{start:{line:2058,column:6},end:{line:2058,column:43}},"747":{start:{line:2061,column:4},end:{line:2064,column:5}},"748":{start:{line:2062,column:6},end:{line:2062,column:60}},"749":{start:{line:2063,column:6},end:{line:2063,column:39}},"750":{start:{line:2066,column:4},end:{line:2070,column:5}},"751":{start:{line:2067,column:6},end:{line:2067,column:49}},"752":{start:{line:2068,column:6},end:{line:2068,column:35}},"753":{start:{line:2069,column:6},end:{line:2069,column:56}},"754":{start:{line:2072,column:4},end:{line:2075,column:5}},"755":{start:{line:2073,column:6},end:{line:2073,column:51}},"756":{start:{line:2074,column:6},end:{line:2074,column:39}},"757":{start:{line:2077,column:4},end:{line:2080,column:5}},"758":{start:{line:2078,column:6},end:{line:2078,column:50}},"759":{start:{line:2079,column:6},end:{line:2079,column:35}},"760":{start:{line:2082,column:4},end:{line:2085,column:5}},"761":{start:{line:2083,column:6},end:{line:2083,column:60}},"762":{start:{line:2084,column:6},end:{line:2084,column:39}},"763":{start:{line:2087,column:4},end:{line:2091,column:5}},"764":{start:{line:2088,column:6},end:{line:2088,column:54}},"765":{start:{line:2089,column:6},end:{line:2089,column:37}},"766":{start:{line:2090,column:6},end:{line:2090,column:41}},"767":{start:{line:2093,column:4},end:{line:2096,column:5}},"768":{start:{line:2094,column:6},end:{line:2094,column:55}},"769":{start:{line:2095,column:6},end:{line:2095,column:45}},"770":{start:{line:2098,column:4},end:{line:2101,column:5}},"771":{start:{line:2099,column:6},end:{line:2099,column:54}},"772":{start:{line:2100,column:6},end:{line:2100,column:43}},"773":{start:{line:2103,column:4},end:{line:2106,column:5}},"774":{start:{line:2104,column:6},end:{line:2104,column:56}},"775":{start:{line:2105,column:6},end:{line:2105,column:47}},"776":{start:{line:2108,column:4},end:{line:2108,column:16}},"777":{start:{line:2118,column:4},end:{line:2118,column:53}},"778":{start:{line:2137,column:4},end:{line:2137,column:26}},"779":{start:{line:2138,column:4},end:{line:2138,column:27}},"780":{start:{line:2139,column:4},end:{line:2139,column:17}},"781":{start:{line:2143,column:4},end:{line:2143,column:32}},"782":{start:{line:2160,column:4},end:{line:2160,column:33}},"783":{start:{line:2161,column:4},end:{line:2161,column:31}},"784":{start:{line:2162,column:4},end:{line:2162,column:35}},"785":{start:{line:2163,column:4},end:{line:2163,column:19}},"786":{start:{line:2164,column:4},end:{line:2164,column:22}},"787":{start:{line:2166,column:4},end:{line:2167,column:36}},"788":{start:{line:2167,column:6},end:{line:2167,column:36}},"789":{start:{line:2171,column:17},end:{line:2171,column:53}},"790":{start:{line:2173,column:4},end:{line:2174,column:16}},"791":{start:{line:2174,column:6},end:{line:2174,column:16}},"792":{start:{line:2176,column:4},end:{line:2176,column:38}},"793":{start:{line:2180,column:4},end:{line:2180,column:42}},"794":{start:{line:2184,column:17},end:{line:2184,column:53}},"795":{start:{line:2186,column:4},end:{line:2187,column:18}},"796":{start:{line:2187,column:6},end:{line:2187,column:18}},"797":{start:{line:2189,column:15},end:{line:2189,column:19}},"798":{start:{line:2191,column:4},end:{line:2197,column:5}},"799":{start:{line:2192,column:6},end:{line:2192,column:32}},"800":{start:{line:2194,column:6},end:{line:2196,column:19}},"801":{start:{line:2199,column:4},end:{line:2199,column:16}},"802":{start:{line:2203,column:4},end:{line:2207,column:7}},"803":{start:{line:2206,column:21},end:{line:2206,column:47}},"804":{start:{line:2211,column:4},end:{line:2214,column:7}},"805":{start:{line:2218,column:4},end:{line:2219,column:13}},"806":{start:{line:2219,column:6},end:{line:2219,column:13}},"807":{start:{line:2221,column:4},end:{line:2221,column:25}},"808":{start:{line:2222,column:4},end:{line:2222,column:58}},"809":{start:{line:2224,column:4},end:{line:2224,column:24}},"810":{start:{line:2226,column:4},end:{line:2226,column:33}},"811":{start:{line:2230,column:4},end:{line:2231,column:13}},"812":{start:{line:2231,column:6},end:{line:2231,column:13}},"813":{start:{line:2233,column:4},end:{line:2233,column:26}},"814":{start:{line:2235,column:4},end:{line:2235,column:22}},"815":{start:{line:2239,column:4},end:{line:2240,column:13}},"816":{start:{line:2240,column:6},end:{line:2240,column:13}},"817":{start:{line:2242,column:4},end:{line:2242,column:65}},"818":{start:{line:2246,column:4},end:{line:2247,column:13}},"819":{start:{line:2247,column:6},end:{line:2247,column:13}},"820":{start:{line:2249,column:4},end:{line:2249,column:42}},"821":{start:{line:2253,column:4},end:{line:2254,column:13}},"822":{start:{line:2254,column:6},end:{line:2254,column:13}},"823":{start:{line:2256,column:4},end:{line:2256,column:43}},"824":{start:{line:2260,column:4},end:{line:2261,column:13}},"825":{start:{line:2261,column:6},end:{line:2261,column:13}},"826":{start:{line:2263,column:4},end:{line:2263,column:52}},"827":{start:{line:2267,column:4},end:{line:2267,column:23}},"828":{start:{line:2268,column:4},end:{line:2268,column:33}},"829":{start:{line:2272,column:4},end:{line:2273,column:13}},"830":{start:{line:2273,column:6},end:{line:2273,column:13}},"831":{start:{line:2275,column:4},end:{line:2275,column:29}},"832":{start:{line:2277,column:4},end:{line:2277,column:33}},"833":{start:{line:2281,column:18},end:{line:2281,column:33}},"834":{start:{line:2282,column:4},end:{line:2282,column:64}},"835":{start:{line:2283,column:4},end:{line:2283,column:39}},"836":{start:{line:2284,column:4},end:{line:2284,column:24}},"837":{start:{line:2288,column:18},end:{line:2288,column:41}},"838":{start:{line:2291,column:4},end:{line:2300,column:5}},"839":{start:{line:2292,column:6},end:{line:2292,column:37}},"840":{start:{line:2293,column:6},end:{line:2293,column:32}},"841":{start:{line:2295,column:6},end:{line:2297,column:13}},"842":{start:{line:2299,column:6},end:{line:2299,column:27}},"843":{start:{line:2302,column:4},end:{line:2310,column:5}},"844":{start:{line:2303,column:6},end:{line:2306,column:30}},"845":{start:{line:2307,column:6},end:{line:2307,column:57}},"846":{start:{line:2308,column:6},end:{line:2308,column:24}},"847":{start:{line:2309,column:6},end:{line:2309,column:19}},"848":{start:{line:2312,column:4},end:{line:2312,column:30}},"849":{start:{line:2314,column:4},end:{line:2322,column:5}},"850":{start:{line:2315,column:6},end:{line:2318,column:29}},"851":{start:{line:2319,column:6},end:{line:2319,column:57}},"852":{start:{line:2320,column:6},end:{line:2320,column:24}},"853":{start:{line:2321,column:6},end:{line:2321,column:19}},"854":{start:{line:2324,column:4},end:{line:2324,column:16}},"855":{start:{line:2328,column:18},end:{line:2328,column:33}},"856":{start:{line:2329,column:17},end:{line:2329,column:37}},"857":{start:{line:2331,column:4},end:{line:2332,column:21}},"858":{start:{line:2332,column:6},end:{line:2332,column:21}},"859":{start:{line:2334,column:4},end:{line:2334,column:64}},"860":{start:{line:2335,column:4},end:{line:2335,column:54}},"861":{start:{line:2336,column:4},end:{line:2336,column:33}},"862":{start:{line:2338,column:4},end:{line:2338,column:24}},"863":{start:{line:2340,column:4},end:{line:2340,column:75}},"864":{start:{line:2344,column:0},end:{line:2344,column:25}},"865":{start:{line:2355,column:2},end:{line:2355,column:35}},"866":{start:{line:2356,column:2},end:{line:2356,column:32}},"867":{start:{line:2360,column:2},end:{line:2360,column:34}},"868":{start:{line:2361,column:2},end:{line:2361,column:36}},"869":{start:{line:2365,column:2},end:{line:2365,column:35}},"870":{start:{line:2369,column:2},end:{line:2369,column:35}},"871":{start:{line:2373,column:11},end:{line:2373,column:21}},"872":{start:{line:2374,column:11},end:{line:2374,column:17}},"873":{start:{line:2375,column:11},end:{line:2375,column:21}},"874":{start:{line:2376,column:11},end:{line:2376,column:17}},"875":{start:{line:2379,column:2},end:{line:2382,column:3}},"876":{start:{line:2380,column:4},end:{line:2380,column:19}},"877":{start:{line:2381,column:4},end:{line:2381,column:20}},"878":{start:{line:2384,column:2},end:{line:2387,column:3}},"879":{start:{line:2385,column:4},end:{line:2385,column:19}},"880":{start:{line:2386,column:4},end:{line:2386,column:20}},"881":{start:{line:2389,column:2},end:{line:2389,column:14}},"882":{start:{line:2390,column:2},end:{line:2390,column:14}},"883":{start:{line:2392,column:2},end:{line:2395,column:3}},"884":{start:{line:2393,column:4},end:{line:2393,column:15}},"885":{start:{line:2394,column:4},end:{line:2394,column:15}},"886":{start:{line:2397,column:2},end:{line:2397,column:15}},"887":{start:{line:2401,column:12},end:{line:2401,column:35}},"888":{start:{line:2402,column:12},end:{line:2402,column:30}},"889":{start:{line:2403,column:2},end:{line:2403,column:15}},"890":{start:{line:2407,column:15},end:{line:2407,column:36}},"891":{start:{line:2408,column:2},end:{line:2408,column:35}},"892":{start:{line:2409,column:2},end:{line:2409,column:14}},"893":{start:{line:2416,column:0},end:{line:2416,column:25}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:48,column:2},end:{line:48,column:3}},loc:{start:{line:48,column:23},end:{line:77,column:3}},line:48},"1":{name:"(anonymous_1)",decl:{start:{line:84,column:2},end:{line:84,column:3}},loc:{start:{line:84,column:15},end:{line:126,column:3}},line:84},"2":{name:"(anonymous_2)",decl:{start:{line:133,column:2},end:{line:133,column:3}},loc:{start:{line:133,column:16},end:{line:137,column:3}},line:133},"3":{name:"(anonymous_3)",decl:{start:{line:149,column:2},end:{line:149,column:3}},loc:{start:{line:149,column:29},end:{line:156,column:3}},line:149},"4":{name:"(anonymous_4)",decl:{start:{line:167,column:2},end:{line:167,column:3}},loc:{start:{line:167,column:30},end:{line:216,column:3}},line:167},"5":{name:"(anonymous_5)",decl:{start:{line:227,column:2},end:{line:227,column:3}},loc:{start:{line:227,column:32},end:{line:234,column:3}},line:227},"6":{name:"(anonymous_6)",decl:{start:{line:246,column:2},end:{line:246,column:3}},loc:{start:{line:246,column:33},end:{line:286,column:3}},line:246},"7":{name:"(anonymous_7)",decl:{start:{line:294,column:2},end:{line:294,column:3}},loc:{start:{line:294,column:23},end:{line:335,column:3}},line:294},"8":{name:"(anonymous_8)",decl:{start:{line:343,column:2},end:{line:343,column:3}},loc:{start:{line:343,column:16},end:{line:350,column:3}},line:343},"9":{name:"(anonymous_9)",decl:{start:{line:357,column:2},end:{line:357,column:3}},loc:{start:{line:357,column:17},end:{line:382,column:3}},line:357},"10":{name:"(anonymous_10)",decl:{start:{line:391,column:2},end:{line:391,column:3}},loc:{start:{line:391,column:19},end:{line:454,column:3}},line:391},"11":{name:"(anonymous_11)",decl:{start:{line:462,column:2},end:{line:462,column:3}},loc:{start:{line:462,column:14},end:{line:469,column:3}},line:462},"12":{name:"(anonymous_12)",decl:{start:{line:477,column:2},end:{line:477,column:3}},loc:{start:{line:477,column:17},end:{line:479,column:3}},line:477},"13":{name:"(anonymous_13)",decl:{start:{line:488,column:2},end:{line:488,column:3}},loc:{start:{line:488,column:23},end:{line:501,column:3}},line:488},"14":{name:"(anonymous_14)",decl:{start:{line:510,column:2},end:{line:510,column:3}},loc:{start:{line:510,column:23},end:{line:523,column:3}},line:510},"15":{name:"(anonymous_15)",decl:{start:{line:535,column:2},end:{line:535,column:3}},loc:{start:{line:535,column:23},end:{line:538,column:3}},line:535},"16":{name:"(anonymous_16)",decl:{start:{line:547,column:2},end:{line:547,column:3}},loc:{start:{line:547,column:24},end:{line:550,column:3}},line:547},"17":{name:"(anonymous_17)",decl:{start:{line:559,column:2},end:{line:559,column:3}},loc:{start:{line:559,column:26},end:{line:567,column:3}},line:559},"18":{name:"(anonymous_18)",decl:{start:{line:579,column:2},end:{line:579,column:3}},loc:{start:{line:579,column:32},end:{line:581,column:3}},line:579},"19":{name:"(anonymous_19)",decl:{start:{line:593,column:2},end:{line:593,column:3}},loc:{start:{line:593,column:34},end:{line:595,column:3}},line:593},"20":{name:"(anonymous_20)",decl:{start:{line:603,column:2},end:{line:603,column:3}},loc:{start:{line:603,column:16},end:{line:613,column:3}},line:603},"21":{name:"(anonymous_21)",decl:{start:{line:621,column:2},end:{line:621,column:3}},loc:{start:{line:621,column:17},end:{line:623,column:3}},line:621},"22":{name:"(anonymous_22)",decl:{start:{line:632,column:2},end:{line:632,column:3}},loc:{start:{line:632,column:12},end:{line:640,column:3}},line:632},"23":{name:"(anonymous_23)",decl:{start:{line:650,column:2},end:{line:650,column:3}},loc:{start:{line:650,column:15},end:{line:658,column:3}},line:650},"24":{name:"(anonymous_24)",decl:{start:{line:667,column:2},end:{line:667,column:3}},loc:{start:{line:667,column:18},end:{line:669,column:3}},line:667},"25":{name:"(anonymous_25)",decl:{start:{line:681,column:2},end:{line:681,column:3}},loc:{start:{line:681,column:22},end:{line:689,column:3}},line:681},"26":{name:"(anonymous_26)",decl:{start:{line:700,column:2},end:{line:700,column:3}},loc:{start:{line:700,column:23},end:{line:721,column:3}},line:700},"27":{name:"(anonymous_27)",decl:{start:{line:732,column:2},end:{line:732,column:3}},loc:{start:{line:732,column:25},end:{line:861,column:3}},line:732},"28":{name:"(anonymous_28)",decl:{start:{line:871,column:2},end:{line:871,column:3}},loc:{start:{line:871,column:28},end:{line:998,column:3}},line:871},"29":{name:"(anonymous_29)",decl:{start:{line:1010,column:2},end:{line:1010,column:3}},loc:{start:{line:1010,column:38},end:{line:1019,column:3}},line:1010},"30":{name:"(anonymous_30)",decl:{start:{line:1031,column:2},end:{line:1031,column:3}},loc:{start:{line:1031,column:38},end:{line:1050,column:3}},line:1031},"31":{name:"(anonymous_31)",decl:{start:{line:1064,column:2},end:{line:1064,column:3}},loc:{start:{line:1064,column:30},end:{line:1084,column:3}},line:1064},"32":{name:"(anonymous_32)",decl:{start:{line:1093,column:2},end:{line:1093,column:3}},loc:{start:{line:1093,column:21},end:{line:1105,column:3}},line:1093},"33":{name:"(anonymous_33)",decl:{start:{line:1113,column:2},end:{line:1113,column:3}},loc:{start:{line:1113,column:20},end:{line:1117,column:3}},line:1113},"34":{name:"(anonymous_34)",decl:{start:{line:1125,column:2},end:{line:1125,column:3}},loc:{start:{line:1125,column:24},end:{line:1138,column:3}},line:1125},"35":{name:"(anonymous_35)",decl:{start:{line:1147,column:2},end:{line:1147,column:3}},loc:{start:{line:1147,column:24},end:{line:1149,column:3}},line:1147},"36":{name:"(anonymous_36)",decl:{start:{line:1160,column:2},end:{line:1160,column:3}},loc:{start:{line:1160,column:30},end:{line:1162,column:3}},line:1160},"37":{name:"(anonymous_37)",decl:{start:{line:1174,column:2},end:{line:1174,column:3}},loc:{start:{line:1174,column:42},end:{line:1201,column:3}},line:1174},"38":{name:"(anonymous_38)",decl:{start:{line:1210,column:2},end:{line:1210,column:3}},loc:{start:{line:1210,column:26},end:{line:1212,column:3}},line:1210},"39":{name:"(anonymous_39)",decl:{start:{line:1223,column:2},end:{line:1223,column:3}},loc:{start:{line:1223,column:32},end:{line:1244,column:3}},line:1223},"40":{name:"(anonymous_40)",decl:{start:{line:1252,column:2},end:{line:1252,column:3}},loc:{start:{line:1252,column:22},end:{line:1254,column:3}},line:1252},"41":{name:"(anonymous_41)",decl:{start:{line:1265,column:2},end:{line:1265,column:3}},loc:{start:{line:1265,column:37},end:{line:1285,column:3}},line:1265},"42":{name:"(anonymous_42)",decl:{start:{line:1293,column:2},end:{line:1293,column:3}},loc:{start:{line:1293,column:24},end:{line:1295,column:3}},line:1293},"43":{name:"(anonymous_43)",decl:{start:{line:1305,column:2},end:{line:1305,column:3}},loc:{start:{line:1305,column:39},end:{line:1327,column:3}},line:1305},"44":{name:"(anonymous_44)",decl:{start:{line:1336,column:2},end:{line:1336,column:3}},loc:{start:{line:1336,column:17},end:{line:1346,column:3}},line:1336},"45":{name:"(anonymous_45)",decl:{start:{line:1354,column:2},end:{line:1354,column:3}},loc:{start:{line:1354,column:17},end:{line:1360,column:3}},line:1354},"46":{name:"(anonymous_46)",decl:{start:{line:1368,column:2},end:{line:1368,column:3}},loc:{start:{line:1368,column:15},end:{line:1381,column:3}},line:1368},"47":{name:"(anonymous_47)",decl:{start:{line:1388,column:2},end:{line:1388,column:3}},loc:{start:{line:1388,column:15},end:{line:1395,column:3}},line:1388},"48":{name:"(anonymous_48)",decl:{start:{line:1403,column:2},end:{line:1403,column:3}},loc:{start:{line:1403,column:18},end:{line:1405,column:3}},line:1403},"49":{name:"(anonymous_49)",decl:{start:{line:1412,column:2},end:{line:1412,column:3}},loc:{start:{line:1412,column:18},end:{line:1414,column:3}},line:1412},"50":{name:"(anonymous_50)",decl:{start:{line:1423,column:2},end:{line:1423,column:3}},loc:{start:{line:1423,column:28},end:{line:1485,column:3}},line:1423},"51":{name:"(anonymous_51)",decl:{start:{line:1494,column:2},end:{line:1494,column:3}},loc:{start:{line:1494,column:30},end:{line:1540,column:3}},line:1494},"52":{name:"(anonymous_52)",decl:{start:{line:1551,column:2},end:{line:1551,column:3}},loc:{start:{line:1551,column:25},end:{line:1576,column:3}},line:1551},"53":{name:"(anonymous_53)",decl:{start:{line:1584,column:2},end:{line:1584,column:3}},loc:{start:{line:1584,column:21},end:{line:1620,column:3}},line:1584},"54":{name:"(anonymous_54)",decl:{start:{line:1627,column:2},end:{line:1627,column:3}},loc:{start:{line:1627,column:17},end:{line:1647,column:3}},line:1627},"55":{name:"(anonymous_55)",decl:{start:{line:1659,column:2},end:{line:1659,column:3}},loc:{start:{line:1659,column:20},end:{line:1667,column:3}},line:1659},"56":{name:"(anonymous_56)",decl:{start:{line:1678,column:2},end:{line:1678,column:3}},loc:{start:{line:1678,column:25},end:{line:1685,column:3}},line:1678},"57":{name:"(anonymous_57)",decl:{start:{line:1693,column:2},end:{line:1693,column:3}},loc:{start:{line:1693,column:26},end:{line:1713,column:3}},line:1693},"58":{name:"(anonymous_58)",decl:{start:{line:1722,column:2},end:{line:1722,column:3}},loc:{start:{line:1722,column:24},end:{line:1742,column:3}},line:1722},"59":{name:"(anonymous_59)",decl:{start:{line:1750,column:2},end:{line:1750,column:3}},loc:{start:{line:1750,column:16},end:{line:1757,column:3}},line:1750},"60":{name:"(anonymous_60)",decl:{start:{line:1767,column:2},end:{line:1767,column:3}},loc:{start:{line:1767,column:31},end:{line:1769,column:3}},line:1767},"61":{name:"(anonymous_61)",decl:{start:{line:1778,column:2},end:{line:1778,column:3}},loc:{start:{line:1778,column:25},end:{line:1780,column:3}},line:1778},"62":{name:"(anonymous_62)",decl:{start:{line:1789,column:2},end:{line:1789,column:3}},loc:{start:{line:1789,column:26},end:{line:1807,column:3}},line:1789},"63":{name:"(anonymous_63)",decl:{start:{line:1815,column:2},end:{line:1815,column:3}},loc:{start:{line:1815,column:22},end:{line:1833,column:3}},line:1815},"64":{name:"(anonymous_64)",decl:{start:{line:1842,column:2},end:{line:1842,column:3}},loc:{start:{line:1842,column:26},end:{line:1844,column:3}},line:1842},"65":{name:"(anonymous_65)",decl:{start:{line:1852,column:2},end:{line:1852,column:3}},loc:{start:{line:1852,column:22},end:{line:1855,column:3}},line:1852},"66":{name:"(anonymous_66)",decl:{start:{line:1864,column:2},end:{line:1864,column:3}},loc:{start:{line:1864,column:25},end:{line:1880,column:3}},line:1864},"67":{name:"(anonymous_67)",decl:{start:{line:1888,column:2},end:{line:1888,column:3}},loc:{start:{line:1888,column:12},end:{line:1890,column:3}},line:1888},"68":{name:"(anonymous_68)",decl:{start:{line:1899,column:2},end:{line:1899,column:3}},loc:{start:{line:1899,column:30},end:{line:1917,column:3}},line:1899},"69":{name:"(anonymous_69)",decl:{start:{line:1932,column:2},end:{line:1932,column:3}},loc:{start:{line:1932,column:23},end:{line:1964,column:3}},line:1932},"70":{name:"(anonymous_70)",decl:{start:{line:1973,column:2},end:{line:1973,column:3}},loc:{start:{line:1973,column:23},end:{line:2109,column:3}},line:1973},"71":{name:"(anonymous_71)",decl:{start:{line:2117,column:2},end:{line:2117,column:3}},loc:{start:{line:2117,column:30},end:{line:2119,column:3}},line:2117},"72":{name:"(anonymous_72)",decl:{start:{line:2136,column:2},end:{line:2136,column:3}},loc:{start:{line:2136,column:31},end:{line:2140,column:3}},line:2136},"73":{name:"(anonymous_73)",decl:{start:{line:2142,column:2},end:{line:2142,column:3}},loc:{start:{line:2142,column:9},end:{line:2144,column:3}},line:2142},"74":{name:"(anonymous_74)",decl:{start:{line:2159,column:2},end:{line:2159,column:3}},loc:{start:{line:2159,column:23},end:{line:2168,column:3}},line:2159},"75":{name:"(anonymous_75)",decl:{start:{line:2170,column:2},end:{line:2170,column:3}},loc:{start:{line:2170,column:21},end:{line:2177,column:3}},line:2170},"76":{name:"(anonymous_76)",decl:{start:{line:2179,column:2},end:{line:2179,column:3}},loc:{start:{line:2179,column:17},end:{line:2181,column:3}},line:2179},"77":{name:"(anonymous_77)",decl:{start:{line:2183,column:2},end:{line:2183,column:3}},loc:{start:{line:2183,column:18},end:{line:2200,column:3}},line:2183},"78":{name:"(anonymous_78)",decl:{start:{line:2202,column:2},end:{line:2202,column:3}},loc:{start:{line:2202,column:15},end:{line:2208,column:3}},line:2202},"79":{name:"(anonymous_79)",decl:{start:{line:2206,column:13},end:{line:2206,column:14}},loc:{start:{line:2206,column:21},end:{line:2206,column:47}},line:2206},"80":{name:"(anonymous_80)",decl:{start:{line:2210,column:2},end:{line:2210,column:3}},loc:{start:{line:2210,column:12},end:{line:2215,column:3}},line:2210},"81":{name:"(anonymous_81)",decl:{start:{line:2217,column:2},end:{line:2217,column:3}},loc:{start:{line:2217,column:15},end:{line:2227,column:3}},line:2217},"82":{name:"(anonymous_82)",decl:{start:{line:2229,column:2},end:{line:2229,column:3}},loc:{start:{line:2229,column:16},end:{line:2236,column:3}},line:2229},"83":{name:"(anonymous_83)",decl:{start:{line:2238,column:2},end:{line:2238,column:3}},loc:{start:{line:2238,column:14},end:{line:2243,column:3}},line:2238},"84":{name:"(anonymous_84)",decl:{start:{line:2245,column:2},end:{line:2245,column:3}},loc:{start:{line:2245,column:15},end:{line:2250,column:3}},line:2245},"85":{name:"(anonymous_85)",decl:{start:{line:2252,column:2},end:{line:2252,column:3}},loc:{start:{line:2252,column:12},end:{line:2257,column:3}},line:2252},"86":{name:"(anonymous_86)",decl:{start:{line:2259,column:2},end:{line:2259,column:3}},loc:{start:{line:2259,column:18},end:{line:2264,column:3}},line:2259},"87":{name:"(anonymous_87)",decl:{start:{line:2266,column:2},end:{line:2266,column:3}},loc:{start:{line:2266,column:10},end:{line:2269,column:3}},line:2266},"88":{name:"(anonymous_88)",decl:{start:{line:2271,column:2},end:{line:2271,column:3}},loc:{start:{line:2271,column:16},end:{line:2278,column:3}},line:2271},"89":{name:"(anonymous_89)",decl:{start:{line:2280,column:2},end:{line:2280,column:3}},loc:{start:{line:2280,column:19},end:{line:2285,column:3}},line:2280},"90":{name:"(anonymous_90)",decl:{start:{line:2287,column:2},end:{line:2287,column:3}},loc:{start:{line:2287,column:17},end:{line:2325,column:3}},line:2287},"91":{name:"(anonymous_91)",decl:{start:{line:2327,column:2},end:{line:2327,column:3}},loc:{start:{line:2327,column:15},end:{line:2341,column:3}},line:2327},"92":{name:"nop",decl:{start:{line:2350,column:9},end:{line:2350,column:12}},loc:{start:{line:2350,column:28},end:{line:2352,column:1}},line:2350},"93":{name:"addFee",decl:{start:{line:2354,column:9},end:{line:2354,column:15}},loc:{start:{line:2354,column:31},end:{line:2357,column:1}},line:2354},"94":{name:"removeFee",decl:{start:{line:2359,column:9},end:{line:2359,column:18}},loc:{start:{line:2359,column:34},end:{line:2362,column:1}},line:2359},"95":{name:"prePrioritise",decl:{start:{line:2364,column:9},end:{line:2364,column:22}},loc:{start:{line:2364,column:38},end:{line:2366,column:1}},line:2364},"96":{name:"postPrioritise",decl:{start:{line:2368,column:9},end:{line:2368,column:23}},loc:{start:{line:2368,column:39},end:{line:2370,column:1}},line:2368},"97":{name:"cmpRate",decl:{start:{line:2372,column:9},end:{line:2372,column:16}},loc:{start:{line:2372,column:23},end:{line:2398,column:1}},line:2372},"98":{name:"useDesc",decl:{start:{line:2400,column:9},end:{line:2400,column:16}},loc:{start:{line:2400,column:20},end:{line:2404,column:1}},line:2400},"99":{name:"fromU32",decl:{start:{line:2406,column:9},end:{line:2406,column:16}},loc:{start:{line:2406,column:22},end:{line:2410,column:1}},line:2406}},branchMap:{"0":{loc:{start:{line:90,column:4},end:{line:119,column:5}},type:"if",locations:[{start:{line:90,column:4},end:{line:119,column:5}},{start:{line:90,column:4},end:{line:119,column:5}}],line:90},"1":{loc:{start:{line:99,column:8},end:{line:102,column:9}},type:"if",locations:[{start:{line:99,column:8},end:{line:102,column:9}},{start:{line:99,column:8},end:{line:102,column:9}}],line:99},"2":{loc:{start:{line:109,column:6},end:{line:118,column:7}},type:"if",locations:[{start:{line:109,column:6},end:{line:118,column:7}},{start:{line:109,column:6},end:{line:118,column:7}}],line:109},"3":{loc:{start:{line:112,column:8},end:{line:117,column:9}},type:"if",locations:[{start:{line:112,column:8},end:{line:117,column:9}},{start:{line:112,column:8},end:{line:117,column:9}}],line:112},"4":{loc:{start:{line:168,column:4},end:{line:171,column:5}},type:"if",locations:[{start:{line:168,column:4},end:{line:171,column:5}},{start:{line:168,column:4},end:{line:171,column:5}}],line:168},"5":{loc:{start:{line:180,column:6},end:{line:186,column:7}},type:"if",locations:[{start:{line:180,column:6},end:{line:186,column:7}},{start:{line:180,column:6},end:{line:186,column:7}}],line:180},"6":{loc:{start:{line:183,column:8},end:{line:184,column:39}},type:"if",locations:[{start:{line:183,column:8},end:{line:184,column:39}},{start:{line:183,column:8},end:{line:184,column:39}}],line:183},"7":{loc:{start:{line:199,column:4},end:{line:202,column:5}},type:"if",locations:[{start:{line:199,column:4},end:{line:202,column:5}},{start:{line:199,column:4},end:{line:202,column:5}}],line:199},"8":{loc:{start:{line:210,column:4},end:{line:211,column:13}},type:"if",locations:[{start:{line:210,column:4},end:{line:211,column:13}},{start:{line:210,column:4},end:{line:211,column:13}}],line:210},"9":{loc:{start:{line:247,column:4},end:{line:250,column:5}},type:"if",locations:[{start:{line:247,column:4},end:{line:250,column:5}},{start:{line:247,column:4},end:{line:250,column:5}}],line:247},"10":{loc:{start:{line:258,column:6},end:{line:259,column:17}},type:"if",locations:[{start:{line:258,column:6},end:{line:259,column:17}},{start:{line:258,column:6},end:{line:259,column:17}}],line:258},"11":{loc:{start:{line:280,column:4},end:{line:281,column:13}},type:"if",locations:[{start:{line:280,column:4},end:{line:281,column:13}},{start:{line:280,column:4},end:{line:281,column:13}}],line:280},"12":{loc:{start:{line:302,column:6},end:{line:305,column:7}},type:"if",locations:[{start:{line:302,column:6},end:{line:305,column:7}},{start:{line:302,column:6},end:{line:305,column:7}}],line:302},"13":{loc:{start:{line:307,column:6},end:{line:321,column:7}},type:"if",locations:[{start:{line:307,column:6},end:{line:321,column:7}},{start:{line:307,column:6},end:{line:321,column:7}}],line:307},"14":{loc:{start:{line:311,column:10},end:{line:314,column:11}},type:"if",locations:[{start:{line:311,column:10},end:{line:314,column:11}},{start:{line:311,column:10},end:{line:314,column:11}}],line:311},"15":{loc:{start:{line:317,column:8},end:{line:320,column:9}},type:"if",locations:[{start:{line:317,column:8},end:{line:320,column:9}},{start:{line:317,column:8},end:{line:320,column:9}}],line:317},"16":{loc:{start:{line:323,column:6},end:{line:324,column:26}},type:"if",locations:[{start:{line:323,column:6},end:{line:324,column:26}},{start:{line:323,column:6},end:{line:324,column:26}}],line:323},"17":{loc:{start:{line:330,column:6},end:{line:331,column:17}},type:"if",locations:[{start:{line:330,column:6},end:{line:331,column:17}},{start:{line:330,column:6},end:{line:331,column:17}}],line:330},"18":{loc:{start:{line:371,column:4},end:{line:372,column:24}},type:"if",locations:[{start:{line:371,column:4},end:{line:372,column:24}},{start:{line:371,column:4},end:{line:372,column:24}}],line:371},"19":{loc:{start:{line:376,column:4},end:{line:379,column:5}},type:"if",locations:[{start:{line:376,column:4},end:{line:379,column:5}},{start:{line:376,column:4},end:{line:379,column:5}}],line:376},"20":{loc:{start:{line:394,column:4},end:{line:395,column:19}},type:"if",locations:[{start:{line:394,column:4},end:{line:395,column:19}},{start:{line:394,column:4},end:{line:395,column:19}}],line:394},"21":{loc:{start:{line:405,column:6},end:{line:406,column:17}},type:"if",locations:[{start:{line:405,column:6},end:{line:406,column:17}},{start:{line:405,column:6},end:{line:406,column:17}}],line:405},"22":{loc:{start:{line:408,column:6},end:{line:411,column:7}},type:"if",locations:[{start:{line:408,column:6},end:{line:411,column:7}},{start:{line:408,column:6},end:{line:411,column:7}}],line:408},"23":{loc:{start:{line:420,column:4},end:{line:421,column:35}},type:"if",locations:[{start:{line:420,column:4},end:{line:421,column:35}},{start:{line:420,column:4},end:{line:421,column:35}}],line:420},"24":{loc:{start:{line:445,column:6},end:{line:446,column:14}},type:"if",locations:[{start:{line:445,column:6},end:{line:446,column:14}},{start:{line:445,column:6},end:{line:446,column:14}}],line:445},"25":{loc:{start:{line:465,column:4},end:{line:466,column:18}},type:"if",locations:[{start:{line:465,column:4},end:{line:466,column:18}},{start:{line:465,column:4},end:{line:466,column:18}}],line:465},"26":{loc:{start:{line:491,column:4},end:{line:492,column:18}},type:"if",locations:[{start:{line:491,column:4},end:{line:492,column:18}},{start:{line:491,column:4},end:{line:492,column:18}}],line:491},"27":{loc:{start:{line:494,column:4},end:{line:495,column:18}},type:"if",locations:[{start:{line:494,column:4},end:{line:495,column:18}},{start:{line:494,column:4},end:{line:495,column:18}}],line:494},"28":{loc:{start:{line:497,column:4},end:{line:498,column:18}},type:"if",locations:[{start:{line:497,column:4},end:{line:498,column:18}},{start:{line:497,column:4},end:{line:498,column:18}}],line:497},"29":{loc:{start:{line:513,column:4},end:{line:514,column:19}},type:"if",locations:[{start:{line:513,column:4},end:{line:514,column:19}},{start:{line:513,column:4},end:{line:514,column:19}}],line:513},"30":{loc:{start:{line:516,column:4},end:{line:517,column:19}},type:"if",locations:[{start:{line:516,column:4},end:{line:517,column:19}},{start:{line:516,column:4},end:{line:517,column:19}}],line:516},"31":{loc:{start:{line:519,column:4},end:{line:520,column:19}},type:"if",locations:[{start:{line:519,column:4},end:{line:520,column:19}},{start:{line:519,column:4},end:{line:520,column:19}}],line:519},"32":{loc:{start:{line:563,column:4},end:{line:564,column:18}},type:"if",locations:[{start:{line:563,column:4},end:{line:564,column:18}},{start:{line:563,column:4},end:{line:564,column:18}}],line:563},"33":{loc:{start:{line:606,column:4},end:{line:607,column:18}},type:"if",locations:[{start:{line:606,column:4},end:{line:607,column:18}},{start:{line:606,column:4},end:{line:607,column:18}}],line:606},"34":{loc:{start:{line:633,column:4},end:{line:634,column:18}},type:"if",locations:[{start:{line:633,column:4},end:{line:634,column:18}},{start:{line:633,column:4},end:{line:634,column:18}}],line:633},"35":{loc:{start:{line:636,column:4},end:{line:637,column:18}},type:"if",locations:[{start:{line:636,column:4},end:{line:637,column:18}},{start:{line:636,column:4},end:{line:637,column:18}}],line:636},"36":{loc:{start:{line:651,column:4},end:{line:652,column:18}},type:"if",locations:[{start:{line:651,column:4},end:{line:652,column:18}},{start:{line:651,column:4},end:{line:652,column:18}}],line:651},"37":{loc:{start:{line:654,column:4},end:{line:655,column:18}},type:"if",locations:[{start:{line:654,column:4},end:{line:655,column:18}},{start:{line:654,column:4},end:{line:655,column:18}}],line:654},"38":{loc:{start:{line:701,column:4},end:{line:702,column:14}},type:"if",locations:[{start:{line:701,column:4},end:{line:702,column:14}},{start:{line:701,column:4},end:{line:702,column:14}}],line:701},"39":{loc:{start:{line:708,column:6},end:{line:711,column:7}},type:"if",locations:[{start:{line:708,column:6},end:{line:711,column:7}},{start:{line:708,column:6},end:{line:711,column:7}}],line:708},"40":{loc:{start:{line:709,column:8},end:{line:710,column:38}},type:"if",locations:[{start:{line:709,column:8},end:{line:710,column:38}},{start:{line:709,column:8},end:{line:710,column:38}}],line:709},"41":{loc:{start:{line:709,column:12},end:{line:709,column:46}},type:"binary-expr",locations:[{start:{line:709,column:12},end:{line:709,column:28}},{start:{line:709,column:32},end:{line:709,column:46}}],line:709},"42":{loc:{start:{line:715,column:4},end:{line:718,column:5}},type:"if",locations:[{start:{line:715,column:4},end:{line:718,column:5}},{start:{line:715,column:4},end:{line:718,column:5}}],line:715},"43":{loc:{start:{line:744,column:4},end:{line:745,column:58}},type:"if",locations:[{start:{line:744,column:4},end:{line:745,column:58}},{start:{line:744,column:4},end:{line:745,column:58}}],line:744},"44":{loc:{start:{line:749,column:4},end:{line:754,column:5}},type:"if",locations:[{start:{line:749,column:4},end:{line:754,column:5}},{start:{line:749,column:4},end:{line:754,column:5}}],line:749},"45":{loc:{start:{line:757,column:4},end:{line:764,column:5}},type:"if",locations:[{start:{line:757,column:4},end:{line:764,column:5}},{start:{line:757,column:4},end:{line:764,column:5}}],line:757},"46":{loc:{start:{line:758,column:6},end:{line:763,column:7}},type:"if",locations:[{start:{line:758,column:6},end:{line:763,column:7}},{start:{line:758,column:6},end:{line:763,column:7}}],line:758},"47":{loc:{start:{line:758,column:10},end:{line:758,column:55}},type:"binary-expr",locations:[{start:{line:758,column:10},end:{line:758,column:36}},{start:{line:758,column:40},end:{line:758,column:55}}],line:758},"48":{loc:{start:{line:767,column:4},end:{line:775,column:5}},type:"if",locations:[{start:{line:767,column:4},end:{line:775,column:5}},{start:{line:767,column:4},end:{line:775,column:5}}],line:767},"49":{loc:{start:{line:767,column:8},end:{line:767,column:72}},type:"binary-expr",locations:[{start:{line:767,column:8},end:{line:767,column:38}},{start:{line:767,column:42},end:{line:767,column:72}}],line:767},"50":{loc:{start:{line:768,column:6},end:{line:774,column:7}},type:"if",locations:[{start:{line:768,column:6},end:{line:774,column:7}},{start:{line:768,column:6},end:{line:774,column:7}}],line:768},"51":{loc:{start:{line:778,column:4},end:{line:792,column:5}},type:"if",locations:[{start:{line:778,column:4},end:{line:792,column:5}},{start:{line:778,column:4},end:{line:792,column:5}}],line:778},"52":{loc:{start:{line:781,column:6},end:{line:782,column:64}},type:"if",locations:[{start:{line:781,column:6},end:{line:782,column:64}},{start:{line:781,column:6},end:{line:782,column:64}}],line:781},"53":{loc:{start:{line:784,column:6},end:{line:791,column:7}},type:"if",locations:[{start:{line:784,column:6},end:{line:791,column:7}},{start:{line:784,column:6},end:{line:791,column:7}}],line:784},"54":{loc:{start:{line:785,column:8},end:{line:790,column:9}},type:"if",locations:[{start:{line:785,column:8},end:{line:790,column:9}},{start:{line:785,column:8},end:{line:790,column:9}}],line:785},"55":{loc:{start:{line:795,column:4},end:{line:800,column:5}},type:"if",locations:[{start:{line:795,column:4},end:{line:800,column:5}},{start:{line:795,column:4},end:{line:800,column:5}}],line:795},"56":{loc:{start:{line:803,column:4},end:{line:808,column:5}},type:"if",locations:[{start:{line:803,column:4},end:{line:808,column:5}},{start:{line:803,column:4},end:{line:808,column:5}}],line:803},"57":{loc:{start:{line:813,column:4},end:{line:818,column:5}},type:"if",locations:[{start:{line:813,column:4},end:{line:818,column:5}},{start:{line:813,column:4},end:{line:818,column:5}}],line:813},"58":{loc:{start:{line:823,column:4},end:{line:829,column:5}},type:"if",locations:[{start:{line:823,column:4},end:{line:829,column:5}},{start:{line:823,column:4},end:{line:829,column:5}}],line:823},"59":{loc:{start:{line:839,column:4},end:{line:840,column:21}},type:"if",locations:[{start:{line:839,column:4},end:{line:840,column:21}},{start:{line:839,column:4},end:{line:840,column:21}}],line:839},"60":{loc:{start:{line:853,column:4},end:{line:858,column:5}},type:"if",locations:[{start:{line:853,column:4},end:{line:858,column:5}},{start:{line:853,column:4},end:{line:858,column:5}}],line:853},"61":{loc:{start:{line:877,column:4},end:{line:882,column:5}},type:"if",locations:[{start:{line:877,column:4},end:{line:882,column:5}},{start:{line:877,column:4},end:{line:882,column:5}}],line:877},"62":{loc:{start:{line:885,column:4},end:{line:901,column:5}},type:"if",locations:[{start:{line:885,column:4},end:{line:901,column:5}},{start:{line:885,column:4},end:{line:901,column:5}}],line:885},"63":{loc:{start:{line:886,column:6},end:{line:891,column:7}},type:"if",locations:[{start:{line:886,column:6},end:{line:891,column:7}},{start:{line:886,column:6},end:{line:891,column:7}}],line:886},"64":{loc:{start:{line:892,column:6},end:{line:900,column:7}},type:"if",locations:[{start:{line:892,column:6},end:{line:900,column:7}},{start:{line:892,column:6},end:{line:900,column:7}}],line:892},"65":{loc:{start:{line:893,column:8},end:{line:899,column:9}},type:"if",locations:[{start:{line:893,column:8},end:{line:899,column:9}},{start:{line:893,column:8},end:{line:899,column:9}}],line:893},"66":{loc:{start:{line:904,column:4},end:{line:909,column:5}},type:"if",locations:[{start:{line:904,column:4},end:{line:909,column:5}},{start:{line:904,column:4},end:{line:909,column:5}}],line:904},"67":{loc:{start:{line:914,column:4},end:{line:921,column:5}},type:"if",locations:[{start:{line:914,column:4},end:{line:921,column:5}},{start:{line:914,column:4},end:{line:921,column:5}}],line:914},"68":{loc:{start:{line:914,column:8},end:{line:914,column:56}},type:"binary-expr",locations:[{start:{line:914,column:8},end:{line:914,column:34}},{start:{line:914,column:38},end:{line:914,column:56}}],line:914},"69":{loc:{start:{line:915,column:6},end:{line:920,column:7}},type:"if",locations:[{start:{line:915,column:6},end:{line:920,column:7}},{start:{line:915,column:6},end:{line:920,column:7}}],line:915},"70":{loc:{start:{line:925,column:4},end:{line:942,column:5}},type:"if",locations:[{start:{line:925,column:4},end:{line:942,column:5}},{start:{line:925,column:4},end:{line:942,column:5}}],line:925},"71":{loc:{start:{line:925,column:8},end:{line:925,column:52}},type:"binary-expr",locations:[{start:{line:925,column:8},end:{line:925,column:30}},{start:{line:925,column:34},end:{line:925,column:52}}],line:925},"72":{loc:{start:{line:934,column:6},end:{line:939,column:7}},type:"if",locations:[{start:{line:934,column:6},end:{line:939,column:7}},{start:{line:934,column:6},end:{line:939,column:7}}],line:934},"73":{loc:{start:{line:945,column:4},end:{line:946,column:67}},type:"if",locations:[{start:{line:945,column:4},end:{line:946,column:67}},{start:{line:945,column:4},end:{line:946,column:67}}],line:945},"74":{loc:{start:{line:945,column:8},end:{line:945,column:67}},type:"binary-expr",locations:[{start:{line:945,column:8},end:{line:945,column:37}},{start:{line:945,column:41},end:{line:945,column:67}}],line:945},"75":{loc:{start:{line:949,column:4},end:{line:954,column:5}},type:"if",locations:[{start:{line:949,column:4},end:{line:954,column:5}},{start:{line:949,column:4},end:{line:954,column:5}}],line:949},"76":{loc:{start:{line:959,column:4},end:{line:960,column:58}},type:"if",locations:[{start:{line:959,column:4},end:{line:960,column:58}},{start:{line:959,column:4},end:{line:960,column:58}}],line:959},"77":{loc:{start:{line:967,column:6},end:{line:968,column:18}},type:"if",locations:[{start:{line:967,column:6},end:{line:968,column:18}},{start:{line:967,column:6},end:{line:968,column:18}}],line:967},"78":{loc:{start:{line:976,column:6},end:{line:977,column:18}},type:"if",locations:[{start:{line:976,column:6},end:{line:977,column:18}},{start:{line:976,column:6},end:{line:977,column:18}}],line:976},"79":{loc:{start:{line:984,column:6},end:{line:985,column:18}},type:"if",locations:[{start:{line:984,column:6},end:{line:985,column:18}},{start:{line:984,column:6},end:{line:985,column:18}}],line:984},"80":{loc:{start:{line:993,column:4},end:{line:997,column:5}},type:"if",locations:[{start:{line:993,column:4},end:{line:997,column:5}},{start:{line:993,column:4},end:{line:997,column:5}}],line:993},"81":{loc:{start:{line:1014,column:6},end:{line:1015,column:21}},type:"if",locations:[{start:{line:1014,column:6},end:{line:1015,column:21}},{start:{line:1014,column:6},end:{line:1015,column:21}}],line:1014},"82":{loc:{start:{line:1032,column:4},end:{line:1033,column:13}},type:"if",locations:[{start:{line:1032,column:4},end:{line:1033,column:13}},{start:{line:1032,column:4},end:{line:1033,column:13}}],line:1032},"83":{loc:{start:{line:1035,column:4},end:{line:1044,column:5}},type:"if",locations:[{start:{line:1035,column:4},end:{line:1044,column:5}},{start:{line:1035,column:4},end:{line:1044,column:5}}],line:1035},"84":{loc:{start:{line:1038,column:6},end:{line:1043,column:7}},type:"if",locations:[{start:{line:1038,column:6},end:{line:1043,column:7}},{start:{line:1038,column:6},end:{line:1043,column:7}}],line:1038},"85":{loc:{start:{line:1074,column:4},end:{line:1075,column:52}},type:"if",locations:[{start:{line:1074,column:4},end:{line:1075,column:52}},{start:{line:1074,column:4},end:{line:1075,column:52}}],line:1074},"86":{loc:{start:{line:1099,column:4},end:{line:1100,column:31}},type:"if",locations:[{start:{line:1099,column:4},end:{line:1100,column:31}},{start:{line:1099,column:4},end:{line:1100,column:31}}],line:1099},"87":{loc:{start:{line:1132,column:6},end:{line:1133,column:17}},type:"if",locations:[{start:{line:1132,column:6},end:{line:1133,column:17}},{start:{line:1132,column:6},end:{line:1133,column:17}}],line:1132},"88":{loc:{start:{line:1181,column:6},end:{line:1182,column:17}},type:"if",locations:[{start:{line:1181,column:6},end:{line:1182,column:17}},{start:{line:1181,column:6},end:{line:1182,column:17}}],line:1181},"89":{loc:{start:{line:1184,column:6},end:{line:1185,column:17}},type:"if",locations:[{start:{line:1184,column:6},end:{line:1185,column:17}},{start:{line:1184,column:6},end:{line:1185,column:17}}],line:1184},"90":{loc:{start:{line:1191,column:6},end:{line:1192,column:14}},type:"if",locations:[{start:{line:1191,column:6},end:{line:1192,column:14}},{start:{line:1191,column:6},end:{line:1192,column:14}}],line:1191},"91":{loc:{start:{line:1196,column:6},end:{line:1197,column:14}},type:"if",locations:[{start:{line:1196,column:6},end:{line:1197,column:14}},{start:{line:1196,column:6},end:{line:1197,column:14}}],line:1196},"92":{loc:{start:{line:1230,column:6},end:{line:1231,column:17}},type:"if",locations:[{start:{line:1230,column:6},end:{line:1231,column:17}},{start:{line:1230,column:6},end:{line:1231,column:17}}],line:1230},"93":{loc:{start:{line:1235,column:6},end:{line:1236,column:17}},type:"if",locations:[{start:{line:1235,column:6},end:{line:1236,column:17}},{start:{line:1235,column:6},end:{line:1236,column:17}}],line:1235},"94":{loc:{start:{line:1272,column:6},end:{line:1273,column:17}},type:"if",locations:[{start:{line:1272,column:6},end:{line:1273,column:17}},{start:{line:1272,column:6},end:{line:1273,column:17}}],line:1272},"95":{loc:{start:{line:1275,column:6},end:{line:1276,column:17}},type:"if",locations:[{start:{line:1275,column:6},end:{line:1276,column:17}},{start:{line:1275,column:6},end:{line:1276,column:17}}],line:1275},"96":{loc:{start:{line:1312,column:6},end:{line:1313,column:17}},type:"if",locations:[{start:{line:1312,column:6},end:{line:1313,column:17}},{start:{line:1312,column:6},end:{line:1313,column:17}}],line:1312},"97":{loc:{start:{line:1317,column:6},end:{line:1318,column:17}},type:"if",locations:[{start:{line:1317,column:6},end:{line:1318,column:17}},{start:{line:1317,column:6},end:{line:1318,column:17}}],line:1317},"98":{loc:{start:{line:1341,column:6},end:{line:1342,column:27}},type:"if",locations:[{start:{line:1341,column:6},end:{line:1342,column:27}},{start:{line:1341,column:6},end:{line:1342,column:27}}],line:1341},"99":{loc:{start:{line:1356,column:6},end:{line:1357,column:20}},type:"if",locations:[{start:{line:1356,column:6},end:{line:1357,column:20}},{start:{line:1356,column:6},end:{line:1357,column:20}}],line:1356},"100":{loc:{start:{line:1375,column:8},end:{line:1376,column:30}},type:"if",locations:[{start:{line:1375,column:8},end:{line:1376,column:30}},{start:{line:1375,column:8},end:{line:1376,column:30}}],line:1375},"101":{loc:{start:{line:1428,column:6},end:{line:1429,column:17}},type:"if",locations:[{start:{line:1428,column:6},end:{line:1429,column:17}},{start:{line:1428,column:6},end:{line:1429,column:17}}],line:1428},"102":{loc:{start:{line:1431,column:6},end:{line:1437,column:7}},type:"if",locations:[{start:{line:1431,column:6},end:{line:1437,column:7}},{start:{line:1431,column:6},end:{line:1437,column:7}}],line:1431},"103":{loc:{start:{line:1439,column:6},end:{line:1445,column:7}},type:"if",locations:[{start:{line:1439,column:6},end:{line:1445,column:7}},{start:{line:1439,column:6},end:{line:1445,column:7}}],line:1439},"104":{loc:{start:{line:1451,column:4},end:{line:1452,column:18}},type:"if",locations:[{start:{line:1451,column:4},end:{line:1452,column:18}},{start:{line:1451,column:4},end:{line:1452,column:18}}],line:1451},"105":{loc:{start:{line:1455,column:4},end:{line:1460,column:5}},type:"if",locations:[{start:{line:1455,column:4},end:{line:1460,column:5}},{start:{line:1455,column:4},end:{line:1460,column:5}}],line:1455},"106":{loc:{start:{line:1457,column:6},end:{line:1458,column:36}},type:"if",locations:[{start:{line:1457,column:6},end:{line:1458,column:36}},{start:{line:1457,column:6},end:{line:1458,column:36}}],line:1457},"107":{loc:{start:{line:1462,column:4},end:{line:1463,column:21}},type:"if",locations:[{start:{line:1462,column:4},end:{line:1463,column:21}},{start:{line:1462,column:4},end:{line:1463,column:21}}],line:1462},"108":{loc:{start:{line:1470,column:6},end:{line:1471,column:48}},type:"if",locations:[{start:{line:1470,column:6},end:{line:1471,column:48}},{start:{line:1470,column:6},end:{line:1471,column:48}}],line:1470},"109":{loc:{start:{line:1512,column:8},end:{line:1523,column:9}},type:"if",locations:[{start:{line:1512,column:8},end:{line:1523,column:9}},{start:{line:1512,column:8},end:{line:1523,column:9}}],line:1512},"110":{loc:{start:{line:1517,column:10},end:{line:1518,column:40}},type:"if",locations:[{start:{line:1517,column:10},end:{line:1518,column:40}},{start:{line:1517,column:10},end:{line:1518,column:40}}],line:1517},"111":{loc:{start:{line:1517,column:14},end:{line:1517,column:48}},type:"binary-expr",locations:[{start:{line:1517,column:14},end:{line:1517,column:30}},{start:{line:1517,column:34},end:{line:1517,column:48}}],line:1517},"112":{loc:{start:{line:1530,column:6},end:{line:1536,column:7}},type:"if",locations:[{start:{line:1530,column:6},end:{line:1536,column:7}},{start:{line:1530,column:6},end:{line:1536,column:7}}],line:1530},"113":{loc:{start:{line:1530,column:10},end:{line:1530,column:39}},type:"binary-expr",locations:[{start:{line:1530,column:10},end:{line:1530,column:17}},{start:{line:1530,column:21},end:{line:1530,column:39}}],line:1530},"114":{loc:{start:{line:1555,column:4},end:{line:1556,column:16}},type:"if",locations:[{start:{line:1555,column:4},end:{line:1556,column:16}},{start:{line:1555,column:4},end:{line:1556,column:16}}],line:1555},"115":{loc:{start:{line:1567,column:6},end:{line:1570,column:7}},type:"if",locations:[{start:{line:1567,column:6},end:{line:1570,column:7}},{start:{line:1567,column:6},end:{line:1570,column:7}}],line:1567},"116":{loc:{start:{line:1587,column:4},end:{line:1588,column:19}},type:"if",locations:[{start:{line:1587,column:4},end:{line:1588,column:19}},{start:{line:1587,column:4},end:{line:1588,column:19}}],line:1587},"117":{loc:{start:{line:1604,column:6},end:{line:1605,column:17}},type:"if",locations:[{start:{line:1604,column:6},end:{line:1605,column:17}},{start:{line:1604,column:6},end:{line:1605,column:17}}],line:1604},"118":{loc:{start:{line:1611,column:6},end:{line:1612,column:34}},type:"if",locations:[{start:{line:1611,column:6},end:{line:1612,column:34}},{start:{line:1611,column:6},end:{line:1612,column:34}}],line:1611},"119":{loc:{start:{line:1628,column:4},end:{line:1629,column:19}},type:"if",locations:[{start:{line:1628,column:4},end:{line:1629,column:19}},{start:{line:1628,column:4},end:{line:1629,column:19}}],line:1628},"120":{loc:{start:{line:1635,column:6},end:{line:1636,column:14}},type:"if",locations:[{start:{line:1635,column:6},end:{line:1636,column:14}},{start:{line:1635,column:6},end:{line:1636,column:14}}],line:1635},"121":{loc:{start:{line:1662,column:6},end:{line:1663,column:20}},type:"if",locations:[{start:{line:1662,column:6},end:{line:1663,column:20}},{start:{line:1662,column:6},end:{line:1663,column:20}}],line:1662},"122":{loc:{start:{line:1700,column:6},end:{line:1704,column:7}},type:"if",locations:[{start:{line:1700,column:6},end:{line:1704,column:7}},{start:{line:1700,column:6},end:{line:1704,column:7}}],line:1700},"123":{loc:{start:{line:1701,column:8},end:{line:1702,column:39}},type:"if",locations:[{start:{line:1701,column:8},end:{line:1702,column:39}},{start:{line:1701,column:8},end:{line:1702,column:39}}],line:1701},"124":{loc:{start:{line:1708,column:6},end:{line:1709,column:37}},type:"if",locations:[{start:{line:1708,column:6},end:{line:1709,column:37}},{start:{line:1708,column:6},end:{line:1709,column:37}}],line:1708},"125":{loc:{start:{line:1729,column:6},end:{line:1733,column:7}},type:"if",locations:[{start:{line:1729,column:6},end:{line:1733,column:7}},{start:{line:1729,column:6},end:{line:1733,column:7}}],line:1729},"126":{loc:{start:{line:1730,column:8},end:{line:1731,column:39}},type:"if",locations:[{start:{line:1730,column:8},end:{line:1731,column:39}},{start:{line:1730,column:8},end:{line:1731,column:39}}],line:1730},"127":{loc:{start:{line:1737,column:6},end:{line:1738,column:37}},type:"if",locations:[{start:{line:1737,column:6},end:{line:1738,column:37}},{start:{line:1737,column:6},end:{line:1738,column:37}}],line:1737},"128":{loc:{start:{line:1803,column:4},end:{line:1804,column:35}},type:"if",locations:[{start:{line:1803,column:4},end:{line:1804,column:35}},{start:{line:1803,column:4},end:{line:1804,column:35}}],line:1803},"129":{loc:{start:{line:1803,column:8},end:{line:1803,column:41}},type:"binary-expr",locations:[{start:{line:1803,column:8},end:{line:1803,column:33}},{start:{line:1803,column:37},end:{line:1803,column:41}}],line:1803},"130":{loc:{start:{line:1829,column:4},end:{line:1830,column:31}},type:"if",locations:[{start:{line:1829,column:4},end:{line:1830,column:31}},{start:{line:1829,column:4},end:{line:1830,column:31}}],line:1829},"131":{loc:{start:{line:1869,column:6},end:{line:1870,column:17}},type:"if",locations:[{start:{line:1869,column:6},end:{line:1870,column:17}},{start:{line:1869,column:6},end:{line:1870,column:17}}],line:1869},"132":{loc:{start:{line:1900,column:4},end:{line:1901,column:28}},type:"if",locations:[{start:{line:1900,column:4},end:{line:1901,column:28}},{start:{line:1900,column:4},end:{line:1901,column:28}}],line:1900},"133":{loc:{start:{line:1905,column:4},end:{line:1906,column:28}},type:"if",locations:[{start:{line:1905,column:4},end:{line:1906,column:28}},{start:{line:1905,column:4},end:{line:1906,column:28}}],line:1905},"134":{loc:{start:{line:1908,column:4},end:{line:1909,column:13}},type:"if",locations:[{start:{line:1908,column:4},end:{line:1909,column:13}},{start:{line:1908,column:4},end:{line:1909,column:13}}],line:1908},"135":{loc:{start:{line:1975,column:11},end:{line:1975,column:61}},type:"binary-expr",locations:[{start:{line:1975,column:11},end:{line:1975,column:24}},{start:{line:1975,column:28},end:{line:1975,column:61}}],line:1975},"136":{loc:{start:{line:1986,column:4},end:{line:1989,column:5}},type:"if",locations:[{start:{line:1986,column:4},end:{line:1989,column:5}},{start:{line:1986,column:4},end:{line:1989,column:5}}],line:1986},"137":{loc:{start:{line:1991,column:4},end:{line:1994,column:5}},type:"if",locations:[{start:{line:1991,column:4},end:{line:1994,column:5}},{start:{line:1991,column:4},end:{line:1994,column:5}}],line:1991},"138":{loc:{start:{line:1996,column:4},end:{line:1999,column:5}},type:"if",locations:[{start:{line:1996,column:4},end:{line:1999,column:5}},{start:{line:1996,column:4},end:{line:1999,column:5}}],line:1996},"139":{loc:{start:{line:2001,column:4},end:{line:2004,column:5}},type:"if",locations:[{start:{line:2001,column:4},end:{line:2004,column:5}},{start:{line:2001,column:4},end:{line:2004,column:5}}],line:2001},"140":{loc:{start:{line:2006,column:4},end:{line:2009,column:5}},type:"if",locations:[{start:{line:2006,column:4},end:{line:2009,column:5}},{start:{line:2006,column:4},end:{line:2009,column:5}}],line:2006},"141":{loc:{start:{line:2011,column:4},end:{line:2014,column:5}},type:"if",locations:[{start:{line:2011,column:4},end:{line:2014,column:5}},{start:{line:2011,column:4},end:{line:2014,column:5}}],line:2011},"142":{loc:{start:{line:2016,column:4},end:{line:2019,column:5}},type:"if",locations:[{start:{line:2016,column:4},end:{line:2019,column:5}},{start:{line:2016,column:4},end:{line:2019,column:5}}],line:2016},"143":{loc:{start:{line:2021,column:4},end:{line:2024,column:5}},type:"if",locations:[{start:{line:2021,column:4},end:{line:2024,column:5}},{start:{line:2021,column:4},end:{line:2024,column:5}}],line:2021},"144":{loc:{start:{line:2026,column:4},end:{line:2029,column:5}},type:"if",locations:[{start:{line:2026,column:4},end:{line:2029,column:5}},{start:{line:2026,column:4},end:{line:2029,column:5}}],line:2026},"145":{loc:{start:{line:2031,column:4},end:{line:2034,column:5}},type:"if",locations:[{start:{line:2031,column:4},end:{line:2034,column:5}},{start:{line:2031,column:4},end:{line:2034,column:5}}],line:2031},"146":{loc:{start:{line:2036,column:4},end:{line:2039,column:5}},type:"if",locations:[{start:{line:2036,column:4},end:{line:2039,column:5}},{start:{line:2036,column:4},end:{line:2039,column:5}}],line:2036},"147":{loc:{start:{line:2041,column:4},end:{line:2044,column:5}},type:"if",locations:[{start:{line:2041,column:4},end:{line:2044,column:5}},{start:{line:2041,column:4},end:{line:2044,column:5}}],line:2041},"148":{loc:{start:{line:2046,column:4},end:{line:2049,column:5}},type:"if",locations:[{start:{line:2046,column:4},end:{line:2049,column:5}},{start:{line:2046,column:4},end:{line:2049,column:5}}],line:2046},"149":{loc:{start:{line:2051,column:4},end:{line:2054,column:5}},type:"if",locations:[{start:{line:2051,column:4},end:{line:2054,column:5}},{start:{line:2051,column:4},end:{line:2054,column:5}}],line:2051},"150":{loc:{start:{line:2056,column:4},end:{line:2059,column:5}},type:"if",locations:[{start:{line:2056,column:4},end:{line:2059,column:5}},{start:{line:2056,column:4},end:{line:2059,column:5}}],line:2056},"151":{loc:{start:{line:2061,column:4},end:{line:2064,column:5}},type:"if",locations:[{start:{line:2061,column:4},end:{line:2064,column:5}},{start:{line:2061,column:4},end:{line:2064,column:5}}],line:2061},"152":{loc:{start:{line:2066,column:4},end:{line:2070,column:5}},type:"if",locations:[{start:{line:2066,column:4},end:{line:2070,column:5}},{start:{line:2066,column:4},end:{line:2070,column:5}}],line:2066},"153":{loc:{start:{line:2072,column:4},end:{line:2075,column:5}},type:"if",locations:[{start:{line:2072,column:4},end:{line:2075,column:5}},{start:{line:2072,column:4},end:{line:2075,column:5}}],line:2072},"154":{loc:{start:{line:2077,column:4},end:{line:2080,column:5}},type:"if",locations:[{start:{line:2077,column:4},end:{line:2080,column:5}},{start:{line:2077,column:4},end:{line:2080,column:5}}],line:2077},"155":{loc:{start:{line:2082,column:4},end:{line:2085,column:5}},type:"if",locations:[{start:{line:2082,column:4},end:{line:2085,column:5}},{start:{line:2082,column:4},end:{line:2085,column:5}}],line:2082},"156":{loc:{start:{line:2087,column:4},end:{line:2091,column:5}},type:"if",locations:[{start:{line:2087,column:4},end:{line:2091,column:5}},{start:{line:2087,column:4},end:{line:2091,column:5}}],line:2087},"157":{loc:{start:{line:2093,column:4},end:{line:2096,column:5}},type:"if",locations:[{start:{line:2093,column:4},end:{line:2096,column:5}},{start:{line:2093,column:4},end:{line:2096,column:5}}],line:2093},"158":{loc:{start:{line:2098,column:4},end:{line:2101,column:5}},type:"if",locations:[{start:{line:2098,column:4},end:{line:2101,column:5}},{start:{line:2098,column:4},end:{line:2101,column:5}}],line:2098},"159":{loc:{start:{line:2103,column:4},end:{line:2106,column:5}},type:"if",locations:[{start:{line:2103,column:4},end:{line:2106,column:5}},{start:{line:2103,column:4},end:{line:2106,column:5}}],line:2103},"160":{loc:{start:{line:2166,column:4},end:{line:2167,column:36}},type:"if",locations:[{start:{line:2166,column:4},end:{line:2167,column:36}},{start:{line:2166,column:4},end:{line:2167,column:36}}],line:2166},"161":{loc:{start:{line:2173,column:4},end:{line:2174,column:16}},type:"if",locations:[{start:{line:2173,column:4},end:{line:2174,column:16}},{start:{line:2173,column:4},end:{line:2174,column:16}}],line:2173},"162":{loc:{start:{line:2186,column:4},end:{line:2187,column:18}},type:"if",locations:[{start:{line:2186,column:4},end:{line:2187,column:18}},{start:{line:2186,column:4},end:{line:2187,column:18}}],line:2186},"163":{loc:{start:{line:2218,column:4},end:{line:2219,column:13}},type:"if",locations:[{start:{line:2218,column:4},end:{line:2219,column:13}},{start:{line:2218,column:4},end:{line:2219,column:13}}],line:2218},"164":{loc:{start:{line:2230,column:4},end:{line:2231,column:13}},type:"if",locations:[{start:{line:2230,column:4},end:{line:2231,column:13}},{start:{line:2230,column:4},end:{line:2231,column:13}}],line:2230},"165":{loc:{start:{line:2239,column:4},end:{line:2240,column:13}},type:"if",locations:[{start:{line:2239,column:4},end:{line:2240,column:13}},{start:{line:2239,column:4},end:{line:2240,column:13}}],line:2239},"166":{loc:{start:{line:2246,column:4},end:{line:2247,column:13}},type:"if",locations:[{start:{line:2246,column:4},end:{line:2247,column:13}},{start:{line:2246,column:4},end:{line:2247,column:13}}],line:2246},"167":{loc:{start:{line:2253,column:4},end:{line:2254,column:13}},type:"if",locations:[{start:{line:2253,column:4},end:{line:2254,column:13}},{start:{line:2253,column:4},end:{line:2254,column:13}}],line:2253},"168":{loc:{start:{line:2260,column:4},end:{line:2261,column:13}},type:"if",locations:[{start:{line:2260,column:4},end:{line:2261,column:13}},{start:{line:2260,column:4},end:{line:2261,column:13}}],line:2260},"169":{loc:{start:{line:2272,column:4},end:{line:2273,column:13}},type:"if",locations:[{start:{line:2272,column:4},end:{line:2273,column:13}},{start:{line:2272,column:4},end:{line:2273,column:13}}],line:2272},"170":{loc:{start:{line:2291,column:4},end:{line:2300,column:5}},type:"if",locations:[{start:{line:2291,column:4},end:{line:2300,column:5}},{start:{line:2291,column:4},end:{line:2300,column:5}}],line:2291},"171":{loc:{start:{line:2302,column:4},end:{line:2310,column:5}},type:"if",locations:[{start:{line:2302,column:4},end:{line:2310,column:5}},{start:{line:2302,column:4},end:{line:2310,column:5}}],line:2302},"172":{loc:{start:{line:2314,column:4},end:{line:2322,column:5}},type:"if",locations:[{start:{line:2314,column:4},end:{line:2322,column:5}},{start:{line:2314,column:4},end:{line:2322,column:5}}],line:2314},"173":{loc:{start:{line:2314,column:8},end:{line:2314,column:48}},type:"binary-expr",locations:[{start:{line:2314,column:8},end:{line:2314,column:12}},{start:{line:2314,column:16},end:{line:2314,column:48}}],line:2314},"174":{loc:{start:{line:2379,column:2},end:{line:2382,column:3}},type:"if",locations:[{start:{line:2379,column:2},end:{line:2382,column:3}},{start:{line:2379,column:2},end:{line:2382,column:3}}],line:2379},"175":{loc:{start:{line:2384,column:2},end:{line:2387,column:3}},type:"if",locations:[{start:{line:2384,column:2},end:{line:2387,column:3}},{start:{line:2384,column:2},end:{line:2387,column:3}}],line:2384},"176":{loc:{start:{line:2392,column:2},end:{line:2395,column:3}},type:"if",locations:[{start:{line:2392,column:2},end:{line:2395,column:3}},{start:{line:2392,column:2},end:{line:2395,column:3}}],line:2392}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":0,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":0,"820":0,"821":0,"822":0,"823":0,"824":0,"825":0,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"836":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":0,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"866":0,"867":0,"868":0,"869":0,"870":0,"871":0,"872":0,"873":0,"874":0,"875":0,"876":0,"877":0,"878":0,"879":0,"880":0,"881":0,"882":0,"883":0,"884":0,"885":0,"886":0,"887":0,"888":0,"889":0,"890":0,"891":0,"892":0,"893":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"24e5522268adb479f977b8c2dcc6682845093de3"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_26fb9b08th=function(){return actualCoverage;};}return actualCoverage;}cov_26fb9b08th();const assert=(cov_26fb9b08th().s[0]++,require('bsert'));const path=(cov_26fb9b08th().s[1]++,require('path'));const EventEmitter=(cov_26fb9b08th().s[2]++,require('events'));const bdb=(cov_26fb9b08th().s[3]++,require('bdb'));const{RollingFilter}=(cov_26fb9b08th().s[4]++,require('bfilter'));const Heap=(cov_26fb9b08th().s[5]++,require('bheep'));const{BufferMap,BufferSet}=(cov_26fb9b08th().s[6]++,require('buffer-map'));const common=(cov_26fb9b08th().s[7]++,require('../blockchain/common'));const consensus=(cov_26fb9b08th().s[8]++,require('../protocol/consensus'));const policy=(cov_26fb9b08th().s[9]++,require('../protocol/policy'));const util=(cov_26fb9b08th().s[10]++,require('../utils/util'));const random=(cov_26fb9b08th().s[11]++,require('bcrypto/lib/random'));const{VerifyError}=(cov_26fb9b08th().s[12]++,require('../protocol/errors'));const Script=(cov_26fb9b08th().s[13]++,require('../script/script'));const Outpoint=(cov_26fb9b08th().s[14]++,require('../primitives/outpoint'));const TX=(cov_26fb9b08th().s[15]++,require('../primitives/tx'));const Coin=(cov_26fb9b08th().s[16]++,require('../primitives/coin'));const TXMeta=(cov_26fb9b08th().s[17]++,require('../primitives/txmeta'));const MempoolEntry=(cov_26fb9b08th().s[18]++,require('./mempoolentry'));const Network=(cov_26fb9b08th().s[19]++,require('../protocol/network'));const layout=(cov_26fb9b08th().s[20]++,require('./layout'));const AddrIndexer=(cov_26fb9b08th().s[21]++,require('./addrindexer'));const Fees=(cov_26fb9b08th().s[22]++,require('./fees'));const CoinView=(cov_26fb9b08th().s[23]++,require('../coins/coinview'));/**
 * Mempool
 * Represents a mempool.
 * @extends EventEmitter
 * @alias module:mempool.Mempool
 */class Mempool extends EventEmitter{/**
   * Create a mempool.
   * @constructor
   * @param {Object} options
   */constructor(options){cov_26fb9b08th().f[0]++;cov_26fb9b08th().s[24]++;super();cov_26fb9b08th().s[25]++;this.opened=false;cov_26fb9b08th().s[26]++;this.options=new MempoolOptions(options);cov_26fb9b08th().s[27]++;this.network=this.options.network;cov_26fb9b08th().s[28]++;this.logger=this.options.logger.context('mempool');cov_26fb9b08th().s[29]++;this.workers=this.options.workers;cov_26fb9b08th().s[30]++;this.chain=this.options.chain;cov_26fb9b08th().s[31]++;this.fees=this.options.fees;cov_26fb9b08th().s[32]++;this.locker=this.chain.locker;cov_26fb9b08th().s[33]++;this.cache=new MempoolCache(this.options);cov_26fb9b08th().s[34]++;this.size=0;cov_26fb9b08th().s[35]++;this.freeCount=0;cov_26fb9b08th().s[36]++;this.lastTime=0;cov_26fb9b08th().s[37]++;this.lastFlush=0;cov_26fb9b08th().s[38]++;this.tip=this.network.genesis.hash;cov_26fb9b08th().s[39]++;this.waiting=new BufferMap();cov_26fb9b08th().s[40]++;this.orphans=new BufferMap();cov_26fb9b08th().s[41]++;this.map=new BufferMap();cov_26fb9b08th().s[42]++;this.spents=new BufferMap();cov_26fb9b08th().s[43]++;this.rejects=new RollingFilter(120000,0.000001);cov_26fb9b08th().s[44]++;this.addrindex=new AddrIndexer(this.network);}/**
   * Open the chain, wait for the database to load.
   * @returns {Promise}
   */async open(){cov_26fb9b08th().f[1]++;cov_26fb9b08th().s[45]++;assert(!this.opened,'Mempool is already open.');cov_26fb9b08th().s[46]++;this.opened=true;cov_26fb9b08th().s[47]++;await this.cache.open();cov_26fb9b08th().s[48]++;if(this.options.persistent){cov_26fb9b08th().b[0][0]++;const entries=(cov_26fb9b08th().s[49]++,await this.cache.getEntries());cov_26fb9b08th().s[50]++;for(const entry of entries){cov_26fb9b08th().s[51]++;this.trackEntry(entry);}cov_26fb9b08th().s[52]++;for(const entry of entries){cov_26fb9b08th().s[53]++;this.updateAncestors(entry,addFee);cov_26fb9b08th().s[54]++;if(this.options.indexAddress){cov_26fb9b08th().b[1][0]++;const view=(cov_26fb9b08th().s[55]++,await this.getCoinView(entry.tx));cov_26fb9b08th().s[56]++;this.indexEntry(entry,view);}else{cov_26fb9b08th().b[1][1]++;}}cov_26fb9b08th().s[57]++;this.logger.info('Loaded mempool from disk (%d entries).',entries.length);cov_26fb9b08th().s[58]++;if(this.fees){cov_26fb9b08th().b[2][0]++;const fees=(cov_26fb9b08th().s[59]++,await this.cache.getFees());cov_26fb9b08th().s[60]++;if(fees){cov_26fb9b08th().b[3][0]++;cov_26fb9b08th().s[61]++;this.fees.inject(fees);cov_26fb9b08th().s[62]++;this.logger.info('Loaded mempool fee data (rate=%d).',this.fees.estimateFee());}else{cov_26fb9b08th().b[3][1]++;}}else{cov_26fb9b08th().b[2][1]++;}}else{cov_26fb9b08th().b[0][1]++;}cov_26fb9b08th().s[63]++;this.tip=this.chain.tip.hash;const size=(cov_26fb9b08th().s[64]++,(this.options.maxSize/1024).toFixed(2));cov_26fb9b08th().s[65]++;this.logger.info('Mempool loaded (maxsize=%dkb).',size);}/**
   * Close the chain, wait for the database to close.
   * @returns {Promise}
   */async close(){cov_26fb9b08th().f[2]++;cov_26fb9b08th().s[66]++;assert(this.opened,'Mempool is not open.');cov_26fb9b08th().s[67]++;this.opened=false;cov_26fb9b08th().s[68]++;return this.cache.close();}/**
   * Notify the mempool that a new block has come
   * in (removes all transactions contained in the
   * block from the mempool).
   * @method
   * @param {ChainEntry} block
   * @param {TX[]} txs
   * @returns {Promise}
   */async addBlock(block,txs){cov_26fb9b08th().f[3]++;const unlock=(cov_26fb9b08th().s[69]++,await this.locker.lock());cov_26fb9b08th().s[70]++;try{cov_26fb9b08th().s[71]++;return await this._addBlock(block,txs);}finally{cov_26fb9b08th().s[72]++;unlock();}}/**
   * Notify the mempool that a new block
   * has come without a lock.
   * @private
   * @param {ChainEntry} block
   * @param {TX[]} txs
   * @returns {Promise}
   */async _addBlock(block,txs){cov_26fb9b08th().f[4]++;cov_26fb9b08th().s[73]++;if(this.map.size===0){cov_26fb9b08th().b[4][0]++;cov_26fb9b08th().s[74]++;this.tip=block.hash;cov_26fb9b08th().s[75]++;return;}else{cov_26fb9b08th().b[4][1]++;}const entries=(cov_26fb9b08th().s[76]++,[]);cov_26fb9b08th().s[77]++;for(let i=(cov_26fb9b08th().s[78]++,txs.length-1);i>=1;i--){const tx=(cov_26fb9b08th().s[79]++,txs[i]);const hash=(cov_26fb9b08th().s[80]++,tx.hash());const entry=(cov_26fb9b08th().s[81]++,this.getEntry(hash));cov_26fb9b08th().s[82]++;if(!entry){cov_26fb9b08th().b[5][0]++;cov_26fb9b08th().s[83]++;this.removeOrphan(hash);cov_26fb9b08th().s[84]++;this.removeDoubleSpends(tx);cov_26fb9b08th().s[85]++;if(this.waiting.has(hash)){cov_26fb9b08th().b[6][0]++;cov_26fb9b08th().s[86]++;await this.handleOrphans(tx);}else{cov_26fb9b08th().b[6][1]++;}cov_26fb9b08th().s[87]++;continue;}else{cov_26fb9b08th().b[5][1]++;}cov_26fb9b08th().s[88]++;this.removeEntry(entry);cov_26fb9b08th().s[89]++;this.emit('confirmed',tx,block);cov_26fb9b08th().s[90]++;entries.push(entry);}// We need to reset the rejects filter periodically.
// There may be a locktime in a TX that is now valid.
cov_26fb9b08th().s[91]++;this.rejects.reset();cov_26fb9b08th().s[92]++;if(this.fees){cov_26fb9b08th().b[7][0]++;cov_26fb9b08th().s[93]++;this.fees.processBlock(block.height,entries,this.chain.synced);cov_26fb9b08th().s[94]++;this.cache.writeFees(this.fees);}else{cov_26fb9b08th().b[7][1]++;}cov_26fb9b08th().s[95]++;this.cache.sync(block.hash);cov_26fb9b08th().s[96]++;await this.cache.flush();cov_26fb9b08th().s[97]++;this.tip=block.hash;cov_26fb9b08th().s[98]++;if(entries.length===0){cov_26fb9b08th().b[8][0]++;cov_26fb9b08th().s[99]++;return;}else{cov_26fb9b08th().b[8][1]++;}cov_26fb9b08th().s[100]++;this.logger.debug('Removed %d txs from mempool for block %d.',entries.length,block.height);}/**
   * Notify the mempool that a block has been disconnected
   * from the main chain (reinserts transactions into the mempool).
   * @method
   * @param {ChainEntry} block
   * @param {TX[]} txs
   * @returns {Promise}
   */async removeBlock(block,txs){cov_26fb9b08th().f[5]++;const unlock=(cov_26fb9b08th().s[101]++,await this.locker.lock());cov_26fb9b08th().s[102]++;try{cov_26fb9b08th().s[103]++;return await this._removeBlock(block,txs);}finally{cov_26fb9b08th().s[104]++;unlock();}}/**
   * Notify the mempool that a block
   * has been disconnected without a lock.
   * @method
   * @private
   * @param {ChainEntry} block
   * @param {TX[]} txs
   * @returns {Promise}
   */async _removeBlock(block,txs){cov_26fb9b08th().f[6]++;cov_26fb9b08th().s[105]++;if(this.map.size===0){cov_26fb9b08th().b[9][0]++;cov_26fb9b08th().s[106]++;this.tip=block.prevBlock;cov_26fb9b08th().s[107]++;return;}else{cov_26fb9b08th().b[9][1]++;}let total=(cov_26fb9b08th().s[108]++,0);cov_26fb9b08th().s[109]++;for(let i=(cov_26fb9b08th().s[110]++,1);i<txs.length;i++){const tx=(cov_26fb9b08th().s[111]++,txs[i]);const hash=(cov_26fb9b08th().s[112]++,tx.hash());cov_26fb9b08th().s[113]++;if(this.hasEntry(hash)){cov_26fb9b08th().b[10][0]++;cov_26fb9b08th().s[114]++;continue;}else{cov_26fb9b08th().b[10][1]++;}cov_26fb9b08th().s[115]++;try{cov_26fb9b08th().s[116]++;await this.insertTX(tx,-1);cov_26fb9b08th().s[117]++;total++;}catch(e){cov_26fb9b08th().s[118]++;this.emit('error',e);cov_26fb9b08th().s[119]++;continue;}cov_26fb9b08th().s[120]++;this.emit('unconfirmed',tx,block);}cov_26fb9b08th().s[121]++;this.rejects.reset();cov_26fb9b08th().s[122]++;this.cache.sync(block.prevBlock);cov_26fb9b08th().s[123]++;await this.cache.flush();cov_26fb9b08th().s[124]++;this.tip=block.prevBlock;cov_26fb9b08th().s[125]++;if(total===0){cov_26fb9b08th().b[11][0]++;cov_26fb9b08th().s[126]++;return;}else{cov_26fb9b08th().b[11][1]++;}cov_26fb9b08th().s[127]++;this.logger.debug('Added %d txs back into the mempool for block %d.',total,block.height);}/**
   * Sanitize the mempool after a reorg.
   * @private
   * @returns {Promise}
   */async _handleReorg(){cov_26fb9b08th().f[7]++;const height=(cov_26fb9b08th().s[128]++,this.chain.height+1);const mtp=(cov_26fb9b08th().s[129]++,await this.chain.getMedianTime(this.chain.tip));const remove=(cov_26fb9b08th().s[130]++,[]);cov_26fb9b08th().s[131]++;for(const[hash,entry]of this.map){const{tx}=(cov_26fb9b08th().s[132]++,entry);cov_26fb9b08th().s[133]++;if(!tx.isFinal(height,mtp)){cov_26fb9b08th().b[12][0]++;cov_26fb9b08th().s[134]++;remove.push(hash);cov_26fb9b08th().s[135]++;continue;}else{cov_26fb9b08th().b[12][1]++;}cov_26fb9b08th().s[136]++;if(tx.version>1){cov_26fb9b08th().b[13][0]++;let hasLocks=(cov_26fb9b08th().s[137]++,false);cov_26fb9b08th().s[138]++;for(const{sequence}of tx.inputs){cov_26fb9b08th().s[139]++;if(!(sequence&consensus.SEQUENCE_DISABLE_FLAG)){cov_26fb9b08th().b[14][0]++;cov_26fb9b08th().s[140]++;hasLocks=true;cov_26fb9b08th().s[141]++;break;}else{cov_26fb9b08th().b[14][1]++;}}cov_26fb9b08th().s[142]++;if(hasLocks){cov_26fb9b08th().b[15][0]++;cov_26fb9b08th().s[143]++;remove.push(hash);cov_26fb9b08th().s[144]++;continue;}else{cov_26fb9b08th().b[15][1]++;}}else{cov_26fb9b08th().b[13][1]++;}cov_26fb9b08th().s[145]++;if(entry.coinbase){cov_26fb9b08th().b[16][0]++;cov_26fb9b08th().s[146]++;remove.push(hash);}else{cov_26fb9b08th().b[16][1]++;}}cov_26fb9b08th().s[147]++;for(const hash of remove){const entry=(cov_26fb9b08th().s[148]++,this.getEntry(hash));cov_26fb9b08th().s[149]++;if(!entry){cov_26fb9b08th().b[17][0]++;cov_26fb9b08th().s[150]++;continue;}else{cov_26fb9b08th().b[17][1]++;}cov_26fb9b08th().s[151]++;this.evictEntry(entry);}}/**
   * Reset the mempool.
   * @method
   * @returns {Promise}
   */async reset(){cov_26fb9b08th().f[8]++;const unlock=(cov_26fb9b08th().s[152]++,await this.locker.lock());cov_26fb9b08th().s[153]++;try{cov_26fb9b08th().s[154]++;return await this._reset();}finally{cov_26fb9b08th().s[155]++;unlock();}}/**
   * Reset the mempool without a lock.
   * @private
   */async _reset(){cov_26fb9b08th().f[9]++;cov_26fb9b08th().s[156]++;this.logger.info('Mempool reset (%d txs removed).',this.map.size);cov_26fb9b08th().s[157]++;this.size=0;cov_26fb9b08th().s[158]++;this.waiting.clear();cov_26fb9b08th().s[159]++;this.orphans.clear();cov_26fb9b08th().s[160]++;this.map.clear();cov_26fb9b08th().s[161]++;this.spents.clear();cov_26fb9b08th().s[162]++;this.addrindex.reset();cov_26fb9b08th().s[163]++;this.freeCount=0;cov_26fb9b08th().s[164]++;this.lastTime=0;cov_26fb9b08th().s[165]++;if(this.fees){cov_26fb9b08th().b[18][0]++;cov_26fb9b08th().s[166]++;this.fees.reset();}else{cov_26fb9b08th().b[18][1]++;}cov_26fb9b08th().s[167]++;this.rejects.reset();cov_26fb9b08th().s[168]++;if(this.options.persistent){cov_26fb9b08th().b[19][0]++;cov_26fb9b08th().s[169]++;await this.cache.wipe();cov_26fb9b08th().s[170]++;this.cache.clear();}else{cov_26fb9b08th().b[19][1]++;}cov_26fb9b08th().s[171]++;this.tip=this.chain.tip.hash;}/**
   * Ensure the size of the mempool stays below `maxSize`.
   * Evicts entries by timestamp and cumulative fee rate.
   * @param {MempoolEntry} added
   * @returns {Promise}
   */limitSize(added){cov_26fb9b08th().f[10]++;const maxSize=(cov_26fb9b08th().s[172]++,this.options.maxSize);cov_26fb9b08th().s[173]++;if(this.size<=maxSize){cov_26fb9b08th().b[20][0]++;cov_26fb9b08th().s[174]++;return false;}else{cov_26fb9b08th().b[20][1]++;}const threshold=(cov_26fb9b08th().s[175]++,maxSize-maxSize/10);const expiryTime=(cov_26fb9b08th().s[176]++,this.options.expiryTime);const now=(cov_26fb9b08th().s[177]++,util.now());let start=(cov_26fb9b08th().s[178]++,util.bench());const queue=(cov_26fb9b08th().s[179]++,new Heap(cmpRate));cov_26fb9b08th().s[180]++;for(const entry of this.map.values()){cov_26fb9b08th().s[181]++;if(this.hasDepends(entry.tx)){cov_26fb9b08th().b[21][0]++;cov_26fb9b08th().s[182]++;continue;}else{cov_26fb9b08th().b[21][1]++;}cov_26fb9b08th().s[183]++;if(now<entry.time+expiryTime){cov_26fb9b08th().b[22][0]++;cov_26fb9b08th().s[184]++;queue.insert(entry);cov_26fb9b08th().s[185]++;continue;}else{cov_26fb9b08th().b[22][1]++;}cov_26fb9b08th().s[186]++;this.logger.debug('Removing package %h from mempool (too old).',entry.hash());cov_26fb9b08th().s[187]++;this.evictEntry(entry);}cov_26fb9b08th().s[188]++;if(this.size<=threshold){cov_26fb9b08th().b[23][0]++;cov_26fb9b08th().s[189]++;return!this.hasEntry(added);}else{cov_26fb9b08th().b[23][1]++;}cov_26fb9b08th().s[190]++;this.logger.debug('(bench) Heap mempool traversal: %d.',util.bench(start));cov_26fb9b08th().s[191]++;start=util.bench();cov_26fb9b08th().s[192]++;this.logger.debug('(bench) Heap mempool queue size: %d.',queue.size());cov_26fb9b08th().s[193]++;while(queue.size()>0){const entry=(cov_26fb9b08th().s[194]++,queue.shift());const hash=(cov_26fb9b08th().s[195]++,entry.hash());cov_26fb9b08th().s[196]++;assert(this.hasEntry(hash));cov_26fb9b08th().s[197]++;this.logger.debug('Removing package %h from mempool (low fee).',entry.hash());cov_26fb9b08th().s[198]++;this.evictEntry(entry);cov_26fb9b08th().s[199]++;if(this.size<=threshold){cov_26fb9b08th().b[24][0]++;cov_26fb9b08th().s[200]++;break;}else{cov_26fb9b08th().b[24][1]++;}}cov_26fb9b08th().s[201]++;this.logger.debug('(bench) Heap mempool map removal: %d.',util.bench(start));cov_26fb9b08th().s[202]++;return!this.hasEntry(added);}/**
   * Retrieve a transaction from the mempool.
   * @param {Hash} hash
   * @returns {TX}
   */getTX(hash){cov_26fb9b08th().f[11]++;const entry=(cov_26fb9b08th().s[203]++,this.map.get(hash));cov_26fb9b08th().s[204]++;if(!entry){cov_26fb9b08th().b[25][0]++;cov_26fb9b08th().s[205]++;return null;}else{cov_26fb9b08th().b[25][1]++;}cov_26fb9b08th().s[206]++;return entry.tx;}/**
   * Retrieve a transaction from the mempool.
   * @param {Hash} hash
   * @returns {MempoolEntry}
   */getEntry(hash){cov_26fb9b08th().f[12]++;cov_26fb9b08th().s[207]++;return this.map.get(hash);}/**
   * Retrieve a coin from the mempool (unspents only).
   * @param {Hash} hash
   * @param {Number} index
   * @returns {Coin}
   */getCoin(hash,index){cov_26fb9b08th().f[13]++;const entry=(cov_26fb9b08th().s[208]++,this.map.get(hash));cov_26fb9b08th().s[209]++;if(!entry){cov_26fb9b08th().b[26][0]++;cov_26fb9b08th().s[210]++;return null;}else{cov_26fb9b08th().b[26][1]++;}cov_26fb9b08th().s[211]++;if(this.isSpent(hash,index)){cov_26fb9b08th().b[27][0]++;cov_26fb9b08th().s[212]++;return null;}else{cov_26fb9b08th().b[27][1]++;}cov_26fb9b08th().s[213]++;if(index>=entry.tx.outputs.length){cov_26fb9b08th().b[28][0]++;cov_26fb9b08th().s[214]++;return null;}else{cov_26fb9b08th().b[28][1]++;}cov_26fb9b08th().s[215]++;return Coin.fromTX(entry.tx,index,-1);}/**
   * Check whether coin is still unspent.
   * @param {Hash} hash
   * @param {Number} index
   * @returns {boolean}
   */hasCoin(hash,index){cov_26fb9b08th().f[14]++;const entry=(cov_26fb9b08th().s[216]++,this.map.get(hash));cov_26fb9b08th().s[217]++;if(!entry){cov_26fb9b08th().b[29][0]++;cov_26fb9b08th().s[218]++;return false;}else{cov_26fb9b08th().b[29][1]++;}cov_26fb9b08th().s[219]++;if(this.isSpent(hash,index)){cov_26fb9b08th().b[30][0]++;cov_26fb9b08th().s[220]++;return false;}else{cov_26fb9b08th().b[30][1]++;}cov_26fb9b08th().s[221]++;if(index>=entry.tx.outputs.length){cov_26fb9b08th().b[31][0]++;cov_26fb9b08th().s[222]++;return false;}else{cov_26fb9b08th().b[31][1]++;}cov_26fb9b08th().s[223]++;return true;}/**
   * Check to see if a coin has been spent. This differs from
   * {@link ChainDB#isSpent} in that it actually maintains a
   * map of spent coins, whereas ChainDB may return `true`
   * for transaction outputs that never existed.
   * @param {Hash} hash
   * @param {Number} index
   * @returns {Boolean}
   */isSpent(hash,index){cov_26fb9b08th().f[15]++;const key=(cov_26fb9b08th().s[224]++,Outpoint.toKey(hash,index));cov_26fb9b08th().s[225]++;return this.spents.has(key);}/**
   * Get an output's spender entry.
   * @param {Hash} hash
   * @param {Number} index
   * @returns {MempoolEntry}
   */getSpent(hash,index){cov_26fb9b08th().f[16]++;const key=(cov_26fb9b08th().s[226]++,Outpoint.toKey(hash,index));cov_26fb9b08th().s[227]++;return this.spents.get(key);}/**
   * Get an output's spender transaction.
   * @param {Hash} hash
   * @param {Number} index
   * @returns {MempoolEntry}
   */getSpentTX(hash,index){cov_26fb9b08th().f[17]++;const key=(cov_26fb9b08th().s[228]++,Outpoint.toKey(hash,index));const entry=(cov_26fb9b08th().s[229]++,this.spents.get(key));cov_26fb9b08th().s[230]++;if(!entry){cov_26fb9b08th().b[32][0]++;cov_26fb9b08th().s[231]++;return null;}else{cov_26fb9b08th().b[32][1]++;}cov_26fb9b08th().s[232]++;return entry.tx;}/**
   * Find all transactions pertaining to a certain address.
   * @param {Address} addr
   * @param {Object} options
   * @param {Number} options.limit
   * @param {Number} options.reverse
   * @param {Buffer} options.after
   * @returns {TX[]}
   */getTXByAddress(addr,options){cov_26fb9b08th().f[18]++;cov_26fb9b08th().s[233]++;return this.addrindex.get(addr,options);}/**
   * Find all transactions pertaining to a certain address.
   * @param {Address} addr
   * @param {Object} options
   * @param {Number} options.limit
   * @param {Number} options.reverse
   * @param {Buffer} options.after
   * @returns {TXMeta[]}
   */getMetaByAddress(addr,options){cov_26fb9b08th().f[19]++;cov_26fb9b08th().s[234]++;return this.addrindex.getMeta(addr,options);}/**
   * Retrieve a transaction from the mempool.
   * @param {Hash} hash
   * @returns {TXMeta}
   */getMeta(hash){cov_26fb9b08th().f[20]++;const entry=(cov_26fb9b08th().s[235]++,this.getEntry(hash));cov_26fb9b08th().s[236]++;if(!entry){cov_26fb9b08th().b[33][0]++;cov_26fb9b08th().s[237]++;return null;}else{cov_26fb9b08th().b[33][1]++;}const meta=(cov_26fb9b08th().s[238]++,TXMeta.fromTX(entry.tx));cov_26fb9b08th().s[239]++;meta.mtime=entry.time;cov_26fb9b08th().s[240]++;return meta;}/**
   * Test the mempool to see if it contains a transaction.
   * @param {Hash} hash
   * @returns {Boolean}
   */hasEntry(hash){cov_26fb9b08th().f[21]++;cov_26fb9b08th().s[241]++;return this.map.has(hash);}/**
   * Test the mempool to see if it
   * contains a transaction or an orphan.
   * @param {Hash} hash
   * @returns {Boolean}
   */has(hash){cov_26fb9b08th().f[22]++;cov_26fb9b08th().s[242]++;if(this.locker.has(hash)){cov_26fb9b08th().b[34][0]++;cov_26fb9b08th().s[243]++;return true;}else{cov_26fb9b08th().b[34][1]++;}cov_26fb9b08th().s[244]++;if(this.hasOrphan(hash)){cov_26fb9b08th().b[35][0]++;cov_26fb9b08th().s[245]++;return true;}else{cov_26fb9b08th().b[35][1]++;}cov_26fb9b08th().s[246]++;return this.hasEntry(hash);}/**
   * Test the mempool to see if it
   * contains a transaction or an orphan.
   * @private
   * @param {Hash} hash
   * @returns {Boolean}
   */exists(hash){cov_26fb9b08th().f[23]++;cov_26fb9b08th().s[247]++;if(this.locker.pending(hash)){cov_26fb9b08th().b[36][0]++;cov_26fb9b08th().s[248]++;return true;}else{cov_26fb9b08th().b[36][1]++;}cov_26fb9b08th().s[249]++;if(this.hasOrphan(hash)){cov_26fb9b08th().b[37][0]++;cov_26fb9b08th().s[250]++;return true;}else{cov_26fb9b08th().b[37][1]++;}cov_26fb9b08th().s[251]++;return this.hasEntry(hash);}/**
   * Test the mempool to see if it
   * contains a recent reject.
   * @param {Hash} hash
   * @returns {Boolean}
   */hasReject(hash){cov_26fb9b08th().f[24]++;cov_26fb9b08th().s[252]++;return this.rejects.test(hash);}/**
   * Add a transaction to the mempool. Note that this
   * will lock the mempool until the transaction is
   * fully processed.
   * @method
   * @param {TX} tx
   * @param {Number?} id
   * @returns {Promise}
   */async addTX(tx,id){cov_26fb9b08th().f[25]++;const hash=(cov_26fb9b08th().s[253]++,tx.hash());const unlock=(cov_26fb9b08th().s[254]++,await this.locker.lock(hash));cov_26fb9b08th().s[255]++;try{cov_26fb9b08th().s[256]++;return await this._addTX(tx,id);}finally{cov_26fb9b08th().s[257]++;unlock();}}/**
   * Add a transaction to the mempool without a lock.
   * @method
   * @private
   * @param {TX} tx
   * @param {Number?} id
   * @returns {Promise}
   */async _addTX(tx,id){cov_26fb9b08th().f[26]++;cov_26fb9b08th().s[258]++;if(id==null){cov_26fb9b08th().b[38][0]++;cov_26fb9b08th().s[259]++;id=-1;}else{cov_26fb9b08th().b[38][1]++;}let missing;cov_26fb9b08th().s[260]++;try{cov_26fb9b08th().s[261]++;missing=await this.insertTX(tx,id);}catch(err){cov_26fb9b08th().s[262]++;if(err.type==='VerifyError'){cov_26fb9b08th().b[39][0]++;cov_26fb9b08th().s[263]++;if((cov_26fb9b08th().b[41][0]++,!tx.hasWitness())&&(cov_26fb9b08th().b[41][1]++,!err.malleated)){cov_26fb9b08th().b[40][0]++;cov_26fb9b08th().s[264]++;this.rejects.add(tx.hash());}else{cov_26fb9b08th().b[40][1]++;}}else{cov_26fb9b08th().b[39][1]++;}cov_26fb9b08th().s[265]++;throw err;}cov_26fb9b08th().s[266]++;if(util.now()-this.lastFlush>10){cov_26fb9b08th().b[42][0]++;cov_26fb9b08th().s[267]++;await this.cache.flush();cov_26fb9b08th().s[268]++;this.lastFlush=util.now();}else{cov_26fb9b08th().b[42][1]++;}cov_26fb9b08th().s[269]++;return missing;}/**
   * Add a transaction to the mempool without a lock.
   * @method
   * @private
   * @param {TX} tx
   * @param {Number?} id
   * @returns {Promise}
   */async insertTX(tx,id){cov_26fb9b08th().f[27]++;cov_26fb9b08th().s[270]++;assert(!tx.mutable,'Cannot add mutable TX to mempool.');const lockFlags=(cov_26fb9b08th().s[271]++,common.lockFlags.STANDARD_LOCKTIME_FLAGS);const height=(cov_26fb9b08th().s[272]++,this.chain.height);const hash=(cov_26fb9b08th().s[273]++,tx.hash());// Basic sanity checks.
// This is important because it ensures
// other functions will be overflow safe.
const[valid,reason,score]=(cov_26fb9b08th().s[274]++,tx.checkSanity());cov_26fb9b08th().s[275]++;if(!valid){cov_26fb9b08th().b[43][0]++;cov_26fb9b08th().s[276]++;throw new VerifyError(tx,'invalid',reason,score);}else{cov_26fb9b08th().b[43][1]++;}// Coinbases are an insta-ban.
// Why? Who knows.
cov_26fb9b08th().s[277]++;if(tx.isCoinbase()){cov_26fb9b08th().b[44][0]++;cov_26fb9b08th().s[278]++;throw new VerifyError(tx,'invalid','coinbase',100);}else{cov_26fb9b08th().b[44][1]++;}// Do not allow CSV until it's activated.
cov_26fb9b08th().s[279]++;if(this.options.requireStandard){cov_26fb9b08th().b[45][0]++;cov_26fb9b08th().s[280]++;if((cov_26fb9b08th().b[47][0]++,!this.chain.state.hasCSV())&&(cov_26fb9b08th().b[47][1]++,tx.version>=2)){cov_26fb9b08th().b[46][0]++;cov_26fb9b08th().s[281]++;throw new VerifyError(tx,'nonstandard','premature-version2-tx',0);}else{cov_26fb9b08th().b[46][1]++;}}else{cov_26fb9b08th().b[45][1]++;}// Do not allow segwit until it's activated.
cov_26fb9b08th().s[282]++;if((cov_26fb9b08th().b[49][0]++,!this.chain.state.hasWitness())&&(cov_26fb9b08th().b[49][1]++,!this.options.prematureWitness)){cov_26fb9b08th().b[48][0]++;cov_26fb9b08th().s[283]++;if(tx.hasWitness()){cov_26fb9b08th().b[50][0]++;cov_26fb9b08th().s[284]++;throw new VerifyError(tx,'nonstandard','no-witness-yet',0,true);}else{cov_26fb9b08th().b[50][1]++;}}else{cov_26fb9b08th().b[48][1]++;}// Non-contextual standardness checks.
cov_26fb9b08th().s[285]++;if(this.options.requireStandard){cov_26fb9b08th().b[51][0]++;const[valid,reason,score]=(cov_26fb9b08th().s[286]++,tx.checkStandard());cov_26fb9b08th().s[287]++;if(!valid){cov_26fb9b08th().b[52][0]++;cov_26fb9b08th().s[288]++;throw new VerifyError(tx,'nonstandard',reason,score);}else{cov_26fb9b08th().b[52][1]++;}cov_26fb9b08th().s[289]++;if(!this.options.replaceByFee){cov_26fb9b08th().b[53][0]++;cov_26fb9b08th().s[290]++;if(tx.isRBF()){cov_26fb9b08th().b[54][0]++;cov_26fb9b08th().s[291]++;throw new VerifyError(tx,'nonstandard','replace-by-fee',0);}else{cov_26fb9b08th().b[54][1]++;}}else{cov_26fb9b08th().b[53][1]++;}}else{cov_26fb9b08th().b[51][1]++;}// Verify transaction finality (see isFinal()).
cov_26fb9b08th().s[292]++;if(!(await this.verifyFinal(tx,lockFlags))){cov_26fb9b08th().b[55][0]++;cov_26fb9b08th().s[293]++;throw new VerifyError(tx,'nonstandard','non-final',0);}else{cov_26fb9b08th().b[55][1]++;}// We can maybe ignore this.
cov_26fb9b08th().s[294]++;if(this.exists(hash)){cov_26fb9b08th().b[56][0]++;cov_26fb9b08th().s[295]++;throw new VerifyError(tx,'alreadyknown','txn-already-in-mempool',0);}else{cov_26fb9b08th().b[56][1]++;}// We can test whether this is an
// non-fully-spent transaction on
// the chain.
cov_26fb9b08th().s[296]++;if(await this.chain.hasCoins(tx)){cov_26fb9b08th().b[57][0]++;cov_26fb9b08th().s[297]++;throw new VerifyError(tx,'alreadyknown','txn-already-known',0);}else{cov_26fb9b08th().b[57][1]++;}// Quick and dirty test to verify we're
// not double-spending an output in the
// mempool.
cov_26fb9b08th().s[298]++;if(this.isDoubleSpend(tx)){cov_26fb9b08th().b[58][0]++;cov_26fb9b08th().s[299]++;this.emit('conflict',tx);cov_26fb9b08th().s[300]++;throw new VerifyError(tx,'duplicate','bad-txns-inputs-spent',0);}else{cov_26fb9b08th().b[58][1]++;}// Get coin viewpoint as it
// pertains to the mempool.
const view=(cov_26fb9b08th().s[301]++,await this.getCoinView(tx));// Maybe store as an orphan.
const missing=(cov_26fb9b08th().s[302]++,this.maybeOrphan(tx,view,id));// Return missing outpoint hashes.
cov_26fb9b08th().s[303]++;if(missing){cov_26fb9b08th().b[59][0]++;cov_26fb9b08th().s[304]++;return missing;}else{cov_26fb9b08th().b[59][1]++;}// Create a new mempool entry
// at current chain height.
const entry=(cov_26fb9b08th().s[305]++,MempoolEntry.fromTX(tx,view,height));// Contextual verification.
cov_26fb9b08th().s[306]++;await this.verify(entry,view);// Add and index the entry.
cov_26fb9b08th().s[307]++;await this.addEntry(entry,view);// Trim size if we're too big.
cov_26fb9b08th().s[308]++;if(this.limitSize(hash)){cov_26fb9b08th().b[60][0]++;cov_26fb9b08th().s[309]++;throw new VerifyError(tx,'insufficientfee','mempool full',0);}else{cov_26fb9b08th().b[60][1]++;}cov_26fb9b08th().s[310]++;return null;}/**
   * Verify a transaction with mempool standards.
   * @method
   * @param {TX} tx
   * @param {CoinView} view
   * @returns {Promise}
   */async verify(entry,view){cov_26fb9b08th().f[28]++;const height=(cov_26fb9b08th().s[311]++,this.chain.height+1);const lockFlags=(cov_26fb9b08th().s[312]++,common.lockFlags.STANDARD_LOCKTIME_FLAGS);const tx=(cov_26fb9b08th().s[313]++,entry.tx);// Verify sequence locks.
cov_26fb9b08th().s[314]++;if(!(await this.verifyLocks(tx,view,lockFlags))){cov_26fb9b08th().b[61][0]++;cov_26fb9b08th().s[315]++;throw new VerifyError(tx,'nonstandard','non-BIP68-final',0);}else{cov_26fb9b08th().b[61][1]++;}// Check input an witness standardness.
cov_26fb9b08th().s[316]++;if(this.options.requireStandard){cov_26fb9b08th().b[62][0]++;cov_26fb9b08th().s[317]++;if(!tx.hasStandardInputs(view)){cov_26fb9b08th().b[63][0]++;cov_26fb9b08th().s[318]++;throw new VerifyError(tx,'nonstandard','bad-txns-nonstandard-inputs',0);}else{cov_26fb9b08th().b[63][1]++;}cov_26fb9b08th().s[319]++;if(this.chain.state.hasWitness()){cov_26fb9b08th().b[64][0]++;cov_26fb9b08th().s[320]++;if(!tx.hasStandardWitness(view)){cov_26fb9b08th().b[65][0]++;cov_26fb9b08th().s[321]++;throw new VerifyError(tx,'nonstandard','bad-witness-nonstandard',0,true);}else{cov_26fb9b08th().b[65][1]++;}}else{cov_26fb9b08th().b[64][1]++;}}else{cov_26fb9b08th().b[62][1]++;}// Annoying process known as sigops counting.
cov_26fb9b08th().s[322]++;if(entry.sigops>policy.MAX_TX_SIGOPS_COST){cov_26fb9b08th().b[66][0]++;cov_26fb9b08th().s[323]++;throw new VerifyError(tx,'nonstandard','bad-txns-too-many-sigops',0);}else{cov_26fb9b08th().b[66][1]++;}// Make sure this guy gave a decent fee.
const minFee=(cov_26fb9b08th().s[324]++,policy.getMinFee(entry.size,this.options.minRelay));cov_26fb9b08th().s[325]++;if((cov_26fb9b08th().b[68][0]++,this.options.relayPriority)&&(cov_26fb9b08th().b[68][1]++,entry.fee<minFee)){cov_26fb9b08th().b[67][0]++;cov_26fb9b08th().s[326]++;if(!entry.isFree(height)){cov_26fb9b08th().b[69][0]++;cov_26fb9b08th().s[327]++;throw new VerifyError(tx,'insufficientfee','insufficient priority',0);}else{cov_26fb9b08th().b[69][1]++;}}else{cov_26fb9b08th().b[67][1]++;}// Continuously rate-limit free (really, very-low-fee)
// transactions. This mitigates 'penny-flooding'.
cov_26fb9b08th().s[328]++;if((cov_26fb9b08th().b[71][0]++,this.options.limitFree)&&(cov_26fb9b08th().b[71][1]++,entry.fee<minFee)){cov_26fb9b08th().b[70][0]++;const now=(cov_26fb9b08th().s[329]++,util.now());// Use an exponentially decaying ~10-minute window.
cov_26fb9b08th().s[330]++;this.freeCount*=Math.pow(1-1/600,now-this.lastTime);cov_26fb9b08th().s[331]++;this.lastTime=now;// The limitFreeRelay unit is thousand-bytes-per-minute
// At default rate it would take over a month to fill 1GB.
cov_26fb9b08th().s[332]++;if(this.freeCount>this.options.limitFreeRelay*10*1000){cov_26fb9b08th().b[72][0]++;cov_26fb9b08th().s[333]++;throw new VerifyError(tx,'insufficientfee','rate limited free transaction',0);}else{cov_26fb9b08th().b[72][1]++;}cov_26fb9b08th().s[334]++;this.freeCount+=entry.size;}else{cov_26fb9b08th().b[70][1]++;}// Important safety feature.
cov_26fb9b08th().s[335]++;if((cov_26fb9b08th().b[74][0]++,this.options.rejectAbsurdFees)&&(cov_26fb9b08th().b[74][1]++,entry.fee>minFee*10000)){cov_26fb9b08th().b[73][0]++;cov_26fb9b08th().s[336]++;throw new VerifyError(tx,'highfee','absurdly-high-fee',0);}else{cov_26fb9b08th().b[73][1]++;}// Why do we have this here? Nested transactions are cool.
cov_26fb9b08th().s[337]++;if(this.countAncestors(entry)+1>this.options.maxAncestors){cov_26fb9b08th().b[75][0]++;cov_26fb9b08th().s[338]++;throw new VerifyError(tx,'nonstandard','too-long-mempool-chain',0);}else{cov_26fb9b08th().b[75][1]++;}// Contextual sanity checks.
const[fee,reason,score]=(cov_26fb9b08th().s[339]++,tx.checkInputs(view,height));cov_26fb9b08th().s[340]++;if(fee===-1){cov_26fb9b08th().b[76][0]++;cov_26fb9b08th().s[341]++;throw new VerifyError(tx,'invalid',reason,score);}else{cov_26fb9b08th().b[76][1]++;}// Script verification.
let flags=(cov_26fb9b08th().s[342]++,Script.flags.STANDARD_VERIFY_FLAGS);cov_26fb9b08th().s[343]++;try{cov_26fb9b08th().s[344]++;await this.verifyInputs(tx,view,flags);}catch(err){cov_26fb9b08th().s[345]++;if(tx.hasWitness()){cov_26fb9b08th().b[77][0]++;cov_26fb9b08th().s[346]++;throw err;}else{cov_26fb9b08th().b[77][1]++;}// Try without segwit and cleanstack.
cov_26fb9b08th().s[347]++;flags&=~Script.flags.VERIFY_WITNESS;cov_26fb9b08th().s[348]++;flags&=~Script.flags.VERIFY_CLEANSTACK;// If it failed, the first verification
// was the only result we needed.
cov_26fb9b08th().s[349]++;if(!(await this.verifyResult(tx,view,flags))){cov_26fb9b08th().b[78][0]++;cov_26fb9b08th().s[350]++;throw err;}else{cov_26fb9b08th().b[78][1]++;}// If it succeeded, segwit may be causing the
// failure. Try with segwit but without cleanstack.
cov_26fb9b08th().s[351]++;flags|=Script.flags.VERIFY_WITNESS;// Cleanstack was causing the failure.
cov_26fb9b08th().s[352]++;if(await this.verifyResult(tx,view,flags)){cov_26fb9b08th().b[79][0]++;cov_26fb9b08th().s[353]++;throw err;}else{cov_26fb9b08th().b[79][1]++;}// Do not insert into reject cache.
cov_26fb9b08th().s[354]++;err.malleated=true;cov_26fb9b08th().s[355]++;throw err;}// Paranoid checks.
cov_26fb9b08th().s[356]++;if(this.options.paranoidChecks){cov_26fb9b08th().b[80][0]++;const flags=(cov_26fb9b08th().s[357]++,Script.flags.MANDATORY_VERIFY_FLAGS);cov_26fb9b08th().s[358]++;assert(await this.verifyResult(tx,view,flags),'BUG: Verify failed for mandatory but not standard.');}else{cov_26fb9b08th().b[80][1]++;}}/**
   * Verify inputs, return a boolean
   * instead of an error based on success.
   * @method
   * @param {TX} tx
   * @param {CoinView} view
   * @param {VerifyFlags} flags
   * @returns {Promise}
   */async verifyResult(tx,view,flags){cov_26fb9b08th().f[29]++;cov_26fb9b08th().s[359]++;try{cov_26fb9b08th().s[360]++;await this.verifyInputs(tx,view,flags);}catch(err){cov_26fb9b08th().s[361]++;if(err.type==='VerifyError'){cov_26fb9b08th().b[81][0]++;cov_26fb9b08th().s[362]++;return false;}else{cov_26fb9b08th().b[81][1]++;}cov_26fb9b08th().s[363]++;throw err;}cov_26fb9b08th().s[364]++;return true;}/**
   * Verify inputs for standard
   * _and_ mandatory flags on failure.
   * @method
   * @param {TX} tx
   * @param {CoinView} view
   * @param {VerifyFlags} flags
   * @returns {Promise}
   */async verifyInputs(tx,view,flags){cov_26fb9b08th().f[30]++;cov_26fb9b08th().s[365]++;if(await tx.verifyAsync(view,flags,this.workers)){cov_26fb9b08th().b[82][0]++;cov_26fb9b08th().s[366]++;return;}else{cov_26fb9b08th().b[82][1]++;}cov_26fb9b08th().s[367]++;if(flags&Script.flags.ONLY_STANDARD_VERIFY_FLAGS){cov_26fb9b08th().b[83][0]++;cov_26fb9b08th().s[368]++;flags&=~Script.flags.ONLY_STANDARD_VERIFY_FLAGS;cov_26fb9b08th().s[369]++;if(await tx.verifyAsync(view,flags,this.workers)){cov_26fb9b08th().b[84][0]++;cov_26fb9b08th().s[370]++;throw new VerifyError(tx,'nonstandard','non-mandatory-script-verify-flag',0);}else{cov_26fb9b08th().b[84][1]++;}}else{cov_26fb9b08th().b[83][1]++;}cov_26fb9b08th().s[371]++;throw new VerifyError(tx,'nonstandard','mandatory-script-verify-flag',100);}/**
   * Add a transaction to the mempool without performing any
   * validation. Note that this method does not lock the mempool
   * and may lend itself to race conditions if used unwisely.
   * This function will also resolve orphans if possible (the
   * resolved orphans _will_ be validated).
   * @method
   * @param {MempoolEntry} entry
   * @param {CoinView} view
   * @returns {Promise}
   */async addEntry(entry,view){cov_26fb9b08th().f[31]++;const tx=(cov_26fb9b08th().s[372]++,entry.tx);cov_26fb9b08th().s[373]++;this.trackEntry(entry,view);cov_26fb9b08th().s[374]++;this.updateAncestors(entry,addFee);cov_26fb9b08th().s[375]++;this.emit('tx',tx,view);cov_26fb9b08th().s[376]++;this.emit('add entry',entry);cov_26fb9b08th().s[377]++;if(this.fees){cov_26fb9b08th().b[85][0]++;cov_26fb9b08th().s[378]++;this.fees.processTX(entry,this.chain.synced);}else{cov_26fb9b08th().b[85][1]++;}cov_26fb9b08th().s[379]++;this.logger.debug('Added %h to mempool (txs=%d).',tx.hash(),this.map.size);cov_26fb9b08th().s[380]++;this.cache.save(entry);cov_26fb9b08th().s[381]++;await this.handleOrphans(tx);}/**
   * Remove a transaction from the mempool.
   * Generally only called when a new block
   * is added to the main chain.
   * @param {MempoolEntry} entry
   */removeEntry(entry){cov_26fb9b08th().f[32]++;const tx=(cov_26fb9b08th().s[382]++,entry.tx);const hash=(cov_26fb9b08th().s[383]++,tx.hash());cov_26fb9b08th().s[384]++;this.untrackEntry(entry);cov_26fb9b08th().s[385]++;if(this.fees){cov_26fb9b08th().b[86][0]++;cov_26fb9b08th().s[386]++;this.fees.removeTX(hash);}else{cov_26fb9b08th().b[86][1]++;}cov_26fb9b08th().s[387]++;this.cache.remove(hash);cov_26fb9b08th().s[388]++;this.emit('remove entry',entry);}/**
   * Remove a transaction from the mempool.
   * Recursively remove its spenders.
   * @param {MempoolEntry} entry
   */evictEntry(entry){cov_26fb9b08th().f[33]++;cov_26fb9b08th().s[389]++;this.removeSpenders(entry);cov_26fb9b08th().s[390]++;this.updateAncestors(entry,removeFee);cov_26fb9b08th().s[391]++;this.removeEntry(entry);}/**
   * Recursively remove spenders of a transaction.
   * @private
   * @param {MempoolEntry} entry
   */removeSpenders(entry){cov_26fb9b08th().f[34]++;const tx=(cov_26fb9b08th().s[392]++,entry.tx);const hash=(cov_26fb9b08th().s[393]++,tx.hash());cov_26fb9b08th().s[394]++;for(let i=(cov_26fb9b08th().s[395]++,0);i<tx.outputs.length;i++){const spender=(cov_26fb9b08th().s[396]++,this.getSpent(hash,i));cov_26fb9b08th().s[397]++;if(!spender){cov_26fb9b08th().b[87][0]++;cov_26fb9b08th().s[398]++;continue;}else{cov_26fb9b08th().b[87][1]++;}cov_26fb9b08th().s[399]++;this.removeSpenders(spender);cov_26fb9b08th().s[400]++;this.removeEntry(spender);}}/**
   * Count the highest number of
   * ancestors a transaction may have.
   * @param {MempoolEntry} entry
   * @returns {Number}
   */countAncestors(entry){cov_26fb9b08th().f[35]++;cov_26fb9b08th().s[401]++;return this._countAncestors(entry,new BufferSet(),entry,nop);}/**
   * Count the highest number of
   * ancestors a transaction may have.
   * Update descendant fees and size.
   * @param {MempoolEntry} entry
   * @param {Function} map
   * @returns {Number}
   */updateAncestors(entry,map){cov_26fb9b08th().f[36]++;cov_26fb9b08th().s[402]++;return this._countAncestors(entry,new BufferSet(),entry,map);}/**
   * Traverse ancestors and count.
   * @private
   * @param {MempoolEntry} entry
   * @param {Object} set
   * @param {MempoolEntry} child
   * @param {Function} map
   * @returns {Number}
   */_countAncestors(entry,set,child,map){cov_26fb9b08th().f[37]++;const tx=(cov_26fb9b08th().s[403]++,entry.tx);cov_26fb9b08th().s[404]++;for(const{prevout}of tx.inputs){const hash=(cov_26fb9b08th().s[405]++,prevout.hash);const parent=(cov_26fb9b08th().s[406]++,this.getEntry(hash));cov_26fb9b08th().s[407]++;if(!parent){cov_26fb9b08th().b[88][0]++;cov_26fb9b08th().s[408]++;continue;}else{cov_26fb9b08th().b[88][1]++;}cov_26fb9b08th().s[409]++;if(set.has(hash)){cov_26fb9b08th().b[89][0]++;cov_26fb9b08th().s[410]++;continue;}else{cov_26fb9b08th().b[89][1]++;}cov_26fb9b08th().s[411]++;set.add(hash);cov_26fb9b08th().s[412]++;map(parent,child);cov_26fb9b08th().s[413]++;if(set.size>this.options.maxAncestors){cov_26fb9b08th().b[90][0]++;cov_26fb9b08th().s[414]++;break;}else{cov_26fb9b08th().b[90][1]++;}cov_26fb9b08th().s[415]++;this._countAncestors(parent,set,child,map);cov_26fb9b08th().s[416]++;if(set.size>this.options.maxAncestors){cov_26fb9b08th().b[91][0]++;cov_26fb9b08th().s[417]++;break;}else{cov_26fb9b08th().b[91][1]++;}}cov_26fb9b08th().s[418]++;return set.size;}/**
   * Count the highest number of
   * descendants a transaction may have.
   * @param {MempoolEntry} entry
   * @returns {Number}
   */countDescendants(entry){cov_26fb9b08th().f[38]++;cov_26fb9b08th().s[419]++;return this._countDescendants(entry,new BufferSet());}/**
   * Count the highest number of
   * descendants a transaction may have.
   * @private
   * @param {MempoolEntry} entry
   * @param {Object} set
   * @returns {Number}
   */_countDescendants(entry,set){cov_26fb9b08th().f[39]++;const tx=(cov_26fb9b08th().s[420]++,entry.tx);const hash=(cov_26fb9b08th().s[421]++,tx.hash());cov_26fb9b08th().s[422]++;for(let i=(cov_26fb9b08th().s[423]++,0);i<tx.outputs.length;i++){const child=(cov_26fb9b08th().s[424]++,this.getSpent(hash,i));cov_26fb9b08th().s[425]++;if(!child){cov_26fb9b08th().b[92][0]++;cov_26fb9b08th().s[426]++;continue;}else{cov_26fb9b08th().b[92][1]++;}const next=(cov_26fb9b08th().s[427]++,child.hash());cov_26fb9b08th().s[428]++;if(set.has(next)){cov_26fb9b08th().b[93][0]++;cov_26fb9b08th().s[429]++;continue;}else{cov_26fb9b08th().b[93][1]++;}cov_26fb9b08th().s[430]++;set.add(next);cov_26fb9b08th().s[431]++;this._countDescendants(child,set);}cov_26fb9b08th().s[432]++;return set.size;}/**
   * Get all transaction ancestors.
   * @param {MempoolEntry} entry
   * @returns {MempoolEntry[]}
   */getAncestors(entry){cov_26fb9b08th().f[40]++;cov_26fb9b08th().s[433]++;return this._getAncestors(entry,[],new BufferSet());}/**
   * Get all transaction ancestors.
   * @private
   * @param {MempoolEntry} entry
   * @param {MempoolEntry[]} entries
   * @param {Object} set
   * @returns {MempoolEntry[]}
   */_getAncestors(entry,entries,set){cov_26fb9b08th().f[41]++;const tx=(cov_26fb9b08th().s[434]++,entry.tx);cov_26fb9b08th().s[435]++;for(const{prevout}of tx.inputs){const hash=(cov_26fb9b08th().s[436]++,prevout.hash);const parent=(cov_26fb9b08th().s[437]++,this.getEntry(hash));cov_26fb9b08th().s[438]++;if(!parent){cov_26fb9b08th().b[94][0]++;cov_26fb9b08th().s[439]++;continue;}else{cov_26fb9b08th().b[94][1]++;}cov_26fb9b08th().s[440]++;if(set.has(hash)){cov_26fb9b08th().b[95][0]++;cov_26fb9b08th().s[441]++;continue;}else{cov_26fb9b08th().b[95][1]++;}cov_26fb9b08th().s[442]++;set.add(hash);cov_26fb9b08th().s[443]++;entries.push(parent);cov_26fb9b08th().s[444]++;this._getAncestors(parent,entries,set);}cov_26fb9b08th().s[445]++;return entries;}/**
   * Get all a transaction descendants.
   * @param {MempoolEntry} entry
   * @returns {MempoolEntry[]}
   */getDescendants(entry){cov_26fb9b08th().f[42]++;cov_26fb9b08th().s[446]++;return this._getDescendants(entry,[],new BufferSet());}/**
   * Get all a transaction descendants.
   * @param {MempoolEntry} entry
   * @param {MempoolEntry[]} entries
   * @param {Object} set
   * @returns {MempoolEntry[]}
   */_getDescendants(entry,entries,set){cov_26fb9b08th().f[43]++;const tx=(cov_26fb9b08th().s[447]++,entry.tx);const hash=(cov_26fb9b08th().s[448]++,tx.hash());cov_26fb9b08th().s[449]++;for(let i=(cov_26fb9b08th().s[450]++,0);i<tx.outputs.length;i++){const child=(cov_26fb9b08th().s[451]++,this.getSpent(hash,i));cov_26fb9b08th().s[452]++;if(!child){cov_26fb9b08th().b[96][0]++;cov_26fb9b08th().s[453]++;continue;}else{cov_26fb9b08th().b[96][1]++;}const next=(cov_26fb9b08th().s[454]++,child.hash());cov_26fb9b08th().s[455]++;if(set.has(next)){cov_26fb9b08th().b[97][0]++;cov_26fb9b08th().s[456]++;continue;}else{cov_26fb9b08th().b[97][1]++;}cov_26fb9b08th().s[457]++;set.add(next);cov_26fb9b08th().s[458]++;entries.push(child);cov_26fb9b08th().s[459]++;this._getDescendants(child,entries,set);}cov_26fb9b08th().s[460]++;return entries;}/**
   * Find a unconfirmed transactions that
   * this transaction depends on.
   * @param {TX} tx
   * @returns {Hash[]}
   */getDepends(tx){cov_26fb9b08th().f[44]++;const prevout=(cov_26fb9b08th().s[461]++,tx.getPrevout());const depends=(cov_26fb9b08th().s[462]++,[]);cov_26fb9b08th().s[463]++;for(const hash of prevout){cov_26fb9b08th().s[464]++;if(this.hasEntry(hash)){cov_26fb9b08th().b[98][0]++;cov_26fb9b08th().s[465]++;depends.push(hash);}else{cov_26fb9b08th().b[98][1]++;}}cov_26fb9b08th().s[466]++;return depends;}/**
   * Test whether a transaction has dependencies.
   * @param {TX} tx
   * @returns {Boolean}
   */hasDepends(tx){cov_26fb9b08th().f[45]++;cov_26fb9b08th().s[467]++;for(const{prevout}of tx.inputs){cov_26fb9b08th().s[468]++;if(this.hasEntry(prevout.hash)){cov_26fb9b08th().b[99][0]++;cov_26fb9b08th().s[469]++;return true;}else{cov_26fb9b08th().b[99][1]++;}}cov_26fb9b08th().s[470]++;return false;}/**
   * Return the full balance of all unspents in the mempool
   * (not very useful in practice, only used for testing).
   * @returns {Amount}
   */getBalance(){cov_26fb9b08th().f[46]++;let total=(cov_26fb9b08th().s[471]++,0);cov_26fb9b08th().s[472]++;for(const[hash,entry]of this.map){const tx=(cov_26fb9b08th().s[473]++,entry.tx);cov_26fb9b08th().s[474]++;for(let i=(cov_26fb9b08th().s[475]++,0);i<tx.outputs.length;i++){const coin=(cov_26fb9b08th().s[476]++,this.getCoin(hash,i));cov_26fb9b08th().s[477]++;if(coin){cov_26fb9b08th().b[100][0]++;cov_26fb9b08th().s[478]++;total+=coin.value;}else{cov_26fb9b08th().b[100][1]++;}}}cov_26fb9b08th().s[479]++;return total;}/**
   * Retrieve _all_ transactions from the mempool.
   * @returns {TX[]}
   */getHistory(){cov_26fb9b08th().f[47]++;const txs=(cov_26fb9b08th().s[480]++,[]);cov_26fb9b08th().s[481]++;for(const entry of this.map.values()){cov_26fb9b08th().s[482]++;txs.push(entry.tx);}cov_26fb9b08th().s[483]++;return txs;}/**
   * Retrieve an orphan transaction.
   * @param {Hash} hash
   * @returns {TX}
   */getOrphan(hash){cov_26fb9b08th().f[48]++;cov_26fb9b08th().s[484]++;return this.orphans.get(hash);}/**
   * @param {Hash} hash
   * @returns {Boolean}
   */hasOrphan(hash){cov_26fb9b08th().f[49]++;cov_26fb9b08th().s[485]++;return this.orphans.has(hash);}/**
   * Maybe store an orphaned transaction.
   * @param {TX} tx
   * @param {CoinView} view
   * @param {Number} id
   */maybeOrphan(tx,view,id){cov_26fb9b08th().f[50]++;const hashes=(cov_26fb9b08th().s[486]++,new BufferSet());const missing=(cov_26fb9b08th().s[487]++,[]);cov_26fb9b08th().s[488]++;for(const{prevout}of tx.inputs){cov_26fb9b08th().s[489]++;if(view.hasEntry(prevout)){cov_26fb9b08th().b[101][0]++;cov_26fb9b08th().s[490]++;continue;}else{cov_26fb9b08th().b[101][1]++;}cov_26fb9b08th().s[491]++;if(this.hasReject(prevout.hash)){cov_26fb9b08th().b[102][0]++;cov_26fb9b08th().s[492]++;this.logger.debug('Not storing orphan %h (rejected parents).',tx.hash());cov_26fb9b08th().s[493]++;this.rejects.add(tx.hash());cov_26fb9b08th().s[494]++;return missing;}else{cov_26fb9b08th().b[102][1]++;}cov_26fb9b08th().s[495]++;if(this.hasEntry(prevout.hash)){cov_26fb9b08th().b[103][0]++;cov_26fb9b08th().s[496]++;this.logger.debug('Not storing orphan %h (non-existent output).',tx.hash());cov_26fb9b08th().s[497]++;this.rejects.add(tx.hash());cov_26fb9b08th().s[498]++;return missing;}else{cov_26fb9b08th().b[103][1]++;}cov_26fb9b08th().s[499]++;hashes.add(prevout.hash);}// Not an orphan.
cov_26fb9b08th().s[500]++;if(hashes.size===0){cov_26fb9b08th().b[104][0]++;cov_26fb9b08th().s[501]++;return null;}else{cov_26fb9b08th().b[104][1]++;}// Weight limit for orphans.
cov_26fb9b08th().s[502]++;if(tx.getWeight()>policy.MAX_TX_WEIGHT){cov_26fb9b08th().b[105][0]++;cov_26fb9b08th().s[503]++;this.logger.debug('Ignoring large orphan: %h',tx.hash());cov_26fb9b08th().s[504]++;if(!tx.hasWitness()){cov_26fb9b08th().b[106][0]++;cov_26fb9b08th().s[505]++;this.rejects.add(tx.hash());}else{cov_26fb9b08th().b[106][1]++;}cov_26fb9b08th().s[506]++;return missing;}else{cov_26fb9b08th().b[105][1]++;}cov_26fb9b08th().s[507]++;if(this.options.maxOrphans===0){cov_26fb9b08th().b[107][0]++;cov_26fb9b08th().s[508]++;return missing;}else{cov_26fb9b08th().b[107][1]++;}cov_26fb9b08th().s[509]++;this.limitOrphans();const hash=(cov_26fb9b08th().s[510]++,tx.hash());cov_26fb9b08th().s[511]++;for(const prev of hashes.keys()){cov_26fb9b08th().s[512]++;if(!this.waiting.has(prev)){cov_26fb9b08th().b[108][0]++;cov_26fb9b08th().s[513]++;this.waiting.set(prev,new BufferSet());}else{cov_26fb9b08th().b[108][1]++;}cov_26fb9b08th().s[514]++;this.waiting.get(prev).add(hash);cov_26fb9b08th().s[515]++;missing.push(prev);}cov_26fb9b08th().s[516]++;this.orphans.set(hash,new Orphan(tx,missing.length,id));cov_26fb9b08th().s[517]++;this.logger.debug('Added orphan %h to mempool.',tx.hash());cov_26fb9b08th().s[518]++;this.emit('add orphan',tx);cov_26fb9b08th().s[519]++;return missing;}/**
   * Resolve orphans and attempt to add to mempool.
   * @method
   * @param {TX} parent
   * @returns {Promise} - Returns {@link TX}[].
   */async handleOrphans(parent){cov_26fb9b08th().f[51]++;const resolved=(cov_26fb9b08th().s[520]++,this.resolveOrphans(parent));cov_26fb9b08th().s[521]++;for(const orphan of resolved){let tx,missing;cov_26fb9b08th().s[522]++;try{cov_26fb9b08th().s[523]++;tx=orphan.toTX();}catch(e){cov_26fb9b08th().s[524]++;this.logger.warning('%s %s','Warning: possible memory corruption.','Orphan failed deserialization.');cov_26fb9b08th().s[525]++;continue;}cov_26fb9b08th().s[526]++;try{cov_26fb9b08th().s[527]++;missing=await this.insertTX(tx,orphan.id);}catch(err){cov_26fb9b08th().s[528]++;if(err.type==='VerifyError'){cov_26fb9b08th().b[109][0]++;cov_26fb9b08th().s[529]++;this.logger.debug('Could not resolve orphan %h: %s.',tx.hash(),err.message);cov_26fb9b08th().s[530]++;if((cov_26fb9b08th().b[111][0]++,!tx.hasWitness())&&(cov_26fb9b08th().b[111][1]++,!err.malleated)){cov_26fb9b08th().b[110][0]++;cov_26fb9b08th().s[531]++;this.rejects.add(tx.hash());}else{cov_26fb9b08th().b[110][1]++;}cov_26fb9b08th().s[532]++;this.emit('bad orphan',err,orphan.id);cov_26fb9b08th().s[533]++;continue;}else{cov_26fb9b08th().b[109][1]++;}cov_26fb9b08th().s[534]++;throw err;}// Can happen if an existing parent is
// evicted in the interim between fetching
// the non-present parents.
cov_26fb9b08th().s[535]++;if((cov_26fb9b08th().b[113][0]++,missing)&&(cov_26fb9b08th().b[113][1]++,missing.length>0)){cov_26fb9b08th().b[112][0]++;cov_26fb9b08th().s[536]++;this.logger.debug('Transaction %h was double-orphaned in mempool.',tx.hash());cov_26fb9b08th().s[537]++;this.removeOrphan(tx.hash());cov_26fb9b08th().s[538]++;continue;}else{cov_26fb9b08th().b[112][1]++;}cov_26fb9b08th().s[539]++;this.logger.debug('Resolved orphan %h in mempool.',tx.hash());}}/**
   * Potentially resolve any transactions
   * that redeem the passed-in transaction.
   * Deletes all orphan entries and
   * returns orphan objects.
   * @param {TX} parent
   * @returns {Orphan[]}
   */resolveOrphans(parent){cov_26fb9b08th().f[52]++;const hash=(cov_26fb9b08th().s[540]++,parent.hash());const set=(cov_26fb9b08th().s[541]++,this.waiting.get(hash));cov_26fb9b08th().s[542]++;if(!set){cov_26fb9b08th().b[114][0]++;cov_26fb9b08th().s[543]++;return[];}else{cov_26fb9b08th().b[114][1]++;}cov_26fb9b08th().s[544]++;assert(set.size>0);const resolved=(cov_26fb9b08th().s[545]++,[]);cov_26fb9b08th().s[546]++;for(const hash of set.keys()){const orphan=(cov_26fb9b08th().s[547]++,this.getOrphan(hash));cov_26fb9b08th().s[548]++;assert(orphan);cov_26fb9b08th().s[549]++;if(--orphan.missing===0){cov_26fb9b08th().b[115][0]++;cov_26fb9b08th().s[550]++;this.orphans.delete(hash);cov_26fb9b08th().s[551]++;resolved.push(orphan);}else{cov_26fb9b08th().b[115][1]++;}}cov_26fb9b08th().s[552]++;this.waiting.delete(hash);cov_26fb9b08th().s[553]++;return resolved;}/**
   * Remove a transaction from the mempool.
   * @param {Hash} tx
   * @returns {Boolean}
   */removeOrphan(hash){cov_26fb9b08th().f[53]++;const orphan=(cov_26fb9b08th().s[554]++,this.getOrphan(hash));cov_26fb9b08th().s[555]++;if(!orphan){cov_26fb9b08th().b[116][0]++;cov_26fb9b08th().s[556]++;return false;}else{cov_26fb9b08th().b[116][1]++;}let tx;cov_26fb9b08th().s[557]++;try{cov_26fb9b08th().s[558]++;tx=orphan.toTX();}catch(e){cov_26fb9b08th().s[559]++;this.orphans.delete(hash);cov_26fb9b08th().s[560]++;this.logger.warning('%s %s','Warning: possible memory corruption.','Orphan failed deserialization.');cov_26fb9b08th().s[561]++;return false;}cov_26fb9b08th().s[562]++;for(const prev of tx.getPrevout()){const set=(cov_26fb9b08th().s[563]++,this.waiting.get(prev));cov_26fb9b08th().s[564]++;if(!set){cov_26fb9b08th().b[117][0]++;cov_26fb9b08th().s[565]++;continue;}else{cov_26fb9b08th().b[117][1]++;}cov_26fb9b08th().s[566]++;assert(set.has(hash));cov_26fb9b08th().s[567]++;set.delete(hash);cov_26fb9b08th().s[568]++;if(set.size===0){cov_26fb9b08th().b[118][0]++;cov_26fb9b08th().s[569]++;this.waiting.delete(prev);}else{cov_26fb9b08th().b[118][1]++;}}cov_26fb9b08th().s[570]++;this.orphans.delete(hash);cov_26fb9b08th().s[571]++;this.emit('remove orphan',tx);cov_26fb9b08th().s[572]++;return true;}/**
   * Remove a random orphan transaction from the mempool.
   * @returns {Boolean}
   */limitOrphans(){cov_26fb9b08th().f[54]++;cov_26fb9b08th().s[573]++;if(this.orphans.size<this.options.maxOrphans){cov_26fb9b08th().b[119][0]++;cov_26fb9b08th().s[574]++;return false;}else{cov_26fb9b08th().b[119][1]++;}let index=(cov_26fb9b08th().s[575]++,random.randomRange(0,this.orphans.size));let hash;cov_26fb9b08th().s[576]++;for(hash of this.orphans.keys()){cov_26fb9b08th().s[577]++;if(index===0){cov_26fb9b08th().b[120][0]++;cov_26fb9b08th().s[578]++;break;}else{cov_26fb9b08th().b[120][1]++;}cov_26fb9b08th().s[579]++;index--;}cov_26fb9b08th().s[580]++;assert(hash);cov_26fb9b08th().s[581]++;this.logger.debug('Removing orphan %h from mempool.',hash);cov_26fb9b08th().s[582]++;this.removeOrphan(hash);cov_26fb9b08th().s[583]++;return true;}/**
   * Test all of a transactions outpoints to see if they are doublespends.
   * Note that this will only test against the mempool spents, not the
   * blockchain's. The blockchain spents are not checked against because
   * the blockchain does not maintain a spent list. The transaction will
   * be seen as an orphan rather than a double spend.
   * @param {TX} tx
   * @returns {Promise} - Returns Boolean.
   */isDoubleSpend(tx){cov_26fb9b08th().f[55]++;cov_26fb9b08th().s[584]++;for(const{prevout}of tx.inputs){const{hash,index}=(cov_26fb9b08th().s[585]++,prevout);cov_26fb9b08th().s[586]++;if(this.isSpent(hash,index)){cov_26fb9b08th().b[121][0]++;cov_26fb9b08th().s[587]++;return true;}else{cov_26fb9b08th().b[121][1]++;}}cov_26fb9b08th().s[588]++;return false;}/**
   * Get coin viewpoint (lock).
   * Note: this does not return
   * historical view of coins from the indexers.
   * @method
   * @param {TX} tx
   * @returns {Promise} - Returns {@link CoinView}.
   */async getSpentView(tx){cov_26fb9b08th().f[56]++;const unlock=(cov_26fb9b08th().s[589]++,await this.locker.lock());cov_26fb9b08th().s[590]++;try{cov_26fb9b08th().s[591]++;return await this._getSpentView(tx);}finally{cov_26fb9b08th().s[592]++;unlock();}}/**
   * Get coin viewpoint
   * @param {TX} tx
   * @returns {Promise} - Returns {@link CoinView}
   */async _getSpentView(tx){cov_26fb9b08th().f[57]++;const view=(cov_26fb9b08th().s[593]++,new CoinView());cov_26fb9b08th().s[594]++;for(const{prevout}of tx.inputs){const{hash,index}=(cov_26fb9b08th().s[595]++,prevout);const tx=(cov_26fb9b08th().s[596]++,this.getTX(hash));cov_26fb9b08th().s[597]++;if(tx){cov_26fb9b08th().b[122][0]++;cov_26fb9b08th().s[598]++;if(index<tx.outputs.length){cov_26fb9b08th().b[123][0]++;cov_26fb9b08th().s[599]++;view.addIndex(tx,index,-1);}else{cov_26fb9b08th().b[123][1]++;}cov_26fb9b08th().s[600]++;continue;}else{cov_26fb9b08th().b[122][1]++;}const coin=(cov_26fb9b08th().s[601]++,await this.chain.readCoin(prevout));cov_26fb9b08th().s[602]++;if(coin){cov_26fb9b08th().b[124][0]++;cov_26fb9b08th().s[603]++;view.addEntry(prevout,coin);}else{cov_26fb9b08th().b[124][1]++;}}cov_26fb9b08th().s[604]++;return view;}/**
   * Get coin viewpoint (no lock).
   * @method
   * @param {TX} tx
   * @returns {Promise} - Returns {@link CoinView}.
   */async getCoinView(tx){cov_26fb9b08th().f[58]++;const view=(cov_26fb9b08th().s[605]++,new CoinView());cov_26fb9b08th().s[606]++;for(const{prevout}of tx.inputs){const{hash,index}=(cov_26fb9b08th().s[607]++,prevout);const tx=(cov_26fb9b08th().s[608]++,this.getTX(hash));cov_26fb9b08th().s[609]++;if(tx){cov_26fb9b08th().b[125][0]++;cov_26fb9b08th().s[610]++;if(this.hasCoin(hash,index)){cov_26fb9b08th().b[126][0]++;cov_26fb9b08th().s[611]++;view.addIndex(tx,index,-1);}else{cov_26fb9b08th().b[126][1]++;}cov_26fb9b08th().s[612]++;continue;}else{cov_26fb9b08th().b[125][1]++;}const coin=(cov_26fb9b08th().s[613]++,await this.chain.readCoin(prevout));cov_26fb9b08th().s[614]++;if(coin){cov_26fb9b08th().b[127][0]++;cov_26fb9b08th().s[615]++;view.addEntry(prevout,coin);}else{cov_26fb9b08th().b[127][1]++;}}cov_26fb9b08th().s[616]++;return view;}/**
   * Get a snapshot of all transaction hashes in the mempool. Used
   * for generating INV packets in response to MEMPOOL packets.
   * @returns {Hash[]}
   */getSnapshot(){cov_26fb9b08th().f[59]++;const keys=(cov_26fb9b08th().s[617]++,[]);cov_26fb9b08th().s[618]++;for(const hash of this.map.keys()){cov_26fb9b08th().s[619]++;keys.push(hash);}cov_26fb9b08th().s[620]++;return keys;}/**
   * Check sequence locks on a transaction against the current tip.
   * @param {TX} tx
   * @param {CoinView} view
   * @param {LockFlags} flags
   * @returns {Promise} - Returns Boolean.
   */verifyLocks(tx,view,flags){cov_26fb9b08th().f[60]++;cov_26fb9b08th().s[621]++;return this.chain.verifyLocks(this.chain.tip,tx,view,flags);}/**
   * Check locktime on a transaction against the current tip.
   * @param {TX} tx
   * @param {LockFlags} flags
   * @returns {Promise} - Returns Boolean.
   */verifyFinal(tx,flags){cov_26fb9b08th().f[61]++;cov_26fb9b08th().s[622]++;return this.chain.verifyFinal(this.chain.tip,tx,flags);}/**
   * Map a transaction to the mempool.
   * @private
   * @param {MempoolEntry} entry
   * @param {CoinView} view
   */trackEntry(entry,view){cov_26fb9b08th().f[62]++;const tx=(cov_26fb9b08th().s[623]++,entry.tx);const hash=(cov_26fb9b08th().s[624]++,tx.hash());cov_26fb9b08th().s[625]++;assert(!this.map.has(hash));cov_26fb9b08th().s[626]++;this.map.set(hash,entry);cov_26fb9b08th().s[627]++;assert(!tx.isCoinbase());cov_26fb9b08th().s[628]++;for(const{prevout}of tx.inputs){const key=(cov_26fb9b08th().s[629]++,prevout.toKey());cov_26fb9b08th().s[630]++;this.spents.set(key,entry);}cov_26fb9b08th().s[631]++;if((cov_26fb9b08th().b[129][0]++,this.options.indexAddress)&&(cov_26fb9b08th().b[129][1]++,view)){cov_26fb9b08th().b[128][0]++;cov_26fb9b08th().s[632]++;this.indexEntry(entry,view);}else{cov_26fb9b08th().b[128][1]++;}cov_26fb9b08th().s[633]++;this.size+=entry.memUsage();}/**
   * Unmap a transaction from the mempool.
   * @private
   * @param {MempoolEntry} entry
   */untrackEntry(entry){cov_26fb9b08th().f[63]++;const tx=(cov_26fb9b08th().s[634]++,entry.tx);const hash=(cov_26fb9b08th().s[635]++,tx.hash());cov_26fb9b08th().s[636]++;assert(this.map.has(hash));cov_26fb9b08th().s[637]++;this.map.delete(hash);cov_26fb9b08th().s[638]++;assert(!tx.isCoinbase());cov_26fb9b08th().s[639]++;for(const{prevout}of tx.inputs){const key=(cov_26fb9b08th().s[640]++,prevout.toKey());cov_26fb9b08th().s[641]++;this.spents.delete(key);}cov_26fb9b08th().s[642]++;if(this.options.indexAddress){cov_26fb9b08th().b[130][0]++;cov_26fb9b08th().s[643]++;this.unindexEntry(entry);}else{cov_26fb9b08th().b[130][1]++;}cov_26fb9b08th().s[644]++;this.size-=entry.memUsage();}/**
   * Index an entry by address.
   * @private
   * @param {MempoolEntry} entry
   * @param {CoinView} view
   */indexEntry(entry,view){cov_26fb9b08th().f[64]++;cov_26fb9b08th().s[645]++;this.addrindex.insert(entry,view);}/**
   * Unindex an entry by address.
   * @private
   * @param {MempoolEntry} entry
   */unindexEntry(entry){cov_26fb9b08th().f[65]++;const hash=(cov_26fb9b08th().s[646]++,entry.tx.hash());cov_26fb9b08th().s[647]++;this.addrindex.remove(hash);}/**
   * Recursively remove double spenders
   * of a mined transaction's outpoints.
   * @private
   * @param {TX} tx
   */removeDoubleSpends(tx){cov_26fb9b08th().f[66]++;cov_26fb9b08th().s[648]++;for(const{prevout}of tx.inputs){const{hash,index}=(cov_26fb9b08th().s[649]++,prevout);const spent=(cov_26fb9b08th().s[650]++,this.getSpent(hash,index));cov_26fb9b08th().s[651]++;if(!spent){cov_26fb9b08th().b[131][0]++;cov_26fb9b08th().s[652]++;continue;}else{cov_26fb9b08th().b[131][1]++;}cov_26fb9b08th().s[653]++;this.logger.debug('Removing double spender from mempool: %h.',spent.hash());cov_26fb9b08th().s[654]++;this.evictEntry(spent);cov_26fb9b08th().s[655]++;this.emit('double spend',spent);}}/**
   * Calculate the memory usage of the entire mempool.
   * @see DynamicMemoryUsage()
   * @returns {Number} Usage in bytes.
   */getSize(){cov_26fb9b08th().f[67]++;cov_26fb9b08th().s[656]++;return this.size;}/**
   * Prioritise transaction.
   * @param {MempoolEntry} entry
   * @param {Number} pri
   * @param {Amount} fee
   */prioritise(entry,pri,fee){cov_26fb9b08th().f[68]++;cov_26fb9b08th().s[657]++;if(-pri>entry.priority){cov_26fb9b08th().b[132][0]++;cov_26fb9b08th().s[658]++;pri=-entry.priority;}else{cov_26fb9b08th().b[132][1]++;}cov_26fb9b08th().s[659]++;entry.priority+=pri;cov_26fb9b08th().s[660]++;if(-fee>entry.deltaFee){cov_26fb9b08th().b[133][0]++;cov_26fb9b08th().s[661]++;fee=-entry.deltaFee;}else{cov_26fb9b08th().b[133][1]++;}cov_26fb9b08th().s[662]++;if(fee===0){cov_26fb9b08th().b[134][0]++;cov_26fb9b08th().s[663]++;return;}else{cov_26fb9b08th().b[134][1]++;}cov_26fb9b08th().s[664]++;this.updateAncestors(entry,prePrioritise);cov_26fb9b08th().s[665]++;entry.deltaFee+=fee;cov_26fb9b08th().s[666]++;entry.descFee+=fee;cov_26fb9b08th().s[667]++;this.updateAncestors(entry,postPrioritise);}}/**
 * Mempool Options
 * @alias module:mempool.MempoolOptions
 */class MempoolOptions{/**
   * Create mempool options.
   * @constructor
   * @param {Object}
   */constructor(options){cov_26fb9b08th().f[69]++;cov_26fb9b08th().s[668]++;this.network=Network.primary;cov_26fb9b08th().s[669]++;this.chain=null;cov_26fb9b08th().s[670]++;this.logger=null;cov_26fb9b08th().s[671]++;this.workers=null;cov_26fb9b08th().s[672]++;this.fees=null;cov_26fb9b08th().s[673]++;this.limitFree=true;cov_26fb9b08th().s[674]++;this.limitFreeRelay=15;cov_26fb9b08th().s[675]++;this.relayPriority=true;cov_26fb9b08th().s[676]++;this.requireStandard=this.network.requireStandard;cov_26fb9b08th().s[677]++;this.rejectAbsurdFees=true;cov_26fb9b08th().s[678]++;this.prematureWitness=false;cov_26fb9b08th().s[679]++;this.paranoidChecks=false;cov_26fb9b08th().s[680]++;this.replaceByFee=false;cov_26fb9b08th().s[681]++;this.maxSize=policy.MEMPOOL_MAX_SIZE;cov_26fb9b08th().s[682]++;this.maxOrphans=policy.MEMPOOL_MAX_ORPHANS;cov_26fb9b08th().s[683]++;this.maxAncestors=policy.MEMPOOL_MAX_ANCESTORS;cov_26fb9b08th().s[684]++;this.expiryTime=policy.MEMPOOL_EXPIRY_TIME;cov_26fb9b08th().s[685]++;this.minRelay=this.network.minRelay;cov_26fb9b08th().s[686]++;this.prefix=null;cov_26fb9b08th().s[687]++;this.location=null;cov_26fb9b08th().s[688]++;this.memory=true;cov_26fb9b08th().s[689]++;this.maxFiles=64;cov_26fb9b08th().s[690]++;this.cacheSize=32<<20;cov_26fb9b08th().s[691]++;this.compression=true;cov_26fb9b08th().s[692]++;this.persistent=false;cov_26fb9b08th().s[693]++;this.fromOptions(options);}/**
   * Inject properties from object.
   * @private
   * @param {Object} options
   * @returns {MempoolOptions}
   */fromOptions(options){cov_26fb9b08th().f[70]++;cov_26fb9b08th().s[694]++;assert(options,'Mempool requires options.');cov_26fb9b08th().s[695]++;assert((cov_26fb9b08th().b[135][0]++,options.chain)&&(cov_26fb9b08th().b[135][1]++,typeof options.chain==='object'),'Mempool requires a blockchain.');cov_26fb9b08th().s[696]++;this.chain=options.chain;cov_26fb9b08th().s[697]++;this.network=options.chain.network;cov_26fb9b08th().s[698]++;this.logger=options.chain.logger;cov_26fb9b08th().s[699]++;this.workers=options.chain.workers;cov_26fb9b08th().s[700]++;this.requireStandard=this.network.requireStandard;cov_26fb9b08th().s[701]++;this.minRelay=this.network.minRelay;cov_26fb9b08th().s[702]++;if(options.logger!=null){cov_26fb9b08th().b[136][0]++;cov_26fb9b08th().s[703]++;assert(typeof options.logger==='object');cov_26fb9b08th().s[704]++;this.logger=options.logger;}else{cov_26fb9b08th().b[136][1]++;}cov_26fb9b08th().s[705]++;if(options.workers!=null){cov_26fb9b08th().b[137][0]++;cov_26fb9b08th().s[706]++;assert(typeof options.workers==='object');cov_26fb9b08th().s[707]++;this.workers=options.workers;}else{cov_26fb9b08th().b[137][1]++;}cov_26fb9b08th().s[708]++;if(options.fees!=null){cov_26fb9b08th().b[138][0]++;cov_26fb9b08th().s[709]++;assert(typeof options.fees==='object');cov_26fb9b08th().s[710]++;this.fees=options.fees;}else{cov_26fb9b08th().b[138][1]++;}cov_26fb9b08th().s[711]++;if(options.limitFree!=null){cov_26fb9b08th().b[139][0]++;cov_26fb9b08th().s[712]++;assert(typeof options.limitFree==='boolean');cov_26fb9b08th().s[713]++;this.limitFree=options.limitFree;}else{cov_26fb9b08th().b[139][1]++;}cov_26fb9b08th().s[714]++;if(options.limitFreeRelay!=null){cov_26fb9b08th().b[140][0]++;cov_26fb9b08th().s[715]++;assert(options.limitFreeRelay>>>0===options.limitFreeRelay);cov_26fb9b08th().s[716]++;this.limitFreeRelay=options.limitFreeRelay;}else{cov_26fb9b08th().b[140][1]++;}cov_26fb9b08th().s[717]++;if(options.relayPriority!=null){cov_26fb9b08th().b[141][0]++;cov_26fb9b08th().s[718]++;assert(typeof options.relayPriority==='boolean');cov_26fb9b08th().s[719]++;this.relayPriority=options.relayPriority;}else{cov_26fb9b08th().b[141][1]++;}cov_26fb9b08th().s[720]++;if(options.requireStandard!=null){cov_26fb9b08th().b[142][0]++;cov_26fb9b08th().s[721]++;assert(typeof options.requireStandard==='boolean');cov_26fb9b08th().s[722]++;this.requireStandard=options.requireStandard;}else{cov_26fb9b08th().b[142][1]++;}cov_26fb9b08th().s[723]++;if(options.rejectAbsurdFees!=null){cov_26fb9b08th().b[143][0]++;cov_26fb9b08th().s[724]++;assert(typeof options.rejectAbsurdFees==='boolean');cov_26fb9b08th().s[725]++;this.rejectAbsurdFees=options.rejectAbsurdFees;}else{cov_26fb9b08th().b[143][1]++;}cov_26fb9b08th().s[726]++;if(options.prematureWitness!=null){cov_26fb9b08th().b[144][0]++;cov_26fb9b08th().s[727]++;assert(typeof options.prematureWitness==='boolean');cov_26fb9b08th().s[728]++;this.prematureWitness=options.prematureWitness;}else{cov_26fb9b08th().b[144][1]++;}cov_26fb9b08th().s[729]++;if(options.paranoidChecks!=null){cov_26fb9b08th().b[145][0]++;cov_26fb9b08th().s[730]++;assert(typeof options.paranoidChecks==='boolean');cov_26fb9b08th().s[731]++;this.paranoidChecks=options.paranoidChecks;}else{cov_26fb9b08th().b[145][1]++;}cov_26fb9b08th().s[732]++;if(options.replaceByFee!=null){cov_26fb9b08th().b[146][0]++;cov_26fb9b08th().s[733]++;assert(typeof options.replaceByFee==='boolean');cov_26fb9b08th().s[734]++;this.replaceByFee=options.replaceByFee;}else{cov_26fb9b08th().b[146][1]++;}cov_26fb9b08th().s[735]++;if(options.maxSize!=null){cov_26fb9b08th().b[147][0]++;cov_26fb9b08th().s[736]++;assert(options.maxSize>>>0===options.maxSize);cov_26fb9b08th().s[737]++;this.maxSize=options.maxSize;}else{cov_26fb9b08th().b[147][1]++;}cov_26fb9b08th().s[738]++;if(options.maxOrphans!=null){cov_26fb9b08th().b[148][0]++;cov_26fb9b08th().s[739]++;assert(options.maxOrphans>>>0===options.maxOrphans);cov_26fb9b08th().s[740]++;this.maxOrphans=options.maxOrphans;}else{cov_26fb9b08th().b[148][1]++;}cov_26fb9b08th().s[741]++;if(options.maxAncestors!=null){cov_26fb9b08th().b[149][0]++;cov_26fb9b08th().s[742]++;assert(options.maxAncestors>>>0===options.maxAncestors);cov_26fb9b08th().s[743]++;this.maxAncestors=options.maxAncestors;}else{cov_26fb9b08th().b[149][1]++;}cov_26fb9b08th().s[744]++;if(options.expiryTime!=null){cov_26fb9b08th().b[150][0]++;cov_26fb9b08th().s[745]++;assert(options.expiryTime>>>0===options.expiryTime);cov_26fb9b08th().s[746]++;this.expiryTime=options.expiryTime;}else{cov_26fb9b08th().b[150][1]++;}cov_26fb9b08th().s[747]++;if(options.minRelay!=null){cov_26fb9b08th().b[151][0]++;cov_26fb9b08th().s[748]++;assert(options.minRelay>>>0===options.minRelay);cov_26fb9b08th().s[749]++;this.minRelay=options.minRelay;}else{cov_26fb9b08th().b[151][1]++;}cov_26fb9b08th().s[750]++;if(options.prefix!=null){cov_26fb9b08th().b[152][0]++;cov_26fb9b08th().s[751]++;assert(typeof options.prefix==='string');cov_26fb9b08th().s[752]++;this.prefix=options.prefix;cov_26fb9b08th().s[753]++;this.location=path.join(this.prefix,'mempool');}else{cov_26fb9b08th().b[152][1]++;}cov_26fb9b08th().s[754]++;if(options.location!=null){cov_26fb9b08th().b[153][0]++;cov_26fb9b08th().s[755]++;assert(typeof options.location==='string');cov_26fb9b08th().s[756]++;this.location=options.location;}else{cov_26fb9b08th().b[153][1]++;}cov_26fb9b08th().s[757]++;if(options.memory!=null){cov_26fb9b08th().b[154][0]++;cov_26fb9b08th().s[758]++;assert(typeof options.memory==='boolean');cov_26fb9b08th().s[759]++;this.memory=options.memory;}else{cov_26fb9b08th().b[154][1]++;}cov_26fb9b08th().s[760]++;if(options.maxFiles!=null){cov_26fb9b08th().b[155][0]++;cov_26fb9b08th().s[761]++;assert(options.maxFiles>>>0===options.maxFiles);cov_26fb9b08th().s[762]++;this.maxFiles=options.maxFiles;}else{cov_26fb9b08th().b[155][1]++;}cov_26fb9b08th().s[763]++;if(options.cacheSize!=null){cov_26fb9b08th().b[156][0]++;cov_26fb9b08th().s[764]++;assert(Number.isSafeInteger(options.cacheSize));cov_26fb9b08th().s[765]++;assert(options.cacheSize>=0);cov_26fb9b08th().s[766]++;this.cacheSize=options.cacheSize;}else{cov_26fb9b08th().b[156][1]++;}cov_26fb9b08th().s[767]++;if(options.compression!=null){cov_26fb9b08th().b[157][0]++;cov_26fb9b08th().s[768]++;assert(typeof options.compression==='boolean');cov_26fb9b08th().s[769]++;this.compression=options.compression;}else{cov_26fb9b08th().b[157][1]++;}cov_26fb9b08th().s[770]++;if(options.persistent!=null){cov_26fb9b08th().b[158][0]++;cov_26fb9b08th().s[771]++;assert(typeof options.persistent==='boolean');cov_26fb9b08th().s[772]++;this.persistent=options.persistent;}else{cov_26fb9b08th().b[158][1]++;}cov_26fb9b08th().s[773]++;if(options.indexAddress!=null){cov_26fb9b08th().b[159][0]++;cov_26fb9b08th().s[774]++;assert(typeof options.indexAddress==='boolean');cov_26fb9b08th().s[775]++;this.indexAddress=options.indexAddress;}else{cov_26fb9b08th().b[159][1]++;}cov_26fb9b08th().s[776]++;return this;}/**
   * Instantiate mempool options from object.
   * @param {Object} options
   * @returns {MempoolOptions}
   */static fromOptions(options){cov_26fb9b08th().f[71]++;cov_26fb9b08th().s[777]++;return new MempoolOptions().fromOptions(options);}}/**
 * Orphan
 * @ignore
 */class Orphan{/**
   * Create an orphan.
   * @constructor
   * @param {TX} tx
   * @param {Hash[]} missing
   * @param {Number} id
   */constructor(tx,missing,id){cov_26fb9b08th().f[72]++;cov_26fb9b08th().s[778]++;this.raw=tx.toRaw();cov_26fb9b08th().s[779]++;this.missing=missing;cov_26fb9b08th().s[780]++;this.id=id;}toTX(){cov_26fb9b08th().f[73]++;cov_26fb9b08th().s[781]++;return TX.fromRaw(this.raw);}}/**
 * Mempool Cache
 * @ignore
 */class MempoolCache{/**
   * Create a mempool cache.
   * @constructor
   * @param {Object} options
   */constructor(options){cov_26fb9b08th().f[74]++;cov_26fb9b08th().s[782]++;this.logger=options.logger;cov_26fb9b08th().s[783]++;this.chain=options.chain;cov_26fb9b08th().s[784]++;this.network=options.network;cov_26fb9b08th().s[785]++;this.db=null;cov_26fb9b08th().s[786]++;this.batch=null;cov_26fb9b08th().s[787]++;if(options.persistent){cov_26fb9b08th().b[160][0]++;cov_26fb9b08th().s[788]++;this.db=bdb.create(options);}else{cov_26fb9b08th().b[160][1]++;}}async getVersion(){cov_26fb9b08th().f[75]++;const data=(cov_26fb9b08th().s[789]++,await this.db.get(layout.v.encode()));cov_26fb9b08th().s[790]++;if(!data){cov_26fb9b08th().b[161][0]++;cov_26fb9b08th().s[791]++;return-1;}else{cov_26fb9b08th().b[161][1]++;}cov_26fb9b08th().s[792]++;return data.readUInt32LE(0,true);}async getTip(){cov_26fb9b08th().f[76]++;cov_26fb9b08th().s[793]++;return this.db.get(layout.R.encode());}async getFees(){cov_26fb9b08th().f[77]++;const data=(cov_26fb9b08th().s[794]++,await this.db.get(layout.F.encode()));cov_26fb9b08th().s[795]++;if(!data){cov_26fb9b08th().b[162][0]++;cov_26fb9b08th().s[796]++;return null;}else{cov_26fb9b08th().b[162][1]++;}let fees=(cov_26fb9b08th().s[797]++,null);cov_26fb9b08th().s[798]++;try{cov_26fb9b08th().s[799]++;fees=Fees.fromRaw(data);}catch(e){cov_26fb9b08th().s[800]++;this.logger.warning('Fee data failed deserialization: %s.',e.message);}cov_26fb9b08th().s[801]++;return fees;}getEntries(){cov_26fb9b08th().f[78]++;cov_26fb9b08th().s[802]++;return this.db.values({gte:layout.e.min(),lte:layout.e.max(),parse:data=>{cov_26fb9b08th().f[79]++;cov_26fb9b08th().s[803]++;return MempoolEntry.fromRaw(data);}});}getKeys(){cov_26fb9b08th().f[80]++;cov_26fb9b08th().s[804]++;return this.db.keys({gte:layout.e.min(),lte:layout.e.max()});}async open(){cov_26fb9b08th().f[81]++;cov_26fb9b08th().s[805]++;if(!this.db){cov_26fb9b08th().b[163][0]++;cov_26fb9b08th().s[806]++;return;}else{cov_26fb9b08th().b[163][1]++;}cov_26fb9b08th().s[807]++;await this.db.open();cov_26fb9b08th().s[808]++;await this.db.verify(layout.V.encode(),'mempool',0);cov_26fb9b08th().s[809]++;await this.verify();cov_26fb9b08th().s[810]++;this.batch=this.db.batch();}async close(){cov_26fb9b08th().f[82]++;cov_26fb9b08th().s[811]++;if(!this.db){cov_26fb9b08th().b[164][0]++;cov_26fb9b08th().s[812]++;return;}else{cov_26fb9b08th().b[164][1]++;}cov_26fb9b08th().s[813]++;await this.db.close();cov_26fb9b08th().s[814]++;this.batch=null;}save(entry){cov_26fb9b08th().f[83]++;cov_26fb9b08th().s[815]++;if(!this.db){cov_26fb9b08th().b[165][0]++;cov_26fb9b08th().s[816]++;return;}else{cov_26fb9b08th().b[165][1]++;}cov_26fb9b08th().s[817]++;this.batch.put(layout.e.encode(entry.hash()),entry.toRaw());}remove(hash){cov_26fb9b08th().f[84]++;cov_26fb9b08th().s[818]++;if(!this.db){cov_26fb9b08th().b[166][0]++;cov_26fb9b08th().s[819]++;return;}else{cov_26fb9b08th().b[166][1]++;}cov_26fb9b08th().s[820]++;this.batch.del(layout.e.encode(hash));}sync(tip){cov_26fb9b08th().f[85]++;cov_26fb9b08th().s[821]++;if(!this.db){cov_26fb9b08th().b[167][0]++;cov_26fb9b08th().s[822]++;return;}else{cov_26fb9b08th().b[167][1]++;}cov_26fb9b08th().s[823]++;this.batch.put(layout.R.encode(),tip);}writeFees(fees){cov_26fb9b08th().f[86]++;cov_26fb9b08th().s[824]++;if(!this.db){cov_26fb9b08th().b[168][0]++;cov_26fb9b08th().s[825]++;return;}else{cov_26fb9b08th().b[168][1]++;}cov_26fb9b08th().s[826]++;this.batch.put(layout.F.encode(),fees.toRaw());}clear(){cov_26fb9b08th().f[87]++;cov_26fb9b08th().s[827]++;this.batch.clear();cov_26fb9b08th().s[828]++;this.batch=this.db.batch();}async flush(){cov_26fb9b08th().f[88]++;cov_26fb9b08th().s[829]++;if(!this.db){cov_26fb9b08th().b[169][0]++;cov_26fb9b08th().s[830]++;return;}else{cov_26fb9b08th().b[169][1]++;}cov_26fb9b08th().s[831]++;await this.batch.write();cov_26fb9b08th().s[832]++;this.batch=this.db.batch();}async init(hash){cov_26fb9b08th().f[89]++;const batch=(cov_26fb9b08th().s[833]++,this.db.batch());cov_26fb9b08th().s[834]++;batch.put(layout.v.encode(),fromU32(MempoolCache.VERSION));cov_26fb9b08th().s[835]++;batch.put(layout.R.encode(),hash);cov_26fb9b08th().s[836]++;await batch.write();}async verify(){cov_26fb9b08th().f[90]++;let version=(cov_26fb9b08th().s[837]++,await this.getVersion());let tip;cov_26fb9b08th().s[838]++;if(version===-1){cov_26fb9b08th().b[170][0]++;cov_26fb9b08th().s[839]++;version=MempoolCache.VERSION;cov_26fb9b08th().s[840]++;tip=this.chain.tip.hash;cov_26fb9b08th().s[841]++;this.logger.info('Mempool cache is empty. Writing tip %h.',tip);cov_26fb9b08th().s[842]++;await this.init(tip);}else{cov_26fb9b08th().b[170][1]++;}cov_26fb9b08th().s[843]++;if(version!==MempoolCache.VERSION){cov_26fb9b08th().b[171][0]++;cov_26fb9b08th().s[844]++;this.logger.warning('Mempool cache version mismatch (%d != %d)!',version,MempoolCache.VERSION);cov_26fb9b08th().s[845]++;this.logger.warning('Invalidating mempool cache.');cov_26fb9b08th().s[846]++;await this.wipe();cov_26fb9b08th().s[847]++;return false;}else{cov_26fb9b08th().b[171][1]++;}cov_26fb9b08th().s[848]++;tip=await this.getTip();cov_26fb9b08th().s[849]++;if((cov_26fb9b08th().b[173][0]++,!tip)||(cov_26fb9b08th().b[173][1]++,!tip.equals(this.chain.tip.hash))){cov_26fb9b08th().b[172][0]++;cov_26fb9b08th().s[850]++;this.logger.warning('Mempool tip not consistent with chain tip (%h != %h)!',tip,this.chain.tip.hash);cov_26fb9b08th().s[851]++;this.logger.warning('Invalidating mempool cache.');cov_26fb9b08th().s[852]++;await this.wipe();cov_26fb9b08th().s[853]++;return false;}else{cov_26fb9b08th().b[172][1]++;}cov_26fb9b08th().s[854]++;return true;}async wipe(){cov_26fb9b08th().f[91]++;const batch=(cov_26fb9b08th().s[855]++,this.db.batch());const keys=(cov_26fb9b08th().s[856]++,await this.getKeys());cov_26fb9b08th().s[857]++;for(const key of keys){cov_26fb9b08th().s[858]++;batch.del(key);}cov_26fb9b08th().s[859]++;batch.put(layout.v.encode(),fromU32(MempoolCache.VERSION));cov_26fb9b08th().s[860]++;batch.put(layout.R.encode(),this.chain.tip.hash);cov_26fb9b08th().s[861]++;batch.del(layout.F.encode());cov_26fb9b08th().s[862]++;await batch.write();cov_26fb9b08th().s[863]++;this.logger.info('Removed %d mempool entries from disk.',keys.length);}}cov_26fb9b08th().s[864]++;MempoolCache.VERSION=2;/*
 * Helpers
 */function nop(parent,child){cov_26fb9b08th().f[92]++;;}function addFee(parent,child){cov_26fb9b08th().f[93]++;cov_26fb9b08th().s[865]++;parent.descFee+=child.deltaFee;cov_26fb9b08th().s[866]++;parent.descSize+=child.size;}function removeFee(parent,child){cov_26fb9b08th().f[94]++;cov_26fb9b08th().s[867]++;parent.descFee-=child.descFee;cov_26fb9b08th().s[868]++;parent.descSize-=child.descSize;}function prePrioritise(parent,child){cov_26fb9b08th().f[95]++;cov_26fb9b08th().s[869]++;parent.descFee-=child.deltaFee;}function postPrioritise(parent,child){cov_26fb9b08th().f[96]++;cov_26fb9b08th().s[870]++;parent.descFee+=child.deltaFee;}function cmpRate(a,b){cov_26fb9b08th().f[97]++;let xf=(cov_26fb9b08th().s[871]++,a.deltaFee);let xs=(cov_26fb9b08th().s[872]++,a.size);let yf=(cov_26fb9b08th().s[873]++,b.deltaFee);let ys=(cov_26fb9b08th().s[874]++,b.size);let x,y;cov_26fb9b08th().s[875]++;if(useDesc(a)){cov_26fb9b08th().b[174][0]++;cov_26fb9b08th().s[876]++;xf=a.descFee;cov_26fb9b08th().s[877]++;xs=a.descSize;}else{cov_26fb9b08th().b[174][1]++;}cov_26fb9b08th().s[878]++;if(useDesc(b)){cov_26fb9b08th().b[175][0]++;cov_26fb9b08th().s[879]++;yf=b.descFee;cov_26fb9b08th().s[880]++;ys=b.descSize;}else{cov_26fb9b08th().b[175][1]++;}cov_26fb9b08th().s[881]++;x=xf*ys;cov_26fb9b08th().s[882]++;y=xs*yf;cov_26fb9b08th().s[883]++;if(x===y){cov_26fb9b08th().b[176][0]++;cov_26fb9b08th().s[884]++;x=a.time;cov_26fb9b08th().s[885]++;y=b.time;}else{cov_26fb9b08th().b[176][1]++;}cov_26fb9b08th().s[886]++;return x-y;}function useDesc(a){cov_26fb9b08th().f[98]++;const x=(cov_26fb9b08th().s[887]++,a.deltaFee*a.descSize);const y=(cov_26fb9b08th().s[888]++,a.descFee*a.size);cov_26fb9b08th().s[889]++;return y>x;}function fromU32(num){cov_26fb9b08th().f[99]++;const data=(cov_26fb9b08th().s[890]++,Buffer.allocUnsafe(4));cov_26fb9b08th().s[891]++;data.writeUInt32LE(num,0,true);cov_26fb9b08th().s[892]++;return data;}/*
 * Expose
 */cov_26fb9b08th().s[893]++;module.exports=Mempool;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
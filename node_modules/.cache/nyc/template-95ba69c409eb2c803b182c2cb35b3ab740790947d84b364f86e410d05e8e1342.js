/*!
 * template.js - block template object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */'use strict';function cov_1ktvrx4itg(){var path="E:\\Projects\\Test\\bcoin\\lib\\mining\\template.js";var hash="e6a823f4dcedc239cb6761c2c1cfd12e034760b9";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\Projects\\Test\\bcoin\\lib\\mining\\template.js",statementMap:{"0":{start:{line:10,column:15},end:{line:10,column:31}},"1":{start:{line:11,column:12},end:{line:11,column:28}},"2":{start:{line:12,column:16},end:{line:12,column:46}},"3":{start:{line:13,column:15},end:{line:13,column:44}},"4":{start:{line:14,column:15},end:{line:14,column:44}},"5":{start:{line:15,column:13},end:{line:15,column:37}},"6":{start:{line:16,column:16},end:{line:16,column:48}},"7":{start:{line:17,column:11},end:{line:17,column:38}},"8":{start:{line:18,column:14},end:{line:18,column:44}},"9":{start:{line:19,column:14},end:{line:19,column:44}},"10":{start:{line:20,column:15},end:{line:20,column:46}},"11":{start:{line:21,column:18},end:{line:21,column:50}},"12":{start:{line:22,column:15},end:{line:22,column:44}},"13":{start:{line:23,column:17},end:{line:23,column:45}},"14":{start:{line:24,column:15},end:{line:24,column:42}},"15":{start:{line:25,column:15},end:{line:25,column:34}},"16":{start:{line:31,column:14},end:{line:31,column:29}},"17":{start:{line:46,column:4},end:{line:46,column:41}},"18":{start:{line:47,column:4},end:{line:47,column:21}},"19":{start:{line:48,column:4},end:{line:48,column:20}},"20":{start:{line:49,column:4},end:{line:49,column:18}},"21":{start:{line:50,column:4},end:{line:50,column:18}},"22":{start:{line:51,column:4},end:{line:51,column:38}},"23":{start:{line:52,column:4},end:{line:52,column:22}},"24":{start:{line:53,column:4},end:{line:53,column:17}},"25":{start:{line:54,column:4},end:{line:54,column:19}},"26":{start:{line:55,column:4},end:{line:55,column:31}},"27":{start:{line:56,column:4},end:{line:56,column:25}},"28":{start:{line:57,column:4},end:{line:57,column:33}},"29":{start:{line:58,column:4},end:{line:58,column:22}},"30":{start:{line:59,column:4},end:{line:59,column:23}},"31":{start:{line:60,column:4},end:{line:60,column:27}},"32":{start:{line:61,column:4},end:{line:61,column:18}},"33":{start:{line:62,column:4},end:{line:62,column:33}},"34":{start:{line:63,column:4},end:{line:63,column:42}},"35":{start:{line:64,column:4},end:{line:64,column:22}},"36":{start:{line:65,column:4},end:{line:65,column:23}},"37":{start:{line:66,column:4},end:{line:66,column:20}},"38":{start:{line:68,column:4},end:{line:69,column:32}},"39":{start:{line:69,column:6},end:{line:69,column:32}},"40":{start:{line:80,column:4},end:{line:80,column:20}},"41":{start:{line:82,column:4},end:{line:85,column:5}},"42":{start:{line:83,column:6},end:{line:83,column:49}},"43":{start:{line:84,column:6},end:{line:84,column:41}},"44":{start:{line:87,column:4},end:{line:90,column:5}},"45":{start:{line:88,column:6},end:{line:88,column:50}},"46":{start:{line:89,column:6},end:{line:89,column:37}},"47":{start:{line:92,column:4},end:{line:95,column:5}},"48":{start:{line:93,column:6},end:{line:93,column:49}},"49":{start:{line:94,column:6},end:{line:94,column:35}},"50":{start:{line:97,column:4},end:{line:100,column:5}},"51":{start:{line:98,column:6},end:{line:98,column:47}},"52":{start:{line:99,column:6},end:{line:99,column:31}},"53":{start:{line:102,column:4},end:{line:103,column:33}},"54":{start:{line:103,column:6},end:{line:103,column:33}},"55":{start:{line:105,column:4},end:{line:106,column:37}},"56":{start:{line:106,column:6},end:{line:106,column:37}},"57":{start:{line:108,column:4},end:{line:111,column:5}},"58":{start:{line:109,column:6},end:{line:109,column:51}},"59":{start:{line:110,column:6},end:{line:110,column:39}},"60":{start:{line:113,column:4},end:{line:116,column:5}},"61":{start:{line:114,column:6},end:{line:114,column:46}},"62":{start:{line:115,column:6},end:{line:115,column:29}},"63":{start:{line:118,column:4},end:{line:121,column:5}},"64":{start:{line:119,column:6},end:{line:119,column:48}},"65":{start:{line:120,column:6},end:{line:120,column:33}},"66":{start:{line:123,column:4},end:{line:126,column:5}},"67":{start:{line:124,column:6},end:{line:124,column:53}},"68":{start:{line:125,column:6},end:{line:125,column:49}},"69":{start:{line:128,column:4},end:{line:131,column:5}},"70":{start:{line:129,column:6},end:{line:129,column:51}},"71":{start:{line:130,column:6},end:{line:130,column:37}},"72":{start:{line:133,column:4},end:{line:134,column:48}},"73":{start:{line:134,column:6},end:{line:134,column:48}},"74":{start:{line:136,column:4},end:{line:139,column:5}},"75":{start:{line:137,column:6},end:{line:137,column:49}},"76":{start:{line:138,column:6},end:{line:138,column:35}},"77":{start:{line:141,column:4},end:{line:144,column:5}},"78":{start:{line:142,column:6},end:{line:142,column:49}},"79":{start:{line:143,column:6},end:{line:143,column:35}},"80":{start:{line:146,column:4},end:{line:149,column:5}},"81":{start:{line:147,column:6},end:{line:147,column:51}},"82":{start:{line:148,column:6},end:{line:148,column:39}},"83":{start:{line:151,column:4},end:{line:154,column:5}},"84":{start:{line:152,column:6},end:{line:152,column:47}},"85":{start:{line:153,column:6},end:{line:153,column:31}},"86":{start:{line:156,column:4},end:{line:159,column:5}},"87":{start:{line:157,column:6},end:{line:157,column:43}},"88":{start:{line:158,column:6},end:{line:158,column:33}},"89":{start:{line:161,column:4},end:{line:161,column:16}},"90":{start:{line:171,column:4},end:{line:171,column:43}},"91":{start:{line:180,column:18},end:{line:180,column:37}},"92":{start:{line:181,column:19},end:{line:181,column:21}},"93":{start:{line:183,column:4},end:{line:183,column:37}},"94":{start:{line:185,column:4},end:{line:186,column:36}},"95":{start:{line:186,column:6},end:{line:186,column:36}},"96":{start:{line:188,column:30},end:{line:188,column:64}},"97":{start:{line:190,column:4},end:{line:190,column:23}},"98":{start:{line:192,column:4},end:{line:192,column:37}},"99":{start:{line:201,column:4},end:{line:201,column:50}},"100":{start:{line:210,column:4},end:{line:210,column:37}},"101":{start:{line:211,column:4},end:{line:211,column:21}},"102":{start:{line:212,column:4},end:{line:212,column:41}},"103":{start:{line:221,column:4},end:{line:221,column:36}},"104":{start:{line:222,column:4},end:{line:222,column:39}},"105":{start:{line:223,column:4},end:{line:223,column:25}},"106":{start:{line:232,column:19},end:{line:232,column:66}},"107":{start:{line:233,column:4},end:{line:233,column:30}},"108":{start:{line:243,column:18},end:{line:243,column:48}},"109":{start:{line:244,column:15},end:{line:244,column:23}},"110":{start:{line:247,column:18},end:{line:247,column:29}},"111":{start:{line:250,column:4},end:{line:250,column:38}},"112":{start:{line:253,column:4},end:{line:253,column:50}},"113":{start:{line:256,column:18},end:{line:256,column:39}},"114":{start:{line:257,column:4},end:{line:257,column:53}},"115":{start:{line:258,column:4},end:{line:258,column:33}},"116":{start:{line:262,column:4},end:{line:262,column:49}},"117":{start:{line:264,column:4},end:{line:264,column:27}},"118":{start:{line:267,column:4},end:{line:270,column:5}},"119":{start:{line:268,column:6},end:{line:268,column:46}},"120":{start:{line:269,column:6},end:{line:269,column:30}},"121":{start:{line:272,column:4},end:{line:272,column:26}},"122":{start:{line:275,column:19},end:{line:275,column:31}},"123":{start:{line:276,column:4},end:{line:276,column:57}},"124":{start:{line:277,column:4},end:{line:277,column:36}},"125":{start:{line:279,column:4},end:{line:279,column:28}},"126":{start:{line:283,column:4},end:{line:288,column:5}},"127":{start:{line:285,column:21},end:{line:285,column:33}},"128":{start:{line:286,column:6},end:{line:286,column:41}},"129":{start:{line:287,column:6},end:{line:287,column:30}},"130":{start:{line:291,column:15},end:{line:291,column:34}},"131":{start:{line:292,column:4},end:{line:292,column:15}},"132":{start:{line:293,column:20},end:{line:293,column:36}},"133":{start:{line:294,column:4},end:{line:294,column:25}},"134":{start:{line:307,column:4},end:{line:315,column:5}},"135":{start:{line:308,column:6},end:{line:308,column:64}},"136":{start:{line:309,column:6},end:{line:309,column:58}},"137":{start:{line:310,column:6},end:{line:310,column:54}},"138":{start:{line:312,column:6},end:{line:312,column:64}},"139":{start:{line:313,column:6},end:{line:313,column:58}},"140":{start:{line:314,column:6},end:{line:314,column:54}},"141":{start:{line:318,column:4},end:{line:318,column:48}},"142":{start:{line:319,column:4},end:{line:319,column:27}},"143":{start:{line:322,column:4},end:{line:322,column:44}},"144":{start:{line:324,column:4},end:{line:324,column:17}},"145":{start:{line:326,column:4},end:{line:327,column:45}},"146":{start:{line:329,column:4},end:{line:329,column:14}},"147":{start:{line:337,column:17},end:{line:337,column:38}},"148":{start:{line:338,column:15},end:{line:338,column:40}},"149":{start:{line:339,column:16},end:{line:339,column:29}},"150":{start:{line:340,column:15},end:{line:340,column:16}},"151":{start:{line:342,column:4},end:{line:342,column:14}},"152":{start:{line:343,column:4},end:{line:343,column:14}},"153":{start:{line:344,column:4},end:{line:344,column:35}},"154":{start:{line:345,column:4},end:{line:345,column:22}},"155":{start:{line:349,column:17},end:{line:349,column:35}},"156":{start:{line:352,column:4},end:{line:352,column:18}},"157":{start:{line:353,column:18},end:{line:353,column:33}},"158":{start:{line:355,column:4},end:{line:355,column:27}},"159":{start:{line:356,column:4},end:{line:356,column:21}},"160":{start:{line:357,column:4},end:{line:357,column:23}},"161":{start:{line:358,column:4},end:{line:358,column:49}},"162":{start:{line:369,column:15},end:{line:369,column:16}},"163":{start:{line:371,column:4},end:{line:371,column:29}},"164":{start:{line:372,column:4},end:{line:372,column:18}},"165":{start:{line:373,column:4},end:{line:373,column:30}},"166":{start:{line:375,column:15},end:{line:375,column:30}},"167":{start:{line:376,column:4},end:{line:376,column:29}},"168":{start:{line:377,column:4},end:{line:377,column:26}},"169":{start:{line:378,column:4},end:{line:378,column:26}},"170":{start:{line:379,column:4},end:{line:379,column:30}},"171":{start:{line:381,column:4},end:{line:381,column:23}},"172":{start:{line:392,column:16},end:{line:392,column:51}},"173":{start:{line:393,column:17},end:{line:393,column:36}},"174":{start:{line:394,column:4},end:{line:394,column:37}},"175":{start:{line:406,column:15},end:{line:406,column:28}},"176":{start:{line:408,column:4},end:{line:408,column:30}},"177":{start:{line:409,column:4},end:{line:409,column:33}},"178":{start:{line:410,column:4},end:{line:410,column:23}},"179":{start:{line:411,column:4},end:{line:411,column:22}},"180":{start:{line:412,column:4},end:{line:412,column:27}},"181":{start:{line:413,column:4},end:{line:413,column:23}},"182":{start:{line:415,column:4},end:{line:415,column:23}},"183":{start:{line:428,column:17},end:{line:428,column:45}},"184":{start:{line:429,column:17},end:{line:429,column:50}},"185":{start:{line:430,column:17},end:{line:430,column:37}},"186":{start:{line:431,column:4},end:{line:431,column:67}},"187":{start:{line:442,column:16},end:{line:442,column:51}},"188":{start:{line:443,column:15},end:{line:443,column:30}},"189":{start:{line:445,column:4},end:{line:450,column:5}},"190":{start:{line:446,column:20},end:{line:446,column:32}},"191":{start:{line:447,column:6},end:{line:447,column:46}},"192":{start:{line:448,column:6},end:{line:448,column:30}},"193":{start:{line:449,column:6},end:{line:449,column:19}},"194":{start:{line:452,column:4},end:{line:452,column:14}},"195":{start:{line:462,column:17},end:{line:462,column:27}},"196":{start:{line:463,column:15},end:{line:463,column:27}},"197":{start:{line:464,column:15},end:{line:464,column:27}},"198":{start:{line:465,column:17},end:{line:465,column:27}},"199":{start:{line:466,column:18},end:{line:466,column:29}},"200":{start:{line:467,column:18},end:{line:467,column:29}},"201":{start:{line:469,column:4},end:{line:469,column:33}},"202":{start:{line:470,column:4},end:{line:470,column:37}},"203":{start:{line:471,column:4},end:{line:471,column:28}},"204":{start:{line:472,column:4},end:{line:472,column:22}},"205":{start:{line:473,column:4},end:{line:473,column:27}},"206":{start:{line:474,column:4},end:{line:474,column:24}},"207":{start:{line:476,column:15},end:{line:476,column:39}},"208":{start:{line:478,column:4},end:{line:478,column:23}},"209":{start:{line:480,column:4},end:{line:481,column:30}},"210":{start:{line:481,column:6},end:{line:481,column:30}},"211":{start:{line:483,column:4},end:{line:483,column:17}},"212":{start:{line:493,column:4},end:{line:493,column:34}},"213":{start:{line:503,column:18},end:{line:503,column:51}},"214":{start:{line:504,column:4},end:{line:504,column:30}},"215":{start:{line:513,column:4},end:{line:513,column:45}},"216":{start:{line:523,column:4},end:{line:523,column:40}},"217":{start:{line:524,column:4},end:{line:524,column:19}},"218":{start:{line:534,column:4},end:{line:534,column:59}},"219":{start:{line:536,column:17},end:{line:536,column:50}},"220":{start:{line:537,column:19},end:{line:537,column:38}},"221":{start:{line:538,column:19},end:{line:538,column:30}},"222":{start:{line:540,column:4},end:{line:541,column:19}},"223":{start:{line:541,column:6},end:{line:541,column:19}},"224":{start:{line:543,column:4},end:{line:544,column:19}},"225":{start:{line:544,column:6},end:{line:544,column:19}},"226":{start:{line:546,column:4},end:{line:547,column:19}},"227":{start:{line:547,column:6},end:{line:547,column:19}},"228":{start:{line:549,column:4},end:{line:550,column:19}},"229":{start:{line:550,column:6},end:{line:550,column:19}},"230":{start:{line:552,column:4},end:{line:552,column:26}},"231":{start:{line:553,column:4},end:{line:553,column:26}},"232":{start:{line:554,column:4},end:{line:554,column:26}},"233":{start:{line:557,column:4},end:{line:557,column:26}},"234":{start:{line:559,column:4},end:{line:559,column:16}},"235":{start:{line:570,column:4},end:{line:570,column:59}},"236":{start:{line:572,column:4},end:{line:573,column:28}},"237":{start:{line:573,column:6},end:{line:573,column:28}},"238":{start:{line:575,column:17},end:{line:575,column:50}},"239":{start:{line:576,column:19},end:{line:576,column:38}},"240":{start:{line:577,column:19},end:{line:577,column:30}},"241":{start:{line:579,column:4},end:{line:579,column:26}},"242":{start:{line:580,column:4},end:{line:580,column:26}},"243":{start:{line:581,column:4},end:{line:581,column:26}},"244":{start:{line:584,column:4},end:{line:584,column:26}},"245":{start:{line:586,column:4},end:{line:586,column:16}},"246":{start:{line:611,column:4},end:{line:611,column:17}},"247":{start:{line:612,column:4},end:{line:612,column:26}},"248":{start:{line:613,column:4},end:{line:613,column:17}},"249":{start:{line:614,column:4},end:{line:614,column:18}},"250":{start:{line:615,column:4},end:{line:615,column:22}},"251":{start:{line:616,column:4},end:{line:616,column:22}},"252":{start:{line:617,column:4},end:{line:617,column:20}},"253":{start:{line:618,column:4},end:{line:618,column:22}},"254":{start:{line:619,column:4},end:{line:619,column:22}},"255":{start:{line:631,column:17},end:{line:631,column:29}},"256":{start:{line:632,column:4},end:{line:632,column:31}},"257":{start:{line:633,column:4},end:{line:633,column:33}},"258":{start:{line:634,column:4},end:{line:634,column:57}},"259":{start:{line:635,column:4},end:{line:635,column:22}},"260":{start:{line:636,column:4},end:{line:636,column:56}},"261":{start:{line:637,column:4},end:{line:637,column:30}},"262":{start:{line:638,column:4},end:{line:638,column:16}},"263":{start:{line:649,column:17},end:{line:649,column:35}},"264":{start:{line:650,column:4},end:{line:650,column:30}},"265":{start:{line:651,column:4},end:{line:651,column:37}},"266":{start:{line:652,column:4},end:{line:652,column:54}},"267":{start:{line:653,column:4},end:{line:653,column:67}},"268":{start:{line:654,column:4},end:{line:654,column:31}},"269":{start:{line:655,column:4},end:{line:655,column:40}},"270":{start:{line:656,column:4},end:{line:656,column:16}},"271":{start:{line:677,column:4},end:{line:677,column:21}},"272":{start:{line:678,column:4},end:{line:678,column:21}},"273":{start:{line:679,column:4},end:{line:679,column:25}},"274":{start:{line:680,column:4},end:{line:680,column:25}},"275":{start:{line:681,column:4},end:{line:681,column:21}},"276":{start:{line:682,column:4},end:{line:682,column:23}},"277":{start:{line:686,column:4},end:{line:686,column:34}},"278":{start:{line:690,column:4},end:{line:690,column:47}},"279":{start:{line:694,column:4},end:{line:694,column:43}},"280":{start:{line:710,column:4},end:{line:710,column:20}},"281":{start:{line:714,column:4},end:{line:715,column:38}},"282":{start:{line:715,column:6},end:{line:715,column:38}},"283":{start:{line:716,column:4},end:{line:716,column:16}},"284":{start:{line:720,column:18},end:{line:720,column:20}},"285":{start:{line:722,column:4},end:{line:723,column:39}},"286":{start:{line:723,column:6},end:{line:723,column:39}},"287":{start:{line:725,column:4},end:{line:725,column:17}},"288":{start:{line:729,column:19},end:{line:729,column:21}},"289":{start:{line:731,column:4},end:{line:731,column:37}},"290":{start:{line:733,column:4},end:{line:734,column:34}},"291":{start:{line:734,column:6},end:{line:734,column:34}},"292":{start:{line:736,column:4},end:{line:736,column:35}},"293":{start:{line:740,column:4},end:{line:740,column:39}},"294":{start:{line:744,column:19},end:{line:744,column:21}},"295":{start:{line:746,column:4},end:{line:746,column:37}},"296":{start:{line:748,column:4},end:{line:751,column:5}},"297":{start:{line:748,column:17},end:{line:748,column:18}},"298":{start:{line:749,column:17},end:{line:749,column:23}},"299":{start:{line:750,column:6},end:{line:750,column:29}},"300":{start:{line:753,column:4},end:{line:753,column:35}},"301":{start:{line:757,column:4},end:{line:757,column:37}},"302":{start:{line:761,column:14},end:{line:761,column:27}},"303":{start:{line:763,column:4},end:{line:778,column:5}},"304":{start:{line:764,column:21},end:{line:764,column:42}},"305":{start:{line:766,column:6},end:{line:766,column:33}},"306":{start:{line:768,column:6},end:{line:769,column:37}},"307":{start:{line:769,column:8},end:{line:769,column:37}},"308":{start:{line:771,column:6},end:{line:774,column:7}},"309":{start:{line:771,column:19},end:{line:771,column:20}},"310":{start:{line:772,column:21},end:{line:772,column:59}},"311":{start:{line:773,column:8},end:{line:773,column:26}},"312":{start:{line:776,column:6},end:{line:776,column:22}},"313":{start:{line:777,column:6},end:{line:777,column:26}},"314":{start:{line:780,column:4},end:{line:780,column:16}},"315":{start:{line:784,column:4},end:{line:784,column:41}},"316":{start:{line:792,column:0},end:{line:792,column:24}},"317":{start:{line:793,column:0},end:{line:793,column:38}},"318":{start:{line:794,column:0},end:{line:794,column:32}},"319":{start:{line:796,column:0},end:{line:796,column:25}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:45,column:2},end:{line:45,column:3}},loc:{start:{line:45,column:23},end:{line:70,column:3}},line:45},"1":{name:"(anonymous_1)",decl:{start:{line:79,column:2},end:{line:79,column:3}},loc:{start:{line:79,column:23},end:{line:162,column:3}},line:79},"2":{name:"(anonymous_2)",decl:{start:{line:170,column:2},end:{line:170,column:3}},loc:{start:{line:170,column:30},end:{line:172,column:3}},line:170},"3":{name:"(anonymous_3)",decl:{start:{line:179,column:2},end:{line:179,column:3}},loc:{start:{line:179,column:19},end:{line:193,column:3}},line:179},"4":{name:"(anonymous_4)",decl:{start:{line:200,column:2},end:{line:200,column:3}},loc:{start:{line:200,column:21},end:{line:202,column:3}},line:200},"5":{name:"(anonymous_5)",decl:{start:{line:209,column:2},end:{line:209,column:3}},loc:{start:{line:209,column:16},end:{line:213,column:3}},line:209},"6":{name:"(anonymous_6)",decl:{start:{line:220,column:2},end:{line:220,column:3}},loc:{start:{line:220,column:20},end:{line:224,column:3}},line:220},"7":{name:"(anonymous_7)",decl:{start:{line:231,column:2},end:{line:231,column:3}},loc:{start:{line:231,column:14},end:{line:234,column:3}},line:231},"8":{name:"(anonymous_8)",decl:{start:{line:242,column:2},end:{line:242,column:3}},loc:{start:{line:242,column:23},end:{line:330,column:3}},line:242},"9":{name:"(anonymous_9)",decl:{start:{line:336,column:2},end:{line:336,column:3}},loc:{start:{line:336,column:12},end:{line:359,column:3}},line:336},"10":{name:"(anonymous_10)",decl:{start:{line:368,column:2},end:{line:368,column:3}},loc:{start:{line:368,column:33},end:{line:382,column:3}},line:368},"11":{name:"(anonymous_11)",decl:{start:{line:391,column:2},end:{line:391,column:3}},loc:{start:{line:391,column:26},end:{line:395,column:3}},line:391},"12":{name:"(anonymous_12)",decl:{start:{line:405,column:2},end:{line:405,column:3}},loc:{start:{line:405,column:31},end:{line:416,column:3}},line:405},"13":{name:"(anonymous_13)",decl:{start:{line:427,column:2},end:{line:427,column:3}},loc:{start:{line:427,column:40},end:{line:432,column:3}},line:427},"14":{name:"(anonymous_14)",decl:{start:{line:441,column:2},end:{line:441,column:3}},loc:{start:{line:441,column:30},end:{line:453,column:3}},line:441},"15":{name:"(anonymous_15)",decl:{start:{line:461,column:2},end:{line:461,column:3}},loc:{start:{line:461,column:16},end:{line:484,column:3}},line:461},"16":{name:"(anonymous_16)",decl:{start:{line:492,column:2},end:{line:492,column:3}},loc:{start:{line:492,column:15},end:{line:494,column:3}},line:492},"17":{name:"(anonymous_17)",decl:{start:{line:502,column:2},end:{line:502,column:3}},loc:{start:{line:502,column:12},end:{line:505,column:3}},line:502},"18":{name:"(anonymous_18)",decl:{start:{line:512,column:2},end:{line:512,column:3}},loc:{start:{line:512,column:18},end:{line:514,column:3}},line:512},"19":{name:"(anonymous_19)",decl:{start:{line:522,column:2},end:{line:522,column:3}},loc:{start:{line:522,column:22},end:{line:525,column:3}},line:522},"20":{name:"(anonymous_20)",decl:{start:{line:533,column:2},end:{line:533,column:3}},loc:{start:{line:533,column:18},end:{line:560,column:3}},line:533},"21":{name:"(anonymous_21)",decl:{start:{line:569,column:2},end:{line:569,column:3}},loc:{start:{line:569,column:19},end:{line:587,column:3}},line:569},"22":{name:"(anonymous_22)",decl:{start:{line:610,column:2},end:{line:610,column:3}},loc:{start:{line:610,column:18},end:{line:620,column:3}},line:610},"23":{name:"(anonymous_23)",decl:{start:{line:630,column:2},end:{line:630,column:3}},loc:{start:{line:630,column:35},end:{line:639,column:3}},line:630},"24":{name:"(anonymous_24)",decl:{start:{line:648,column:2},end:{line:648,column:3}},loc:{start:{line:648,column:35},end:{line:657,column:3}},line:648},"25":{name:"(anonymous_25)",decl:{start:{line:676,column:2},end:{line:676,column:3}},loc:{start:{line:676,column:55},end:{line:683,column:3}},line:676},"26":{name:"(anonymous_26)",decl:{start:{line:685,column:2},end:{line:685,column:3}},loc:{start:{line:685,column:10},end:{line:687,column:3}},line:685},"27":{name:"(anonymous_27)",decl:{start:{line:689,column:2},end:{line:689,column:3}},loc:{start:{line:689,column:17},end:{line:691,column:3}},line:689},"28":{name:"(anonymous_28)",decl:{start:{line:693,column:2},end:{line:693,column:3}},loc:{start:{line:693,column:18},end:{line:695,column:3}},line:693},"29":{name:"(anonymous_29)",decl:{start:{line:709,column:2},end:{line:709,column:3}},loc:{start:{line:709,column:16},end:{line:711,column:3}},line:709},"30":{name:"(anonymous_30)",decl:{start:{line:713,column:2},end:{line:713,column:3}},loc:{start:{line:713,column:18},end:{line:717,column:3}},line:713},"31":{name:"(anonymous_31)",decl:{start:{line:719,column:2},end:{line:719,column:3}},loc:{start:{line:719,column:11},end:{line:726,column:3}},line:719},"32":{name:"(anonymous_32)",decl:{start:{line:728,column:2},end:{line:728,column:3}},loc:{start:{line:728,column:19},end:{line:737,column:3}},line:728},"33":{name:"(anonymous_33)",decl:{start:{line:739,column:2},end:{line:739,column:3}},loc:{start:{line:739,column:26},end:{line:741,column:3}},line:739},"34":{name:"(anonymous_34)",decl:{start:{line:743,column:2},end:{line:743,column:3}},loc:{start:{line:743,column:17},end:{line:754,column:3}},line:743},"35":{name:"(anonymous_35)",decl:{start:{line:756,column:2},end:{line:756,column:3}},loc:{start:{line:756,column:24},end:{line:758,column:3}},line:756},"36":{name:"(anonymous_36)",decl:{start:{line:760,column:2},end:{line:760,column:3}},loc:{start:{line:760,column:21},end:{line:781,column:3}},line:760},"37":{name:"(anonymous_37)",decl:{start:{line:783,column:2},end:{line:783,column:3}},loc:{start:{line:783,column:28},end:{line:785,column:3}},line:783}},branchMap:{"0":{loc:{start:{line:68,column:4},end:{line:69,column:32}},type:"if",locations:[{start:{line:68,column:4},end:{line:69,column:32}},{start:{line:68,column:4},end:{line:69,column:32}}],line:68},"1":{loc:{start:{line:82,column:4},end:{line:85,column:5}},type:"if",locations:[{start:{line:82,column:4},end:{line:85,column:5}},{start:{line:82,column:4},end:{line:85,column:5}}],line:82},"2":{loc:{start:{line:87,column:4},end:{line:90,column:5}},type:"if",locations:[{start:{line:87,column:4},end:{line:90,column:5}},{start:{line:87,column:4},end:{line:90,column:5}}],line:87},"3":{loc:{start:{line:92,column:4},end:{line:95,column:5}},type:"if",locations:[{start:{line:92,column:4},end:{line:95,column:5}},{start:{line:92,column:4},end:{line:95,column:5}}],line:92},"4":{loc:{start:{line:97,column:4},end:{line:100,column:5}},type:"if",locations:[{start:{line:97,column:4},end:{line:100,column:5}},{start:{line:97,column:4},end:{line:100,column:5}}],line:97},"5":{loc:{start:{line:102,column:4},end:{line:103,column:33}},type:"if",locations:[{start:{line:102,column:4},end:{line:103,column:33}},{start:{line:102,column:4},end:{line:103,column:33}}],line:102},"6":{loc:{start:{line:105,column:4},end:{line:106,column:37}},type:"if",locations:[{start:{line:105,column:4},end:{line:106,column:37}},{start:{line:105,column:4},end:{line:106,column:37}}],line:105},"7":{loc:{start:{line:108,column:4},end:{line:111,column:5}},type:"if",locations:[{start:{line:108,column:4},end:{line:111,column:5}},{start:{line:108,column:4},end:{line:111,column:5}}],line:108},"8":{loc:{start:{line:113,column:4},end:{line:116,column:5}},type:"if",locations:[{start:{line:113,column:4},end:{line:116,column:5}},{start:{line:113,column:4},end:{line:116,column:5}}],line:113},"9":{loc:{start:{line:118,column:4},end:{line:121,column:5}},type:"if",locations:[{start:{line:118,column:4},end:{line:121,column:5}},{start:{line:118,column:4},end:{line:121,column:5}}],line:118},"10":{loc:{start:{line:123,column:4},end:{line:126,column:5}},type:"if",locations:[{start:{line:123,column:4},end:{line:126,column:5}},{start:{line:123,column:4},end:{line:126,column:5}}],line:123},"11":{loc:{start:{line:128,column:4},end:{line:131,column:5}},type:"if",locations:[{start:{line:128,column:4},end:{line:131,column:5}},{start:{line:128,column:4},end:{line:131,column:5}}],line:128},"12":{loc:{start:{line:133,column:4},end:{line:134,column:48}},type:"if",locations:[{start:{line:133,column:4},end:{line:134,column:48}},{start:{line:133,column:4},end:{line:134,column:48}}],line:133},"13":{loc:{start:{line:136,column:4},end:{line:139,column:5}},type:"if",locations:[{start:{line:136,column:4},end:{line:139,column:5}},{start:{line:136,column:4},end:{line:139,column:5}}],line:136},"14":{loc:{start:{line:141,column:4},end:{line:144,column:5}},type:"if",locations:[{start:{line:141,column:4},end:{line:144,column:5}},{start:{line:141,column:4},end:{line:144,column:5}}],line:141},"15":{loc:{start:{line:146,column:4},end:{line:149,column:5}},type:"if",locations:[{start:{line:146,column:4},end:{line:149,column:5}},{start:{line:146,column:4},end:{line:149,column:5}}],line:146},"16":{loc:{start:{line:151,column:4},end:{line:154,column:5}},type:"if",locations:[{start:{line:151,column:4},end:{line:154,column:5}},{start:{line:151,column:4},end:{line:154,column:5}}],line:151},"17":{loc:{start:{line:156,column:4},end:{line:159,column:5}},type:"if",locations:[{start:{line:156,column:4},end:{line:159,column:5}},{start:{line:156,column:4},end:{line:159,column:5}}],line:156},"18":{loc:{start:{line:267,column:4},end:{line:270,column:5}},type:"if",locations:[{start:{line:267,column:4},end:{line:270,column:5}},{start:{line:267,column:4},end:{line:270,column:5}}],line:267},"19":{loc:{start:{line:283,column:4},end:{line:288,column:5}},type:"if",locations:[{start:{line:283,column:4},end:{line:288,column:5}},{start:{line:283,column:4},end:{line:288,column:5}}],line:283},"20":{loc:{start:{line:307,column:4},end:{line:315,column:5}},type:"if",locations:[{start:{line:307,column:4},end:{line:315,column:5}},{start:{line:307,column:4},end:{line:315,column:5}}],line:307},"21":{loc:{start:{line:445,column:4},end:{line:450,column:5}},type:"if",locations:[{start:{line:445,column:4},end:{line:450,column:5}},{start:{line:445,column:4},end:{line:450,column:5}}],line:445},"22":{loc:{start:{line:540,column:4},end:{line:541,column:19}},type:"if",locations:[{start:{line:540,column:4},end:{line:541,column:19}},{start:{line:540,column:4},end:{line:541,column:19}}],line:540},"23":{loc:{start:{line:543,column:4},end:{line:544,column:19}},type:"if",locations:[{start:{line:543,column:4},end:{line:544,column:19}},{start:{line:543,column:4},end:{line:544,column:19}}],line:543},"24":{loc:{start:{line:546,column:4},end:{line:547,column:19}},type:"if",locations:[{start:{line:546,column:4},end:{line:547,column:19}},{start:{line:546,column:4},end:{line:547,column:19}}],line:546},"25":{loc:{start:{line:549,column:4},end:{line:550,column:19}},type:"if",locations:[{start:{line:549,column:4},end:{line:550,column:19}},{start:{line:549,column:4},end:{line:550,column:19}}],line:549},"26":{loc:{start:{line:549,column:8},end:{line:549,column:40}},type:"binary-expr",locations:[{start:{line:549,column:8},end:{line:549,column:21}},{start:{line:549,column:25},end:{line:549,column:40}}],line:549},"27":{loc:{start:{line:572,column:4},end:{line:573,column:28}},type:"if",locations:[{start:{line:572,column:4},end:{line:573,column:28}},{start:{line:572,column:4},end:{line:573,column:28}}],line:572},"28":{loc:{start:{line:768,column:6},end:{line:769,column:37}},type:"if",locations:[{start:{line:768,column:6},end:{line:769,column:37}},{start:{line:768,column:6},end:{line:769,column:37}}],line:768}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"e6a823f4dcedc239cb6761c2c1cfd12e034760b9"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1ktvrx4itg=function(){return actualCoverage;};}return actualCoverage;}cov_1ktvrx4itg();const assert=(cov_1ktvrx4itg().s[0]++,require('bsert'));const bio=(cov_1ktvrx4itg().s[1]++,require('bufio'));const hash256=(cov_1ktvrx4itg().s[2]++,require('bcrypto/lib/hash256'));const merkle=(cov_1ktvrx4itg().s[3]++,require('bcrypto/lib/merkle'));const random=(cov_1ktvrx4itg().s[4]++,require('bcrypto/lib/random'));const util=(cov_1ktvrx4itg().s[5]++,require('../utils/util'));const Address=(cov_1ktvrx4itg().s[6]++,require('../primitives/address'));const TX=(cov_1ktvrx4itg().s[7]++,require('../primitives/tx'));const Block=(cov_1ktvrx4itg().s[8]++,require('../primitives/block'));const Input=(cov_1ktvrx4itg().s[9]++,require('../primitives/input'));const Output=(cov_1ktvrx4itg().s[10]++,require('../primitives/output'));const consensus=(cov_1ktvrx4itg().s[11]++,require('../protocol/consensus'));const policy=(cov_1ktvrx4itg().s[12]++,require('../protocol/policy'));const CoinView=(cov_1ktvrx4itg().s[13]++,require('../coins/coinview'));const Script=(cov_1ktvrx4itg().s[14]++,require('../script/script'));const common=(cov_1ktvrx4itg().s[15]++,require('./common'));/*
 * Constants
 */const DUMMY=(cov_1ktvrx4itg().s[16]++,Buffer.alloc(0));/**
 * Block Template
 * @alias module:mining.BlockTemplate
 */class BlockTemplate{/**
   * Create a block template.
   * @constructor
   * @param {Object} options
   */constructor(options){cov_1ktvrx4itg().f[0]++;cov_1ktvrx4itg().s[17]++;this.prevBlock=consensus.ZERO_HASH;cov_1ktvrx4itg().s[18]++;this.version=1;cov_1ktvrx4itg().s[19]++;this.height=0;cov_1ktvrx4itg().s[20]++;this.time=0;cov_1ktvrx4itg().s[21]++;this.bits=0;cov_1ktvrx4itg().s[22]++;this.target=consensus.ZERO_HASH;cov_1ktvrx4itg().s[23]++;this.locktime=0;cov_1ktvrx4itg().s[24]++;this.mtp=0;cov_1ktvrx4itg().s[25]++;this.flags=0;cov_1ktvrx4itg().s[26]++;this.coinbaseFlags=DUMMY;cov_1ktvrx4itg().s[27]++;this.witness=false;cov_1ktvrx4itg().s[28]++;this.address=new Address();cov_1ktvrx4itg().s[29]++;this.sigops=400;cov_1ktvrx4itg().s[30]++;this.weight=4000;cov_1ktvrx4itg().s[31]++;this.interval=210000;cov_1ktvrx4itg().s[32]++;this.fees=0;cov_1ktvrx4itg().s[33]++;this.tree=new MerkleTree();cov_1ktvrx4itg().s[34]++;this.commitment=consensus.ZERO_HASH;cov_1ktvrx4itg().s[35]++;this.left=DUMMY;cov_1ktvrx4itg().s[36]++;this.right=DUMMY;cov_1ktvrx4itg().s[37]++;this.items=[];cov_1ktvrx4itg().s[38]++;if(options){cov_1ktvrx4itg().b[0][0]++;cov_1ktvrx4itg().s[39]++;this.fromOptions(options);}else{cov_1ktvrx4itg().b[0][1]++;}}/**
   * Inject properties from options.
   * @private
   * @param {Object} options
   * @returns {BlockTemplate}
   */fromOptions(options){cov_1ktvrx4itg().f[1]++;cov_1ktvrx4itg().s[40]++;assert(options);cov_1ktvrx4itg().s[41]++;if(options.prevBlock!=null){cov_1ktvrx4itg().b[1][0]++;cov_1ktvrx4itg().s[42]++;assert(Buffer.isBuffer(options.prevBlock));cov_1ktvrx4itg().s[43]++;this.prevBlock=options.prevBlock;}else{cov_1ktvrx4itg().b[1][1]++;}cov_1ktvrx4itg().s[44]++;if(options.version!=null){cov_1ktvrx4itg().b[2][0]++;cov_1ktvrx4itg().s[45]++;assert(typeof options.version==='number');cov_1ktvrx4itg().s[46]++;this.version=options.version;}else{cov_1ktvrx4itg().b[2][1]++;}cov_1ktvrx4itg().s[47]++;if(options.height!=null){cov_1ktvrx4itg().b[3][0]++;cov_1ktvrx4itg().s[48]++;assert(typeof options.height==='number');cov_1ktvrx4itg().s[49]++;this.height=options.height;}else{cov_1ktvrx4itg().b[3][1]++;}cov_1ktvrx4itg().s[50]++;if(options.time!=null){cov_1ktvrx4itg().b[4][0]++;cov_1ktvrx4itg().s[51]++;assert(typeof options.time==='number');cov_1ktvrx4itg().s[52]++;this.time=options.time;}else{cov_1ktvrx4itg().b[4][1]++;}cov_1ktvrx4itg().s[53]++;if(options.bits!=null){cov_1ktvrx4itg().b[5][0]++;cov_1ktvrx4itg().s[54]++;this.setBits(options.bits);}else{cov_1ktvrx4itg().b[5][1]++;}cov_1ktvrx4itg().s[55]++;if(options.target!=null){cov_1ktvrx4itg().b[6][0]++;cov_1ktvrx4itg().s[56]++;this.setTarget(options.target);}else{cov_1ktvrx4itg().b[6][1]++;}cov_1ktvrx4itg().s[57]++;if(options.locktime!=null){cov_1ktvrx4itg().b[7][0]++;cov_1ktvrx4itg().s[58]++;assert(typeof options.locktime==='number');cov_1ktvrx4itg().s[59]++;this.locktime=options.locktime;}else{cov_1ktvrx4itg().b[7][1]++;}cov_1ktvrx4itg().s[60]++;if(options.mtp!=null){cov_1ktvrx4itg().b[8][0]++;cov_1ktvrx4itg().s[61]++;assert(typeof options.mtp==='number');cov_1ktvrx4itg().s[62]++;this.mtp=options.mtp;}else{cov_1ktvrx4itg().b[8][1]++;}cov_1ktvrx4itg().s[63]++;if(options.flags!=null){cov_1ktvrx4itg().b[9][0]++;cov_1ktvrx4itg().s[64]++;assert(typeof options.flags==='number');cov_1ktvrx4itg().s[65]++;this.flags=options.flags;}else{cov_1ktvrx4itg().b[9][1]++;}cov_1ktvrx4itg().s[66]++;if(options.coinbaseFlags!=null){cov_1ktvrx4itg().b[10][0]++;cov_1ktvrx4itg().s[67]++;assert(Buffer.isBuffer(options.coinbaseFlags));cov_1ktvrx4itg().s[68]++;this.coinbaseFlags=options.coinbaseFlags;}else{cov_1ktvrx4itg().b[10][1]++;}cov_1ktvrx4itg().s[69]++;if(options.witness!=null){cov_1ktvrx4itg().b[11][0]++;cov_1ktvrx4itg().s[70]++;assert(typeof options.witness==='boolean');cov_1ktvrx4itg().s[71]++;this.witness=options.witness;}else{cov_1ktvrx4itg().b[11][1]++;}cov_1ktvrx4itg().s[72]++;if(options.address!=null){cov_1ktvrx4itg().b[12][0]++;cov_1ktvrx4itg().s[73]++;this.address.fromOptions(options.address);}else{cov_1ktvrx4itg().b[12][1]++;}cov_1ktvrx4itg().s[74]++;if(options.sigops!=null){cov_1ktvrx4itg().b[13][0]++;cov_1ktvrx4itg().s[75]++;assert(typeof options.sigops==='number');cov_1ktvrx4itg().s[76]++;this.sigops=options.sigops;}else{cov_1ktvrx4itg().b[13][1]++;}cov_1ktvrx4itg().s[77]++;if(options.weight!=null){cov_1ktvrx4itg().b[14][0]++;cov_1ktvrx4itg().s[78]++;assert(typeof options.weight==='number');cov_1ktvrx4itg().s[79]++;this.weight=options.weight;}else{cov_1ktvrx4itg().b[14][1]++;}cov_1ktvrx4itg().s[80]++;if(options.interval!=null){cov_1ktvrx4itg().b[15][0]++;cov_1ktvrx4itg().s[81]++;assert(typeof options.interval==='number');cov_1ktvrx4itg().s[82]++;this.interval=options.interval;}else{cov_1ktvrx4itg().b[15][1]++;}cov_1ktvrx4itg().s[83]++;if(options.fees!=null){cov_1ktvrx4itg().b[16][0]++;cov_1ktvrx4itg().s[84]++;assert(typeof options.fees==='number');cov_1ktvrx4itg().s[85]++;this.fees=options.fees;}else{cov_1ktvrx4itg().b[16][1]++;}cov_1ktvrx4itg().s[86]++;if(options.items!=null){cov_1ktvrx4itg().b[17][0]++;cov_1ktvrx4itg().s[87]++;assert(Array.isArray(options.items));cov_1ktvrx4itg().s[88]++;this.items=options.items;}else{cov_1ktvrx4itg().b[17][1]++;}cov_1ktvrx4itg().s[89]++;return this;}/**
   * Instantiate block template from options.
   * @param {Object} options
   * @returns {BlockTemplate}
   */static fromOptions(options){cov_1ktvrx4itg().f[2]++;cov_1ktvrx4itg().s[90]++;return new this().fromOptions(options);}/**
   * Create witness commitment hash.
   * @returns {Buffer}
   */getWitnessHash(){cov_1ktvrx4itg().f[3]++;const nonce=(cov_1ktvrx4itg().s[91]++,consensus.ZERO_HASH);const leaves=(cov_1ktvrx4itg().s[92]++,[]);cov_1ktvrx4itg().s[93]++;leaves.push(consensus.ZERO_HASH);cov_1ktvrx4itg().s[94]++;for(const{tx}of this.items){cov_1ktvrx4itg().s[95]++;leaves.push(tx.witnessHash());}const[root,malleated]=(cov_1ktvrx4itg().s[96]++,merkle.createRoot(hash256,leaves));cov_1ktvrx4itg().s[97]++;assert(!malleated);cov_1ktvrx4itg().s[98]++;return hash256.root(root,nonce);}/**
   * Create witness commitment script.
   * @returns {Script}
   */getWitnessScript(){cov_1ktvrx4itg().f[4]++;cov_1ktvrx4itg().s[99]++;return Script.fromCommitment(this.commitment);}/**
   * Set the target (bits).
   * @param {Number} bits
   */setBits(bits){cov_1ktvrx4itg().f[5]++;cov_1ktvrx4itg().s[100]++;assert(typeof bits==='number');cov_1ktvrx4itg().s[101]++;this.bits=bits;cov_1ktvrx4itg().s[102]++;this.target=common.getTarget(bits);}/**
   * Set the target (uint256le).
   * @param {Buffer} target
   */setTarget(target){cov_1ktvrx4itg().f[6]++;cov_1ktvrx4itg().s[103]++;assert(Buffer.isBuffer(target));cov_1ktvrx4itg().s[104]++;this.bits=common.getBits(target);cov_1ktvrx4itg().s[105]++;this.target=target;}/**
   * Calculate the block reward.
   * @returns {Amount}
   */getReward(){cov_1ktvrx4itg().f[7]++;const reward=(cov_1ktvrx4itg().s[106]++,consensus.getReward(this.height,this.interval));cov_1ktvrx4itg().s[107]++;return reward+this.fees;}/**
   * Initialize the default coinbase.
   * @param {Buffer} hash - Witness commitment hash.
   * @returns {TX}
   */createCoinbase(hash){cov_1ktvrx4itg().f[8]++;const scale=(cov_1ktvrx4itg().s[108]++,consensus.WITNESS_SCALE_FACTOR);const cb=(cov_1ktvrx4itg().s[109]++,new TX());// Coinbase input.
const input=(cov_1ktvrx4itg().s[110]++,new Input());// Height (required in v2+ blocks)
cov_1ktvrx4itg().s[111]++;input.script.pushInt(this.height);// Coinbase flags.
cov_1ktvrx4itg().s[112]++;input.script.pushData(Buffer.alloc(20,0x00));// Smaller nonce for good measure.
const nonce=(cov_1ktvrx4itg().s[113]++,Buffer.allocUnsafe(4));cov_1ktvrx4itg().s[114]++;nonce.writeUInt32LE(random.randomInt(),0,true);cov_1ktvrx4itg().s[115]++;input.script.pushData(nonce);// Extra nonce: incremented when
// the nonce overflows.
cov_1ktvrx4itg().s[116]++;input.script.pushData(Buffer.alloc(8,0x00));cov_1ktvrx4itg().s[117]++;input.script.compile();// Set up the witness nonce.
cov_1ktvrx4itg().s[118]++;if(this.witness){cov_1ktvrx4itg().b[18][0]++;cov_1ktvrx4itg().s[119]++;input.witness.push(consensus.ZERO_HASH);cov_1ktvrx4itg().s[120]++;input.witness.compile();}else{cov_1ktvrx4itg().b[18][1]++;}cov_1ktvrx4itg().s[121]++;cb.inputs.push(input);// Reward output.
const output=(cov_1ktvrx4itg().s[122]++,new Output());cov_1ktvrx4itg().s[123]++;output.script.fromPubkeyhash(Buffer.alloc(20,0x00));cov_1ktvrx4itg().s[124]++;output.value=this.getReward();cov_1ktvrx4itg().s[125]++;cb.outputs.push(output);// If we're using segwit, we
// need to set up the commitment.
cov_1ktvrx4itg().s[126]++;if(this.witness){cov_1ktvrx4itg().b[19][0]++;// Commitment output.
const commit=(cov_1ktvrx4itg().s[127]++,new Output());cov_1ktvrx4itg().s[128]++;commit.script.fromCommitment(hash);cov_1ktvrx4itg().s[129]++;cb.outputs.push(commit);}else{cov_1ktvrx4itg().b[19][1]++;}// Padding for the CB height (constant size).
const op=(cov_1ktvrx4itg().s[130]++,input.script.get(0));cov_1ktvrx4itg().s[131]++;assert(op);const padding=(cov_1ktvrx4itg().s[132]++,5-op.getSize());cov_1ktvrx4itg().s[133]++;assert(padding>=0);// Reserved size.
// Without segwit:
//   CB weight = 500
//   CB stripped size = 125
//   CB size = 125
//   Sigops cost = 4
// With segwit:
//   CB weight = 724
//   CB stripped size = 172
//   CB size = 208
//   Sigops cost = 4
cov_1ktvrx4itg().s[134]++;if(!this.witness){cov_1ktvrx4itg().b[20][0]++;cov_1ktvrx4itg().s[135]++;assert.strictEqual(cb.getWeight()+padding*scale,500);cov_1ktvrx4itg().s[136]++;assert.strictEqual(cb.getBaseSize()+padding,125);cov_1ktvrx4itg().s[137]++;assert.strictEqual(cb.getSize()+padding,125);}else{cov_1ktvrx4itg().b[20][1]++;cov_1ktvrx4itg().s[138]++;assert.strictEqual(cb.getWeight()+padding*scale,724);cov_1ktvrx4itg().s[139]++;assert.strictEqual(cb.getBaseSize()+padding,172);cov_1ktvrx4itg().s[140]++;assert.strictEqual(cb.getSize()+padding,208);}// Setup coinbase flags (variable size).
cov_1ktvrx4itg().s[141]++;input.script.setData(1,this.coinbaseFlags);cov_1ktvrx4itg().s[142]++;input.script.compile();// Setup output script (variable size).
cov_1ktvrx4itg().s[143]++;output.script.fromAddress(this.address);cov_1ktvrx4itg().s[144]++;cb.refresh();cov_1ktvrx4itg().s[145]++;assert(input.script.getSize()<=100,'Coinbase input script is too large!');cov_1ktvrx4itg().s[146]++;return cb;}/**
   * Refresh the coinbase and merkle tree.
   */refresh(){cov_1ktvrx4itg().f[9]++;const hash=(cov_1ktvrx4itg().s[147]++,this.getWitnessHash());const cb=(cov_1ktvrx4itg().s[148]++,this.createCoinbase(hash));const raw=(cov_1ktvrx4itg().s[149]++,cb.toNormal());let size=(cov_1ktvrx4itg().s[150]++,0);cov_1ktvrx4itg().s[151]++;size+=4;// version
cov_1ktvrx4itg().s[152]++;size+=1;// varint inputs length
cov_1ktvrx4itg().s[153]++;size+=cb.inputs[0].getSize();// input size
cov_1ktvrx4itg().s[154]++;size-=4+4+4;// -(nonce1 + nonce2 + sequence)
// Cut off right after the nonce
// push and before the sequence.
const left=(cov_1ktvrx4itg().s[155]++,raw.slice(0,size));// Include the sequence.
cov_1ktvrx4itg().s[156]++;size+=4+4;// nonce1 + nonce2
const right=(cov_1ktvrx4itg().s[157]++,raw.slice(size));cov_1ktvrx4itg().s[158]++;this.commitment=hash;cov_1ktvrx4itg().s[159]++;this.left=left;cov_1ktvrx4itg().s[160]++;this.right=right;cov_1ktvrx4itg().s[161]++;this.tree=MerkleTree.fromItems(this.items);}/**
   * Get raw coinbase with desired nonces.
   * @param {Number} nonce1
   * @param {Number} nonce2
   * @returns {Buffer}
   */getRawCoinbase(nonce1,nonce2){cov_1ktvrx4itg().f[10]++;let size=(cov_1ktvrx4itg().s[162]++,0);cov_1ktvrx4itg().s[163]++;size+=this.left.length;cov_1ktvrx4itg().s[164]++;size+=4+4;cov_1ktvrx4itg().s[165]++;size+=this.right.length;const bw=(cov_1ktvrx4itg().s[166]++,bio.write(size));cov_1ktvrx4itg().s[167]++;bw.writeBytes(this.left);cov_1ktvrx4itg().s[168]++;bw.writeU32BE(nonce1);cov_1ktvrx4itg().s[169]++;bw.writeU32BE(nonce2);cov_1ktvrx4itg().s[170]++;bw.writeBytes(this.right);cov_1ktvrx4itg().s[171]++;return bw.render();}/**
   * Calculate the merkle root with given nonces.
   * @param {Number} nonce1
   * @param {Number} nonce2
   * @returns {Buffer}
   */getRoot(nonce1,nonce2){cov_1ktvrx4itg().f[11]++;const raw=(cov_1ktvrx4itg().s[172]++,this.getRawCoinbase(nonce1,nonce2));const hash=(cov_1ktvrx4itg().s[173]++,hash256.digest(raw));cov_1ktvrx4itg().s[174]++;return this.tree.withFirst(hash);}/**
   * Create raw block header with given parameters.
   * @param {Buffer} root
   * @param {Number} time
   * @param {Number} nonce
   * @returns {Buffer}
   */getHeader(root,time,nonce){cov_1ktvrx4itg().f[12]++;const bw=(cov_1ktvrx4itg().s[175]++,bio.write(80));cov_1ktvrx4itg().s[176]++;bw.writeU32(this.version);cov_1ktvrx4itg().s[177]++;bw.writeHash(this.prevBlock);cov_1ktvrx4itg().s[178]++;bw.writeHash(root);cov_1ktvrx4itg().s[179]++;bw.writeU32(time);cov_1ktvrx4itg().s[180]++;bw.writeU32(this.bits);cov_1ktvrx4itg().s[181]++;bw.writeU32(nonce);cov_1ktvrx4itg().s[182]++;return bw.render();}/**
   * Calculate proof with given parameters.
   * @param {Number} nonce1
   * @param {Number} nonce2
   * @param {Number} time
   * @param {Number} nonce
   * @returns {BlockProof}
   */getProof(nonce1,nonce2,time,nonce){cov_1ktvrx4itg().f[13]++;const root=(cov_1ktvrx4itg().s[183]++,this.getRoot(nonce1,nonce2));const data=(cov_1ktvrx4itg().s[184]++,this.getHeader(root,time,nonce));const hash=(cov_1ktvrx4itg().s[185]++,hash256.digest(data));cov_1ktvrx4itg().s[186]++;return new BlockProof(hash,root,nonce1,nonce2,time,nonce);}/**
   * Create coinbase from given parameters.
   * @param {Number} nonce1
   * @param {Number} nonce2
   * @returns {TX}
   */getCoinbase(nonce1,nonce2){cov_1ktvrx4itg().f[14]++;const raw=(cov_1ktvrx4itg().s[187]++,this.getRawCoinbase(nonce1,nonce2));const tx=(cov_1ktvrx4itg().s[188]++,TX.fromRaw(raw));cov_1ktvrx4itg().s[189]++;if(this.witness){cov_1ktvrx4itg().b[21][0]++;const input=(cov_1ktvrx4itg().s[190]++,tx.inputs[0]);cov_1ktvrx4itg().s[191]++;input.witness.push(consensus.ZERO_HASH);cov_1ktvrx4itg().s[192]++;input.witness.compile();cov_1ktvrx4itg().s[193]++;tx.refresh();}else{cov_1ktvrx4itg().b[21][1]++;}cov_1ktvrx4itg().s[194]++;return tx;}/**
   * Create block from calculated proof.
   * @param {BlockProof} proof
   * @returns {Block}
   */commit(proof){cov_1ktvrx4itg().f[15]++;const root=(cov_1ktvrx4itg().s[195]++,proof.root);const n1=(cov_1ktvrx4itg().s[196]++,proof.nonce1);const n2=(cov_1ktvrx4itg().s[197]++,proof.nonce2);const time=(cov_1ktvrx4itg().s[198]++,proof.time);const nonce=(cov_1ktvrx4itg().s[199]++,proof.nonce);const block=(cov_1ktvrx4itg().s[200]++,new Block());cov_1ktvrx4itg().s[201]++;block.version=this.version;cov_1ktvrx4itg().s[202]++;block.prevBlock=this.prevBlock;cov_1ktvrx4itg().s[203]++;block.merkleRoot=root;cov_1ktvrx4itg().s[204]++;block.time=time;cov_1ktvrx4itg().s[205]++;block.bits=this.bits;cov_1ktvrx4itg().s[206]++;block.nonce=nonce;const tx=(cov_1ktvrx4itg().s[207]++,this.getCoinbase(n1,n2));cov_1ktvrx4itg().s[208]++;block.txs.push(tx);cov_1ktvrx4itg().s[209]++;for(const item of this.items){cov_1ktvrx4itg().s[210]++;block.txs.push(item.tx);}cov_1ktvrx4itg().s[211]++;return block;}/**
   * Quick and dirty way to
   * get a coinbase tx object.
   * @returns {TX}
   */toCoinbase(){cov_1ktvrx4itg().f[16]++;cov_1ktvrx4itg().s[212]++;return this.getCoinbase(0,0);}/**
   * Quick and dirty way to get a block
   * object (most likely to be an invalid one).
   * @returns {Block}
   */toBlock(){cov_1ktvrx4itg().f[17]++;const proof=(cov_1ktvrx4itg().s[213]++,this.getProof(0,0,this.time,0));cov_1ktvrx4itg().s[214]++;return this.commit(proof);}/**
   * Calculate the target difficulty.
   * @returns {Number}
   */getDifficulty(){cov_1ktvrx4itg().f[18]++;cov_1ktvrx4itg().s[215]++;return common.getDifficulty(this.target);}/**
   * Set the reward output
   * address and refresh.
   * @param {Address} address
   */setAddress(address){cov_1ktvrx4itg().f[19]++;cov_1ktvrx4itg().s[216]++;this.address=new Address(address);cov_1ktvrx4itg().s[217]++;this.refresh();}/**
   * Add a transaction to the template.
   * @param {TX} tx
   * @param {CoinView} view
   */addTX(tx,view){cov_1ktvrx4itg().f[20]++;cov_1ktvrx4itg().s[218]++;assert(!tx.mutable,'Cannot add mutable TX to block.');const item=(cov_1ktvrx4itg().s[219]++,BlockEntry.fromTX(tx,view,this));const weight=(cov_1ktvrx4itg().s[220]++,item.tx.getWeight());const sigops=(cov_1ktvrx4itg().s[221]++,item.sigops);cov_1ktvrx4itg().s[222]++;if(!tx.isFinal(this.height,this.locktime)){cov_1ktvrx4itg().b[22][0]++;cov_1ktvrx4itg().s[223]++;return false;}else{cov_1ktvrx4itg().b[22][1]++;}cov_1ktvrx4itg().s[224]++;if(this.weight+weight>consensus.MAX_BLOCK_WEIGHT){cov_1ktvrx4itg().b[23][0]++;cov_1ktvrx4itg().s[225]++;return false;}else{cov_1ktvrx4itg().b[23][1]++;}cov_1ktvrx4itg().s[226]++;if(this.sigops+sigops>consensus.MAX_BLOCK_SIGOPS_COST){cov_1ktvrx4itg().b[24][0]++;cov_1ktvrx4itg().s[227]++;return false;}else{cov_1ktvrx4itg().b[24][1]++;}cov_1ktvrx4itg().s[228]++;if((cov_1ktvrx4itg().b[26][0]++,!this.witness)&&(cov_1ktvrx4itg().b[26][1]++,tx.hasWitness())){cov_1ktvrx4itg().b[25][0]++;cov_1ktvrx4itg().s[229]++;return false;}else{cov_1ktvrx4itg().b[25][1]++;}cov_1ktvrx4itg().s[230]++;this.weight+=weight;cov_1ktvrx4itg().s[231]++;this.sigops+=sigops;cov_1ktvrx4itg().s[232]++;this.fees+=item.fee;// Add the tx to our block
cov_1ktvrx4itg().s[233]++;this.items.push(item);cov_1ktvrx4itg().s[234]++;return true;}/**
   * Add a transaction to the template
   * (less verification than addTX).
   * @param {TX} tx
   * @param {CoinView?} view
   */pushTX(tx,view){cov_1ktvrx4itg().f[21]++;cov_1ktvrx4itg().s[235]++;assert(!tx.mutable,'Cannot add mutable TX to block.');cov_1ktvrx4itg().s[236]++;if(!view){cov_1ktvrx4itg().b[27][0]++;cov_1ktvrx4itg().s[237]++;view=new CoinView();}else{cov_1ktvrx4itg().b[27][1]++;}const item=(cov_1ktvrx4itg().s[238]++,BlockEntry.fromTX(tx,view,this));const weight=(cov_1ktvrx4itg().s[239]++,item.tx.getWeight());const sigops=(cov_1ktvrx4itg().s[240]++,item.sigops);cov_1ktvrx4itg().s[241]++;this.weight+=weight;cov_1ktvrx4itg().s[242]++;this.sigops+=sigops;cov_1ktvrx4itg().s[243]++;this.fees+=item.fee;// Add the tx to our block
cov_1ktvrx4itg().s[244]++;this.items.push(item);cov_1ktvrx4itg().s[245]++;return true;}}/**
 * Block Entry
 * @alias module:mining.BlockEntry
 * @property {TX} tx
 * @property {Hash} hash
 * @property {Amount} fee
 * @property {Rate} rate
 * @property {Number} priority
 * @property {Boolean} free
 * @property {Sigops} sigops
 * @property {Number} depCount
 */class BlockEntry{/**
   * Create a block entry.
   * @constructor
   * @param {TX} tx
   */constructor(tx){cov_1ktvrx4itg().f[22]++;cov_1ktvrx4itg().s[246]++;this.tx=tx;cov_1ktvrx4itg().s[247]++;this.hash=tx.hash();cov_1ktvrx4itg().s[248]++;this.fee=0;cov_1ktvrx4itg().s[249]++;this.rate=0;cov_1ktvrx4itg().s[250]++;this.priority=0;cov_1ktvrx4itg().s[251]++;this.free=false;cov_1ktvrx4itg().s[252]++;this.sigops=0;cov_1ktvrx4itg().s[253]++;this.descRate=0;cov_1ktvrx4itg().s[254]++;this.depCount=0;}/**
   * Instantiate block entry from transaction.
   * @param {TX} tx
   * @param {CoinView} view
   * @param {BlockTemplate} attempt
   * @returns {BlockEntry}
   */static fromTX(tx,view,attempt){cov_1ktvrx4itg().f[23]++;const item=(cov_1ktvrx4itg().s[255]++,new this(tx));cov_1ktvrx4itg().s[256]++;item.fee=tx.getFee(view);cov_1ktvrx4itg().s[257]++;item.rate=tx.getRate(view);cov_1ktvrx4itg().s[258]++;item.priority=tx.getPriority(view,attempt.height);cov_1ktvrx4itg().s[259]++;item.free=false;cov_1ktvrx4itg().s[260]++;item.sigops=tx.getSigopsCost(view,attempt.flags);cov_1ktvrx4itg().s[261]++;item.descRate=item.rate;cov_1ktvrx4itg().s[262]++;return item;}/**
   * Instantiate block entry from mempool entry.
   * @param {MempoolEntry} entry
   * @param {BlockTemplate} attempt
   * @returns {BlockEntry}
   */static fromEntry(entry,attempt){cov_1ktvrx4itg().f[24]++;const item=(cov_1ktvrx4itg().s[263]++,new this(entry.tx));cov_1ktvrx4itg().s[264]++;item.fee=entry.getFee();cov_1ktvrx4itg().s[265]++;item.rate=entry.getDeltaRate();cov_1ktvrx4itg().s[266]++;item.priority=entry.getPriority(attempt.height);cov_1ktvrx4itg().s[267]++;item.free=entry.getDeltaFee()<policy.getMinFee(entry.size);cov_1ktvrx4itg().s[268]++;item.sigops=entry.sigops;cov_1ktvrx4itg().s[269]++;item.descRate=entry.getDescRate();cov_1ktvrx4itg().s[270]++;return item;}}/**
 * Block Proof
 */class BlockProof{/**
   * Create a block proof.
   * @constructor
   * @param {Hash} hash
   * @param {Hash} root
   * @param {Number} nonce1
   * @param {Number} nonce2
   * @param {Number} time
   * @param {Number} nonce
   */constructor(hash,root,nonce1,nonce2,time,nonce){cov_1ktvrx4itg().f[25]++;cov_1ktvrx4itg().s[271]++;this.hash=hash;cov_1ktvrx4itg().s[272]++;this.root=root;cov_1ktvrx4itg().s[273]++;this.nonce1=nonce1;cov_1ktvrx4itg().s[274]++;this.nonce2=nonce2;cov_1ktvrx4itg().s[275]++;this.time=time;cov_1ktvrx4itg().s[276]++;this.nonce=nonce;}rhash(){cov_1ktvrx4itg().f[26]++;cov_1ktvrx4itg().s[277]++;return util.revHex(this.hash);}verify(target){cov_1ktvrx4itg().f[27]++;cov_1ktvrx4itg().s[278]++;return common.rcmp(this.hash,target)<=0;}getDifficulty(){cov_1ktvrx4itg().f[28]++;cov_1ktvrx4itg().s[279]++;return common.getDifficulty(this.hash);}}/**
 * Merkle Tree
 * @property {Hash[]} steps
 */class MerkleTree{/**
   * Create a merkle tree.
   * @constructor
   */constructor(){cov_1ktvrx4itg().f[29]++;cov_1ktvrx4itg().s[280]++;this.steps=[];}withFirst(hash){cov_1ktvrx4itg().f[30]++;cov_1ktvrx4itg().s[281]++;for(const step of this.steps){cov_1ktvrx4itg().s[282]++;hash=hash256.root(hash,step);}cov_1ktvrx4itg().s[283]++;return hash;}toJSON(){cov_1ktvrx4itg().f[31]++;const steps=(cov_1ktvrx4itg().s[284]++,[]);cov_1ktvrx4itg().s[285]++;for(const step of this.steps){cov_1ktvrx4itg().s[286]++;steps.push(step.toString('hex'));}cov_1ktvrx4itg().s[287]++;return steps;}fromItems(items){cov_1ktvrx4itg().f[32]++;const leaves=(cov_1ktvrx4itg().s[288]++,[]);cov_1ktvrx4itg().s[289]++;leaves.push(consensus.ZERO_HASH);cov_1ktvrx4itg().s[290]++;for(const item of items){cov_1ktvrx4itg().s[291]++;leaves.push(item.tx.hash());}cov_1ktvrx4itg().s[292]++;return this.fromLeaves(leaves);}static fromItems(items){cov_1ktvrx4itg().f[33]++;cov_1ktvrx4itg().s[293]++;return new this().fromItems(items);}fromBlock(txs){cov_1ktvrx4itg().f[34]++;const leaves=(cov_1ktvrx4itg().s[294]++,[]);cov_1ktvrx4itg().s[295]++;leaves.push(consensus.ZERO_HASH);cov_1ktvrx4itg().s[296]++;for(let i=(cov_1ktvrx4itg().s[297]++,1);i<txs.length;i++){const tx=(cov_1ktvrx4itg().s[298]++,txs[i]);cov_1ktvrx4itg().s[299]++;leaves.push(tx.hash());}cov_1ktvrx4itg().s[300]++;return this.fromLeaves(leaves);}static fromBlock(txs){cov_1ktvrx4itg().f[35]++;cov_1ktvrx4itg().s[301]++;return new this().fromBlock(txs);}fromLeaves(leaves){cov_1ktvrx4itg().f[36]++;let len=(cov_1ktvrx4itg().s[302]++,leaves.length);cov_1ktvrx4itg().s[303]++;while(len>1){const hashes=(cov_1ktvrx4itg().s[304]++,[consensus.ZERO_HASH]);cov_1ktvrx4itg().s[305]++;this.steps.push(leaves[1]);cov_1ktvrx4itg().s[306]++;if(len%2){cov_1ktvrx4itg().b[28][0]++;cov_1ktvrx4itg().s[307]++;leaves.push(leaves[len-1]);}else{cov_1ktvrx4itg().b[28][1]++;}cov_1ktvrx4itg().s[308]++;for(let i=(cov_1ktvrx4itg().s[309]++,2);i<len;i+=2){const hash=(cov_1ktvrx4itg().s[310]++,hash256.root(leaves[i],leaves[i+1]));cov_1ktvrx4itg().s[311]++;hashes.push(hash);}cov_1ktvrx4itg().s[312]++;leaves=hashes;cov_1ktvrx4itg().s[313]++;len=leaves.length;}cov_1ktvrx4itg().s[314]++;return this;}static fromLeaves(leaves){cov_1ktvrx4itg().f[37]++;cov_1ktvrx4itg().s[315]++;return new this().fromLeaves(leaves);}}/*
 * Expose
 */cov_1ktvrx4itg().s[316]++;exports=BlockTemplate;cov_1ktvrx4itg().s[317]++;exports.BlockTemplate=BlockTemplate;cov_1ktvrx4itg().s[318]++;exports.BlockEntry=BlockEntry;cov_1ktvrx4itg().s[319]++;module.exports=exports;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
/*!
 * hd.js - hd keys for bcoin
 * Copyright (c) 2015-2016, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */'use strict';function cov_2ig4h25exq(){var path="E:\\Projects\\Test\\bcoin\\lib\\hd\\hd.js";var hash="9c1a6f1a72080f38d8abbff33ae03541e373c79a";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\Projects\\Test\\bcoin\\lib\\hd\\hd.js",statementMap:{"0":{start:{line:9,column:15},end:{line:9,column:31}},"1":{start:{line:10,column:15},end:{line:10,column:34}},"2":{start:{line:11,column:17},end:{line:11,column:38}},"3":{start:{line:12,column:21},end:{line:12,column:41}},"4":{start:{line:13,column:20},end:{line:13,column:39}},"5":{start:{line:14,column:17},end:{line:14,column:38}},"6":{start:{line:20,column:11},end:{line:20,column:18}},"7":{start:{line:29,column:0},end:{line:33,column:2}},"8":{start:{line:30,column:2},end:{line:31,column:50}},"9":{start:{line:31,column:4},end:{line:31,column:50}},"10":{start:{line:32,column:2},end:{line:32,column:47}},"11":{start:{line:43,column:0},end:{line:45,column:2}},"12":{start:{line:44,column:2},end:{line:44,column:33}},"13":{start:{line:54,column:0},end:{line:56,column:2}},"14":{start:{line:55,column:2},end:{line:55,column:40}},"15":{start:{line:64,column:0},end:{line:66,column:2}},"16":{start:{line:65,column:2},end:{line:65,column:44}},"17":{start:{line:75,column:0},end:{line:79,column:2}},"18":{start:{line:76,column:2},end:{line:77,column:48}},"19":{start:{line:77,column:4},end:{line:77,column:48}},"20":{start:{line:78,column:2},end:{line:78,column:45}},"21":{start:{line:88,column:0},end:{line:92,column:2}},"22":{start:{line:89,column:2},end:{line:90,column:47}},"23":{start:{line:90,column:4},end:{line:90,column:47}},"24":{start:{line:91,column:2},end:{line:91,column:44}},"25":{start:{line:102,column:0},end:{line:118,column:2}},"26":{start:{line:103,column:2},end:{line:103,column:39}},"27":{start:{line:105,column:2},end:{line:106,column:19}},"28":{start:{line:106,column:4},end:{line:106,column:19}},"29":{start:{line:108,column:2},end:{line:109,column:43}},"30":{start:{line:109,column:4},end:{line:109,column:43}},"31":{start:{line:111,column:2},end:{line:112,column:40}},"32":{start:{line:112,column:4},end:{line:112,column:40}},"33":{start:{line:114,column:2},end:{line:115,column:36}},"34":{start:{line:115,column:4},end:{line:115,column:36}},"35":{start:{line:117,column:2},end:{line:117,column:60}},"36":{start:{line:127,column:0},end:{line:130,column:2}},"37":{start:{line:128,column:2},end:{line:129,column:43}},"38":{start:{line:139,column:0},end:{line:142,column:2}},"39":{start:{line:140,column:2},end:{line:141,column:40}},"40":{start:{line:150,column:0},end:{line:153,column:2}},"41":{start:{line:151,column:2},end:{line:152,column:38}},"42":{start:{line:161,column:0},end:{line:163,column:2}},"43":{start:{line:162,column:2},end:{line:162,column:42}},"44":{start:{line:171,column:0},end:{line:173,column:2}},"45":{start:{line:172,column:2},end:{line:172,column:40}},"46":{start:{line:179,column:0},end:{line:179,column:19}},"47":{start:{line:180,column:0},end:{line:180,column:11}},"48":{start:{line:181,column:0},end:{line:181,column:23}},"49":{start:{line:182,column:0},end:{line:182,column:29}},"50":{start:{line:183,column:0},end:{line:183,column:27}},"51":{start:{line:184,column:0},end:{line:184,column:31}},"52":{start:{line:185,column:0},end:{line:185,column:29}},"53":{start:{line:186,column:0},end:{line:186,column:23}}},fnMap:{"0":{name:"fromBase58",decl:{start:{line:29,column:25},end:{line:29,column:35}},loc:{start:{line:29,column:51},end:{line:33,column:1}},line:29},"1":{name:"generate",decl:{start:{line:43,column:23},end:{line:43,column:31}},loc:{start:{line:43,column:34},end:{line:45,column:1}},line:43},"2":{name:"fromSeed",decl:{start:{line:54,column:23},end:{line:54,column:31}},loc:{start:{line:54,column:41},end:{line:56,column:1}},line:54},"3":{name:"fromMnemonic",decl:{start:{line:64,column:27},end:{line:64,column:39}},loc:{start:{line:64,column:49},end:{line:66,column:1}},line:64},"4":{name:"fromJSON",decl:{start:{line:75,column:23},end:{line:75,column:31}},loc:{start:{line:75,column:47},end:{line:79,column:1}},line:75},"5":{name:"fromRaw",decl:{start:{line:88,column:22},end:{line:88,column:29}},loc:{start:{line:88,column:45},end:{line:92,column:1}},line:88},"6":{name:"from",decl:{start:{line:102,column:19},end:{line:102,column:23}},loc:{start:{line:102,column:42},end:{line:118,column:1}},line:102},"7":{name:"isBase58",decl:{start:{line:127,column:23},end:{line:127,column:31}},loc:{start:{line:127,column:47},end:{line:130,column:1}},line:127},"8":{name:"isRaw",decl:{start:{line:139,column:20},end:{line:139,column:25}},loc:{start:{line:139,column:41},end:{line:142,column:1}},line:139},"9":{name:"isHD",decl:{start:{line:150,column:19},end:{line:150,column:23}},loc:{start:{line:150,column:29},end:{line:153,column:1}},line:150},"10":{name:"isPrivate",decl:{start:{line:161,column:24},end:{line:161,column:33}},loc:{start:{line:161,column:39},end:{line:163,column:1}},line:161},"11":{name:"isPublic",decl:{start:{line:171,column:23},end:{line:171,column:31}},loc:{start:{line:171,column:37},end:{line:173,column:1}},line:171}},branchMap:{"0":{loc:{start:{line:30,column:2},end:{line:31,column:50}},type:"if",locations:[{start:{line:30,column:2},end:{line:31,column:50}},{start:{line:30,column:2},end:{line:31,column:50}}],line:30},"1":{loc:{start:{line:76,column:2},end:{line:77,column:48}},type:"if",locations:[{start:{line:76,column:2},end:{line:77,column:48}},{start:{line:76,column:2},end:{line:77,column:48}}],line:76},"2":{loc:{start:{line:89,column:2},end:{line:90,column:47}},type:"if",locations:[{start:{line:89,column:2},end:{line:90,column:47}},{start:{line:89,column:2},end:{line:90,column:47}}],line:89},"3":{loc:{start:{line:105,column:2},end:{line:106,column:19}},type:"if",locations:[{start:{line:105,column:2},end:{line:106,column:19}},{start:{line:105,column:2},end:{line:106,column:19}}],line:105},"4":{loc:{start:{line:108,column:2},end:{line:109,column:43}},type:"if",locations:[{start:{line:108,column:2},end:{line:109,column:43}},{start:{line:108,column:2},end:{line:109,column:43}}],line:108},"5":{loc:{start:{line:111,column:2},end:{line:112,column:40}},type:"if",locations:[{start:{line:111,column:2},end:{line:112,column:40}},{start:{line:111,column:2},end:{line:112,column:40}}],line:111},"6":{loc:{start:{line:114,column:2},end:{line:115,column:36}},type:"if",locations:[{start:{line:114,column:2},end:{line:115,column:36}},{start:{line:114,column:2},end:{line:115,column:36}}],line:114},"7":{loc:{start:{line:114,column:6},end:{line:114,column:44}},type:"binary-expr",locations:[{start:{line:114,column:6},end:{line:114,column:13}},{start:{line:114,column:17},end:{line:114,column:44}}],line:114},"8":{loc:{start:{line:128,column:9},end:{line:129,column:42}},type:"binary-expr",locations:[{start:{line:128,column:9},end:{line:128,column:45}},{start:{line:129,column:7},end:{line:129,column:42}}],line:128},"9":{loc:{start:{line:140,column:9},end:{line:141,column:39}},type:"binary-expr",locations:[{start:{line:140,column:9},end:{line:140,column:42}},{start:{line:141,column:7},end:{line:141,column:39}}],line:140},"10":{loc:{start:{line:151,column:9},end:{line:152,column:37}},type:"binary-expr",locations:[{start:{line:151,column:9},end:{line:151,column:41}},{start:{line:152,column:7},end:{line:152,column:37}}],line:151}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"9c1a6f1a72080f38d8abbff33ae03541e373c79a"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2ig4h25exq=function(){return actualCoverage;};}return actualCoverage;}cov_2ig4h25exq();const assert=(cov_2ig4h25exq().s[0]++,require('bsert'));const common=(cov_2ig4h25exq().s[1]++,require('./common'));const Mnemonic=(cov_2ig4h25exq().s[2]++,require('./mnemonic'));const HDPrivateKey=(cov_2ig4h25exq().s[3]++,require('./private'));const HDPublicKey=(cov_2ig4h25exq().s[4]++,require('./public'));const wordlist=(cov_2ig4h25exq().s[5]++,require('./wordlist'));/**
 * @exports hd
 */const HD=(cov_2ig4h25exq().s[6]++,exports);/**
 * Instantiate an HD key (public or private) from an base58 string.
 * @param {Base58String} xkey
 * @param {Network?} network
 * @returns {HDPrivateKey|HDPublicKey}
 */cov_2ig4h25exq().s[7]++;HD.fromBase58=function fromBase58(xkey,network){cov_2ig4h25exq().f[0]++;cov_2ig4h25exq().s[8]++;if(HDPrivateKey.isBase58(xkey)){cov_2ig4h25exq().b[0][0]++;cov_2ig4h25exq().s[9]++;return HDPrivateKey.fromBase58(xkey,network);}else{cov_2ig4h25exq().b[0][1]++;}cov_2ig4h25exq().s[10]++;return HDPublicKey.fromBase58(xkey,network);};/**
 * Generate an {@link HDPrivateKey}.
 * @param {Object} options
 * @param {Buffer?} options.privateKey
 * @param {Buffer?} options.entropy
 * @returns {HDPrivateKey}
 */cov_2ig4h25exq().s[11]++;HD.generate=function generate(){cov_2ig4h25exq().f[1]++;cov_2ig4h25exq().s[12]++;return HDPrivateKey.generate();};/**
 * Generate an {@link HDPrivateKey} from a seed.
 * @param {Object|Mnemonic|Buffer} options - seed,
 * mnemonic, mnemonic options.
 * @returns {HDPrivateKey}
 */cov_2ig4h25exq().s[13]++;HD.fromSeed=function fromSeed(options){cov_2ig4h25exq().f[2]++;cov_2ig4h25exq().s[14]++;return HDPrivateKey.fromSeed(options);};/**
 * Instantiate an hd private key from a mnemonic.
 * @param {Mnemonic|Object} mnemonic
 * @returns {HDPrivateKey}
 */cov_2ig4h25exq().s[15]++;HD.fromMnemonic=function fromMnemonic(options){cov_2ig4h25exq().f[3]++;cov_2ig4h25exq().s[16]++;return HDPrivateKey.fromMnemonic(options);};/**
 * Instantiate an HD key from a jsonified key object.
 * @param {Object} json - The jsonified transaction object.
 * @param {Network?} network
 * @returns {HDPrivateKey|HDPublicKey}
 */cov_2ig4h25exq().s[17]++;HD.fromJSON=function fromJSON(json,network){cov_2ig4h25exq().f[4]++;cov_2ig4h25exq().s[18]++;if(json.xprivkey){cov_2ig4h25exq().b[1][0]++;cov_2ig4h25exq().s[19]++;return HDPrivateKey.fromJSON(json,network);}else{cov_2ig4h25exq().b[1][1]++;}cov_2ig4h25exq().s[20]++;return HDPublicKey.fromJSON(json,network);};/**
 * Instantiate an HD key from serialized data.
 * @param {Buffer} data
 * @param {Network?} network
 * @returns {HDPrivateKey|HDPublicKey}
 */cov_2ig4h25exq().s[21]++;HD.fromRaw=function fromRaw(data,network){cov_2ig4h25exq().f[5]++;cov_2ig4h25exq().s[22]++;if(HDPrivateKey.isRaw(data,network)){cov_2ig4h25exq().b[2][0]++;cov_2ig4h25exq().s[23]++;return HDPrivateKey.fromRaw(data,network);}else{cov_2ig4h25exq().b[2][1]++;}cov_2ig4h25exq().s[24]++;return HDPublicKey.fromRaw(data,network);};/**
 * Generate an hdkey from any number of options.
 * @param {Object|Mnemonic|Buffer} options - mnemonic, mnemonic
 * options, seed, or base58 key.
 * @param {(Network|NetworkType)?} network
 * @returns {HDPrivateKey|HDPublicKey}
 */cov_2ig4h25exq().s[25]++;HD.from=function from(options,network){cov_2ig4h25exq().f[6]++;cov_2ig4h25exq().s[26]++;assert(options,'Options required.');cov_2ig4h25exq().s[27]++;if(HD.isHD(options)){cov_2ig4h25exq().b[3][0]++;cov_2ig4h25exq().s[28]++;return options;}else{cov_2ig4h25exq().b[3][1]++;}cov_2ig4h25exq().s[29]++;if(HD.isBase58(options,network)){cov_2ig4h25exq().b[4][0]++;cov_2ig4h25exq().s[30]++;return HD.fromBase58(options,network);}else{cov_2ig4h25exq().b[4][1]++;}cov_2ig4h25exq().s[31]++;if(HD.isRaw(options,network)){cov_2ig4h25exq().b[5][0]++;cov_2ig4h25exq().s[32]++;return HD.fromRaw(options,network);}else{cov_2ig4h25exq().b[5][1]++;}cov_2ig4h25exq().s[33]++;if((cov_2ig4h25exq().b[7][0]++,options)&&(cov_2ig4h25exq().b[7][1]++,typeof options==='object')){cov_2ig4h25exq().b[6][0]++;cov_2ig4h25exq().s[34]++;return HD.fromMnemonic(options);}else{cov_2ig4h25exq().b[6][1]++;}cov_2ig4h25exq().s[35]++;throw new Error('Cannot create HD key from bad options.');};/**
 * Test whether an object is in the form of a base58 hd key.
 * @param {String} data
 * @param {Network?} network
 * @returns {Boolean}
 */cov_2ig4h25exq().s[36]++;HD.isBase58=function isBase58(data,network){cov_2ig4h25exq().f[7]++;cov_2ig4h25exq().s[37]++;return(cov_2ig4h25exq().b[8][0]++,HDPrivateKey.isBase58(data,network))||(cov_2ig4h25exq().b[8][1]++,HDPublicKey.isBase58(data,network));};/**
 * Test whether an object is in the form of a serialized hd key.
 * @param {Buffer} data
 * @param {Network?} network
 * @returns {NetworkType}
 */cov_2ig4h25exq().s[38]++;HD.isRaw=function isRaw(data,network){cov_2ig4h25exq().f[8]++;cov_2ig4h25exq().s[39]++;return(cov_2ig4h25exq().b[9][0]++,HDPrivateKey.isRaw(data,network))||(cov_2ig4h25exq().b[9][1]++,HDPublicKey.isRaw(data,network));};/**
 * Test whether an object is an HD key.
 * @param {Object} obj
 * @returns {Boolean}
 */cov_2ig4h25exq().s[40]++;HD.isHD=function isHD(obj){cov_2ig4h25exq().f[9]++;cov_2ig4h25exq().s[41]++;return(cov_2ig4h25exq().b[10][0]++,HDPrivateKey.isHDPrivateKey(obj))||(cov_2ig4h25exq().b[10][1]++,HDPublicKey.isHDPublicKey(obj));};/**
 * Test whether an object is an HD private key.
 * @param {Object} obj
 * @returns {Boolean}
 */cov_2ig4h25exq().s[42]++;HD.isPrivate=function isPrivate(obj){cov_2ig4h25exq().f[10]++;cov_2ig4h25exq().s[43]++;return HDPrivateKey.isHDPrivateKey(obj);};/**
 * Test whether an object is an HD public key.
 * @param {Object} obj
 * @returns {Boolean}
 */cov_2ig4h25exq().s[44]++;HD.isPublic=function isPublic(obj){cov_2ig4h25exq().f[11]++;cov_2ig4h25exq().s[45]++;return HDPublicKey.isHDPublicKey(obj);};/*
 * Expose
 */cov_2ig4h25exq().s[46]++;HD.common=common;cov_2ig4h25exq().s[47]++;HD.HD=HD;cov_2ig4h25exq().s[48]++;HD.Mnemonic=Mnemonic;cov_2ig4h25exq().s[49]++;HD.PrivateKey=HDPrivateKey;cov_2ig4h25exq().s[50]++;HD.PublicKey=HDPublicKey;cov_2ig4h25exq().s[51]++;HD.HDPrivateKey=HDPrivateKey;cov_2ig4h25exq().s[52]++;HD.HDPublicKey=HDPublicKey;cov_2ig4h25exq().s[53]++;HD.wordlist=wordlist;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
/*!
 * scriptnum.js - script number object for bcoin.
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */'use strict';function cov_1ojdnftw1v(){var path="E:\\Projects\\Test\\bcoin\\lib\\script\\scriptnum.js";var hash="834f13c70bac177aa5713bcf883e7d1c6c3eb597";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\Projects\\Test\\bcoin\\lib\\script\\scriptnum.js",statementMap:{"0":{start:{line:9,column:15},end:{line:9,column:31}},"1":{start:{line:10,column:14},end:{line:10,column:28}},"2":{start:{line:11,column:20},end:{line:11,column:44}},"3":{start:{line:12,column:24},end:{line:12,column:43}},"4":{start:{line:18,column:20},end:{line:18,column:35}},"5":{start:{line:38,column:4},end:{line:38,column:21}},"6":{start:{line:47,column:4},end:{line:48,column:26}},"7":{start:{line:48,column:6},end:{line:48,column:26}},"8":{start:{line:50,column:4},end:{line:51,column:26}},"9":{start:{line:51,column:6},end:{line:51,column:26}},"10":{start:{line:53,column:4},end:{line:53,column:24}},"11":{start:{line:62,column:14},end:{line:62,column:18}},"12":{start:{line:65,column:4},end:{line:66,column:25}},"13":{start:{line:66,column:6},end:{line:66,column:25}},"14":{start:{line:69,column:14},end:{line:69,column:19}},"15":{start:{line:70,column:4},end:{line:73,column:5}},"16":{start:{line:71,column:6},end:{line:71,column:22}},"17":{start:{line:72,column:6},end:{line:72,column:17}},"18":{start:{line:76,column:17},end:{line:76,column:33}},"19":{start:{line:78,column:17},end:{line:78,column:18}},"20":{start:{line:80,column:4},end:{line:81,column:17}},"21":{start:{line:81,column:6},end:{line:81,column:17}},"22":{start:{line:84,column:17},end:{line:84,column:50}},"23":{start:{line:86,column:4},end:{line:103,column:5}},"24":{start:{line:88,column:8},end:{line:88,column:41}},"25":{start:{line:90,column:8},end:{line:90,column:40}},"26":{start:{line:92,column:8},end:{line:92,column:39}},"27":{start:{line:94,column:8},end:{line:94,column:32}},"28":{start:{line:96,column:8},end:{line:96,column:41}},"29":{start:{line:98,column:8},end:{line:98,column:40}},"30":{start:{line:100,column:8},end:{line:100,column:39}},"31":{start:{line:102,column:8},end:{line:102,column:32}},"32":{start:{line:106,column:4},end:{line:117,column:5}},"33":{start:{line:107,column:6},end:{line:107,column:27}},"34":{start:{line:108,column:6},end:{line:108,column:44}},"35":{start:{line:109,column:6},end:{line:109,column:34}},"36":{start:{line:110,column:11},end:{line:117,column:5}},"37":{start:{line:111,column:6},end:{line:111,column:27}},"38":{start:{line:112,column:6},end:{line:112,column:35}},"39":{start:{line:113,column:6},end:{line:113,column:29}},"40":{start:{line:115,column:6},end:{line:115,column:27}},"41":{start:{line:116,column:6},end:{line:116,column:35}},"42":{start:{line:119,column:4},end:{line:119,column:16}},"43":{start:{line:130,column:4},end:{line:130,column:34}},"44":{start:{line:133,column:4},end:{line:134,column:18}},"45":{start:{line:134,column:6},end:{line:134,column:18}},"46":{start:{line:137,column:4},end:{line:159,column:5}},"47":{start:{line:139,column:8},end:{line:139,column:33}},"48":{start:{line:141,column:8},end:{line:141,column:33}},"49":{start:{line:143,column:8},end:{line:143,column:32}},"50":{start:{line:145,column:8},end:{line:145,column:27}},"51":{start:{line:147,column:8},end:{line:147,column:33}},"52":{start:{line:149,column:8},end:{line:149,column:33}},"53":{start:{line:151,column:8},end:{line:151,column:32}},"54":{start:{line:153,column:8},end:{line:153,column:27}},"55":{start:{line:154,column:8},end:{line:154,column:14}},"56":{start:{line:156,column:8},end:{line:157,column:31}},"57":{start:{line:156,column:21},end:{line:156,column:22}},"58":{start:{line:157,column:10},end:{line:157,column:31}},"59":{start:{line:158,column:8},end:{line:158,column:14}},"60":{start:{line:162,column:4},end:{line:165,column:5}},"61":{start:{line:163,column:6},end:{line:163,column:42}},"62":{start:{line:164,column:6},end:{line:164,column:18}},"63":{start:{line:167,column:4},end:{line:167,column:16}},"64":{start:{line:176,column:4},end:{line:176,column:24}},"65":{start:{line:189,column:4},end:{line:189,column:34}},"66":{start:{line:191,column:4},end:{line:192,column:72}},"67":{start:{line:192,column:6},end:{line:192,column:72}},"68":{start:{line:194,column:4},end:{line:195,column:75}},"69":{start:{line:195,column:6},end:{line:195,column:75}},"70":{start:{line:197,column:4},end:{line:197,column:30}},"71":{start:{line:206,column:4},end:{line:206,column:47}},"72":{start:{line:217,column:4},end:{line:217,column:34}},"73":{start:{line:219,column:4},end:{line:220,column:18}},"74":{start:{line:220,column:6},end:{line:220,column:18}},"75":{start:{line:222,column:4},end:{line:228,column:5}},"76":{start:{line:223,column:6},end:{line:224,column:21}},"77":{start:{line:224,column:8},end:{line:224,column:21}},"78":{start:{line:226,column:6},end:{line:227,column:21}},"79":{start:{line:227,column:8},end:{line:227,column:21}},"80":{start:{line:230,column:4},end:{line:230,column:16}},"81":{start:{line:242,column:4},end:{line:242,column:51}},"82":{start:{line:252,column:4},end:{line:252,column:36}},"83":{start:{line:260,column:0},end:{line:260,column:27}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:37,column:2},end:{line:37,column:3}},loc:{start:{line:37,column:25},end:{line:39,column:3}},line:37},"1":{name:"(anonymous_1)",decl:{start:{line:46,column:2},end:{line:46,column:3}},loc:{start:{line:46,column:11},end:{line:54,column:3}},line:46},"2":{name:"(anonymous_2)",decl:{start:{line:61,column:2},end:{line:61,column:3}},loc:{start:{line:61,column:10},end:{line:120,column:3}},line:61},"3":{name:"(anonymous_3)",decl:{start:{line:129,column:2},end:{line:129,column:3}},loc:{start:{line:129,column:16},end:{line:168,column:3}},line:129},"4":{name:"(anonymous_4)",decl:{start:{line:175,column:2},end:{line:175,column:3}},loc:{start:{line:175,column:11},end:{line:177,column:3}},line:175},"5":{name:"(anonymous_5)",decl:{start:{line:188,column:2},end:{line:188,column:3}},loc:{start:{line:188,column:31},end:{line:198,column:3}},line:188},"6":{name:"(anonymous_6)",decl:{start:{line:205,column:2},end:{line:205,column:3}},loc:{start:{line:205,column:20},end:{line:207,column:3}},line:205},"7":{name:"(anonymous_7)",decl:{start:{line:216,column:2},end:{line:216,column:3}},loc:{start:{line:216,column:25},end:{line:231,column:3}},line:216},"8":{name:"(anonymous_8)",decl:{start:{line:241,column:2},end:{line:241,column:3}},loc:{start:{line:241,column:38},end:{line:243,column:3}},line:241},"9":{name:"(anonymous_9)",decl:{start:{line:251,column:2},end:{line:251,column:3}},loc:{start:{line:251,column:26},end:{line:253,column:3}},line:251}},branchMap:{"0":{loc:{start:{line:47,column:4},end:{line:48,column:26}},type:"if",locations:[{start:{line:47,column:4},end:{line:48,column:26}},{start:{line:47,column:4},end:{line:48,column:26}}],line:47},"1":{loc:{start:{line:50,column:4},end:{line:51,column:26}},type:"if",locations:[{start:{line:50,column:4},end:{line:51,column:26}},{start:{line:50,column:4},end:{line:51,column:26}}],line:50},"2":{loc:{start:{line:65,column:4},end:{line:66,column:25}},type:"if",locations:[{start:{line:65,column:4},end:{line:66,column:25}},{start:{line:65,column:4},end:{line:66,column:25}}],line:65},"3":{loc:{start:{line:70,column:4},end:{line:73,column:5}},type:"if",locations:[{start:{line:70,column:4},end:{line:73,column:5}},{start:{line:70,column:4},end:{line:73,column:5}}],line:70},"4":{loc:{start:{line:80,column:4},end:{line:81,column:17}},type:"if",locations:[{start:{line:80,column:4},end:{line:81,column:17}},{start:{line:80,column:4},end:{line:81,column:17}}],line:80},"5":{loc:{start:{line:86,column:4},end:{line:103,column:5}},type:"switch",locations:[{start:{line:87,column:6},end:{line:88,column:41}},{start:{line:89,column:6},end:{line:90,column:40}},{start:{line:91,column:6},end:{line:92,column:39}},{start:{line:93,column:6},end:{line:94,column:32}},{start:{line:95,column:6},end:{line:96,column:41}},{start:{line:97,column:6},end:{line:98,column:40}},{start:{line:99,column:6},end:{line:100,column:39}},{start:{line:101,column:6},end:{line:102,column:32}}],line:86},"6":{loc:{start:{line:106,column:4},end:{line:117,column:5}},type:"if",locations:[{start:{line:106,column:4},end:{line:117,column:5}},{start:{line:106,column:4},end:{line:117,column:5}}],line:106},"7":{loc:{start:{line:109,column:19},end:{line:109,column:33}},type:"cond-expr",locations:[{start:{line:109,column:25},end:{line:109,column:29}},{start:{line:109,column:32},end:{line:109,column:33}}],line:109},"8":{loc:{start:{line:110,column:11},end:{line:117,column:5}},type:"if",locations:[{start:{line:110,column:11},end:{line:117,column:5}},{start:{line:110,column:11},end:{line:117,column:5}}],line:110},"9":{loc:{start:{line:133,column:4},end:{line:134,column:18}},type:"if",locations:[{start:{line:133,column:4},end:{line:134,column:18}},{start:{line:133,column:4},end:{line:134,column:18}}],line:133},"10":{loc:{start:{line:137,column:4},end:{line:159,column:5}},type:"switch",locations:[{start:{line:138,column:6},end:{line:139,column:33}},{start:{line:140,column:6},end:{line:141,column:33}},{start:{line:142,column:6},end:{line:143,column:32}},{start:{line:144,column:6},end:{line:145,column:27}},{start:{line:146,column:6},end:{line:147,column:33}},{start:{line:148,column:6},end:{line:149,column:33}},{start:{line:150,column:6},end:{line:151,column:32}},{start:{line:152,column:6},end:{line:154,column:14}},{start:{line:155,column:6},end:{line:158,column:14}}],line:137},"11":{loc:{start:{line:162,column:4},end:{line:165,column:5}},type:"if",locations:[{start:{line:162,column:4},end:{line:165,column:5}},{start:{line:162,column:4},end:{line:165,column:5}}],line:162},"12":{loc:{start:{line:191,column:4},end:{line:192,column:72}},type:"if",locations:[{start:{line:191,column:4},end:{line:192,column:72}},{start:{line:191,column:4},end:{line:192,column:72}}],line:191},"13":{loc:{start:{line:191,column:8},end:{line:191,column:44}},type:"binary-expr",locations:[{start:{line:191,column:8},end:{line:191,column:21}},{start:{line:191,column:25},end:{line:191,column:44}}],line:191},"14":{loc:{start:{line:194,column:4},end:{line:195,column:75}},type:"if",locations:[{start:{line:194,column:4},end:{line:195,column:75}},{start:{line:194,column:4},end:{line:195,column:75}}],line:194},"15":{loc:{start:{line:194,column:8},end:{line:194,column:45}},type:"binary-expr",locations:[{start:{line:194,column:8},end:{line:194,column:15}},{start:{line:194,column:19},end:{line:194,column:45}}],line:194},"16":{loc:{start:{line:219,column:4},end:{line:220,column:18}},type:"if",locations:[{start:{line:219,column:4},end:{line:220,column:18}},{start:{line:219,column:4},end:{line:220,column:18}}],line:219},"17":{loc:{start:{line:222,column:4},end:{line:228,column:5}},type:"if",locations:[{start:{line:222,column:4},end:{line:228,column:5}},{start:{line:222,column:4},end:{line:228,column:5}}],line:222},"18":{loc:{start:{line:223,column:6},end:{line:224,column:21}},type:"if",locations:[{start:{line:223,column:6},end:{line:224,column:21}},{start:{line:223,column:6},end:{line:224,column:21}}],line:223},"19":{loc:{start:{line:226,column:6},end:{line:227,column:21}},type:"if",locations:[{start:{line:226,column:6},end:{line:227,column:21}},{start:{line:226,column:6},end:{line:227,column:21}}],line:226}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0,0,0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0,0,0,0,0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"834f13c70bac177aa5713bcf883e7d1c6c3eb597"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1ojdnftw1v=function(){return actualCoverage;};}return actualCoverage;}cov_1ojdnftw1v();const assert=(cov_1ojdnftw1v().s[0]++,require('bsert'));const{I64}=(cov_1ojdnftw1v().s[1]++,require('n64'));const ScriptError=(cov_1ojdnftw1v().s[2]++,require('./scripterror'));const{inspectSymbol}=(cov_1ojdnftw1v().s[3]++,require('../utils'));/*
 * Constants
 */const EMPTY_ARRAY=(cov_1ojdnftw1v().s[4]++,Buffer.alloc(0));/**
 * Script Number
 * @see https://github.com/chjj/n64
 * @alias module:script.ScriptNum
 * @property {Number} hi
 * @property {Number} lo
 * @property {Number} sign
 */class ScriptNum extends I64{/**
   * Create a script number.
   * @constructor
   * @param {(Number|String|Buffer|Object)?} num
   * @param {(String|Number)?} base
   */constructor(num,base){cov_1ojdnftw1v().f[0]++;cov_1ojdnftw1v().s[5]++;super(num,base);}/**
   * Cast to int32.
   * @returns {Number}
   */getInt(){cov_1ojdnftw1v().f[1]++;cov_1ojdnftw1v().s[6]++;if(this.lt(I64.INT32_MIN)){cov_1ojdnftw1v().b[0][0]++;cov_1ojdnftw1v().s[7]++;return I64.LONG_MIN;}else{cov_1ojdnftw1v().b[0][1]++;}cov_1ojdnftw1v().s[8]++;if(this.gt(I64.INT32_MAX)){cov_1ojdnftw1v().b[1][0]++;cov_1ojdnftw1v().s[9]++;return I64.LONG_MAX;}else{cov_1ojdnftw1v().b[1][1]++;}cov_1ojdnftw1v().s[10]++;return this.toInt();}/**
   * Serialize script number.
   * @returns {Buffer}
   */toRaw(){cov_1ojdnftw1v().f[2]++;let num=(cov_1ojdnftw1v().s[11]++,this);// Zeroes are always empty arrays.
cov_1ojdnftw1v().s[12]++;if(num.isZero()){cov_1ojdnftw1v().b[2][0]++;cov_1ojdnftw1v().s[13]++;return EMPTY_ARRAY;}else{cov_1ojdnftw1v().b[2][1]++;}// Need to append sign bit.
let neg=(cov_1ojdnftw1v().s[14]++,false);cov_1ojdnftw1v().s[15]++;if(num.isNeg()){cov_1ojdnftw1v().b[3][0]++;cov_1ojdnftw1v().s[16]++;num=num.neg();cov_1ojdnftw1v().s[17]++;neg=true;}else{cov_1ojdnftw1v().b[3][1]++;}// Calculate size.
const size=(cov_1ojdnftw1v().s[18]++,num.byteLength());let offset=(cov_1ojdnftw1v().s[19]++,0);cov_1ojdnftw1v().s[20]++;if(num.testn(size*8-1)){cov_1ojdnftw1v().b[4][0]++;cov_1ojdnftw1v().s[21]++;offset=1;}else{cov_1ojdnftw1v().b[4][1]++;}// Write number.
const data=(cov_1ojdnftw1v().s[22]++,Buffer.allocUnsafe(size+offset));cov_1ojdnftw1v().s[23]++;switch(size){case 8:cov_1ojdnftw1v().b[5][0]++;cov_1ojdnftw1v().s[24]++;data[7]=num.hi>>>24&0xff;case 7:cov_1ojdnftw1v().b[5][1]++;cov_1ojdnftw1v().s[25]++;data[6]=num.hi>>16&0xff;case 6:cov_1ojdnftw1v().b[5][2]++;cov_1ojdnftw1v().s[26]++;data[5]=num.hi>>8&0xff;case 5:cov_1ojdnftw1v().b[5][3]++;cov_1ojdnftw1v().s[27]++;data[4]=num.hi&0xff;case 4:cov_1ojdnftw1v().b[5][4]++;cov_1ojdnftw1v().s[28]++;data[3]=num.lo>>>24&0xff;case 3:cov_1ojdnftw1v().b[5][5]++;cov_1ojdnftw1v().s[29]++;data[2]=num.lo>>16&0xff;case 2:cov_1ojdnftw1v().b[5][6]++;cov_1ojdnftw1v().s[30]++;data[1]=num.lo>>8&0xff;case 1:cov_1ojdnftw1v().b[5][7]++;cov_1ojdnftw1v().s[31]++;data[0]=num.lo&0xff;}// Append sign bit.
cov_1ojdnftw1v().s[32]++;if(data[size-1]&0x80){cov_1ojdnftw1v().b[6][0]++;cov_1ojdnftw1v().s[33]++;assert(offset===1);cov_1ojdnftw1v().s[34]++;assert(data.length===size+offset);cov_1ojdnftw1v().s[35]++;data[size]=neg?(cov_1ojdnftw1v().b[7][0]++,0x80):(cov_1ojdnftw1v().b[7][1]++,0);}else{cov_1ojdnftw1v().b[6][1]++;cov_1ojdnftw1v().s[36]++;if(neg){cov_1ojdnftw1v().b[8][0]++;cov_1ojdnftw1v().s[37]++;assert(offset===0);cov_1ojdnftw1v().s[38]++;assert(data.length===size);cov_1ojdnftw1v().s[39]++;data[size-1]|=0x80;}else{cov_1ojdnftw1v().b[8][1]++;cov_1ojdnftw1v().s[40]++;assert(offset===0);cov_1ojdnftw1v().s[41]++;assert(data.length===size);}}cov_1ojdnftw1v().s[42]++;return data;}/**
   * Instantiate script number from serialized data.
   * @private
   * @param {Buffer} data
   * @returns {ScriptNum}
   */fromRaw(data){cov_1ojdnftw1v().f[3]++;cov_1ojdnftw1v().s[43]++;assert(Buffer.isBuffer(data));// Empty arrays are always zero.
cov_1ojdnftw1v().s[44]++;if(data.length===0){cov_1ojdnftw1v().b[9][0]++;cov_1ojdnftw1v().s[45]++;return this;}else{cov_1ojdnftw1v().b[9][1]++;}// Read number (9 bytes max).
cov_1ojdnftw1v().s[46]++;switch(data.length){case 8:cov_1ojdnftw1v().b[10][0]++;cov_1ojdnftw1v().s[47]++;this.hi|=data[7]<<24;case 7:cov_1ojdnftw1v().b[10][1]++;cov_1ojdnftw1v().s[48]++;this.hi|=data[6]<<16;case 6:cov_1ojdnftw1v().b[10][2]++;cov_1ojdnftw1v().s[49]++;this.hi|=data[5]<<8;case 5:cov_1ojdnftw1v().b[10][3]++;cov_1ojdnftw1v().s[50]++;this.hi|=data[4];case 4:cov_1ojdnftw1v().b[10][4]++;cov_1ojdnftw1v().s[51]++;this.lo|=data[3]<<24;case 3:cov_1ojdnftw1v().b[10][5]++;cov_1ojdnftw1v().s[52]++;this.lo|=data[2]<<16;case 2:cov_1ojdnftw1v().b[10][6]++;cov_1ojdnftw1v().s[53]++;this.lo|=data[1]<<8;case 1:cov_1ojdnftw1v().b[10][7]++;cov_1ojdnftw1v().s[54]++;this.lo|=data[0];cov_1ojdnftw1v().s[55]++;break;default:cov_1ojdnftw1v().b[10][8]++;cov_1ojdnftw1v().s[56]++;for(let i=(cov_1ojdnftw1v().s[57]++,0);i<data.length;i++){cov_1ojdnftw1v().s[58]++;this.orb(i,data[i]);}cov_1ojdnftw1v().s[59]++;break;}// Remove high bit and flip sign.
cov_1ojdnftw1v().s[60]++;if(data[data.length-1]&0x80){cov_1ojdnftw1v().b[11][0]++;cov_1ojdnftw1v().s[61]++;this.setn(data.length*8-1,0);cov_1ojdnftw1v().s[62]++;this.ineg();}else{cov_1ojdnftw1v().b[11][1]++;}cov_1ojdnftw1v().s[63]++;return this;}/**
   * Serialize script number.
   * @returns {Buffer}
   */encode(){cov_1ojdnftw1v().f[4]++;cov_1ojdnftw1v().s[64]++;return this.toRaw();}/**
   * Decode and verify script number.
   * @private
   * @param {Buffer} data
   * @param {Boolean?} minimal - Require minimal encoding.
   * @param {Number?} limit - Size limit.
   * @returns {ScriptNum}
   */decode(data,minimal,limit){cov_1ojdnftw1v().f[5]++;cov_1ojdnftw1v().s[65]++;assert(Buffer.isBuffer(data));cov_1ojdnftw1v().s[66]++;if((cov_1ojdnftw1v().b[13][0]++,limit!=null)&&(cov_1ojdnftw1v().b[13][1]++,data.length>limit)){cov_1ojdnftw1v().b[12][0]++;cov_1ojdnftw1v().s[67]++;throw new ScriptError('UNKNOWN_ERROR','Script number overflow.');}else{cov_1ojdnftw1v().b[12][1]++;}cov_1ojdnftw1v().s[68]++;if((cov_1ojdnftw1v().b[15][0]++,minimal)&&(cov_1ojdnftw1v().b[15][1]++,!ScriptNum.isMinimal(data))){cov_1ojdnftw1v().b[14][0]++;cov_1ojdnftw1v().s[69]++;throw new ScriptError('UNKNOWN_ERROR','Non-minimal script number.');}else{cov_1ojdnftw1v().b[14][1]++;}cov_1ojdnftw1v().s[70]++;return this.fromRaw(data);}/**
   * Inspect script number.
   * @returns {String}
   */[inspectSymbol](){cov_1ojdnftw1v().f[6]++;cov_1ojdnftw1v().s[71]++;return`<ScriptNum: ${this.toString(10)}>`;}/**
   * Test wether a serialized script
   * number is in its most minimal form.
   * @param {Buffer} data
   * @returns {Boolean}
   */static isMinimal(data){cov_1ojdnftw1v().f[7]++;cov_1ojdnftw1v().s[72]++;assert(Buffer.isBuffer(data));cov_1ojdnftw1v().s[73]++;if(data.length===0){cov_1ojdnftw1v().b[16][0]++;cov_1ojdnftw1v().s[74]++;return true;}else{cov_1ojdnftw1v().b[16][1]++;}cov_1ojdnftw1v().s[75]++;if((data[data.length-1]&0x7f)===0){cov_1ojdnftw1v().b[17][0]++;cov_1ojdnftw1v().s[76]++;if(data.length===1){cov_1ojdnftw1v().b[18][0]++;cov_1ojdnftw1v().s[77]++;return false;}else{cov_1ojdnftw1v().b[18][1]++;}cov_1ojdnftw1v().s[78]++;if((data[data.length-2]&0x80)===0){cov_1ojdnftw1v().b[19][0]++;cov_1ojdnftw1v().s[79]++;return false;}else{cov_1ojdnftw1v().b[19][1]++;}}else{cov_1ojdnftw1v().b[17][1]++;}cov_1ojdnftw1v().s[80]++;return true;}/**
   * Decode and verify script number.
   * @param {Buffer} data
   * @param {Boolean?} minimal - Require minimal encoding.
   * @param {Number?} limit - Size limit.
   * @returns {ScriptNum}
   */static decode(data,minimal,limit){cov_1ojdnftw1v().f[8]++;cov_1ojdnftw1v().s[81]++;return new this().decode(data,minimal,limit);}/**
   * Test whether object is a script number.
   * @param {Object} obj
   * @returns {Boolean}
   */static isScriptNum(obj){cov_1ojdnftw1v().f[9]++;cov_1ojdnftw1v().s[82]++;return obj instanceof ScriptNum;}}/*
 * Expose
 */cov_1ojdnftw1v().s[83]++;module.exports=ScriptNum;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
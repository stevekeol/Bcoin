/*!
 * invitem.js - inv item object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */'use strict';function cov_4kgo8t3ui(){var path="E:\\Projects\\Test\\bcoin\\lib\\primitives\\invitem.js";var hash="70310bf931d60bdc644dae7ba60573e5fdce1c53";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\Projects\\Test\\bcoin\\lib\\primitives\\invitem.js",statementMap:{"0":{start:{line:10,column:12},end:{line:10,column:28}},"1":{start:{line:11,column:13},end:{line:11,column:37}},"2":{start:{line:30,column:4},end:{line:30,column:21}},"3":{start:{line:31,column:4},end:{line:31,column:21}},"4":{start:{line:40,column:4},end:{line:40,column:14}},"5":{start:{line:49,column:4},end:{line:49,column:27}},"6":{start:{line:50,column:4},end:{line:50,column:28}},"7":{start:{line:51,column:4},end:{line:51,column:14}},"8":{start:{line:60,column:4},end:{line:60,column:49}},"9":{start:{line:70,column:4},end:{line:70,column:29}},"10":{start:{line:71,column:4},end:{line:71,column:30}},"11":{start:{line:72,column:4},end:{line:72,column:16}},"12":{start:{line:81,column:4},end:{line:81,column:43}},"13":{start:{line:91,column:4},end:{line:91,column:37}},"14":{start:{line:102,column:4},end:{line:103,column:36}},"15":{start:{line:103,column:6},end:{line:103,column:36}},"16":{start:{line:104,column:4},end:{line:104,column:36}},"17":{start:{line:113,column:4},end:{line:122,column:5}},"18":{start:{line:119,column:8},end:{line:119,column:20}},"19":{start:{line:121,column:8},end:{line:121,column:21}},"20":{start:{line:131,column:4},end:{line:137,column:5}},"21":{start:{line:134,column:8},end:{line:134,column:20}},"22":{start:{line:136,column:8},end:{line:136,column:21}},"23":{start:{line:146,column:4},end:{line:146,column:52}},"24":{start:{line:155,column:4},end:{line:155,column:34}},"25":{start:{line:165,column:0},end:{line:173,column:2}},"26":{start:{line:180,column:0},end:{line:188,column:2}},"27":{start:{line:196,column:0},end:{line:196,column:31}},"28":{start:{line:202,column:0},end:{line:202,column:25}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:29,column:2},end:{line:29,column:3}},loc:{start:{line:29,column:26},end:{line:32,column:3}},line:29},"1":{name:"(anonymous_1)",decl:{start:{line:39,column:2},end:{line:39,column:3}},loc:{start:{line:39,column:12},end:{line:41,column:3}},line:39},"2":{name:"(anonymous_2)",decl:{start:{line:48,column:2},end:{line:48,column:3}},loc:{start:{line:48,column:15},end:{line:52,column:3}},line:48},"3":{name:"(anonymous_3)",decl:{start:{line:59,column:2},end:{line:59,column:3}},loc:{start:{line:59,column:10},end:{line:61,column:3}},line:59},"4":{name:"(anonymous_4)",decl:{start:{line:69,column:2},end:{line:69,column:3}},loc:{start:{line:69,column:17},end:{line:73,column:3}},line:69},"5":{name:"(anonymous_5)",decl:{start:{line:80,column:2},end:{line:80,column:3}},loc:{start:{line:80,column:16},end:{line:82,column:3}},line:80},"6":{name:"(anonymous_6)",decl:{start:{line:90,column:2},end:{line:90,column:3}},loc:{start:{line:90,column:24},end:{line:92,column:3}},line:90},"7":{name:"(anonymous_7)",decl:{start:{line:101,column:2},end:{line:101,column:3}},loc:{start:{line:101,column:28},end:{line:105,column:3}},line:101},"8":{name:"(anonymous_8)",decl:{start:{line:112,column:2},end:{line:112,column:3}},loc:{start:{line:112,column:12},end:{line:123,column:3}},line:112},"9":{name:"(anonymous_9)",decl:{start:{line:130,column:2},end:{line:130,column:3}},loc:{start:{line:130,column:9},end:{line:138,column:3}},line:130},"10":{name:"(anonymous_10)",decl:{start:{line:145,column:2},end:{line:145,column:3}},loc:{start:{line:145,column:15},end:{line:147,column:3}},line:145},"11":{name:"(anonymous_11)",decl:{start:{line:154,column:2},end:{line:154,column:3}},loc:{start:{line:154,column:10},end:{line:156,column:3}},line:154}},branchMap:{"0":{loc:{start:{line:102,column:4},end:{line:103,column:36}},type:"if",locations:[{start:{line:102,column:4},end:{line:103,column:36}},{start:{line:102,column:4},end:{line:103,column:36}}],line:102},"1":{loc:{start:{line:113,column:4},end:{line:122,column:5}},type:"switch",locations:[{start:{line:114,column:6},end:{line:114,column:31}},{start:{line:115,column:6},end:{line:115,column:39}},{start:{line:116,column:6},end:{line:116,column:40}},{start:{line:117,column:6},end:{line:117,column:48}},{start:{line:118,column:6},end:{line:119,column:20}},{start:{line:120,column:6},end:{line:121,column:21}}],line:113},"2":{loc:{start:{line:131,column:4},end:{line:137,column:5}},type:"switch",locations:[{start:{line:132,column:6},end:{line:132,column:28}},{start:{line:133,column:6},end:{line:134,column:20}},{start:{line:135,column:6},end:{line:136,column:21}}],line:131}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},b:{"0":[0,0],"1":[0,0,0,0,0,0],"2":[0,0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"70310bf931d60bdc644dae7ba60573e5fdce1c53"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_4kgo8t3ui=function(){return actualCoverage;};}return actualCoverage;}cov_4kgo8t3ui();const bio=(cov_4kgo8t3ui().s[0]++,require('bufio'));const util=(cov_4kgo8t3ui().s[1]++,require('../utils/util'));/**
 * Inv Item
 * @alias module:primitives.InvItem
 * @constructor
 * @property {InvType} type
 * @property {Hash} hash
 */class InvItem{/**
   * Create an inv item.
   * @constructor
   * @param {Number} type
   * @param {Hash} hash
   */constructor(type,hash){cov_4kgo8t3ui().f[0]++;cov_4kgo8t3ui().s[2]++;this.type=type;cov_4kgo8t3ui().s[3]++;this.hash=hash;}/**
   * Write inv item to buffer writer.
   * @param {BufferWriter} bw
   */getSize(){cov_4kgo8t3ui().f[1]++;cov_4kgo8t3ui().s[4]++;return 36;}/**
   * Write inv item to buffer writer.
   * @param {BufferWriter} bw
   */toWriter(bw){cov_4kgo8t3ui().f[2]++;cov_4kgo8t3ui().s[5]++;bw.writeU32(this.type);cov_4kgo8t3ui().s[6]++;bw.writeHash(this.hash);cov_4kgo8t3ui().s[7]++;return bw;}/**
   * Serialize inv item.
   * @returns {Buffer}
   */toRaw(){cov_4kgo8t3ui().f[3]++;cov_4kgo8t3ui().s[8]++;return this.toWriter(bio.write(36)).render();}/**
   * Inject properties from buffer reader.
   * @private
   * @param {BufferReader} br
   */fromReader(br){cov_4kgo8t3ui().f[4]++;cov_4kgo8t3ui().s[9]++;this.type=br.readU32();cov_4kgo8t3ui().s[10]++;this.hash=br.readHash();cov_4kgo8t3ui().s[11]++;return this;}/**
   * Inject properties from serialized data.
   * @param {Buffer} data
   */fromRaw(data){cov_4kgo8t3ui().f[5]++;cov_4kgo8t3ui().s[12]++;return this.fromReader(bio.read(data));}/**
   * Instantiate inv item from buffer reader.
   * @param {BufferReader} br
   * @returns {InvItem}
   */static fromReader(br){cov_4kgo8t3ui().f[6]++;cov_4kgo8t3ui().s[13]++;return new this().fromReader(br);}/**
   * Instantiate inv item from serialized data.
   * @param {Buffer} data
   * @param {String?} enc
   * @returns {InvItem}
   */static fromRaw(data,enc){cov_4kgo8t3ui().f[7]++;cov_4kgo8t3ui().s[14]++;if(typeof data==='string'){cov_4kgo8t3ui().b[0][0]++;cov_4kgo8t3ui().s[15]++;data=Buffer.from(data,enc);}else{cov_4kgo8t3ui().b[0][1]++;}cov_4kgo8t3ui().s[16]++;return new this().fromRaw(data);}/**
   * Test whether the inv item is a block.
   * @returns {Boolean}
   */isBlock(){cov_4kgo8t3ui().f[8]++;cov_4kgo8t3ui().s[17]++;switch(this.type){case InvItem.types.BLOCK:cov_4kgo8t3ui().b[1][0]++;case InvItem.types.WITNESS_BLOCK:cov_4kgo8t3ui().b[1][1]++;case InvItem.types.FILTERED_BLOCK:cov_4kgo8t3ui().b[1][2]++;case InvItem.types.WITNESS_FILTERED_BLOCK:cov_4kgo8t3ui().b[1][3]++;case InvItem.types.CMPCT_BLOCK:cov_4kgo8t3ui().b[1][4]++;cov_4kgo8t3ui().s[18]++;return true;default:cov_4kgo8t3ui().b[1][5]++;cov_4kgo8t3ui().s[19]++;return false;}}/**
   * Test whether the inv item is a tx.
   * @returns {Boolean}
   */isTX(){cov_4kgo8t3ui().f[9]++;cov_4kgo8t3ui().s[20]++;switch(this.type){case InvItem.types.TX:cov_4kgo8t3ui().b[2][0]++;case InvItem.types.WITNESS_TX:cov_4kgo8t3ui().b[2][1]++;cov_4kgo8t3ui().s[21]++;return true;default:cov_4kgo8t3ui().b[2][2]++;cov_4kgo8t3ui().s[22]++;return false;}}/**
   * Test whether the inv item has the witness bit set.
   * @returns {Boolean}
   */hasWitness(){cov_4kgo8t3ui().f[10]++;cov_4kgo8t3ui().s[23]++;return(this.type&InvItem.WITNESS_FLAG)!==0;}/**
   * Get little-endian hash.
   * @returns {Hash}
   */rhash(){cov_4kgo8t3ui().f[11]++;cov_4kgo8t3ui().s[24]++;return util.revHex(this.hash);}}/**
 * Inv types.
 * @enum {Number}
 * @default
 */cov_4kgo8t3ui().s[25]++;InvItem.types={TX:1,BLOCK:2,FILTERED_BLOCK:3,CMPCT_BLOCK:4,WITNESS_TX:1|1<<30,WITNESS_BLOCK:2|1<<30,WITNESS_FILTERED_BLOCK:3|1<<30};/**
 * Inv types by value.
 * @const {Object}
 */cov_4kgo8t3ui().s[26]++;InvItem.typesByVal={1:'TX',2:'BLOCK',3:'FILTERED_BLOCK',4:'CMPCT_BLOCK',[1|1<<30]:'WITNESS_TX',[2|1<<30]:'WITNESS_BLOCK',[3|1<<30]:'WITNESS_FILTERED_BLOCK'};/**
 * Witness bit for inv types.
 * @const {Number}
 * @default
 */cov_4kgo8t3ui().s[27]++;InvItem.WITNESS_FLAG=1<<30;/*
 * Expose
 */cov_4kgo8t3ui().s[28]++;module.exports=InvItem;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
/*!
 * fullnode.js - full node for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */'use strict';function cov_9mqj1o3oc(){var path="E:\\Projects\\Test\\bcoin\\lib\\node\\fullnode.js";var hash="cf9cb912cd6e62b8ae65e2e9e0a58bfba0dc9f51";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\Projects\\Test\\bcoin\\lib\\node\\fullnode.js",statementMap:{"0":{start:{line:10,column:15},end:{line:10,column:31}},"1":{start:{line:11,column:14},end:{line:11,column:44}},"2":{start:{line:12,column:13},end:{line:12,column:39}},"3":{start:{line:13,column:16},end:{line:13,column:45}},"4":{start:{line:14,column:13},end:{line:14,column:35}},"5":{start:{line:15,column:14},end:{line:15,column:40}},"6":{start:{line:16,column:13},end:{line:16,column:30}},"7":{start:{line:17,column:13},end:{line:17,column:30}},"8":{start:{line:18,column:12},end:{line:18,column:28}},"9":{start:{line:19,column:19},end:{line:19,column:43}},"10":{start:{line:20,column:18},end:{line:20,column:49}},"11":{start:{line:21,column:20},end:{line:21,column:53}},"12":{start:{line:22,column:22},end:{line:22,column:57}},"13":{start:{line:40,column:4},end:{line:40,column:55}},"14":{start:{line:42,column:4},end:{line:42,column:24}},"15":{start:{line:45,column:4},end:{line:45,column:21}},"16":{start:{line:48,column:4},end:{line:54,column:7}},"17":{start:{line:57,column:4},end:{line:74,column:7}},"18":{start:{line:77,column:4},end:{line:77,column:38}},"19":{start:{line:78,column:4},end:{line:78,column:21}},"20":{start:{line:81,column:4},end:{line:97,column:7}},"21":{start:{line:100,column:4},end:{line:124,column:7}},"22":{start:{line:127,column:4},end:{line:139,column:7}},"23":{start:{line:142,column:4},end:{line:142,column:29}},"24":{start:{line:145,column:4},end:{line:159,column:7}},"25":{start:{line:162,column:4},end:{line:172,column:5}},"26":{start:{line:163,column:6},end:{line:171,column:9}},"27":{start:{line:174,column:4},end:{line:185,column:5}},"28":{start:{line:175,column:6},end:{line:184,column:9}},"29":{start:{line:187,column:4},end:{line:196,column:5}},"30":{start:{line:188,column:6},end:{line:195,column:9}},"31":{start:{line:198,column:4},end:{line:198,column:16}},"32":{start:{line:208,column:4},end:{line:208,column:51}},"33":{start:{line:208,column:34},end:{line:208,column:49}},"34":{start:{line:209,column:4},end:{line:209,column:53}},"35":{start:{line:209,column:36},end:{line:209,column:51}},"36":{start:{line:210,column:4},end:{line:210,column:50}},"37":{start:{line:210,column:33},end:{line:210,column:48}},"38":{start:{line:211,column:4},end:{line:211,column:51}},"39":{start:{line:211,column:34},end:{line:211,column:49}},"40":{start:{line:213,column:4},end:{line:214,column:55}},"41":{start:{line:214,column:6},end:{line:214,column:55}},"42":{start:{line:214,column:38},end:{line:214,column:53}},"43":{start:{line:216,column:4},end:{line:217,column:57}},"44":{start:{line:217,column:6},end:{line:217,column:57}},"45":{start:{line:217,column:40},end:{line:217,column:55}},"46":{start:{line:219,column:4},end:{line:220,column:59}},"47":{start:{line:220,column:6},end:{line:220,column:59}},"48":{start:{line:220,column:42},end:{line:220,column:57}},"49":{start:{line:222,column:4},end:{line:223,column:52}},"50":{start:{line:223,column:6},end:{line:223,column:52}},"51":{start:{line:223,column:35},end:{line:223,column:50}},"52":{start:{line:225,column:4},end:{line:228,column:7}},"53":{start:{line:226,column:6},end:{line:226,column:35}},"54":{start:{line:227,column:6},end:{line:227,column:26}},"55":{start:{line:230,column:4},end:{line:238,column:7}},"56":{start:{line:231,column:6},end:{line:235,column:7}},"57":{start:{line:232,column:8},end:{line:232,column:55}},"58":{start:{line:234,column:8},end:{line:234,column:22}},"59":{start:{line:236,column:6},end:{line:236,column:32}},"60":{start:{line:237,column:6},end:{line:237,column:41}},"61":{start:{line:240,column:4},end:{line:247,column:7}},"62":{start:{line:241,column:6},end:{line:245,column:7}},"63":{start:{line:242,column:8},end:{line:242,column:58}},"64":{start:{line:244,column:8},end:{line:244,column:22}},"65":{start:{line:246,column:6},end:{line:246,column:44}},"66":{start:{line:249,column:4},end:{line:256,column:7}},"67":{start:{line:250,column:6},end:{line:254,column:7}},"68":{start:{line:251,column:8},end:{line:251,column:42}},"69":{start:{line:253,column:8},end:{line:253,column:22}},"70":{start:{line:255,column:6},end:{line:255,column:47}},"71":{start:{line:258,column:4},end:{line:265,column:7}},"72":{start:{line:259,column:6},end:{line:263,column:7}},"73":{start:{line:260,column:8},end:{line:260,column:36}},"74":{start:{line:262,column:8},end:{line:262,column:22}},"75":{start:{line:264,column:6},end:{line:264,column:30}},"76":{start:{line:267,column:4},end:{line:267,column:23}},"77":{start:{line:278,column:4},end:{line:278,column:54}},"78":{start:{line:279,column:4},end:{line:279,column:23}},"79":{start:{line:281,column:4},end:{line:281,column:31}},"80":{start:{line:282,column:4},end:{line:282,column:29}},"81":{start:{line:283,column:4},end:{line:283,column:28}},"82":{start:{line:284,column:4},end:{line:284,column:30}},"83":{start:{line:285,column:4},end:{line:285,column:28}},"84":{start:{line:286,column:4},end:{line:286,column:27}},"85":{start:{line:288,column:4},end:{line:289,column:32}},"86":{start:{line:289,column:6},end:{line:289,column:32}},"87":{start:{line:291,column:4},end:{line:292,column:34}},"88":{start:{line:292,column:6},end:{line:292,column:34}},"89":{start:{line:294,column:4},end:{line:295,column:36}},"90":{start:{line:295,column:6},end:{line:295,column:36}},"91":{start:{line:297,column:4},end:{line:297,column:29}},"92":{start:{line:299,column:4},end:{line:299,column:27}},"93":{start:{line:300,column:4},end:{line:300,column:28}},"94":{start:{line:302,column:4},end:{line:302,column:40}},"95":{start:{line:312,column:4},end:{line:312,column:49}},"96":{start:{line:313,column:4},end:{line:313,column:24}},"97":{start:{line:315,column:4},end:{line:315,column:32}},"98":{start:{line:316,column:4},end:{line:316,column:28}},"99":{start:{line:318,column:4},end:{line:319,column:33}},"100":{start:{line:319,column:6},end:{line:319,column:33}},"101":{start:{line:321,column:4},end:{line:322,column:35}},"102":{start:{line:322,column:6},end:{line:322,column:35}},"103":{start:{line:324,column:4},end:{line:325,column:37}},"104":{start:{line:325,column:6},end:{line:325,column:37}},"105":{start:{line:327,column:4},end:{line:327,column:30}},"106":{start:{line:329,column:4},end:{line:329,column:28}},"107":{start:{line:330,column:4},end:{line:330,column:29}},"108":{start:{line:331,column:4},end:{line:331,column:31}},"109":{start:{line:332,column:4},end:{line:332,column:29}},"110":{start:{line:333,column:4},end:{line:333,column:30}},"111":{start:{line:335,column:4},end:{line:335,column:29}},"112":{start:{line:347,column:4},end:{line:347,column:48}},"113":{start:{line:359,column:4},end:{line:363,column:5}},"114":{start:{line:360,column:6},end:{line:360,column:38}},"115":{start:{line:362,column:6},end:{line:362,column:28}},"116":{start:{line:375,column:4},end:{line:386,column:5}},"117":{start:{line:376,column:6},end:{line:376,column:45}},"118":{start:{line:378,column:6},end:{line:384,column:7}},"119":{start:{line:379,column:8},end:{line:379,column:24}},"120":{start:{line:380,column:8},end:{line:380,column:74}},"121":{start:{line:381,column:8},end:{line:381,column:65}},"122":{start:{line:382,column:8},end:{line:382,column:27}},"123":{start:{line:383,column:8},end:{line:383,column:15}},"124":{start:{line:385,column:6},end:{line:385,column:16}},"125":{start:{line:388,column:4},end:{line:393,column:5}},"126":{start:{line:389,column:6},end:{line:389,column:72}},"127":{start:{line:390,column:6},end:{line:390,column:63}},"128":{start:{line:391,column:6},end:{line:391,column:25}},"129":{start:{line:392,column:6},end:{line:392,column:13}},"130":{start:{line:397,column:4},end:{line:398,column:25}},"131":{start:{line:398,column:6},end:{line:398,column:25}},"132":{start:{line:408,column:4},end:{line:412,column:5}},"133":{start:{line:409,column:6},end:{line:409,column:28}},"134":{start:{line:411,column:6},end:{line:411,column:20}},"135":{start:{line:421,column:4},end:{line:421,column:31}},"136":{start:{line:430,column:4},end:{line:430,column:34}},"137":{start:{line:438,column:4},end:{line:439,column:26}},"138":{start:{line:439,column:6},end:{line:439,column:26}},"139":{start:{line:441,column:4},end:{line:442,column:28}},"140":{start:{line:442,column:6},end:{line:442,column:28}},"141":{start:{line:444,column:4},end:{line:445,column:30}},"142":{start:{line:445,column:6},end:{line:445,column:30}},"143":{start:{line:447,column:4},end:{line:447,column:33}},"144":{start:{line:455,column:4},end:{line:455,column:32}},"145":{start:{line:465,column:4},end:{line:465,column:37}},"146":{start:{line:477,column:17},end:{line:477,column:50}},"147":{start:{line:479,column:4},end:{line:480,column:18}},"148":{start:{line:480,column:6},end:{line:480,column:18}},"149":{start:{line:482,column:4},end:{line:483,column:18}},"150":{start:{line:483,column:6},end:{line:483,column:18}},"151":{start:{line:485,column:4},end:{line:485,column:43}},"152":{start:{line:500,column:4},end:{line:501,column:16}},"153":{start:{line:501,column:6},end:{line:501,column:16}},"154":{start:{line:503,column:29},end:{line:503,column:36}},"155":{start:{line:504,column:18},end:{line:504,column:25}},"156":{start:{line:506,column:16},end:{line:506,column:18}},"157":{start:{line:508,column:22},end:{line:517,column:5}},"158":{start:{line:509,column:21},end:{line:510,column:38}},"159":{start:{line:512,column:6},end:{line:516,column:7}},"160":{start:{line:513,column:20},end:{line:513,column:52}},"161":{start:{line:514,column:8},end:{line:514,column:20}},"162":{start:{line:515,column:8},end:{line:515,column:24}},"163":{start:{line:519,column:24},end:{line:524,column:5}},"164":{start:{line:520,column:22},end:{line:521,column:38}},"165":{start:{line:523,column:6},end:{line:523,column:36}},"166":{start:{line:526,column:4},end:{line:529,column:24}},"167":{start:{line:527,column:6},end:{line:527,column:20}},"168":{start:{line:529,column:6},end:{line:529,column:24}},"169":{start:{line:531,column:4},end:{line:532,column:28}},"170":{start:{line:532,column:6},end:{line:532,column:28}},"171":{start:{line:534,column:4},end:{line:535,column:19}},"172":{start:{line:535,column:6},end:{line:535,column:19}},"173":{start:{line:537,column:4},end:{line:540,column:20}},"174":{start:{line:538,column:6},end:{line:538,column:24}},"175":{start:{line:540,column:6},end:{line:540,column:20}},"176":{start:{line:542,column:4},end:{line:542,column:17}},"177":{start:{line:552,column:17},end:{line:552,column:43}},"178":{start:{line:554,column:4},end:{line:555,column:18}},"179":{start:{line:555,column:6},end:{line:555,column:18}},"180":{start:{line:557,column:4},end:{line:558,column:40}},"181":{start:{line:558,column:6},end:{line:558,column:40}},"182":{start:{line:560,column:4},end:{line:560,column:16}},"183":{start:{line:570,column:4},end:{line:571,column:48}},"184":{start:{line:571,column:6},end:{line:571,column:48}},"185":{start:{line:573,column:4},end:{line:574,column:48}},"186":{start:{line:574,column:6},end:{line:574,column:48}},"187":{start:{line:576,column:4},end:{line:576,column:16}},"188":{start:{line:591,column:17},end:{line:591,column:59}},"189":{start:{line:592,column:16},end:{line:592,column:18}},"190":{start:{line:594,column:4},end:{line:595,column:23}},"191":{start:{line:595,column:6},end:{line:595,column:23}},"192":{start:{line:597,column:4},end:{line:597,column:15}},"193":{start:{line:607,column:16},end:{line:607,column:40}},"194":{start:{line:609,column:4},end:{line:610,column:18}},"195":{start:{line:610,column:6},end:{line:610,column:18}},"196":{start:{line:612,column:4},end:{line:612,column:18}},"197":{start:{line:622,column:4},end:{line:623,column:18}},"198":{start:{line:623,column:6},end:{line:623,column:18}},"199":{start:{line:625,column:4},end:{line:626,column:38}},"200":{start:{line:626,column:6},end:{line:626,column:38}},"201":{start:{line:628,column:4},end:{line:628,column:17}},"202":{start:{line:638,column:4},end:{line:639,column:18}},"203":{start:{line:639,column:6},end:{line:639,column:18}},"204":{start:{line:641,column:4},end:{line:642,column:44}},"205":{start:{line:642,column:6},end:{line:642,column:44}},"206":{start:{line:644,column:4},end:{line:645,column:18}},"207":{start:{line:645,column:6},end:{line:645,column:18}},"208":{start:{line:647,column:4},end:{line:647,column:44}},"209":{start:{line:655,column:0},end:{line:655,column:26}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:39,column:2},end:{line:39,column:3}},loc:{start:{line:39,column:23},end:{line:199,column:3}},line:39},"1":{name:"(anonymous_1)",decl:{start:{line:206,column:2},end:{line:206,column:3}},loc:{start:{line:206,column:9},end:{line:268,column:3}},line:206},"2":{name:"(anonymous_2)",decl:{start:{line:208,column:27},end:{line:208,column:28}},loc:{start:{line:208,column:34},end:{line:208,column:49}},line:208},"3":{name:"(anonymous_3)",decl:{start:{line:209,column:29},end:{line:209,column:30}},loc:{start:{line:209,column:36},end:{line:209,column:51}},line:209},"4":{name:"(anonymous_4)",decl:{start:{line:210,column:26},end:{line:210,column:27}},loc:{start:{line:210,column:33},end:{line:210,column:48}},line:210},"5":{name:"(anonymous_5)",decl:{start:{line:211,column:27},end:{line:211,column:28}},loc:{start:{line:211,column:34},end:{line:211,column:49}},line:211},"6":{name:"(anonymous_6)",decl:{start:{line:214,column:31},end:{line:214,column:32}},loc:{start:{line:214,column:38},end:{line:214,column:53}},line:214},"7":{name:"(anonymous_7)",decl:{start:{line:217,column:33},end:{line:217,column:34}},loc:{start:{line:217,column:40},end:{line:217,column:55}},line:217},"8":{name:"(anonymous_8)",decl:{start:{line:220,column:35},end:{line:220,column:36}},loc:{start:{line:220,column:42},end:{line:220,column:57}},line:220},"9":{name:"(anonymous_9)",decl:{start:{line:223,column:28},end:{line:223,column:29}},loc:{start:{line:223,column:35},end:{line:223,column:50}},line:223},"10":{name:"(anonymous_10)",decl:{start:{line:225,column:26},end:{line:225,column:27}},loc:{start:{line:225,column:34},end:{line:228,column:5}},line:225},"11":{name:"(anonymous_11)",decl:{start:{line:230,column:29},end:{line:230,column:30}},loc:{start:{line:230,column:53},end:{line:238,column:5}},line:230},"12":{name:"(anonymous_12)",decl:{start:{line:240,column:32},end:{line:240,column:33}},loc:{start:{line:240,column:56},end:{line:247,column:5}},line:240},"13":{name:"(anonymous_13)",decl:{start:{line:249,column:32},end:{line:249,column:33}},loc:{start:{line:249,column:59},end:{line:256,column:5}},line:249},"14":{name:"(anonymous_14)",decl:{start:{line:258,column:27},end:{line:258,column:28}},loc:{start:{line:258,column:42},end:{line:265,column:5}},line:258},"15":{name:"(anonymous_15)",decl:{start:{line:277,column:2},end:{line:277,column:3}},loc:{start:{line:277,column:15},end:{line:303,column:3}},line:277},"16":{name:"(anonymous_16)",decl:{start:{line:311,column:2},end:{line:311,column:3}},loc:{start:{line:311,column:16},end:{line:336,column:3}},line:311},"17":{name:"(anonymous_17)",decl:{start:{line:346,column:2},end:{line:346,column:3}},loc:{start:{line:346,column:28},end:{line:348,column:3}},line:346},"18":{name:"(anonymous_18)",decl:{start:{line:358,column:2},end:{line:358,column:3}},loc:{start:{line:358,column:24},end:{line:364,column:3}},line:358},"19":{name:"(anonymous_19)",decl:{start:{line:372,column:2},end:{line:372,column:3}},loc:{start:{line:372,column:19},end:{line:399,column:3}},line:372},"20":{name:"(anonymous_20)",decl:{start:{line:407,column:2},end:{line:407,column:3}},loc:{start:{line:407,column:18},end:{line:413,column:3}},line:407},"21":{name:"(anonymous_21)",decl:{start:{line:420,column:2},end:{line:420,column:3}},loc:{start:{line:420,column:12},end:{line:422,column:3}},line:420},"22":{name:"(anonymous_22)",decl:{start:{line:429,column:2},end:{line:429,column:3}},loc:{start:{line:429,column:15},end:{line:431,column:3}},line:429},"23":{name:"(anonymous_23)",decl:{start:{line:437,column:2},end:{line:437,column:3}},loc:{start:{line:437,column:14},end:{line:448,column:3}},line:437},"24":{name:"(anonymous_24)",decl:{start:{line:454,column:2},end:{line:454,column:3}},loc:{start:{line:454,column:13},end:{line:456,column:3}},line:454},"25":{name:"(anonymous_25)",decl:{start:{line:464,column:2},end:{line:464,column:3}},loc:{start:{line:464,column:17},end:{line:466,column:3}},line:464},"26":{name:"(anonymous_26)",decl:{start:{line:476,column:2},end:{line:476,column:3}},loc:{start:{line:476,column:29},end:{line:486,column:3}},line:476},"27":{name:"(anonymous_27)",decl:{start:{line:499,column:2},end:{line:499,column:3}},loc:{start:{line:499,column:45},end:{line:543,column:3}},line:499},"28":{name:"(anonymous_28)",decl:{start:{line:508,column:22},end:{line:508,column:23}},loc:{start:{line:508,column:34},end:{line:517,column:5}},line:508},"29":{name:"(anonymous_29)",decl:{start:{line:519,column:24},end:{line:519,column:25}},loc:{start:{line:519,column:30},end:{line:524,column:5}},line:519},"30":{name:"(anonymous_30)",decl:{start:{line:551,column:2},end:{line:551,column:3}},loc:{start:{line:551,column:22},end:{line:561,column:3}},line:551},"31":{name:"(anonymous_31)",decl:{start:{line:569,column:2},end:{line:569,column:3}},loc:{start:{line:569,column:26},end:{line:577,column:3}},line:569},"32":{name:"(anonymous_32)",decl:{start:{line:590,column:2},end:{line:590,column:3}},loc:{start:{line:590,column:43},end:{line:598,column:3}},line:590},"33":{name:"(anonymous_33)",decl:{start:{line:606,column:2},end:{line:606,column:3}},loc:{start:{line:606,column:20},end:{line:613,column:3}},line:606},"34":{name:"(anonymous_34)",decl:{start:{line:621,column:2},end:{line:621,column:3}},loc:{start:{line:621,column:20},end:{line:629,column:3}},line:621},"35":{name:"(anonymous_35)",decl:{start:{line:637,column:2},end:{line:637,column:3}},loc:{start:{line:637,column:29},end:{line:648,column:3}},line:637}},branchMap:{"0":{loc:{start:{line:162,column:4},end:{line:172,column:5}},type:"if",locations:[{start:{line:162,column:4},end:{line:172,column:5}},{start:{line:162,column:4},end:{line:172,column:5}}],line:162},"1":{loc:{start:{line:174,column:4},end:{line:185,column:5}},type:"if",locations:[{start:{line:174,column:4},end:{line:185,column:5}},{start:{line:174,column:4},end:{line:185,column:5}}],line:174},"2":{loc:{start:{line:187,column:4},end:{line:196,column:5}},type:"if",locations:[{start:{line:187,column:4},end:{line:196,column:5}},{start:{line:187,column:4},end:{line:196,column:5}}],line:187},"3":{loc:{start:{line:213,column:4},end:{line:214,column:55}},type:"if",locations:[{start:{line:213,column:4},end:{line:214,column:55}},{start:{line:213,column:4},end:{line:214,column:55}}],line:213},"4":{loc:{start:{line:216,column:4},end:{line:217,column:57}},type:"if",locations:[{start:{line:216,column:4},end:{line:217,column:57}},{start:{line:216,column:4},end:{line:217,column:57}}],line:216},"5":{loc:{start:{line:219,column:4},end:{line:220,column:59}},type:"if",locations:[{start:{line:219,column:4},end:{line:220,column:59}},{start:{line:219,column:4},end:{line:220,column:59}}],line:219},"6":{loc:{start:{line:222,column:4},end:{line:223,column:52}},type:"if",locations:[{start:{line:222,column:4},end:{line:223,column:52}},{start:{line:222,column:4},end:{line:223,column:52}}],line:222},"7":{loc:{start:{line:288,column:4},end:{line:289,column:32}},type:"if",locations:[{start:{line:288,column:4},end:{line:289,column:32}},{start:{line:288,column:4},end:{line:289,column:32}}],line:288},"8":{loc:{start:{line:291,column:4},end:{line:292,column:34}},type:"if",locations:[{start:{line:291,column:4},end:{line:292,column:34}},{start:{line:291,column:4},end:{line:292,column:34}}],line:291},"9":{loc:{start:{line:294,column:4},end:{line:295,column:36}},type:"if",locations:[{start:{line:294,column:4},end:{line:295,column:36}},{start:{line:294,column:4},end:{line:295,column:36}}],line:294},"10":{loc:{start:{line:318,column:4},end:{line:319,column:33}},type:"if",locations:[{start:{line:318,column:4},end:{line:319,column:33}},{start:{line:318,column:4},end:{line:319,column:33}}],line:318},"11":{loc:{start:{line:321,column:4},end:{line:322,column:35}},type:"if",locations:[{start:{line:321,column:4},end:{line:322,column:35}},{start:{line:321,column:4},end:{line:322,column:35}}],line:321},"12":{loc:{start:{line:324,column:4},end:{line:325,column:37}},type:"if",locations:[{start:{line:324,column:4},end:{line:325,column:37}},{start:{line:324,column:4},end:{line:325,column:37}}],line:324},"13":{loc:{start:{line:378,column:6},end:{line:384,column:7}},type:"if",locations:[{start:{line:378,column:6},end:{line:384,column:7}},{start:{line:378,column:6},end:{line:384,column:7}}],line:378},"14":{loc:{start:{line:378,column:10},end:{line:378,column:55}},type:"binary-expr",locations:[{start:{line:378,column:10},end:{line:378,column:36}},{start:{line:378,column:40},end:{line:378,column:55}}],line:378},"15":{loc:{start:{line:388,column:4},end:{line:393,column:5}},type:"if",locations:[{start:{line:388,column:4},end:{line:393,column:5}},{start:{line:388,column:4},end:{line:393,column:5}}],line:388},"16":{loc:{start:{line:397,column:4},end:{line:398,column:25}},type:"if",locations:[{start:{line:397,column:4},end:{line:398,column:25}},{start:{line:397,column:4},end:{line:398,column:25}}],line:397},"17":{loc:{start:{line:438,column:4},end:{line:439,column:26}},type:"if",locations:[{start:{line:438,column:4},end:{line:439,column:26}},{start:{line:438,column:4},end:{line:439,column:26}}],line:438},"18":{loc:{start:{line:441,column:4},end:{line:442,column:28}},type:"if",locations:[{start:{line:441,column:4},end:{line:442,column:28}},{start:{line:441,column:4},end:{line:442,column:28}}],line:441},"19":{loc:{start:{line:444,column:4},end:{line:445,column:30}},type:"if",locations:[{start:{line:444,column:4},end:{line:445,column:30}},{start:{line:444,column:4},end:{line:445,column:30}}],line:444},"20":{loc:{start:{line:479,column:4},end:{line:480,column:18}},type:"if",locations:[{start:{line:479,column:4},end:{line:480,column:18}},{start:{line:479,column:4},end:{line:480,column:18}}],line:479},"21":{loc:{start:{line:482,column:4},end:{line:483,column:18}},type:"if",locations:[{start:{line:482,column:4},end:{line:483,column:18}},{start:{line:482,column:4},end:{line:483,column:18}}],line:482},"22":{loc:{start:{line:499,column:31},end:{line:499,column:43}},type:"default-arg",locations:[{start:{line:499,column:41},end:{line:499,column:43}}],line:499},"23":{loc:{start:{line:500,column:4},end:{line:501,column:16}},type:"if",locations:[{start:{line:500,column:4},end:{line:501,column:16}},{start:{line:500,column:4},end:{line:501,column:16}}],line:500},"24":{loc:{start:{line:500,column:8},end:{line:500,column:40}},type:"binary-expr",locations:[{start:{line:500,column:8},end:{line:500,column:21}},{start:{line:500,column:25},end:{line:500,column:40}}],line:500},"25":{loc:{start:{line:526,column:4},end:{line:529,column:24}},type:"if",locations:[{start:{line:526,column:4},end:{line:529,column:24}},{start:{line:526,column:4},end:{line:529,column:24}}],line:526},"26":{loc:{start:{line:531,column:4},end:{line:532,column:28}},type:"if",locations:[{start:{line:531,column:4},end:{line:532,column:28}},{start:{line:531,column:4},end:{line:532,column:28}}],line:531},"27":{loc:{start:{line:534,column:4},end:{line:535,column:19}},type:"if",locations:[{start:{line:534,column:4},end:{line:535,column:19}},{start:{line:534,column:4},end:{line:535,column:19}}],line:534},"28":{loc:{start:{line:537,column:4},end:{line:540,column:20}},type:"if",locations:[{start:{line:537,column:4},end:{line:540,column:20}},{start:{line:537,column:4},end:{line:540,column:20}}],line:537},"29":{loc:{start:{line:554,column:4},end:{line:555,column:18}},type:"if",locations:[{start:{line:554,column:4},end:{line:555,column:18}},{start:{line:554,column:4},end:{line:555,column:18}}],line:554},"30":{loc:{start:{line:557,column:4},end:{line:558,column:40}},type:"if",locations:[{start:{line:557,column:4},end:{line:558,column:40}},{start:{line:557,column:4},end:{line:558,column:40}}],line:557},"31":{loc:{start:{line:570,column:4},end:{line:571,column:48}},type:"if",locations:[{start:{line:570,column:4},end:{line:571,column:48}},{start:{line:570,column:4},end:{line:571,column:48}}],line:570},"32":{loc:{start:{line:573,column:4},end:{line:574,column:48}},type:"if",locations:[{start:{line:573,column:4},end:{line:574,column:48}},{start:{line:573,column:4},end:{line:574,column:48}}],line:573},"33":{loc:{start:{line:590,column:29},end:{line:590,column:41}},type:"default-arg",locations:[{start:{line:590,column:39},end:{line:590,column:41}}],line:590},"34":{loc:{start:{line:609,column:4},end:{line:610,column:18}},type:"if",locations:[{start:{line:609,column:4},end:{line:610,column:18}},{start:{line:609,column:4},end:{line:610,column:18}}],line:609},"35":{loc:{start:{line:622,column:4},end:{line:623,column:18}},type:"if",locations:[{start:{line:622,column:4},end:{line:623,column:18}},{start:{line:622,column:4},end:{line:623,column:18}}],line:622},"36":{loc:{start:{line:625,column:4},end:{line:626,column:38}},type:"if",locations:[{start:{line:625,column:4},end:{line:626,column:38}},{start:{line:625,column:4},end:{line:626,column:38}}],line:625},"37":{loc:{start:{line:638,column:4},end:{line:639,column:18}},type:"if",locations:[{start:{line:638,column:4},end:{line:639,column:18}},{start:{line:638,column:4},end:{line:639,column:18}}],line:638},"38":{loc:{start:{line:641,column:4},end:{line:642,column:44}},type:"if",locations:[{start:{line:641,column:4},end:{line:642,column:44}},{start:{line:641,column:4},end:{line:642,column:44}}],line:641},"39":{loc:{start:{line:644,column:4},end:{line:645,column:18}},type:"if",locations:[{start:{line:644,column:4},end:{line:645,column:18}},{start:{line:644,column:4},end:{line:645,column:18}}],line:644}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"cf9cb912cd6e62b8ae65e2e9e0a58bfba0dc9f51"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_9mqj1o3oc=function(){return actualCoverage;};}return actualCoverage;}cov_9mqj1o3oc();const assert=(cov_9mqj1o3oc().s[0]++,require('bsert'));const Chain=(cov_9mqj1o3oc().s[1]++,require('../blockchain/chain'));const Fees=(cov_9mqj1o3oc().s[2]++,require('../mempool/fees'));const Mempool=(cov_9mqj1o3oc().s[3]++,require('../mempool/mempool'));const Pool=(cov_9mqj1o3oc().s[4]++,require('../net/pool'));const Miner=(cov_9mqj1o3oc().s[5]++,require('../mining/miner'));const Node=(cov_9mqj1o3oc().s[6]++,require('./node'));const HTTP=(cov_9mqj1o3oc().s[7]++,require('./http'));const RPC=(cov_9mqj1o3oc().s[8]++,require('./rpc'));const blockstore=(cov_9mqj1o3oc().s[9]++,require('../blockstore'));const TXIndexer=(cov_9mqj1o3oc().s[10]++,require('../indexer/txindexer'));const AddrIndexer=(cov_9mqj1o3oc().s[11]++,require('../indexer/addrindexer'));const FilterIndexer=(cov_9mqj1o3oc().s[12]++,require('../indexer/filterindexer'));/**
 * Full Node
 * Respresents a fullnode complete with a
 * chain, mempool, miner, etc.
 * @alias module:node.FullNode
 * @extends Node
 */class FullNode extends Node{/**
   * Create a full node.
   * @constructor
   * @param {Object?} options
   */constructor(options){cov_9mqj1o3oc().f[0]++;cov_9mqj1o3oc().s[13]++;super('bcoin','bcoin.conf','debug.log',options);cov_9mqj1o3oc().s[14]++;this.opened=false;// SPV flag.
cov_9mqj1o3oc().s[15]++;this.spv=false;// Instantiate block storage.
cov_9mqj1o3oc().s[16]++;this.blocks=blockstore.create({network:this.network,logger:this.logger,prefix:this.config.prefix,cacheSize:this.config.mb('block-cache-size'),memory:this.memory});// Chain needs access to blocks.
cov_9mqj1o3oc().s[17]++;this.chain=new Chain({network:this.network,logger:this.logger,blocks:this.blocks,workers:this.workers,memory:this.config.bool('memory'),prefix:this.config.prefix,maxFiles:this.config.uint('max-files'),cacheSize:this.config.mb('cache-size'),forceFlags:this.config.bool('force-flags'),bip91:this.config.bool('bip91'),bip148:this.config.bool('bip148'),prune:this.config.bool('prune'),checkpoints:this.config.bool('checkpoints'),entryCache:this.config.uint('entry-cache'),indexTX:this.config.bool('index-tx'),indexAddress:this.config.bool('index-address')});// Fee estimation.
cov_9mqj1o3oc().s[18]++;this.fees=new Fees(this.logger);cov_9mqj1o3oc().s[19]++;this.fees.init();// Mempool needs access to the chain.
cov_9mqj1o3oc().s[20]++;this.mempool=new Mempool({network:this.network,logger:this.logger,workers:this.workers,chain:this.chain,fees:this.fees,memory:this.memory,prefix:this.config.prefix,persistent:this.config.bool('persistent-mempool'),maxSize:this.config.mb('mempool-size'),limitFree:this.config.bool('limit-free'),limitFreeRelay:this.config.uint('limit-free-relay'),requireStandard:this.config.bool('require-standard'),rejectAbsurdFees:this.config.bool('reject-absurd-fees'),replaceByFee:this.config.bool('replace-by-fee'),indexAddress:this.config.bool('index-address')});// Pool needs access to the chain and mempool.
cov_9mqj1o3oc().s[21]++;this.pool=new Pool({network:this.network,logger:this.logger,chain:this.chain,mempool:this.mempool,prefix:this.config.prefix,selfish:this.config.bool('selfish'),compact:this.config.bool('compact'),bip37:this.config.bool('bip37'),maxOutbound:this.config.uint('max-outbound'),maxInbound:this.config.uint('max-inbound'),createSocket:this.config.func('create-socket'),proxy:this.config.str('proxy'),onion:this.config.bool('onion'),upnp:this.config.bool('upnp'),seeds:this.config.array('seeds'),nodes:this.config.array('nodes'),only:this.config.array('only'),publicHost:this.config.str('public-host'),publicPort:this.config.uint('public-port'),host:this.config.str('host'),port:this.config.uint('port'),listen:this.config.bool('listen'),memory:this.memory});// Miner needs access to the chain and mempool.
cov_9mqj1o3oc().s[22]++;this.miner=new Miner({network:this.network,logger:this.logger,workers:this.workers,chain:this.chain,mempool:this.mempool,address:this.config.array('coinbase-address'),coinbaseFlags:this.config.str('coinbase-flags'),preverify:this.config.bool('preverify'),maxWeight:this.config.uint('max-weight'),reservedWeight:this.config.uint('reserved-weight'),reservedSigops:this.config.uint('reserved-sigops')});// RPC needs access to the node.
cov_9mqj1o3oc().s[23]++;this.rpc=new RPC(this);// HTTP needs access to the node.
cov_9mqj1o3oc().s[24]++;this.http=new HTTP({network:this.network,logger:this.logger,node:this,prefix:this.config.prefix,ssl:this.config.bool('ssl'),keyFile:this.config.path('ssl-key'),certFile:this.config.path('ssl-cert'),host:this.config.str('http-host'),port:this.config.uint('http-port'),apiKey:this.config.str('api-key'),noAuth:this.config.bool('no-auth'),cors:this.config.bool('cors'),maxTxs:this.config.uint('max-txs')});// Indexers
cov_9mqj1o3oc().s[25]++;if(this.config.bool('index-tx')){cov_9mqj1o3oc().b[0][0]++;cov_9mqj1o3oc().s[26]++;this.txindex=new TXIndexer({network:this.network,logger:this.logger,blocks:this.blocks,chain:this.chain,prune:this.config.bool('prune'),memory:this.memory,prefix:this.config.str('index-prefix',this.config.prefix)});}else{cov_9mqj1o3oc().b[0][1]++;}cov_9mqj1o3oc().s[27]++;if(this.config.bool('index-address')){cov_9mqj1o3oc().b[1][0]++;cov_9mqj1o3oc().s[28]++;this.addrindex=new AddrIndexer({network:this.network,logger:this.logger,blocks:this.blocks,chain:this.chain,prune:this.config.bool('prune'),memory:this.memory,prefix:this.config.str('index-prefix',this.config.prefix),maxTxs:this.config.uint('max-txs')});}else{cov_9mqj1o3oc().b[1][1]++;}cov_9mqj1o3oc().s[29]++;if(this.config.bool('index-filter')){cov_9mqj1o3oc().b[2][0]++;cov_9mqj1o3oc().s[30]++;this.filterindex=new FilterIndexer({network:this.network,logger:this.logger,blocks:this.blocks,chain:this.chain,memory:this.config.bool('memory'),prefix:this.config.str('index-prefix',this.config.prefix)});}else{cov_9mqj1o3oc().b[2][1]++;}cov_9mqj1o3oc().s[31]++;this.init();}/**
   * Initialize the node.
   * @private
   */init(){cov_9mqj1o3oc().f[1]++;cov_9mqj1o3oc().s[32]++;// Bind to errors
this.chain.on('error',err=>{cov_9mqj1o3oc().f[2]++;cov_9mqj1o3oc().s[33]++;return this.error(err);});cov_9mqj1o3oc().s[34]++;this.mempool.on('error',err=>{cov_9mqj1o3oc().f[3]++;cov_9mqj1o3oc().s[35]++;return this.error(err);});cov_9mqj1o3oc().s[36]++;this.pool.on('error',err=>{cov_9mqj1o3oc().f[4]++;cov_9mqj1o3oc().s[37]++;return this.error(err);});cov_9mqj1o3oc().s[38]++;this.miner.on('error',err=>{cov_9mqj1o3oc().f[5]++;cov_9mqj1o3oc().s[39]++;return this.error(err);});cov_9mqj1o3oc().s[40]++;if(this.txindex){cov_9mqj1o3oc().b[3][0]++;cov_9mqj1o3oc().s[41]++;this.txindex.on('error',err=>{cov_9mqj1o3oc().f[6]++;cov_9mqj1o3oc().s[42]++;return this.error(err);});}else{cov_9mqj1o3oc().b[3][1]++;}cov_9mqj1o3oc().s[43]++;if(this.addrindex){cov_9mqj1o3oc().b[4][0]++;cov_9mqj1o3oc().s[44]++;this.addrindex.on('error',err=>{cov_9mqj1o3oc().f[7]++;cov_9mqj1o3oc().s[45]++;return this.error(err);});}else{cov_9mqj1o3oc().b[4][1]++;}cov_9mqj1o3oc().s[46]++;if(this.filterindex){cov_9mqj1o3oc().b[5][0]++;cov_9mqj1o3oc().s[47]++;this.filterindex.on('error',err=>{cov_9mqj1o3oc().f[8]++;cov_9mqj1o3oc().s[48]++;return this.error(err);});}else{cov_9mqj1o3oc().b[5][1]++;}cov_9mqj1o3oc().s[49]++;if(this.http){cov_9mqj1o3oc().b[6][0]++;cov_9mqj1o3oc().s[50]++;this.http.on('error',err=>{cov_9mqj1o3oc().f[9]++;cov_9mqj1o3oc().s[51]++;return this.error(err);});}else{cov_9mqj1o3oc().b[6][1]++;}cov_9mqj1o3oc().s[52]++;this.mempool.on('tx',tx=>{cov_9mqj1o3oc().f[10]++;cov_9mqj1o3oc().s[53]++;this.miner.cpu.notifyEntry();cov_9mqj1o3oc().s[54]++;this.emit('tx',tx);});cov_9mqj1o3oc().s[55]++;this.chain.on('connect',async(entry,block)=>{cov_9mqj1o3oc().f[11]++;cov_9mqj1o3oc().s[56]++;try{cov_9mqj1o3oc().s[57]++;await this.mempool._addBlock(entry,block.txs);}catch(e){cov_9mqj1o3oc().s[58]++;this.error(e);}cov_9mqj1o3oc().s[59]++;this.emit('block',block);cov_9mqj1o3oc().s[60]++;this.emit('connect',entry,block);});cov_9mqj1o3oc().s[61]++;this.chain.on('disconnect',async(entry,block)=>{cov_9mqj1o3oc().f[12]++;cov_9mqj1o3oc().s[62]++;try{cov_9mqj1o3oc().s[63]++;await this.mempool._removeBlock(entry,block.txs);}catch(e){cov_9mqj1o3oc().s[64]++;this.error(e);}cov_9mqj1o3oc().s[65]++;this.emit('disconnect',entry,block);});cov_9mqj1o3oc().s[66]++;this.chain.on('reorganize',async(tip,competitor)=>{cov_9mqj1o3oc().f[13]++;cov_9mqj1o3oc().s[67]++;try{cov_9mqj1o3oc().s[68]++;await this.mempool._handleReorg();}catch(e){cov_9mqj1o3oc().s[69]++;this.error(e);}cov_9mqj1o3oc().s[70]++;this.emit('reorganize',tip,competitor);});cov_9mqj1o3oc().s[71]++;this.chain.on('reset',async tip=>{cov_9mqj1o3oc().f[14]++;cov_9mqj1o3oc().s[72]++;try{cov_9mqj1o3oc().s[73]++;await this.mempool._reset();}catch(e){cov_9mqj1o3oc().s[74]++;this.error(e);}cov_9mqj1o3oc().s[75]++;this.emit('reset',tip);});cov_9mqj1o3oc().s[76]++;this.loadPlugins();}/**
   * Open the node and all its child objects,
   * wait for the database to load.
   * @alias FullNode#open
   * @returns {Promise}
   */async open(){cov_9mqj1o3oc().f[15]++;cov_9mqj1o3oc().s[77]++;assert(!this.opened,'FullNode is already open.');cov_9mqj1o3oc().s[78]++;this.opened=true;cov_9mqj1o3oc().s[79]++;await this.handlePreopen();cov_9mqj1o3oc().s[80]++;await this.blocks.open();cov_9mqj1o3oc().s[81]++;await this.chain.open();cov_9mqj1o3oc().s[82]++;await this.mempool.open();cov_9mqj1o3oc().s[83]++;await this.miner.open();cov_9mqj1o3oc().s[84]++;await this.pool.open();cov_9mqj1o3oc().s[85]++;if(this.txindex){cov_9mqj1o3oc().b[7][0]++;cov_9mqj1o3oc().s[86]++;await this.txindex.open();}else{cov_9mqj1o3oc().b[7][1]++;}cov_9mqj1o3oc().s[87]++;if(this.addrindex){cov_9mqj1o3oc().b[8][0]++;cov_9mqj1o3oc().s[88]++;await this.addrindex.open();}else{cov_9mqj1o3oc().b[8][1]++;}cov_9mqj1o3oc().s[89]++;if(this.filterindex){cov_9mqj1o3oc().b[9][0]++;cov_9mqj1o3oc().s[90]++;await this.filterindex.open();}else{cov_9mqj1o3oc().b[9][1]++;}cov_9mqj1o3oc().s[91]++;await this.openPlugins();cov_9mqj1o3oc().s[92]++;await this.http.open();cov_9mqj1o3oc().s[93]++;await this.handleOpen();cov_9mqj1o3oc().s[94]++;this.logger.info('Node is loaded.');}/**
   * Close the node, wait for the database to close.
   * @alias FullNode#close
   * @returns {Promise}
   */async close(){cov_9mqj1o3oc().f[16]++;cov_9mqj1o3oc().s[95]++;assert(this.opened,'FullNode is not open.');cov_9mqj1o3oc().s[96]++;this.opened=false;cov_9mqj1o3oc().s[97]++;await this.handlePreclose();cov_9mqj1o3oc().s[98]++;await this.http.close();cov_9mqj1o3oc().s[99]++;if(this.txindex){cov_9mqj1o3oc().b[10][0]++;cov_9mqj1o3oc().s[100]++;await this.txindex.close();}else{cov_9mqj1o3oc().b[10][1]++;}cov_9mqj1o3oc().s[101]++;if(this.addrindex){cov_9mqj1o3oc().b[11][0]++;cov_9mqj1o3oc().s[102]++;await this.addrindex.close();}else{cov_9mqj1o3oc().b[11][1]++;}cov_9mqj1o3oc().s[103]++;if(this.filterindex){cov_9mqj1o3oc().b[12][0]++;cov_9mqj1o3oc().s[104]++;await this.filterindex.close();}else{cov_9mqj1o3oc().b[12][1]++;}cov_9mqj1o3oc().s[105]++;await this.closePlugins();cov_9mqj1o3oc().s[106]++;await this.pool.close();cov_9mqj1o3oc().s[107]++;await this.miner.close();cov_9mqj1o3oc().s[108]++;await this.mempool.close();cov_9mqj1o3oc().s[109]++;await this.chain.close();cov_9mqj1o3oc().s[110]++;await this.blocks.close();cov_9mqj1o3oc().s[111]++;await this.handleClose();}/**
   * Rescan for any missed transactions.
   * @param {Number|Hash} start - Start block.
   * @param {Bloom} filter
   * @param {Function} iter - Iterator.
   * @returns {Promise}
   */scan(start,filter,iter){cov_9mqj1o3oc().f[17]++;cov_9mqj1o3oc().s[112]++;return this.chain.scan(start,filter,iter);}/**
   * Broadcast a transaction (note that this will _not_ be verified
   * by the mempool - use with care, lest you get banned from
   * bitcoind nodes).
   * @param {TX|Block} item
   * @returns {Promise}
   */async broadcast(item){cov_9mqj1o3oc().f[18]++;cov_9mqj1o3oc().s[113]++;try{cov_9mqj1o3oc().s[114]++;await this.pool.broadcast(item);}catch(e){cov_9mqj1o3oc().s[115]++;this.emit('error',e);}}/**
   * Add transaction to mempool, broadcast.
   * @param {TX} tx
   * @returns {Promise}
   */async sendTX(tx){cov_9mqj1o3oc().f[19]++;let missing;cov_9mqj1o3oc().s[116]++;try{cov_9mqj1o3oc().s[117]++;missing=await this.mempool.addTX(tx);}catch(err){cov_9mqj1o3oc().s[118]++;if((cov_9mqj1o3oc().b[14][0]++,err.type==='VerifyError')&&(cov_9mqj1o3oc().b[14][1]++,err.score===0)){cov_9mqj1o3oc().b[13][0]++;cov_9mqj1o3oc().s[119]++;this.error(err);cov_9mqj1o3oc().s[120]++;this.logger.warning('Verification failed for tx: %h.',tx.hash());cov_9mqj1o3oc().s[121]++;this.logger.warning('Attempting to broadcast anyway...');cov_9mqj1o3oc().s[122]++;this.broadcast(tx);cov_9mqj1o3oc().s[123]++;return;}else{cov_9mqj1o3oc().b[13][1]++;}cov_9mqj1o3oc().s[124]++;throw err;}cov_9mqj1o3oc().s[125]++;if(missing){cov_9mqj1o3oc().b[15][0]++;cov_9mqj1o3oc().s[126]++;this.logger.warning('TX was orphaned in mempool: %h.',tx.hash());cov_9mqj1o3oc().s[127]++;this.logger.warning('Attempting to broadcast anyway...');cov_9mqj1o3oc().s[128]++;this.broadcast(tx);cov_9mqj1o3oc().s[129]++;return;}else{cov_9mqj1o3oc().b[15][1]++;}// We need to announce by hand if
// we're running in selfish mode.
cov_9mqj1o3oc().s[130]++;if(this.pool.options.selfish){cov_9mqj1o3oc().b[16][0]++;cov_9mqj1o3oc().s[131]++;this.broadcast(tx);}else{cov_9mqj1o3oc().b[16][1]++;}}/**
   * Add transaction to mempool, broadcast. Silence errors.
   * @param {TX} tx
   * @returns {Promise}
   */async relay(tx){cov_9mqj1o3oc().f[20]++;cov_9mqj1o3oc().s[132]++;try{cov_9mqj1o3oc().s[133]++;await this.sendTX(tx);}catch(e){cov_9mqj1o3oc().s[134]++;this.error(e);}}/**
   * Connect to the network.
   * @returns {Promise}
   */connect(){cov_9mqj1o3oc().f[21]++;cov_9mqj1o3oc().s[135]++;return this.pool.connect();}/**
   * Disconnect from the network.
   * @returns {Promise}
   */disconnect(){cov_9mqj1o3oc().f[22]++;cov_9mqj1o3oc().s[136]++;return this.pool.disconnect();}/**
   * Start the blockchain sync.
   */startSync(){cov_9mqj1o3oc().f[23]++;cov_9mqj1o3oc().s[137]++;if(this.txindex){cov_9mqj1o3oc().b[17][0]++;cov_9mqj1o3oc().s[138]++;this.txindex.sync();}else{cov_9mqj1o3oc().b[17][1]++;}cov_9mqj1o3oc().s[139]++;if(this.addrindex){cov_9mqj1o3oc().b[18][0]++;cov_9mqj1o3oc().s[140]++;this.addrindex.sync();}else{cov_9mqj1o3oc().b[18][1]++;}cov_9mqj1o3oc().s[141]++;if(this.filterindex){cov_9mqj1o3oc().b[19][0]++;cov_9mqj1o3oc().s[142]++;this.filterindex.sync();}else{cov_9mqj1o3oc().b[19][1]++;}cov_9mqj1o3oc().s[143]++;return this.pool.startSync();}/**
   * Stop syncing the blockchain.
   */stopSync(){cov_9mqj1o3oc().f[24]++;cov_9mqj1o3oc().s[144]++;return this.pool.stopSync();}/**
   * Retrieve a block from the chain database.
   * @param {Hash} hash
   * @returns {Promise} - Returns {@link Block}.
   */getBlock(hash){cov_9mqj1o3oc().f[25]++;cov_9mqj1o3oc().s[145]++;return this.chain.getBlock(hash);}/**
   * Retrieve a coin from the mempool or chain database.
   * Takes into account spent coins in the mempool.
   * @param {Hash} hash
   * @param {Number} index
   * @returns {Promise} - Returns {@link Coin}.
   */async getCoin(hash,index){cov_9mqj1o3oc().f[26]++;const coin=(cov_9mqj1o3oc().s[146]++,this.mempool.getCoin(hash,index));cov_9mqj1o3oc().s[147]++;if(coin){cov_9mqj1o3oc().b[20][0]++;cov_9mqj1o3oc().s[148]++;return coin;}else{cov_9mqj1o3oc().b[20][1]++;}cov_9mqj1o3oc().s[149]++;if(this.mempool.isSpent(hash,index)){cov_9mqj1o3oc().b[21][0]++;cov_9mqj1o3oc().s[150]++;return null;}else{cov_9mqj1o3oc().b[21][1]++;}cov_9mqj1o3oc().s[151]++;return this.chain.getCoin(hash,index);}/**
   * Retrieve transactions pertaining to an
   * address from the mempool or chain database.
   * @param {Address} addr
   * @param {Object} options
   * @param {Number} options.limit
   * @param {Number} options.reverse
   * @param {Buffer} options.after
   * @returns {Promise} - Returns {@link TXMeta}[].
   */async getMetaByAddress(addr,options=(cov_9mqj1o3oc().b[22][0]++,{})){cov_9mqj1o3oc().f[27]++;cov_9mqj1o3oc().s[152]++;if((cov_9mqj1o3oc().b[24][0]++,!this.txindex)||(cov_9mqj1o3oc().b[24][1]++,!this.addrindex)){cov_9mqj1o3oc().b[23][0]++;cov_9mqj1o3oc().s[153]++;return[];}else{cov_9mqj1o3oc().b[23][1]++;}const{reverse,after}=(cov_9mqj1o3oc().s[154]++,options);let{limit}=(cov_9mqj1o3oc().s[155]++,options);let metas=(cov_9mqj1o3oc().s[156]++,[]);cov_9mqj1o3oc().s[157]++;const confirmed=async()=>{cov_9mqj1o3oc().f[28]++;const hashes=(cov_9mqj1o3oc().s[158]++,await this.addrindex.getHashesByAddress(addr,{limit,reverse,after}));cov_9mqj1o3oc().s[159]++;for(const hash of hashes){const mtx=(cov_9mqj1o3oc().s[160]++,await this.txindex.getMeta(hash));cov_9mqj1o3oc().s[161]++;assert(mtx);cov_9mqj1o3oc().s[162]++;metas.push(mtx);}};cov_9mqj1o3oc().s[163]++;const unconfirmed=()=>{cov_9mqj1o3oc().f[29]++;const mempool=(cov_9mqj1o3oc().s[164]++,this.mempool.getMetaByAddress(addr,{limit,reverse,after}));cov_9mqj1o3oc().s[165]++;metas=metas.concat(mempool);};cov_9mqj1o3oc().s[166]++;if(reverse){cov_9mqj1o3oc().b[25][0]++;cov_9mqj1o3oc().s[167]++;unconfirmed();}else{cov_9mqj1o3oc().b[25][1]++;cov_9mqj1o3oc().s[168]++;await confirmed();}cov_9mqj1o3oc().s[169]++;if(metas.length>0){cov_9mqj1o3oc().b[26][0]++;cov_9mqj1o3oc().s[170]++;limit-=metas.length;}else{cov_9mqj1o3oc().b[26][1]++;}cov_9mqj1o3oc().s[171]++;if(limit<=0){cov_9mqj1o3oc().b[27][0]++;cov_9mqj1o3oc().s[172]++;return metas;}else{cov_9mqj1o3oc().b[27][1]++;}cov_9mqj1o3oc().s[173]++;if(reverse){cov_9mqj1o3oc().b[28][0]++;cov_9mqj1o3oc().s[174]++;await confirmed();}else{cov_9mqj1o3oc().b[28][1]++;cov_9mqj1o3oc().s[175]++;unconfirmed();}cov_9mqj1o3oc().s[176]++;return metas;}/**
   * Retrieve a transaction from the mempool or chain database.
   * @param {Hash} hash
   * @returns {Promise} - Returns {@link TXMeta}.
   */async getMeta(hash){cov_9mqj1o3oc().f[30]++;const meta=(cov_9mqj1o3oc().s[177]++,this.mempool.getMeta(hash));cov_9mqj1o3oc().s[178]++;if(meta){cov_9mqj1o3oc().b[29][0]++;cov_9mqj1o3oc().s[179]++;return meta;}else{cov_9mqj1o3oc().b[29][1]++;}cov_9mqj1o3oc().s[180]++;if(this.txindex){cov_9mqj1o3oc().b[30][0]++;cov_9mqj1o3oc().s[181]++;return this.txindex.getMeta(hash);}else{cov_9mqj1o3oc().b[30][1]++;}cov_9mqj1o3oc().s[182]++;return null;}/**
   * Retrieve a spent coin viewpoint from mempool or chain database.
   * @param {TXMeta} meta
   * @returns {Promise} - Returns {@link CoinView}.
   */async getMetaView(meta){cov_9mqj1o3oc().f[31]++;cov_9mqj1o3oc().s[183]++;if(meta.height===-1){cov_9mqj1o3oc().b[31][0]++;cov_9mqj1o3oc().s[184]++;return this.mempool.getSpentView(meta.tx);}else{cov_9mqj1o3oc().b[31][1]++;}cov_9mqj1o3oc().s[185]++;if(this.txindex){cov_9mqj1o3oc().b[32][0]++;cov_9mqj1o3oc().s[186]++;return this.txindex.getSpentView(meta.tx);}else{cov_9mqj1o3oc().b[32][1]++;}cov_9mqj1o3oc().s[187]++;return null;}/**
   * Retrieve transactions pertaining to an
   * address from the mempool or chain database.
   * @param {Address} addr
   * @param {Object} options
   * @param {Number} options.limit
   * @param {Number} options.reverse
   * @param {Buffer} options.after
   * @returns {Promise} - Returns {@link TX}[].
   */async getTXByAddress(addr,options=(cov_9mqj1o3oc().b[33][0]++,{})){cov_9mqj1o3oc().f[32]++;const mtxs=(cov_9mqj1o3oc().s[188]++,await this.getMetaByAddress(addr,options));const out=(cov_9mqj1o3oc().s[189]++,[]);cov_9mqj1o3oc().s[190]++;for(const mtx of mtxs){cov_9mqj1o3oc().s[191]++;out.push(mtx.tx);}cov_9mqj1o3oc().s[192]++;return out;}/**
   * Retrieve a transaction from the mempool or chain database.
   * @param {Hash} hash
   * @returns {Promise} - Returns {@link TX}.
   */async getTX(hash){cov_9mqj1o3oc().f[33]++;const mtx=(cov_9mqj1o3oc().s[193]++,await this.getMeta(hash));cov_9mqj1o3oc().s[194]++;if(!mtx){cov_9mqj1o3oc().b[34][0]++;cov_9mqj1o3oc().s[195]++;return null;}else{cov_9mqj1o3oc().b[34][1]++;}cov_9mqj1o3oc().s[196]++;return mtx.tx;}/**
   * Test whether the mempool or chain contains a transaction.
   * @param {Hash} hash
   * @returns {Promise} - Returns Boolean.
   */async hasTX(hash){cov_9mqj1o3oc().f[34]++;cov_9mqj1o3oc().s[197]++;if(this.mempool.hasEntry(hash)){cov_9mqj1o3oc().b[35][0]++;cov_9mqj1o3oc().s[198]++;return true;}else{cov_9mqj1o3oc().b[35][1]++;}cov_9mqj1o3oc().s[199]++;if(this.txindex){cov_9mqj1o3oc().b[36][0]++;cov_9mqj1o3oc().s[200]++;return this.txindex.hasTX(hash);}else{cov_9mqj1o3oc().b[36][1]++;}cov_9mqj1o3oc().s[201]++;return false;}/**
   * Retrieve compact filter by hash.
   * @param {Hash | Number} hash
   * @returns {Promise} - Returns {@link Buffer}.
   */async getBlockFilter(hash){cov_9mqj1o3oc().f[35]++;cov_9mqj1o3oc().s[202]++;if(!this.filterindex){cov_9mqj1o3oc().b[37][0]++;cov_9mqj1o3oc().s[203]++;return null;}else{cov_9mqj1o3oc().b[37][1]++;}cov_9mqj1o3oc().s[204]++;if(typeof hash==='number'){cov_9mqj1o3oc().b[38][0]++;cov_9mqj1o3oc().s[205]++;hash=await this.chain.getHash(hash);}else{cov_9mqj1o3oc().b[38][1]++;}cov_9mqj1o3oc().s[206]++;if(!hash){cov_9mqj1o3oc().b[39][0]++;cov_9mqj1o3oc().s[207]++;return null;}else{cov_9mqj1o3oc().b[39][1]++;}cov_9mqj1o3oc().s[208]++;return this.filterindex.getFilter(hash);}}/*
 * Expose
 */cov_9mqj1o3oc().s[209]++;module.exports=FullNode;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZ1bGxub2RlLmpzIl0sIm5hbWVzIjpbImFzc2VydCIsInJlcXVpcmUiLCJDaGFpbiIsIkZlZXMiLCJNZW1wb29sIiwiUG9vbCIsIk1pbmVyIiwiTm9kZSIsIkhUVFAiLCJSUEMiLCJibG9ja3N0b3JlIiwiVFhJbmRleGVyIiwiQWRkckluZGV4ZXIiLCJGaWx0ZXJJbmRleGVyIiwiRnVsbE5vZGUiLCJjb25zdHJ1Y3RvciIsIm9wdGlvbnMiLCJvcGVuZWQiLCJzcHYiLCJibG9ja3MiLCJjcmVhdGUiLCJuZXR3b3JrIiwibG9nZ2VyIiwicHJlZml4IiwiY29uZmlnIiwiY2FjaGVTaXplIiwibWIiLCJtZW1vcnkiLCJjaGFpbiIsIndvcmtlcnMiLCJib29sIiwibWF4RmlsZXMiLCJ1aW50IiwiZm9yY2VGbGFncyIsImJpcDkxIiwiYmlwMTQ4IiwicHJ1bmUiLCJjaGVja3BvaW50cyIsImVudHJ5Q2FjaGUiLCJpbmRleFRYIiwiaW5kZXhBZGRyZXNzIiwiZmVlcyIsImluaXQiLCJtZW1wb29sIiwicGVyc2lzdGVudCIsIm1heFNpemUiLCJsaW1pdEZyZWUiLCJsaW1pdEZyZWVSZWxheSIsInJlcXVpcmVTdGFuZGFyZCIsInJlamVjdEFic3VyZEZlZXMiLCJyZXBsYWNlQnlGZWUiLCJwb29sIiwic2VsZmlzaCIsImNvbXBhY3QiLCJiaXAzNyIsIm1heE91dGJvdW5kIiwibWF4SW5ib3VuZCIsImNyZWF0ZVNvY2tldCIsImZ1bmMiLCJwcm94eSIsInN0ciIsIm9uaW9uIiwidXBucCIsInNlZWRzIiwiYXJyYXkiLCJub2RlcyIsIm9ubHkiLCJwdWJsaWNIb3N0IiwicHVibGljUG9ydCIsImhvc3QiLCJwb3J0IiwibGlzdGVuIiwibWluZXIiLCJhZGRyZXNzIiwiY29pbmJhc2VGbGFncyIsInByZXZlcmlmeSIsIm1heFdlaWdodCIsInJlc2VydmVkV2VpZ2h0IiwicmVzZXJ2ZWRTaWdvcHMiLCJycGMiLCJodHRwIiwibm9kZSIsInNzbCIsImtleUZpbGUiLCJwYXRoIiwiY2VydEZpbGUiLCJhcGlLZXkiLCJub0F1dGgiLCJjb3JzIiwibWF4VHhzIiwidHhpbmRleCIsImFkZHJpbmRleCIsImZpbHRlcmluZGV4Iiwib24iLCJlcnIiLCJlcnJvciIsInR4IiwiY3B1Iiwibm90aWZ5RW50cnkiLCJlbWl0IiwiZW50cnkiLCJibG9jayIsIl9hZGRCbG9jayIsInR4cyIsImUiLCJfcmVtb3ZlQmxvY2siLCJ0aXAiLCJjb21wZXRpdG9yIiwiX2hhbmRsZVJlb3JnIiwiX3Jlc2V0IiwibG9hZFBsdWdpbnMiLCJvcGVuIiwiaGFuZGxlUHJlb3BlbiIsIm9wZW5QbHVnaW5zIiwiaGFuZGxlT3BlbiIsImluZm8iLCJjbG9zZSIsImhhbmRsZVByZWNsb3NlIiwiY2xvc2VQbHVnaW5zIiwiaGFuZGxlQ2xvc2UiLCJzY2FuIiwic3RhcnQiLCJmaWx0ZXIiLCJpdGVyIiwiYnJvYWRjYXN0IiwiaXRlbSIsInNlbmRUWCIsIm1pc3NpbmciLCJhZGRUWCIsInR5cGUiLCJzY29yZSIsIndhcm5pbmciLCJoYXNoIiwicmVsYXkiLCJjb25uZWN0IiwiZGlzY29ubmVjdCIsInN0YXJ0U3luYyIsInN5bmMiLCJzdG9wU3luYyIsImdldEJsb2NrIiwiZ2V0Q29pbiIsImluZGV4IiwiY29pbiIsImlzU3BlbnQiLCJnZXRNZXRhQnlBZGRyZXNzIiwiYWRkciIsInJldmVyc2UiLCJhZnRlciIsImxpbWl0IiwibWV0YXMiLCJjb25maXJtZWQiLCJoYXNoZXMiLCJnZXRIYXNoZXNCeUFkZHJlc3MiLCJtdHgiLCJnZXRNZXRhIiwicHVzaCIsInVuY29uZmlybWVkIiwiY29uY2F0IiwibGVuZ3RoIiwibWV0YSIsImdldE1ldGFWaWV3IiwiaGVpZ2h0IiwiZ2V0U3BlbnRWaWV3IiwiZ2V0VFhCeUFkZHJlc3MiLCJtdHhzIiwib3V0IiwiZ2V0VFgiLCJoYXNUWCIsImhhc0VudHJ5IiwiZ2V0QmxvY2tGaWx0ZXIiLCJnZXRIYXNoIiwiZ2V0RmlsdGVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6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QSxjQUFOLENBQXFCckMsSUFBckIsQ0FBMkIsa0RBQ3pCLEdBQUksQ0FBQyxLQUFLeEMsV0FBVixDQUNFLDJEQUFPLEtBQVAsQ0FBWSxDQURkLGlDQUR5Qix5QkFJekIsR0FBSSxNQUFPd0MsQ0FBQUEsSUFBUCxHQUFnQixRQUFwQixDQUNFLHFEQUFBQSxJQUFJLENBQUcsS0FBTSxNQUFLeEcsS0FBTCxDQUFXOEksT0FBWCxDQUFtQnRDLElBQW5CLENBQWIsQ0FBc0MsQ0FEeEMsaUNBSnlCLHlCQU96QixHQUFJLENBQUNBLElBQUwsQ0FDRSwyREFBTyxLQUFQLENBQVksQ0FEZCxpQ0FQeUIseUJBVXpCLE1BQU8sTUFBS3hDLFdBQUwsQ0FBaUIrRSxTQUFqQixDQUEyQnZDLElBQTNCLENBQVAsQ0FDRCxDQXhtQnlCLENBMm1CNUI7QUFDQTtBQUNBLEcseUJBRUF3QyxNQUFNLENBQUNDLE9BQVAsQ0FBaUIvSixRQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxyXG4gKiBmdWxsbm9kZS5qcyAtIGZ1bGwgbm9kZSBmb3IgYmNvaW5cclxuICogQ29weXJpZ2h0IChjKSAyMDE0LTIwMTUsIEZlZG9yIEluZHV0bnkgKE1JVCBMaWNlbnNlKVxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQtMjAxNywgQ2hyaXN0b3BoZXIgSmVmZnJleSAoTUlUIExpY2Vuc2UpLlxyXG4gKiBodHRwczovL2dpdGh1Yi5jb20vYmNvaW4tb3JnL2Jjb2luXHJcbiAqL1xyXG5cclxuJ3VzZSBzdHJpY3QnO1xyXG5cclxuY29uc3QgYXNzZXJ0ID0gcmVxdWlyZSgnYnNlcnQnKTtcclxuY29uc3QgQ2hhaW4gPSByZXF1aXJlKCcuLi9ibG9ja2NoYWluL2NoYWluJyk7XHJcbmNvbnN0IEZlZXMgPSByZXF1aXJlKCcuLi9tZW1wb29sL2ZlZXMnKTtcclxuY29uc3QgTWVtcG9vbCA9IHJlcXVpcmUoJy4uL21lbXBvb2wvbWVtcG9vbCcpO1xyXG5jb25zdCBQb29sID0gcmVxdWlyZSgnLi4vbmV0L3Bvb2wnKTtcclxuY29uc3QgTWluZXIgPSByZXF1aXJlKCcuLi9taW5pbmcvbWluZXInKTtcclxuY29uc3QgTm9kZSA9IHJlcXVpcmUoJy4vbm9kZScpO1xyXG5jb25zdCBIVFRQID0gcmVxdWlyZSgnLi9odHRwJyk7XHJcbmNvbnN0IFJQQyA9IHJlcXVpcmUoJy4vcnBjJyk7XHJcbmNvbnN0IGJsb2Nrc3RvcmUgPSByZXF1aXJlKCcuLi9ibG9ja3N0b3JlJyk7XHJcbmNvbnN0IFRYSW5kZXhlciA9IHJlcXVpcmUoJy4uL2luZGV4ZXIvdHhpbmRleGVyJyk7XHJcbmNvbnN0IEFkZHJJbmRleGVyID0gcmVxdWlyZSgnLi4vaW5kZXhlci9hZGRyaW5kZXhlcicpO1xyXG5jb25zdCBGaWx0ZXJJbmRleGVyID0gcmVxdWlyZSgnLi4vaW5kZXhlci9maWx0ZXJpbmRleGVyJyk7XHJcblxyXG4vKipcclxuICogRnVsbCBOb2RlXHJcbiAqIFJlc3ByZXNlbnRzIGEgZnVsbG5vZGUgY29tcGxldGUgd2l0aCBhXHJcbiAqIGNoYWluLCBtZW1wb29sLCBtaW5lciwgZXRjLlxyXG4gKiBAYWxpYXMgbW9kdWxlOm5vZGUuRnVsbE5vZGVcclxuICogQGV4dGVuZHMgTm9kZVxyXG4gKi9cclxuXHJcbmNsYXNzIEZ1bGxOb2RlIGV4dGVuZHMgTm9kZSB7XHJcbiAgLyoqXHJcbiAgICogQ3JlYXRlIGEgZnVsbCBub2RlLlxyXG4gICAqIEBjb25zdHJ1Y3RvclxyXG4gICAqIEBwYXJhbSB7T2JqZWN0P30gb3B0aW9uc1xyXG4gICAqL1xyXG5cclxuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XHJcbiAgICBzdXBlcignYmNvaW4nLCAnYmNvaW4uY29uZicsICdkZWJ1Zy5sb2cnLCBvcHRpb25zKTtcclxuXHJcbiAgICB0aGlzLm9wZW5lZCA9IGZhbHNlO1xyXG5cclxuICAgIC8vIFNQViBmbGFnLlxyXG4gICAgdGhpcy5zcHYgPSBmYWxzZTtcclxuXHJcbiAgICAvLyBJbnN0YW50aWF0ZSBibG9jayBzdG9yYWdlLlxyXG4gICAgdGhpcy5ibG9ja3MgPSBibG9ja3N0b3JlLmNyZWF0ZSh7XHJcbiAgICAgIG5ldHdvcms6IHRoaXMubmV0d29yayxcclxuICAgICAgbG9nZ2VyOiB0aGlzLmxvZ2dlcixcclxuICAgICAgcHJlZml4OiB0aGlzLmNvbmZpZy5wcmVmaXgsXHJcbiAgICAgIGNhY2hlU2l6ZTogdGhpcy5jb25maWcubWIoJ2Jsb2NrLWNhY2hlLXNpemUnKSxcclxuICAgICAgbWVtb3J5OiB0aGlzLm1lbW9yeVxyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gQ2hhaW4gbmVlZHMgYWNjZXNzIHRvIGJsb2Nrcy5cclxuICAgIHRoaXMuY2hhaW4gPSBuZXcgQ2hhaW4oe1xyXG4gICAgICBuZXR3b3JrOiB0aGlzLm5ldHdvcmssXHJcbiAgICAgIGxvZ2dlcjogdGhpcy5sb2dnZXIsXHJcbiAgICAgIGJsb2NrczogdGhpcy5ibG9ja3MsXHJcbiAgICAgIHdvcmtlcnM6IHRoaXMud29ya2VycyxcclxuICAgICAgbWVtb3J5OiB0aGlzLmNvbmZpZy5ib29sKCdtZW1vcnknKSxcclxuICAgICAgcHJlZml4OiB0aGlzLmNvbmZpZy5wcmVmaXgsXHJcbiAgICAgIG1heEZpbGVzOiB0aGlzLmNvbmZpZy51aW50KCdtYXgtZmlsZXMnKSxcclxuICAgICAgY2FjaGVTaXplOiB0aGlzLmNvbmZpZy5tYignY2FjaGUtc2l6ZScpLFxyXG4gICAgICBmb3JjZUZsYWdzOiB0aGlzLmNvbmZpZy5ib29sKCdmb3JjZS1mbGFncycpLFxyXG4gICAgICBiaXA5MTogdGhpcy5jb25maWcuYm9vbCgnYmlwOTEnKSxcclxuICAgICAgYmlwMTQ4OiB0aGlzLmNvbmZpZy5ib29sKCdiaXAxNDgnKSxcclxuICAgICAgcHJ1bmU6IHRoaXMuY29uZmlnLmJvb2woJ3BydW5lJyksXHJcbiAgICAgIGNoZWNrcG9pbnRzOiB0aGlzLmNvbmZpZy5ib29sKCdjaGVja3BvaW50cycpLFxyXG4gICAgICBlbnRyeUNhY2hlOiB0aGlzLmNvbmZpZy51aW50KCdlbnRyeS1jYWNoZScpLFxyXG4gICAgICBpbmRleFRYOiB0aGlzLmNvbmZpZy5ib29sKCdpbmRleC10eCcpLFxyXG4gICAgICBpbmRleEFkZHJlc3M6IHRoaXMuY29uZmlnLmJvb2woJ2luZGV4LWFkZHJlc3MnKVxyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gRmVlIGVzdGltYXRpb24uXHJcbiAgICB0aGlzLmZlZXMgPSBuZXcgRmVlcyh0aGlzLmxvZ2dlcik7XHJcbiAgICB0aGlzLmZlZXMuaW5pdCgpO1xyXG5cclxuICAgIC8vIE1lbXBvb2wgbmVlZHMgYWNjZXNzIHRvIHRoZSBjaGFpbi5cclxuICAgIHRoaXMubWVtcG9vbCA9IG5ldyBNZW1wb29sKHtcclxuICAgICAgbmV0d29yazogdGhpcy5uZXR3b3JrLFxyXG4gICAgICBsb2dnZXI6IHRoaXMubG9nZ2VyLFxyXG4gICAgICB3b3JrZXJzOiB0aGlzLndvcmtlcnMsXHJcbiAgICAgIGNoYWluOiB0aGlzLmNoYWluLFxyXG4gICAgICBmZWVzOiB0aGlzLmZlZXMsXHJcbiAgICAgIG1lbW9yeTogdGhpcy5tZW1vcnksXHJcbiAgICAgIHByZWZpeDogdGhpcy5jb25maWcucHJlZml4LFxyXG4gICAgICBwZXJzaXN0ZW50OiB0aGlzLmNvbmZpZy5ib29sKCdwZXJzaXN0ZW50LW1lbXBvb2wnKSxcclxuICAgICAgbWF4U2l6ZTogdGhpcy5jb25maWcubWIoJ21lbXBvb2wtc2l6ZScpLFxyXG4gICAgICBsaW1pdEZyZWU6IHRoaXMuY29uZmlnLmJvb2woJ2xpbWl0LWZyZWUnKSxcclxuICAgICAgbGltaXRGcmVlUmVsYXk6IHRoaXMuY29uZmlnLnVpbnQoJ2xpbWl0LWZyZWUtcmVsYXknKSxcclxuICAgICAgcmVxdWlyZVN0YW5kYXJkOiB0aGlzLmNvbmZpZy5ib29sKCdyZXF1aXJlLXN0YW5kYXJkJyksXHJcbiAgICAgIHJlamVjdEFic3VyZEZlZXM6IHRoaXMuY29uZmlnLmJvb2woJ3JlamVjdC1hYnN1cmQtZmVlcycpLFxyXG4gICAgICByZXBsYWNlQnlGZWU6IHRoaXMuY29uZmlnLmJvb2woJ3JlcGxhY2UtYnktZmVlJyksXHJcbiAgICAgIGluZGV4QWRkcmVzczogdGhpcy5jb25maWcuYm9vbCgnaW5kZXgtYWRkcmVzcycpXHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyBQb29sIG5lZWRzIGFjY2VzcyB0byB0aGUgY2hhaW4gYW5kIG1lbXBvb2wuXHJcbiAgICB0aGlzLnBvb2wgPSBuZXcgUG9vbCh7XHJcbiAgICAgIG5ldHdvcms6IHRoaXMubmV0d29yayxcclxuICAgICAgbG9nZ2VyOiB0aGlzLmxvZ2dlcixcclxuICAgICAgY2hhaW46IHRoaXMuY2hhaW4sXHJcbiAgICAgIG1lbXBvb2w6IHRoaXMubWVtcG9vbCxcclxuICAgICAgcHJlZml4OiB0aGlzLmNvbmZpZy5wcmVmaXgsXHJcbiAgICAgIHNlbGZpc2g6IHRoaXMuY29uZmlnLmJvb2woJ3NlbGZpc2gnKSxcclxuICAgICAgY29tcGFjdDogdGhpcy5jb25maWcuYm9vbCgnY29tcGFjdCcpLFxyXG4gICAgICBiaXAzNzogdGhpcy5jb25maWcuYm9vbCgnYmlwMzcnKSxcclxuICAgICAgbWF4T3V0Ym91bmQ6IHRoaXMuY29uZmlnLnVpbnQoJ21heC1vdXRib3VuZCcpLFxyXG4gICAgICBtYXhJbmJvdW5kOiB0aGlzLmNvbmZpZy51aW50KCdtYXgtaW5ib3VuZCcpLFxyXG4gICAgICBjcmVhdGVTb2NrZXQ6IHRoaXMuY29uZmlnLmZ1bmMoJ2NyZWF0ZS1zb2NrZXQnKSxcclxuICAgICAgcHJveHk6IHRoaXMuY29uZmlnLnN0cigncHJveHknKSxcclxuICAgICAgb25pb246IHRoaXMuY29uZmlnLmJvb2woJ29uaW9uJyksXHJcbiAgICAgIHVwbnA6IHRoaXMuY29uZmlnLmJvb2woJ3VwbnAnKSxcclxuICAgICAgc2VlZHM6IHRoaXMuY29uZmlnLmFycmF5KCdzZWVkcycpLFxyXG4gICAgICBub2RlczogdGhpcy5jb25maWcuYXJyYXkoJ25vZGVzJyksXHJcbiAgICAgIG9ubHk6IHRoaXMuY29uZmlnLmFycmF5KCdvbmx5JyksXHJcbiAgICAgIHB1YmxpY0hvc3Q6IHRoaXMuY29uZmlnLnN0cigncHVibGljLWhvc3QnKSxcclxuICAgICAgcHVibGljUG9ydDogdGhpcy5jb25maWcudWludCgncHVibGljLXBvcnQnKSxcclxuICAgICAgaG9zdDogdGhpcy5jb25maWcuc3RyKCdob3N0JyksXHJcbiAgICAgIHBvcnQ6IHRoaXMuY29uZmlnLnVpbnQoJ3BvcnQnKSxcclxuICAgICAgbGlzdGVuOiB0aGlzLmNvbmZpZy5ib29sKCdsaXN0ZW4nKSxcclxuICAgICAgbWVtb3J5OiB0aGlzLm1lbW9yeVxyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gTWluZXIgbmVlZHMgYWNjZXNzIHRvIHRoZSBjaGFpbiBhbmQgbWVtcG9vbC5cclxuICAgIHRoaXMubWluZXIgPSBuZXcgTWluZXIoe1xyXG4gICAgICBuZXR3b3JrOiB0aGlzLm5ldHdvcmssXHJcbiAgICAgIGxvZ2dlcjogdGhpcy5sb2dnZXIsXHJcbiAgICAgIHdvcmtlcnM6IHRoaXMud29ya2VycyxcclxuICAgICAgY2hhaW46IHRoaXMuY2hhaW4sXHJcbiAgICAgIG1lbXBvb2w6IHRoaXMubWVtcG9vbCxcclxuICAgICAgYWRkcmVzczogdGhpcy5jb25maWcuYXJyYXkoJ2NvaW5iYXNlLWFkZHJlc3MnKSxcclxuICAgICAgY29pbmJhc2VGbGFnczogdGhpcy5jb25maWcuc3RyKCdjb2luYmFzZS1mbGFncycpLFxyXG4gICAgICBwcmV2ZXJpZnk6IHRoaXMuY29uZmlnLmJvb2woJ3ByZXZlcmlmeScpLFxyXG4gICAgICBtYXhXZWlnaHQ6IHRoaXMuY29uZmlnLnVpbnQoJ21heC13ZWlnaHQnKSxcclxuICAgICAgcmVzZXJ2ZWRXZWlnaHQ6IHRoaXMuY29uZmlnLnVpbnQoJ3Jlc2VydmVkLXdlaWdodCcpLFxyXG4gICAgICByZXNlcnZlZFNpZ29wczogdGhpcy5jb25maWcudWludCgncmVzZXJ2ZWQtc2lnb3BzJylcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIFJQQyBuZWVkcyBhY2Nlc3MgdG8gdGhlIG5vZGUuXHJcbiAgICB0aGlzLnJwYyA9IG5ldyBSUEModGhpcyk7XHJcblxyXG4gICAgLy8gSFRUUCBuZWVkcyBhY2Nlc3MgdG8gdGhlIG5vZGUuXHJcbiAgICB0aGlzLmh0dHAgPSBuZXcgSFRUUCh7XHJcbiAgICAgIG5ldHdvcms6IHRoaXMubmV0d29yayxcclxuICAgICAgbG9nZ2VyOiB0aGlzLmxvZ2dlcixcclxuICAgICAgbm9kZTogdGhpcyxcclxuICAgICAgcHJlZml4OiB0aGlzLmNvbmZpZy5wcmVmaXgsXHJcbiAgICAgIHNzbDogdGhpcy5jb25maWcuYm9vbCgnc3NsJyksXHJcbiAgICAgIGtleUZpbGU6IHRoaXMuY29uZmlnLnBhdGgoJ3NzbC1rZXknKSxcclxuICAgICAgY2VydEZpbGU6IHRoaXMuY29uZmlnLnBhdGgoJ3NzbC1jZXJ0JyksXHJcbiAgICAgIGhvc3Q6IHRoaXMuY29uZmlnLnN0cignaHR0cC1ob3N0JyksXHJcbiAgICAgIHBvcnQ6IHRoaXMuY29uZmlnLnVpbnQoJ2h0dHAtcG9ydCcpLFxyXG4gICAgICBhcGlLZXk6IHRoaXMuY29uZmlnLnN0cignYXBpLWtleScpLFxyXG4gICAgICBub0F1dGg6IHRoaXMuY29uZmlnLmJvb2woJ25vLWF1dGgnKSxcclxuICAgICAgY29yczogdGhpcy5jb25maWcuYm9vbCgnY29ycycpLFxyXG4gICAgICBtYXhUeHM6IHRoaXMuY29uZmlnLnVpbnQoJ21heC10eHMnKVxyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gSW5kZXhlcnNcclxuICAgIGlmICh0aGlzLmNvbmZpZy5ib29sKCdpbmRleC10eCcpKSB7XHJcbiAgICAgIHRoaXMudHhpbmRleCA9IG5ldyBUWEluZGV4ZXIoe1xyXG4gICAgICAgIG5ldHdvcms6IHRoaXMubmV0d29yayxcclxuICAgICAgICBsb2dnZXI6IHRoaXMubG9nZ2VyLFxyXG4gICAgICAgIGJsb2NrczogdGhpcy5ibG9ja3MsXHJcbiAgICAgICAgY2hhaW46IHRoaXMuY2hhaW4sXHJcbiAgICAgICAgcHJ1bmU6IHRoaXMuY29uZmlnLmJvb2woJ3BydW5lJyksXHJcbiAgICAgICAgbWVtb3J5OiB0aGlzLm1lbW9yeSxcclxuICAgICAgICBwcmVmaXg6IHRoaXMuY29uZmlnLnN0cignaW5kZXgtcHJlZml4JywgdGhpcy5jb25maWcucHJlZml4KVxyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAodGhpcy5jb25maWcuYm9vbCgnaW5kZXgtYWRkcmVzcycpKSB7XHJcbiAgICAgIHRoaXMuYWRkcmluZGV4PSBuZXcgQWRkckluZGV4ZXIoe1xyXG4gICAgICAgIG5ldHdvcms6IHRoaXMubmV0d29yayxcclxuICAgICAgICBsb2dnZXI6IHRoaXMubG9nZ2VyLFxyXG4gICAgICAgIGJsb2NrczogdGhpcy5ibG9ja3MsXHJcbiAgICAgICAgY2hhaW46IHRoaXMuY2hhaW4sXHJcbiAgICAgICAgcHJ1bmU6IHRoaXMuY29uZmlnLmJvb2woJ3BydW5lJyksXHJcbiAgICAgICAgbWVtb3J5OiB0aGlzLm1lbW9yeSxcclxuICAgICAgICBwcmVmaXg6IHRoaXMuY29uZmlnLnN0cignaW5kZXgtcHJlZml4JywgdGhpcy5jb25maWcucHJlZml4KSxcclxuICAgICAgICBtYXhUeHM6IHRoaXMuY29uZmlnLnVpbnQoJ21heC10eHMnKVxyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAodGhpcy5jb25maWcuYm9vbCgnaW5kZXgtZmlsdGVyJykpIHtcclxuICAgICAgdGhpcy5maWx0ZXJpbmRleCA9IG5ldyBGaWx0ZXJJbmRleGVyKHtcclxuICAgICAgICBuZXR3b3JrOiB0aGlzLm5ldHdvcmssXHJcbiAgICAgICAgbG9nZ2VyOiB0aGlzLmxvZ2dlcixcclxuICAgICAgICBibG9ja3M6IHRoaXMuYmxvY2tzLFxyXG4gICAgICAgIGNoYWluOiB0aGlzLmNoYWluLFxyXG4gICAgICAgIG1lbW9yeTogdGhpcy5jb25maWcuYm9vbCgnbWVtb3J5JyksXHJcbiAgICAgICAgcHJlZml4OiB0aGlzLmNvbmZpZy5zdHIoJ2luZGV4LXByZWZpeCcsIHRoaXMuY29uZmlnLnByZWZpeClcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5pbml0KCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBJbml0aWFsaXplIHRoZSBub2RlLlxyXG4gICAqIEBwcml2YXRlXHJcbiAgICovXHJcblxyXG4gIGluaXQoKSB7XHJcbiAgICAvLyBCaW5kIHRvIGVycm9yc1xyXG4gICAgdGhpcy5jaGFpbi5vbignZXJyb3InLCBlcnIgPT4gdGhpcy5lcnJvcihlcnIpKTtcclxuICAgIHRoaXMubWVtcG9vbC5vbignZXJyb3InLCBlcnIgPT4gdGhpcy5lcnJvcihlcnIpKTtcclxuICAgIHRoaXMucG9vbC5vbignZXJyb3InLCBlcnIgPT4gdGhpcy5lcnJvcihlcnIpKTtcclxuICAgIHRoaXMubWluZXIub24oJ2Vycm9yJywgZXJyID0+IHRoaXMuZXJyb3IoZXJyKSk7XHJcblxyXG4gICAgaWYgKHRoaXMudHhpbmRleClcclxuICAgICAgdGhpcy50eGluZGV4Lm9uKCdlcnJvcicsIGVyciA9PiB0aGlzLmVycm9yKGVycikpO1xyXG5cclxuICAgIGlmICh0aGlzLmFkZHJpbmRleClcclxuICAgICAgdGhpcy5hZGRyaW5kZXgub24oJ2Vycm9yJywgZXJyID0+IHRoaXMuZXJyb3IoZXJyKSk7XHJcblxyXG4gICAgaWYgKHRoaXMuZmlsdGVyaW5kZXgpXHJcbiAgICAgIHRoaXMuZmlsdGVyaW5kZXgub24oJ2Vycm9yJywgZXJyID0+IHRoaXMuZXJyb3IoZXJyKSk7XHJcblxyXG4gICAgaWYgKHRoaXMuaHR0cClcclxuICAgICAgdGhpcy5odHRwLm9uKCdlcnJvcicsIGVyciA9PiB0aGlzLmVycm9yKGVycikpO1xyXG5cclxuICAgIHRoaXMubWVtcG9vbC5vbigndHgnLCAodHgpID0+IHtcclxuICAgICAgdGhpcy5taW5lci5jcHUubm90aWZ5RW50cnkoKTtcclxuICAgICAgdGhpcy5lbWl0KCd0eCcsIHR4KTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuY2hhaW4ub24oJ2Nvbm5lY3QnLCBhc3luYyAoZW50cnksIGJsb2NrKSA9PiB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgYXdhaXQgdGhpcy5tZW1wb29sLl9hZGRCbG9jayhlbnRyeSwgYmxvY2sudHhzKTtcclxuICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgIHRoaXMuZXJyb3IoZSk7XHJcbiAgICAgIH1cclxuICAgICAgdGhpcy5lbWl0KCdibG9jaycsIGJsb2NrKTtcclxuICAgICAgdGhpcy5lbWl0KCdjb25uZWN0JywgZW50cnksIGJsb2NrKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuY2hhaW4ub24oJ2Rpc2Nvbm5lY3QnLCBhc3luYyAoZW50cnksIGJsb2NrKSA9PiB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgYXdhaXQgdGhpcy5tZW1wb29sLl9yZW1vdmVCbG9jayhlbnRyeSwgYmxvY2sudHhzKTtcclxuICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgIHRoaXMuZXJyb3IoZSk7XHJcbiAgICAgIH1cclxuICAgICAgdGhpcy5lbWl0KCdkaXNjb25uZWN0JywgZW50cnksIGJsb2NrKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuY2hhaW4ub24oJ3Jlb3JnYW5pemUnLCBhc3luYyAodGlwLCBjb21wZXRpdG9yKSA9PiB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgYXdhaXQgdGhpcy5tZW1wb29sLl9oYW5kbGVSZW9yZygpO1xyXG4gICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgdGhpcy5lcnJvcihlKTtcclxuICAgICAgfVxyXG4gICAgICB0aGlzLmVtaXQoJ3Jlb3JnYW5pemUnLCB0aXAsIGNvbXBldGl0b3IpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5jaGFpbi5vbigncmVzZXQnLCBhc3luYyAodGlwKSA9PiB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgYXdhaXQgdGhpcy5tZW1wb29sLl9yZXNldCgpO1xyXG4gICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgdGhpcy5lcnJvcihlKTtcclxuICAgICAgfVxyXG4gICAgICB0aGlzLmVtaXQoJ3Jlc2V0JywgdGlwKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMubG9hZFBsdWdpbnMoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIE9wZW4gdGhlIG5vZGUgYW5kIGFsbCBpdHMgY2hpbGQgb2JqZWN0cyxcclxuICAgKiB3YWl0IGZvciB0aGUgZGF0YWJhc2UgdG8gbG9hZC5cclxuICAgKiBAYWxpYXMgRnVsbE5vZGUjb3BlblxyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlfVxyXG4gICAqL1xyXG5cclxuICBhc3luYyBvcGVuKCkge1xyXG4gICAgYXNzZXJ0KCF0aGlzLm9wZW5lZCwgJ0Z1bGxOb2RlIGlzIGFscmVhZHkgb3Blbi4nKTtcclxuICAgIHRoaXMub3BlbmVkID0gdHJ1ZTtcclxuXHJcbiAgICBhd2FpdCB0aGlzLmhhbmRsZVByZW9wZW4oKTtcclxuICAgIGF3YWl0IHRoaXMuYmxvY2tzLm9wZW4oKTtcclxuICAgIGF3YWl0IHRoaXMuY2hhaW4ub3BlbigpO1xyXG4gICAgYXdhaXQgdGhpcy5tZW1wb29sLm9wZW4oKTtcclxuICAgIGF3YWl0IHRoaXMubWluZXIub3BlbigpO1xyXG4gICAgYXdhaXQgdGhpcy5wb29sLm9wZW4oKTtcclxuXHJcbiAgICBpZiAodGhpcy50eGluZGV4KVxyXG4gICAgICBhd2FpdCB0aGlzLnR4aW5kZXgub3BlbigpO1xyXG5cclxuICAgIGlmICh0aGlzLmFkZHJpbmRleClcclxuICAgICAgYXdhaXQgdGhpcy5hZGRyaW5kZXgub3BlbigpO1xyXG5cclxuICAgIGlmICh0aGlzLmZpbHRlcmluZGV4KVxyXG4gICAgICBhd2FpdCB0aGlzLmZpbHRlcmluZGV4Lm9wZW4oKTtcclxuXHJcbiAgICBhd2FpdCB0aGlzLm9wZW5QbHVnaW5zKCk7XHJcblxyXG4gICAgYXdhaXQgdGhpcy5odHRwLm9wZW4oKTtcclxuICAgIGF3YWl0IHRoaXMuaGFuZGxlT3BlbigpO1xyXG5cclxuICAgIHRoaXMubG9nZ2VyLmluZm8oJ05vZGUgaXMgbG9hZGVkLicpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ2xvc2UgdGhlIG5vZGUsIHdhaXQgZm9yIHRoZSBkYXRhYmFzZSB0byBjbG9zZS5cclxuICAgKiBAYWxpYXMgRnVsbE5vZGUjY2xvc2VcclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZX1cclxuICAgKi9cclxuXHJcbiAgYXN5bmMgY2xvc2UoKSB7XHJcbiAgICBhc3NlcnQodGhpcy5vcGVuZWQsICdGdWxsTm9kZSBpcyBub3Qgb3Blbi4nKTtcclxuICAgIHRoaXMub3BlbmVkID0gZmFsc2U7XHJcblxyXG4gICAgYXdhaXQgdGhpcy5oYW5kbGVQcmVjbG9zZSgpO1xyXG4gICAgYXdhaXQgdGhpcy5odHRwLmNsb3NlKCk7XHJcblxyXG4gICAgaWYgKHRoaXMudHhpbmRleClcclxuICAgICAgYXdhaXQgdGhpcy50eGluZGV4LmNsb3NlKCk7XHJcblxyXG4gICAgaWYgKHRoaXMuYWRkcmluZGV4KVxyXG4gICAgICBhd2FpdCB0aGlzLmFkZHJpbmRleC5jbG9zZSgpO1xyXG5cclxuICAgIGlmICh0aGlzLmZpbHRlcmluZGV4KVxyXG4gICAgICBhd2FpdCB0aGlzLmZpbHRlcmluZGV4LmNsb3NlKCk7XHJcblxyXG4gICAgYXdhaXQgdGhpcy5jbG9zZVBsdWdpbnMoKTtcclxuXHJcbiAgICBhd2FpdCB0aGlzLnBvb2wuY2xvc2UoKTtcclxuICAgIGF3YWl0IHRoaXMubWluZXIuY2xvc2UoKTtcclxuICAgIGF3YWl0IHRoaXMubWVtcG9vbC5jbG9zZSgpO1xyXG4gICAgYXdhaXQgdGhpcy5jaGFpbi5jbG9zZSgpO1xyXG4gICAgYXdhaXQgdGhpcy5ibG9ja3MuY2xvc2UoKTtcclxuXHJcbiAgICBhd2FpdCB0aGlzLmhhbmRsZUNsb3NlKCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSZXNjYW4gZm9yIGFueSBtaXNzZWQgdHJhbnNhY3Rpb25zLlxyXG4gICAqIEBwYXJhbSB7TnVtYmVyfEhhc2h9IHN0YXJ0IC0gU3RhcnQgYmxvY2suXHJcbiAgICogQHBhcmFtIHtCbG9vbX0gZmlsdGVyXHJcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gaXRlciAtIEl0ZXJhdG9yLlxyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlfVxyXG4gICAqL1xyXG5cclxuICBzY2FuKHN0YXJ0LCBmaWx0ZXIsIGl0ZXIpIHtcclxuICAgIHJldHVybiB0aGlzLmNoYWluLnNjYW4oc3RhcnQsIGZpbHRlciwgaXRlcik7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBCcm9hZGNhc3QgYSB0cmFuc2FjdGlvbiAobm90ZSB0aGF0IHRoaXMgd2lsbCBfbm90XyBiZSB2ZXJpZmllZFxyXG4gICAqIGJ5IHRoZSBtZW1wb29sIC0gdXNlIHdpdGggY2FyZSwgbGVzdCB5b3UgZ2V0IGJhbm5lZCBmcm9tXHJcbiAgICogYml0Y29pbmQgbm9kZXMpLlxyXG4gICAqIEBwYXJhbSB7VFh8QmxvY2t9IGl0ZW1cclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZX1cclxuICAgKi9cclxuXHJcbiAgYXN5bmMgYnJvYWRjYXN0KGl0ZW0pIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGF3YWl0IHRoaXMucG9vbC5icm9hZGNhc3QoaXRlbSk7XHJcbiAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgIHRoaXMuZW1pdCgnZXJyb3InLCBlKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEFkZCB0cmFuc2FjdGlvbiB0byBtZW1wb29sLCBicm9hZGNhc3QuXHJcbiAgICogQHBhcmFtIHtUWH0gdHhcclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZX1cclxuICAgKi9cclxuXHJcbiAgYXN5bmMgc2VuZFRYKHR4KSB7XHJcbiAgICBsZXQgbWlzc2luZztcclxuXHJcbiAgICB0cnkge1xyXG4gICAgICBtaXNzaW5nID0gYXdhaXQgdGhpcy5tZW1wb29sLmFkZFRYKHR4KTtcclxuICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICBpZiAoZXJyLnR5cGUgPT09ICdWZXJpZnlFcnJvcicgJiYgZXJyLnNjb3JlID09PSAwKSB7XHJcbiAgICAgICAgdGhpcy5lcnJvcihlcnIpO1xyXG4gICAgICAgIHRoaXMubG9nZ2VyLndhcm5pbmcoJ1ZlcmlmaWNhdGlvbiBmYWlsZWQgZm9yIHR4OiAlaC4nLCB0eC5oYXNoKCkpO1xyXG4gICAgICAgIHRoaXMubG9nZ2VyLndhcm5pbmcoJ0F0dGVtcHRpbmcgdG8gYnJvYWRjYXN0IGFueXdheS4uLicpO1xyXG4gICAgICAgIHRoaXMuYnJvYWRjYXN0KHR4KTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgICAgdGhyb3cgZXJyO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChtaXNzaW5nKSB7XHJcbiAgICAgIHRoaXMubG9nZ2VyLndhcm5pbmcoJ1RYIHdhcyBvcnBoYW5lZCBpbiBtZW1wb29sOiAlaC4nLCB0eC5oYXNoKCkpO1xyXG4gICAgICB0aGlzLmxvZ2dlci53YXJuaW5nKCdBdHRlbXB0aW5nIHRvIGJyb2FkY2FzdCBhbnl3YXkuLi4nKTtcclxuICAgICAgdGhpcy5icm9hZGNhc3QodHgpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgLy8gV2UgbmVlZCB0byBhbm5vdW5jZSBieSBoYW5kIGlmXHJcbiAgICAvLyB3ZSdyZSBydW5uaW5nIGluIHNlbGZpc2ggbW9kZS5cclxuICAgIGlmICh0aGlzLnBvb2wub3B0aW9ucy5zZWxmaXNoKVxyXG4gICAgICB0aGlzLmJyb2FkY2FzdCh0eCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBBZGQgdHJhbnNhY3Rpb24gdG8gbWVtcG9vbCwgYnJvYWRjYXN0LiBTaWxlbmNlIGVycm9ycy5cclxuICAgKiBAcGFyYW0ge1RYfSB0eFxyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlfVxyXG4gICAqL1xyXG5cclxuICBhc3luYyByZWxheSh0eCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgYXdhaXQgdGhpcy5zZW5kVFgodHgpO1xyXG4gICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICB0aGlzLmVycm9yKGUpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ29ubmVjdCB0byB0aGUgbmV0d29yay5cclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZX1cclxuICAgKi9cclxuXHJcbiAgY29ubmVjdCgpIHtcclxuICAgIHJldHVybiB0aGlzLnBvb2wuY29ubmVjdCgpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRGlzY29ubmVjdCBmcm9tIHRoZSBuZXR3b3JrLlxyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlfVxyXG4gICAqL1xyXG5cclxuICBkaXNjb25uZWN0KCkge1xyXG4gICAgcmV0dXJuIHRoaXMucG9vbC5kaXNjb25uZWN0KCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBTdGFydCB0aGUgYmxvY2tjaGFpbiBzeW5jLlxyXG4gICAqL1xyXG5cclxuICBzdGFydFN5bmMoKSB7XHJcbiAgICBpZiAodGhpcy50eGluZGV4KVxyXG4gICAgICB0aGlzLnR4aW5kZXguc3luYygpO1xyXG5cclxuICAgIGlmICh0aGlzLmFkZHJpbmRleClcclxuICAgICAgdGhpcy5hZGRyaW5kZXguc3luYygpO1xyXG5cclxuICAgIGlmICh0aGlzLmZpbHRlcmluZGV4KVxyXG4gICAgICB0aGlzLmZpbHRlcmluZGV4LnN5bmMoKTtcclxuXHJcbiAgICByZXR1cm4gdGhpcy5wb29sLnN0YXJ0U3luYygpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU3RvcCBzeW5jaW5nIHRoZSBibG9ja2NoYWluLlxyXG4gICAqL1xyXG5cclxuICBzdG9wU3luYygpIHtcclxuICAgIHJldHVybiB0aGlzLnBvb2wuc3RvcFN5bmMoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFJldHJpZXZlIGEgYmxvY2sgZnJvbSB0aGUgY2hhaW4gZGF0YWJhc2UuXHJcbiAgICogQHBhcmFtIHtIYXNofSBoYXNoXHJcbiAgICogQHJldHVybnMge1Byb21pc2V9IC0gUmV0dXJucyB7QGxpbmsgQmxvY2t9LlxyXG4gICAqL1xyXG5cclxuICBnZXRCbG9jayhoYXNoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5jaGFpbi5nZXRCbG9jayhoYXNoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFJldHJpZXZlIGEgY29pbiBmcm9tIHRoZSBtZW1wb29sIG9yIGNoYWluIGRhdGFiYXNlLlxyXG4gICAqIFRha2VzIGludG8gYWNjb3VudCBzcGVudCBjb2lucyBpbiB0aGUgbWVtcG9vbC5cclxuICAgKiBAcGFyYW0ge0hhc2h9IGhhc2hcclxuICAgKiBAcGFyYW0ge051bWJlcn0gaW5kZXhcclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZX0gLSBSZXR1cm5zIHtAbGluayBDb2lufS5cclxuICAgKi9cclxuXHJcbiAgYXN5bmMgZ2V0Q29pbihoYXNoLCBpbmRleCkge1xyXG4gICAgY29uc3QgY29pbiA9IHRoaXMubWVtcG9vbC5nZXRDb2luKGhhc2gsIGluZGV4KTtcclxuXHJcbiAgICBpZiAoY29pbilcclxuICAgICAgcmV0dXJuIGNvaW47XHJcblxyXG4gICAgaWYgKHRoaXMubWVtcG9vbC5pc1NwZW50KGhhc2gsIGluZGV4KSlcclxuICAgICAgcmV0dXJuIG51bGw7XHJcblxyXG4gICAgcmV0dXJuIHRoaXMuY2hhaW4uZ2V0Q29pbihoYXNoLCBpbmRleCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSZXRyaWV2ZSB0cmFuc2FjdGlvbnMgcGVydGFpbmluZyB0byBhblxyXG4gICAqIGFkZHJlc3MgZnJvbSB0aGUgbWVtcG9vbCBvciBjaGFpbiBkYXRhYmFzZS5cclxuICAgKiBAcGFyYW0ge0FkZHJlc3N9IGFkZHJcclxuICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xyXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBvcHRpb25zLmxpbWl0XHJcbiAgICogQHBhcmFtIHtOdW1iZXJ9IG9wdGlvbnMucmV2ZXJzZVxyXG4gICAqIEBwYXJhbSB7QnVmZmVyfSBvcHRpb25zLmFmdGVyXHJcbiAgICogQHJldHVybnMge1Byb21pc2V9IC0gUmV0dXJucyB7QGxpbmsgVFhNZXRhfVtdLlxyXG4gICAqL1xyXG5cclxuICBhc3luYyBnZXRNZXRhQnlBZGRyZXNzKGFkZHIsIG9wdGlvbnMgPSB7fSkge1xyXG4gICAgaWYgKCF0aGlzLnR4aW5kZXggfHwgIXRoaXMuYWRkcmluZGV4KVxyXG4gICAgICByZXR1cm4gW107XHJcblxyXG4gICAgY29uc3Qge3JldmVyc2UsIGFmdGVyfSA9IG9wdGlvbnM7XHJcbiAgICBsZXQge2xpbWl0fSA9IG9wdGlvbnM7XHJcblxyXG4gICAgbGV0IG1ldGFzID0gW107XHJcblxyXG4gICAgY29uc3QgY29uZmlybWVkID0gYXN5bmMgKCkgPT4ge1xyXG4gICAgICBjb25zdCBoYXNoZXMgPSBhd2FpdCB0aGlzLmFkZHJpbmRleC5nZXRIYXNoZXNCeUFkZHJlc3MoXHJcbiAgICAgICAgYWRkciwge2xpbWl0LCByZXZlcnNlLCBhZnRlcn0pO1xyXG5cclxuICAgICAgZm9yIChjb25zdCBoYXNoIG9mIGhhc2hlcykge1xyXG4gICAgICAgIGNvbnN0IG10eCA9IGF3YWl0IHRoaXMudHhpbmRleC5nZXRNZXRhKGhhc2gpO1xyXG4gICAgICAgIGFzc2VydChtdHgpO1xyXG4gICAgICAgIG1ldGFzLnB1c2gobXR4KTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBjb25zdCB1bmNvbmZpcm1lZCA9ICgpID0+IHtcclxuICAgICAgY29uc3QgbWVtcG9vbCA9IHRoaXMubWVtcG9vbC5nZXRNZXRhQnlBZGRyZXNzKFxyXG4gICAgICAgIGFkZHIsIHtsaW1pdCwgcmV2ZXJzZSwgYWZ0ZXJ9KTtcclxuXHJcbiAgICAgIG1ldGFzID0gbWV0YXMuY29uY2F0KG1lbXBvb2wpO1xyXG4gICAgfTtcclxuXHJcbiAgICBpZiAocmV2ZXJzZSlcclxuICAgICAgdW5jb25maXJtZWQoKTtcclxuICAgIGVsc2VcclxuICAgICAgYXdhaXQgY29uZmlybWVkKCk7XHJcblxyXG4gICAgaWYgKG1ldGFzLmxlbmd0aCA+IDApXHJcbiAgICAgIGxpbWl0IC09IG1ldGFzLmxlbmd0aDtcclxuXHJcbiAgICBpZiAobGltaXQgPD0gMClcclxuICAgICAgcmV0dXJuIG1ldGFzO1xyXG5cclxuICAgIGlmIChyZXZlcnNlKVxyXG4gICAgICBhd2FpdCBjb25maXJtZWQoKTtcclxuICAgIGVsc2VcclxuICAgICAgdW5jb25maXJtZWQoKTtcclxuXHJcbiAgICByZXR1cm4gbWV0YXM7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSZXRyaWV2ZSBhIHRyYW5zYWN0aW9uIGZyb20gdGhlIG1lbXBvb2wgb3IgY2hhaW4gZGF0YWJhc2UuXHJcbiAgICogQHBhcmFtIHtIYXNofSBoYXNoXHJcbiAgICogQHJldHVybnMge1Byb21pc2V9IC0gUmV0dXJucyB7QGxpbmsgVFhNZXRhfS5cclxuICAgKi9cclxuXHJcbiAgYXN5bmMgZ2V0TWV0YShoYXNoKSB7XHJcbiAgICBjb25zdCBtZXRhID0gdGhpcy5tZW1wb29sLmdldE1ldGEoaGFzaCk7XHJcblxyXG4gICAgaWYgKG1ldGEpXHJcbiAgICAgIHJldHVybiBtZXRhO1xyXG5cclxuICAgIGlmICh0aGlzLnR4aW5kZXgpXHJcbiAgICAgIHJldHVybiB0aGlzLnR4aW5kZXguZ2V0TWV0YShoYXNoKTtcclxuXHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFJldHJpZXZlIGEgc3BlbnQgY29pbiB2aWV3cG9pbnQgZnJvbSBtZW1wb29sIG9yIGNoYWluIGRhdGFiYXNlLlxyXG4gICAqIEBwYXJhbSB7VFhNZXRhfSBtZXRhXHJcbiAgICogQHJldHVybnMge1Byb21pc2V9IC0gUmV0dXJucyB7QGxpbmsgQ29pblZpZXd9LlxyXG4gICAqL1xyXG5cclxuICBhc3luYyBnZXRNZXRhVmlldyhtZXRhKSB7XHJcbiAgICBpZiAobWV0YS5oZWlnaHQgPT09IC0xKVxyXG4gICAgICByZXR1cm4gdGhpcy5tZW1wb29sLmdldFNwZW50VmlldyhtZXRhLnR4KTtcclxuXHJcbiAgICBpZiAodGhpcy50eGluZGV4KVxyXG4gICAgICByZXR1cm4gdGhpcy50eGluZGV4LmdldFNwZW50VmlldyhtZXRhLnR4KTtcclxuXHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFJldHJpZXZlIHRyYW5zYWN0aW9ucyBwZXJ0YWluaW5nIHRvIGFuXHJcbiAgICogYWRkcmVzcyBmcm9tIHRoZSBtZW1wb29sIG9yIGNoYWluIGRhdGFiYXNlLlxyXG4gICAqIEBwYXJhbSB7QWRkcmVzc30gYWRkclxyXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zXHJcbiAgICogQHBhcmFtIHtOdW1iZXJ9IG9wdGlvbnMubGltaXRcclxuICAgKiBAcGFyYW0ge051bWJlcn0gb3B0aW9ucy5yZXZlcnNlXHJcbiAgICogQHBhcmFtIHtCdWZmZXJ9IG9wdGlvbnMuYWZ0ZXJcclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZX0gLSBSZXR1cm5zIHtAbGluayBUWH1bXS5cclxuICAgKi9cclxuXHJcbiAgYXN5bmMgZ2V0VFhCeUFkZHJlc3MoYWRkciwgb3B0aW9ucyA9IHt9KSB7XHJcbiAgICBjb25zdCBtdHhzID0gYXdhaXQgdGhpcy5nZXRNZXRhQnlBZGRyZXNzKGFkZHIsIG9wdGlvbnMpO1xyXG4gICAgY29uc3Qgb3V0ID0gW107XHJcblxyXG4gICAgZm9yIChjb25zdCBtdHggb2YgbXR4cylcclxuICAgICAgb3V0LnB1c2gobXR4LnR4KTtcclxuXHJcbiAgICByZXR1cm4gb3V0O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogUmV0cmlldmUgYSB0cmFuc2FjdGlvbiBmcm9tIHRoZSBtZW1wb29sIG9yIGNoYWluIGRhdGFiYXNlLlxyXG4gICAqIEBwYXJhbSB7SGFzaH0gaGFzaFxyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlfSAtIFJldHVybnMge0BsaW5rIFRYfS5cclxuICAgKi9cclxuXHJcbiAgYXN5bmMgZ2V0VFgoaGFzaCkge1xyXG4gICAgY29uc3QgbXR4ID0gYXdhaXQgdGhpcy5nZXRNZXRhKGhhc2gpO1xyXG5cclxuICAgIGlmICghbXR4KVxyXG4gICAgICByZXR1cm4gbnVsbDtcclxuXHJcbiAgICByZXR1cm4gbXR4LnR4O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogVGVzdCB3aGV0aGVyIHRoZSBtZW1wb29sIG9yIGNoYWluIGNvbnRhaW5zIGEgdHJhbnNhY3Rpb24uXHJcbiAgICogQHBhcmFtIHtIYXNofSBoYXNoXHJcbiAgICogQHJldHVybnMge1Byb21pc2V9IC0gUmV0dXJucyBCb29sZWFuLlxyXG4gICAqL1xyXG5cclxuICBhc3luYyBoYXNUWChoYXNoKSB7XHJcbiAgICBpZiAodGhpcy5tZW1wb29sLmhhc0VudHJ5KGhhc2gpKVxyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuXHJcbiAgICBpZiAodGhpcy50eGluZGV4KVxyXG4gICAgICByZXR1cm4gdGhpcy50eGluZGV4Lmhhc1RYKGhhc2gpO1xyXG5cclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFJldHJpZXZlIGNvbXBhY3QgZmlsdGVyIGJ5IGhhc2guXHJcbiAgICogQHBhcmFtIHtIYXNoIHwgTnVtYmVyfSBoYXNoXHJcbiAgICogQHJldHVybnMge1Byb21pc2V9IC0gUmV0dXJucyB7QGxpbmsgQnVmZmVyfS5cclxuICAgKi9cclxuXHJcbiAgYXN5bmMgZ2V0QmxvY2tGaWx0ZXIoaGFzaCkge1xyXG4gICAgaWYgKCF0aGlzLmZpbHRlcmluZGV4KVxyXG4gICAgICByZXR1cm4gbnVsbDtcclxuXHJcbiAgICBpZiAodHlwZW9mIGhhc2ggPT09ICdudW1iZXInKVxyXG4gICAgICBoYXNoID0gYXdhaXQgdGhpcy5jaGFpbi5nZXRIYXNoKGhhc2gpO1xyXG5cclxuICAgIGlmICghaGFzaClcclxuICAgICAgcmV0dXJuIG51bGw7XHJcblxyXG4gICAgcmV0dXJuIHRoaXMuZmlsdGVyaW5kZXguZ2V0RmlsdGVyKGhhc2gpO1xyXG4gIH1cclxufVxyXG5cclxuLypcclxuICogRXhwb3NlXHJcbiAqL1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBGdWxsTm9kZTtcclxuIl19
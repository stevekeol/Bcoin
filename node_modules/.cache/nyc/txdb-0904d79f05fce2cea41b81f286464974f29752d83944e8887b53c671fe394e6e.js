/*!
 * txdb.js - persistent transaction pool
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */'use strict';function cov_2dlk6kh4um(){var path="E:\\Projects\\Test\\bcoin\\lib\\wallet\\txdb.js";var hash="93a6b3f1f1795e1886da9733d949badfbdaafda2";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\Projects\\Test\\bcoin\\lib\\wallet\\txdb.js",statementMap:{"0":{start:{line:10,column:15},end:{line:10,column:31}},"1":{start:{line:11,column:12},end:{line:11,column:28}},"2":{start:{line:12,column:20},end:{line:12,column:41}},"3":{start:{line:13,column:13},end:{line:13,column:37}},"4":{start:{line:14,column:15},end:{line:14,column:39}},"5":{start:{line:15,column:17},end:{line:15,column:45}},"6":{start:{line:16,column:13},end:{line:16,column:42}},"7":{start:{line:17,column:17},end:{line:17,column:50}},"8":{start:{line:18,column:16},end:{line:18,column:36}},"9":{start:{line:19,column:15},end:{line:19,column:39}},"10":{start:{line:20,column:18},end:{line:20,column:50}},"11":{start:{line:21,column:15},end:{line:21,column:44}},"12":{start:{line:22,column:19},end:{line:22,column:26}},"13":{start:{line:23,column:24},end:{line:23,column:43}},"14":{start:{line:38,column:4},end:{line:38,column:19}},"15":{start:{line:39,column:4},end:{line:39,column:21}},"16":{start:{line:40,column:4},end:{line:40,column:29}},"17":{start:{line:42,column:4},end:{line:42,column:24}},"18":{start:{line:43,column:4},end:{line:43,column:23}},"19":{start:{line:44,column:4},end:{line:44,column:23}},"20":{start:{line:45,column:4},end:{line:45,column:34}},"21":{start:{line:54,column:19},end:{line:54,column:51}},"22":{start:{line:56,column:4},end:{line:56,column:26}},"23":{start:{line:57,column:4},end:{line:57,column:41}},"24":{start:{line:58,column:4},end:{line:58,column:25}},"25":{start:{line:70,column:4},end:{line:70,column:53}},"26":{start:{line:71,column:4},end:{line:71,column:43}},"27":{start:{line:81,column:17},end:{line:81,column:33}},"28":{start:{line:83,column:4},end:{line:84,column:18}},"29":{start:{line:84,column:6},end:{line:84,column:18}},"30":{start:{line:86,column:4},end:{line:86,column:44}},"31":{start:{line:96,column:17},end:{line:96,column:33}},"32":{start:{line:98,column:4},end:{line:99,column:19}},"33":{start:{line:99,column:6},end:{line:99,column:19}},"34":{start:{line:101,column:4},end:{line:101,column:44}},"35":{start:{line:111,column:19},end:{line:111,column:25}},"36":{start:{line:113,column:4},end:{line:113,column:66}},"37":{start:{line:114,column:4},end:{line:114,column:70}},"38":{start:{line:116,column:4},end:{line:116,column:57}},"39":{start:{line:126,column:19},end:{line:126,column:25}},"40":{start:{line:128,column:4},end:{line:128,column:50}},"41":{start:{line:129,column:4},end:{line:129,column:64}},"42":{start:{line:131,column:4},end:{line:131,column:60}},"43":{start:{line:142,column:20},end:{line:142,column:44}},"44":{start:{line:143,column:20},end:{line:143,column:46}},"45":{start:{line:144,column:4},end:{line:144,column:73}},"46":{start:{line:145,column:4},end:{line:145,column:77}},"47":{start:{line:155,column:20},end:{line:155,column:44}},"48":{start:{line:156,column:20},end:{line:156,column:46}},"49":{start:{line:157,column:4},end:{line:157,column:56}},"50":{start:{line:158,column:4},end:{line:158,column:56}},"51":{start:{line:168,column:20},end:{line:168,column:44}},"52":{start:{line:169,column:20},end:{line:169,column:46}},"53":{start:{line:170,column:4},end:{line:170,column:73}},"54":{start:{line:171,column:4},end:{line:171,column:63}},"55":{start:{line:181,column:20},end:{line:181,column:44}},"56":{start:{line:182,column:4},end:{line:182,column:56}},"57":{start:{line:183,column:4},end:{line:183,column:66}},"58":{start:{line:192,column:20},end:{line:192,column:49}},"59":{start:{line:193,column:4},end:{line:193,column:27}},"60":{start:{line:194,column:4},end:{line:194,column:46}},"61":{start:{line:195,column:4},end:{line:195,column:19}},"62":{start:{line:205,column:20},end:{line:205,column:54}},"63":{start:{line:206,column:4},end:{line:206,column:27}},"64":{start:{line:207,column:4},end:{line:207,column:50}},"65":{start:{line:208,column:4},end:{line:208,column:19}},"66":{start:{line:219,column:17},end:{line:219,column:68}},"67":{start:{line:221,column:4},end:{line:222,column:18}},"68":{start:{line:222,column:6},end:{line:222,column:18}},"69":{start:{line:224,column:4},end:{line:224,column:34}},"70":{start:{line:235,column:4},end:{line:235,column:57}},"71":{start:{line:245,column:4},end:{line:245,column:60}},"72":{start:{line:255,column:4},end:{line:255,column:63}},"73":{start:{line:265,column:4},end:{line:265,column:55}},"74":{start:{line:275,column:4},end:{line:275,column:58}},"75":{start:{line:286,column:4},end:{line:286,column:68}},"76":{start:{line:297,column:4},end:{line:297,column:71}},"77":{start:{line:306,column:4},end:{line:310,column:7}},"78":{start:{line:309,column:20},end:{line:309,column:43}},"79":{start:{line:320,column:17},end:{line:320,column:63}},"80":{start:{line:322,column:4},end:{line:323,column:18}},"81":{start:{line:323,column:6},end:{line:323,column:18}},"82":{start:{line:325,column:4},end:{line:325,column:37}},"83":{start:{line:336,column:16},end:{line:336,column:45}},"84":{start:{line:337,column:17},end:{line:337,column:43}},"85":{start:{line:339,column:4},end:{line:344,column:5}},"86":{start:{line:340,column:18},end:{line:340,column:45}},"87":{start:{line:341,column:6},end:{line:341,column:20}},"88":{start:{line:342,column:6},end:{line:342,column:30}},"89":{start:{line:343,column:6},end:{line:343,column:13}},"90":{start:{line:346,column:16},end:{line:346,column:52}},"91":{start:{line:347,column:4},end:{line:347,column:22}},"92":{start:{line:349,column:17},end:{line:349,column:43}},"93":{start:{line:350,column:4},end:{line:350,column:42}},"94":{start:{line:351,column:4},end:{line:351,column:32}},"95":{start:{line:353,column:4},end:{line:353,column:20}},"96":{start:{line:364,column:16},end:{line:364,column:39}},"97":{start:{line:365,column:17},end:{line:365,column:43}},"98":{start:{line:367,column:4},end:{line:368,column:13}},"99":{start:{line:368,column:6},end:{line:368,column:13}},"100":{start:{line:370,column:17},end:{line:370,column:44}},"101":{start:{line:372,column:4},end:{line:372,column:21}},"102":{start:{line:373,column:4},end:{line:373,column:41}},"103":{start:{line:375,column:4},end:{line:378,column:5}},"104":{start:{line:376,column:6},end:{line:376,column:17}},"105":{start:{line:377,column:6},end:{line:377,column:13}},"106":{start:{line:380,column:16},end:{line:380,column:34}},"107":{start:{line:381,column:4},end:{line:381,column:42}},"108":{start:{line:383,column:4},end:{line:383,column:20}},"109":{start:{line:394,column:18},end:{line:394,column:45}},"110":{start:{line:396,column:4},end:{line:397,column:13}},"111":{start:{line:397,column:6},end:{line:397,column:13}},"112":{start:{line:399,column:4},end:{line:400,column:13}},"113":{start:{line:400,column:6},end:{line:400,column:13}},"114":{start:{line:402,column:4},end:{line:405,column:5}},"115":{start:{line:403,column:6},end:{line:403,column:37}},"116":{start:{line:404,column:6},end:{line:404,column:13}},"117":{start:{line:407,column:4},end:{line:407,column:50}},"118":{start:{line:418,column:17},end:{line:418,column:26}},"119":{start:{line:419,column:21},end:{line:419,column:43}},"120":{start:{line:421,column:4},end:{line:421,column:60}},"121":{start:{line:423,column:4},end:{line:435,column:5}},"122":{start:{line:425,column:6},end:{line:426,column:20}},"123":{start:{line:426,column:8},end:{line:426,column:20}},"124":{start:{line:430,column:6},end:{line:431,column:20}},"125":{start:{line:431,column:8},end:{line:431,column:20}},"126":{start:{line:434,column:6},end:{line:434,column:43}},"127":{start:{line:437,column:16},end:{line:437,column:42}},"128":{start:{line:439,column:4},end:{line:447,column:5}},"129":{start:{line:442,column:6},end:{line:443,column:20}},"130":{start:{line:443,column:8},end:{line:443,column:20}},"131":{start:{line:446,column:6},end:{line:446,column:44}},"132":{start:{line:450,column:4},end:{line:450,column:35}},"133":{start:{line:462,column:14},end:{line:462,column:33}},"134":{start:{line:463,column:23},end:{line:463,column:26}},"135":{start:{line:464,column:19},end:{line:464,column:44}},"136":{start:{line:465,column:20},end:{line:465,column:43}},"137":{start:{line:466,column:18},end:{line:466,column:36}},"138":{start:{line:468,column:14},end:{line:468,column:19}},"139":{start:{line:470,column:4},end:{line:528,column:5}},"140":{start:{line:472,column:6},end:{line:527,column:7}},"141":{start:{line:472,column:19},end:{line:472,column:20}},"142":{start:{line:473,column:22},end:{line:473,column:34}},"143":{start:{line:474,column:30},end:{line:474,column:43}},"144":{start:{line:475,column:23},end:{line:475,column:56}},"145":{start:{line:477,column:8},end:{line:483,column:9}},"146":{start:{line:480,column:10},end:{line:481,column:44}},"147":{start:{line:481,column:12},end:{line:481,column:44}},"148":{start:{line:482,column:10},end:{line:482,column:19}},"149":{start:{line:485,column:21},end:{line:485,column:32}},"150":{start:{line:486,column:21},end:{line:486,column:45}},"151":{start:{line:487,column:8},end:{line:487,column:21}},"152":{start:{line:491,column:8},end:{line:491,column:40}},"153":{start:{line:495,column:8},end:{line:495,column:43}},"154":{start:{line:501,column:8},end:{line:501,column:26}},"155":{start:{line:502,column:8},end:{line:502,column:29}},"156":{start:{line:503,column:8},end:{line:503,column:45}},"157":{start:{line:505,column:8},end:{line:524,column:9}},"158":{start:{line:514,column:10},end:{line:514,column:30}},"159":{start:{line:515,column:10},end:{line:515,column:49}},"160":{start:{line:522,column:10},end:{line:522,column:45}},"161":{start:{line:523,column:10},end:{line:523,column:51}},"162":{start:{line:526,column:8},end:{line:526,column:19}},"163":{start:{line:531,column:4},end:{line:551,column:5}},"164":{start:{line:531,column:17},end:{line:531,column:18}},"165":{start:{line:532,column:21},end:{line:532,column:34}},"166":{start:{line:533,column:19},end:{line:533,column:45}},"167":{start:{line:535,column:6},end:{line:536,column:17}},"168":{start:{line:536,column:8},end:{line:536,column:17}},"169":{start:{line:538,column:6},end:{line:538,column:33}},"170":{start:{line:540,column:21},end:{line:540,column:49}},"171":{start:{line:541,column:6},end:{line:541,column:23}},"172":{start:{line:543,column:6},end:{line:543,column:24}},"173":{start:{line:544,column:6},end:{line:544,column:26}},"174":{start:{line:545,column:6},end:{line:545,column:44}},"175":{start:{line:547,column:6},end:{line:548,column:44}},"176":{start:{line:548,column:8},end:{line:548,column:44}},"177":{start:{line:550,column:6},end:{line:550,column:45}},"178":{start:{line:555,column:4},end:{line:556,column:18}},"179":{start:{line:556,column:6},end:{line:556,column:18}},"180":{start:{line:559,column:4},end:{line:559,column:46}},"181":{start:{line:560,column:4},end:{line:560,column:50}},"182":{start:{line:562,column:4},end:{line:565,column:49}},"183":{start:{line:563,column:6},end:{line:563,column:41}},"184":{start:{line:565,column:6},end:{line:565,column:49}},"185":{start:{line:570,column:4},end:{line:580,column:5}},"186":{start:{line:571,column:6},end:{line:571,column:54}},"187":{start:{line:573,column:6},end:{line:573,column:47}},"188":{start:{line:574,column:6},end:{line:574,column:58}},"189":{start:{line:576,column:6},end:{line:579,column:57}},"190":{start:{line:577,column:8},end:{line:577,column:49}},"191":{start:{line:579,column:8},end:{line:579,column:57}},"192":{start:{line:583,column:4},end:{line:588,column:5}},"193":{start:{line:584,column:6},end:{line:584,column:40}},"194":{start:{line:585,column:6},end:{line:585,column:47}},"195":{start:{line:587,column:6},end:{line:587,column:35}},"196":{start:{line:591,column:20},end:{line:591,column:54}},"197":{start:{line:593,column:4},end:{line:593,column:20}},"198":{start:{line:597,column:4},end:{line:597,column:22}},"199":{start:{line:603,column:4},end:{line:603,column:33}},"200":{start:{line:604,column:4},end:{line:604,column:34}},"201":{start:{line:606,column:4},end:{line:606,column:19}},"202":{start:{line:618,column:14},end:{line:618,column:33}},"203":{start:{line:619,column:23},end:{line:619,column:26}},"204":{start:{line:620,column:19},end:{line:620,column:31}},"205":{start:{line:621,column:20},end:{line:621,column:43}},"206":{start:{line:622,column:18},end:{line:622,column:36}},"207":{start:{line:623,column:14},end:{line:623,column:19}},"208":{start:{line:625,column:4},end:{line:625,column:24}},"209":{start:{line:627,column:4},end:{line:683,column:5}},"210":{start:{line:628,column:22},end:{line:628,column:52}},"211":{start:{line:633,column:6},end:{line:682,column:7}},"212":{start:{line:633,column:19},end:{line:633,column:20}},"213":{start:{line:634,column:22},end:{line:634,column:34}},"214":{start:{line:635,column:30},end:{line:635,column:43}},"215":{start:{line:637,column:23},end:{line:637,column:28}},"216":{start:{line:641,column:8},end:{line:658,column:9}},"217":{start:{line:642,column:10},end:{line:642,column:43}},"218":{start:{line:644,column:25},end:{line:644,column:58}},"219":{start:{line:646,column:10},end:{line:647,column:21}},"220":{start:{line:647,column:12},end:{line:647,column:21}},"221":{start:{line:654,column:10},end:{line:654,column:45}},"222":{start:{line:656,column:10},end:{line:656,column:30}},"223":{start:{line:657,column:10},end:{line:657,column:26}},"224":{start:{line:660,column:23},end:{line:660,column:33}},"225":{start:{line:661,column:21},end:{line:661,column:32}},"226":{start:{line:663,column:8},end:{line:663,column:35}},"227":{start:{line:665,column:21},end:{line:665,column:45}},"228":{start:{line:666,column:8},end:{line:666,column:21}},"229":{start:{line:667,column:8},end:{line:667,column:19}},"230":{start:{line:669,column:8},end:{line:669,column:40}},"231":{start:{line:671,column:8},end:{line:674,column:9}},"232":{start:{line:672,column:10},end:{line:672,column:31}},"233":{start:{line:673,column:10},end:{line:673,column:47}},"234":{start:{line:679,column:8},end:{line:679,column:43}},"235":{start:{line:681,column:8},end:{line:681,column:49}},"236":{start:{line:686,column:4},end:{line:725,column:5}},"237":{start:{line:686,column:17},end:{line:686,column:18}},"238":{start:{line:687,column:21},end:{line:687,column:34}},"239":{start:{line:688,column:19},end:{line:688,column:45}},"240":{start:{line:690,column:6},end:{line:691,column:17}},"241":{start:{line:691,column:8},end:{line:691,column:17}},"242":{start:{line:693,column:6},end:{line:693,column:33}},"243":{start:{line:695,column:19},end:{line:695,column:48}},"244":{start:{line:697,column:6},end:{line:710,column:7}},"245":{start:{line:701,column:8},end:{line:701,column:46}},"246":{start:{line:705,column:8},end:{line:705,column:25}},"247":{start:{line:708,column:8},end:{line:708,column:28}},"248":{start:{line:709,column:8},end:{line:709,column:51}},"249":{start:{line:716,column:6},end:{line:717,column:53}},"250":{start:{line:717,column:8},end:{line:717,column:53}},"251":{start:{line:721,column:6},end:{line:721,column:42}},"252":{start:{line:722,column:6},end:{line:722,column:34}},"253":{start:{line:724,column:6},end:{line:724,column:45}},"254":{start:{line:730,column:4},end:{line:730,column:46}},"255":{start:{line:731,column:4},end:{line:731,column:33}},"256":{start:{line:732,column:4},end:{line:732,column:47}},"257":{start:{line:735,column:4},end:{line:739,column:5}},"258":{start:{line:736,column:6},end:{line:736,column:54}},"259":{start:{line:737,column:6},end:{line:737,column:41}},"260":{start:{line:738,column:6},end:{line:738,column:55}},"261":{start:{line:741,column:4},end:{line:741,column:36}},"262":{start:{line:742,column:4},end:{line:742,column:38}},"263":{start:{line:743,column:4},end:{line:743,column:45}},"264":{start:{line:746,column:20},end:{line:746,column:54}},"265":{start:{line:748,column:4},end:{line:748,column:20}},"266":{start:{line:750,column:4},end:{line:750,column:22}},"267":{start:{line:752,column:4},end:{line:752,column:40}},"268":{start:{line:753,column:4},end:{line:753,column:34}},"269":{start:{line:755,column:4},end:{line:755,column:19}},"270":{start:{line:766,column:16},end:{line:766,column:38}},"271":{start:{line:768,column:4},end:{line:769,column:18}},"272":{start:{line:769,column:6},end:{line:769,column:18}},"273":{start:{line:771,column:4},end:{line:771,column:37}},"274":{start:{line:783,column:14},end:{line:783,column:33}},"275":{start:{line:784,column:23},end:{line:784,column:26}},"276":{start:{line:785,column:19},end:{line:785,column:44}},"277":{start:{line:786,column:20},end:{line:786,column:43}},"278":{start:{line:787,column:18},end:{line:787,column:36}},"279":{start:{line:789,column:4},end:{line:825,column:5}},"280":{start:{line:793,column:22},end:{line:793,column:52}},"281":{start:{line:795,column:6},end:{line:824,column:7}},"282":{start:{line:795,column:19},end:{line:795,column:20}},"283":{start:{line:796,column:23},end:{line:796,column:33}},"284":{start:{line:798,column:8},end:{line:802,column:9}},"285":{start:{line:799,column:10},end:{line:800,column:45}},"286":{start:{line:800,column:12},end:{line:800,column:45}},"287":{start:{line:801,column:10},end:{line:801,column:19}},"288":{start:{line:804,column:21},end:{line:804,column:32}},"289":{start:{line:805,column:21},end:{line:805,column:45}},"290":{start:{line:806,column:8},end:{line:806,column:21}},"291":{start:{line:808,column:8},end:{line:808,column:40}},"292":{start:{line:813,column:8},end:{line:813,column:27}},"293":{start:{line:814,column:8},end:{line:814,column:28}},"294":{start:{line:815,column:8},end:{line:815,column:44}},"295":{start:{line:817,column:8},end:{line:818,column:44}},"296":{start:{line:818,column:10},end:{line:818,column:44}},"297":{start:{line:820,column:8},end:{line:820,column:37}},"298":{start:{line:822,column:8},end:{line:822,column:29}},"299":{start:{line:823,column:8},end:{line:823,column:47}},"300":{start:{line:829,column:4},end:{line:848,column:5}},"301":{start:{line:829,column:17},end:{line:829,column:18}},"302":{start:{line:830,column:21},end:{line:830,column:34}},"303":{start:{line:831,column:19},end:{line:831,column:45}},"304":{start:{line:833,column:6},end:{line:834,column:17}},"305":{start:{line:834,column:8},end:{line:834,column:17}},"306":{start:{line:836,column:6},end:{line:836,column:33}},"307":{start:{line:838,column:21},end:{line:838,column:49}},"308":{start:{line:840,column:6},end:{line:840,column:25}},"309":{start:{line:841,column:6},end:{line:841,column:27}},"310":{start:{line:842,column:6},end:{line:842,column:45}},"311":{start:{line:844,column:6},end:{line:845,column:45}},"312":{start:{line:845,column:8},end:{line:845,column:45}},"313":{start:{line:847,column:6},end:{line:847,column:47}},"314":{start:{line:852,column:4},end:{line:852,column:33}},"315":{start:{line:853,column:4},end:{line:853,column:44}},"316":{start:{line:855,column:4},end:{line:858,column:43}},"317":{start:{line:856,column:6},end:{line:856,column:35}},"318":{start:{line:858,column:6},end:{line:858,column:43}},"319":{start:{line:861,column:4},end:{line:871,column:5}},"320":{start:{line:862,column:6},end:{line:862,column:54}},"321":{start:{line:864,column:6},end:{line:864,column:41}},"322":{start:{line:865,column:6},end:{line:865,column:52}},"323":{start:{line:867,column:6},end:{line:870,column:51}},"324":{start:{line:868,column:8},end:{line:868,column:43}},"325":{start:{line:870,column:8},end:{line:870,column:51}},"326":{start:{line:874,column:4},end:{line:879,column:5}},"327":{start:{line:875,column:6},end:{line:875,column:43}},"328":{start:{line:876,column:6},end:{line:876,column:46}},"329":{start:{line:878,column:6},end:{line:878,column:38}},"330":{start:{line:884,column:20},end:{line:884,column:54}},"331":{start:{line:886,column:4},end:{line:886,column:20}},"332":{start:{line:888,column:4},end:{line:888,column:40}},"333":{start:{line:889,column:4},end:{line:889,column:34}},"334":{start:{line:891,column:4},end:{line:891,column:19}},"335":{start:{line:903,column:23},end:{line:903,column:26}},"336":{start:{line:905,column:4},end:{line:906,column:18}},"337":{start:{line:906,column:6},end:{line:906,column:18}},"338":{start:{line:908,column:4},end:{line:920,column:5}},"339":{start:{line:908,column:17},end:{line:908,column:18}},"340":{start:{line:909,column:20},end:{line:909,column:48}},"341":{start:{line:911,column:6},end:{line:912,column:17}},"342":{start:{line:912,column:8},end:{line:912,column:17}},"343":{start:{line:915,column:18},end:{line:915,column:46}},"344":{start:{line:917,column:6},end:{line:917,column:18}},"345":{start:{line:919,column:6},end:{line:919,column:38}},"346":{start:{line:923,column:4},end:{line:923,column:43}},"347":{start:{line:933,column:18},end:{line:933,column:45}},"348":{start:{line:935,column:4},end:{line:936,column:15}},"349":{start:{line:936,column:6},end:{line:936,column:15}},"350":{start:{line:938,column:4},end:{line:938,column:60}},"351":{start:{line:939,column:19},end:{line:939,column:34}},"352":{start:{line:941,column:4},end:{line:944,column:5}},"353":{start:{line:941,column:17},end:{line:941,column:34}},"354":{start:{line:942,column:19},end:{line:942,column:28}},"355":{start:{line:943,column:6},end:{line:943,column:33}},"356":{start:{line:946,column:4},end:{line:946,column:25}},"357":{start:{line:957,column:16},end:{line:957,column:38}},"358":{start:{line:959,column:4},end:{line:960,column:18}},"359":{start:{line:960,column:6},end:{line:960,column:18}},"360":{start:{line:962,column:4},end:{line:963,column:18}},"361":{start:{line:963,column:6},end:{line:963,column:18}},"362":{start:{line:965,column:4},end:{line:965,column:48}},"363":{start:{line:975,column:14},end:{line:975,column:33}},"364":{start:{line:976,column:31},end:{line:976,column:34}},"365":{start:{line:977,column:20},end:{line:977,column:43}},"366":{start:{line:978,column:18},end:{line:978,column:36}},"367":{start:{line:980,column:4},end:{line:980,column:18}},"368":{start:{line:982,column:4},end:{line:982,column:21}},"369":{start:{line:984,column:4},end:{line:1014,column:5}},"370":{start:{line:988,column:22},end:{line:988,column:52}},"371":{start:{line:990,column:6},end:{line:1013,column:7}},"372":{start:{line:990,column:19},end:{line:990,column:20}},"373":{start:{line:991,column:23},end:{line:991,column:33}},"374":{start:{line:993,column:8},end:{line:996,column:9}},"375":{start:{line:994,column:10},end:{line:994,column:42}},"376":{start:{line:995,column:10},end:{line:995,column:19}},"377":{start:{line:998,column:21},end:{line:998,column:32}},"378":{start:{line:1000,column:8},end:{line:1000,column:35}},"379":{start:{line:1002,column:21},end:{line:1002,column:45}},"380":{start:{line:1003,column:8},end:{line:1003,column:21}},"381":{start:{line:1005,column:8},end:{line:1005,column:40}},"382":{start:{line:1007,column:8},end:{line:1007,column:42}},"383":{start:{line:1011,column:8},end:{line:1011,column:28}},"384":{start:{line:1012,column:8},end:{line:1012,column:47}},"385":{start:{line:1018,column:4},end:{line:1045,column:5}},"386":{start:{line:1018,column:17},end:{line:1018,column:18}},"387":{start:{line:1019,column:21},end:{line:1019,column:34}},"388":{start:{line:1020,column:19},end:{line:1020,column:45}},"389":{start:{line:1022,column:6},end:{line:1023,column:17}},"390":{start:{line:1023,column:8},end:{line:1023,column:17}},"391":{start:{line:1025,column:21},end:{line:1025,column:50}},"392":{start:{line:1028,column:6},end:{line:1031,column:7}},"393":{start:{line:1029,column:8},end:{line:1029,column:53}},"394":{start:{line:1030,column:8},end:{line:1030,column:17}},"395":{start:{line:1033,column:6},end:{line:1034,column:53}},"396":{start:{line:1034,column:8},end:{line:1034,column:53}},"397":{start:{line:1036,column:6},end:{line:1036,column:33}},"398":{start:{line:1040,column:6},end:{line:1040,column:30}},"399":{start:{line:1042,column:6},end:{line:1042,column:43}},"400":{start:{line:1044,column:6},end:{line:1044,column:45}},"401":{start:{line:1047,column:4},end:{line:1047,column:33}},"402":{start:{line:1048,column:4},end:{line:1048,column:41}},"403":{start:{line:1049,column:4},end:{line:1049,column:49}},"404":{start:{line:1054,column:4},end:{line:1054,column:46}},"405":{start:{line:1055,column:4},end:{line:1055,column:39}},"406":{start:{line:1056,column:4},end:{line:1056,column:41}},"407":{start:{line:1059,column:4},end:{line:1063,column:5}},"408":{start:{line:1060,column:6},end:{line:1060,column:54}},"409":{start:{line:1061,column:6},end:{line:1061,column:47}},"410":{start:{line:1062,column:6},end:{line:1062,column:49}},"411":{start:{line:1067,column:20},end:{line:1067,column:54}},"412":{start:{line:1069,column:4},end:{line:1069,column:20}},"413":{start:{line:1071,column:4},end:{line:1071,column:42}},"414":{start:{line:1072,column:4},end:{line:1072,column:34}},"415":{start:{line:1074,column:4},end:{line:1074,column:19}},"416":{start:{line:1090,column:15},end:{line:1090,column:21}},"417":{start:{line:1092,column:4},end:{line:1092,column:67}},"418":{start:{line:1094,column:20},end:{line:1094,column:51}},"419":{start:{line:1096,column:4},end:{line:1097,column:18}},"420":{start:{line:1097,column:6},end:{line:1097,column:18}},"421":{start:{line:1099,column:4},end:{line:1099,column:60}},"422":{start:{line:1102,column:4},end:{line:1102,column:39}},"423":{start:{line:1104,column:4},end:{line:1104,column:19}},"424":{start:{line:1116,column:4},end:{line:1117,column:18}},"425":{start:{line:1117,column:6},end:{line:1117,column:18}},"426":{start:{line:1119,column:17},end:{line:1119,column:26}},"427":{start:{line:1120,column:19},end:{line:1120,column:21}},"428":{start:{line:1123,column:4},end:{line:1143,column:5}},"429":{start:{line:1124,column:28},end:{line:1124,column:35}},"430":{start:{line:1127,column:20},end:{line:1127,column:52}},"431":{start:{line:1129,column:6},end:{line:1130,column:17}},"432":{start:{line:1130,column:8},end:{line:1130,column:17}},"433":{start:{line:1133,column:6},end:{line:1134,column:17}},"434":{start:{line:1134,column:8},end:{line:1134,column:17}},"435":{start:{line:1136,column:22},end:{line:1136,column:50}},"436":{start:{line:1137,column:6},end:{line:1137,column:22}},"437":{start:{line:1139,column:6},end:{line:1140,column:21}},"438":{start:{line:1140,column:8},end:{line:1140,column:21}},"439":{start:{line:1142,column:6},end:{line:1142,column:27}},"440":{start:{line:1148,column:4},end:{line:1151,column:5}},"441":{start:{line:1150,column:6},end:{line:1150,column:41}},"442":{start:{line:1153,column:4},end:{line:1153,column:16}},"443":{start:{line:1162,column:4},end:{line:1163,column:13}},"444":{start:{line:1163,column:6},end:{line:1163,column:13}},"445":{start:{line:1165,column:4},end:{line:1166,column:35}},"446":{start:{line:1166,column:6},end:{line:1166,column:35}},"447":{start:{line:1175,column:4},end:{line:1176,column:13}},"448":{start:{line:1176,column:6},end:{line:1176,column:13}},"449":{start:{line:1178,column:4},end:{line:1179,column:37}},"450":{start:{line:1179,column:6},end:{line:1179,column:37}},"451":{start:{line:1188,column:16},end:{line:1188,column:28}},"452":{start:{line:1189,column:4},end:{line:1189,column:25}},"453":{start:{line:1198,column:16},end:{line:1198,column:28}},"454":{start:{line:1199,column:4},end:{line:1199,column:35}},"455":{start:{line:1207,column:4},end:{line:1208,column:28}},"456":{start:{line:1208,column:6},end:{line:1208,column:28}},"457":{start:{line:1217,column:16},end:{line:1217,column:28}},"458":{start:{line:1218,column:4},end:{line:1218,column:32}},"459":{start:{line:1229,column:16},end:{line:1229,column:18}},"460":{start:{line:1231,column:4},end:{line:1234,column:5}},"461":{start:{line:1232,column:6},end:{line:1233,column:23}},"462":{start:{line:1233,column:8},end:{line:1233,column:23}},"463":{start:{line:1236,column:4},end:{line:1236,column:15}},"464":{start:{line:1245,column:22},end:{line:1245,column:24}},"465":{start:{line:1247,column:4},end:{line:1248,column:44}},"466":{start:{line:1248,column:6},end:{line:1248,column:44}},"467":{start:{line:1250,column:4},end:{line:1250,column:21}},"468":{start:{line:1260,column:4},end:{line:1260,column:37}},"469":{start:{line:1261,column:4},end:{line:1268,column:7}},"470":{start:{line:1265,column:25},end:{line:1265,column:45}},"471":{start:{line:1266,column:8},end:{line:1266,column:20}},"472":{start:{line:1278,column:4},end:{line:1278,column:37}},"473":{start:{line:1280,column:4},end:{line:1281,column:48}},"474":{start:{line:1281,column:6},end:{line:1281,column:48}},"475":{start:{line:1283,column:4},end:{line:1287,column:7}},"476":{start:{line:1286,column:20},end:{line:1286,column:43}},"477":{start:{line:1297,column:4},end:{line:1297,column:37}},"478":{start:{line:1298,column:4},end:{line:1305,column:7}},"479":{start:{line:1302,column:25},end:{line:1302,column:45}},"480":{start:{line:1303,column:8},end:{line:1303,column:20}},"481":{start:{line:1315,column:4},end:{line:1315,column:37}},"482":{start:{line:1317,column:4},end:{line:1318,column:48}},"483":{start:{line:1318,column:6},end:{line:1318,column:48}},"484":{start:{line:1320,column:4},end:{line:1324,column:7}},"485":{start:{line:1323,column:20},end:{line:1323,column:43}},"486":{start:{line:1334,column:4},end:{line:1334,column:50}},"487":{start:{line:1344,column:4},end:{line:1344,column:37}},"488":{start:{line:1345,column:4},end:{line:1352,column:7}},"489":{start:{line:1349,column:32},end:{line:1349,column:52}},"490":{start:{line:1350,column:8},end:{line:1350,column:41}},"491":{start:{line:1362,column:4},end:{line:1362,column:37}},"492":{start:{line:1364,column:4},end:{line:1365,column:44}},"493":{start:{line:1365,column:6},end:{line:1365,column:44}},"494":{start:{line:1367,column:4},end:{line:1374,column:7}},"495":{start:{line:1371,column:30},end:{line:1371,column:50}},"496":{start:{line:1372,column:8},end:{line:1372,column:41}},"497":{start:{line:1389,column:4},end:{line:1389,column:37}},"498":{start:{line:1391,column:18},end:{line:1391,column:36}},"499":{start:{line:1392,column:16},end:{line:1392,column:41}},"500":{start:{line:1394,column:4},end:{line:1403,column:7}},"501":{start:{line:1400,column:26},end:{line:1400,column:46}},"502":{start:{line:1401,column:8},end:{line:1401,column:20}},"503":{start:{line:1418,column:4},end:{line:1418,column:37}},"504":{start:{line:1420,column:4},end:{line:1421,column:61}},"505":{start:{line:1421,column:6},end:{line:1421,column:61}},"506":{start:{line:1423,column:18},end:{line:1423,column:36}},"507":{start:{line:1424,column:16},end:{line:1424,column:41}},"508":{start:{line:1426,column:4},end:{line:1435,column:7}},"509":{start:{line:1432,column:25},end:{line:1432,column:45}},"510":{start:{line:1433,column:8},end:{line:1433,column:20}},"511":{start:{line:1445,column:4},end:{line:1445,column:69}},"512":{start:{line:1460,column:4},end:{line:1460,column:37}},"513":{start:{line:1462,column:18},end:{line:1462,column:36}},"514":{start:{line:1463,column:16},end:{line:1463,column:41}},"515":{start:{line:1465,column:4},end:{line:1474,column:7}},"516":{start:{line:1471,column:26},end:{line:1471,column:46}},"517":{start:{line:1472,column:8},end:{line:1472,column:20}},"518":{start:{line:1489,column:4},end:{line:1489,column:37}},"519":{start:{line:1491,column:4},end:{line:1492,column:55}},"520":{start:{line:1492,column:6},end:{line:1492,column:55}},"521":{start:{line:1494,column:18},end:{line:1494,column:36}},"522":{start:{line:1495,column:16},end:{line:1495,column:41}},"523":{start:{line:1497,column:4},end:{line:1506,column:7}},"524":{start:{line:1503,column:25},end:{line:1503,column:45}},"525":{start:{line:1504,column:8},end:{line:1504,column:20}},"526":{start:{line:1521,column:19},end:{line:1521,column:59}},"527":{start:{line:1522,column:16},end:{line:1522,column:18}},"528":{start:{line:1524,column:4},end:{line:1528,column:5}},"529":{start:{line:1525,column:17},end:{line:1525,column:39}},"530":{start:{line:1526,column:6},end:{line:1526,column:17}},"531":{start:{line:1527,column:6},end:{line:1527,column:19}},"532":{start:{line:1530,column:4},end:{line:1530,column:15}},"533":{start:{line:1541,column:4},end:{line:1546,column:7}},"534":{start:{line:1556,column:4},end:{line:1556,column:37}},"535":{start:{line:1559,column:4},end:{line:1560,column:42}},"536":{start:{line:1560,column:6},end:{line:1560,column:42}},"537":{start:{line:1563,column:4},end:{line:1567,column:7}},"538":{start:{line:1566,column:21},end:{line:1566,column:43}},"539":{start:{line:1577,column:19},end:{line:1577,column:52}},"540":{start:{line:1578,column:16},end:{line:1578,column:18}},"541":{start:{line:1580,column:4},end:{line:1584,column:5}},"542":{start:{line:1581,column:17},end:{line:1581,column:39}},"543":{start:{line:1582,column:6},end:{line:1582,column:17}},"544":{start:{line:1583,column:6},end:{line:1583,column:19}},"545":{start:{line:1586,column:4},end:{line:1586,column:15}},"546":{start:{line:1596,column:19},end:{line:1596,column:52}},"547":{start:{line:1597,column:16},end:{line:1597,column:18}},"548":{start:{line:1599,column:4},end:{line:1603,column:5}},"549":{start:{line:1600,column:17},end:{line:1600,column:39}},"550":{start:{line:1601,column:6},end:{line:1601,column:17}},"551":{start:{line:1602,column:6},end:{line:1602,column:19}},"552":{start:{line:1605,column:4},end:{line:1605,column:15}},"553":{start:{line:1615,column:4},end:{line:1615,column:37}},"554":{start:{line:1618,column:4},end:{line:1619,column:42}},"555":{start:{line:1619,column:6},end:{line:1619,column:42}},"556":{start:{line:1622,column:4},end:{line:1632,column:7}},"557":{start:{line:1626,column:30},end:{line:1626,column:50}},"558":{start:{line:1627,column:23},end:{line:1627,column:44}},"559":{start:{line:1628,column:8},end:{line:1628,column:32}},"560":{start:{line:1629,column:8},end:{line:1629,column:34}},"561":{start:{line:1630,column:8},end:{line:1630,column:22}},"562":{start:{line:1642,column:22},end:{line:1642,column:51}},"563":{start:{line:1643,column:20},end:{line:1643,column:22}},"564":{start:{line:1645,column:4},end:{line:1650,column:5}},"565":{start:{line:1646,column:21},end:{line:1646,column:54}},"566":{start:{line:1647,column:6},end:{line:1648,column:17}},"567":{start:{line:1648,column:8},end:{line:1648,column:17}},"568":{start:{line:1649,column:6},end:{line:1649,column:27}},"569":{start:{line:1652,column:4},end:{line:1652,column:19}},"570":{start:{line:1662,column:4},end:{line:1663,column:16}},"571":{start:{line:1663,column:6},end:{line:1663,column:16}},"572":{start:{line:1665,column:17},end:{line:1665,column:26}},"573":{start:{line:1666,column:20},end:{line:1666,column:22}},"574":{start:{line:1668,column:4},end:{line:1669,column:25}},"575":{start:{line:1668,column:17},end:{line:1668,column:18}},"576":{start:{line:1669,column:6},end:{line:1669,column:25}},"577":{start:{line:1671,column:4},end:{line:1683,column:7}},"578":{start:{line:1675,column:26},end:{line:1675,column:46}},"579":{start:{line:1676,column:21},end:{line:1676,column:40}},"580":{start:{line:1677,column:22},end:{line:1677,column:38}},"581":{start:{line:1678,column:8},end:{line:1678,column:22}},"582":{start:{line:1679,column:8},end:{line:1679,column:39}},"583":{start:{line:1680,column:8},end:{line:1680,column:41}},"584":{start:{line:1681,column:8},end:{line:1681,column:42}},"585":{start:{line:1685,column:4},end:{line:1685,column:19}},"586":{start:{line:1695,column:20},end:{line:1695,column:47}},"587":{start:{line:1696,column:18},end:{line:1696,column:20}},"588":{start:{line:1698,column:4},end:{line:1703,column:5}},"589":{start:{line:1699,column:6},end:{line:1700,column:17}},"590":{start:{line:1700,column:8},end:{line:1700,column:17}},"591":{start:{line:1702,column:6},end:{line:1702,column:30}},"592":{start:{line:1705,column:4},end:{line:1705,column:17}},"593":{start:{line:1715,column:20},end:{line:1715,column:54}},"594":{start:{line:1716,column:18},end:{line:1716,column:20}},"595":{start:{line:1718,column:4},end:{line:1723,column:5}},"596":{start:{line:1719,column:6},end:{line:1720,column:17}},"597":{start:{line:1720,column:8},end:{line:1720,column:17}},"598":{start:{line:1722,column:6},end:{line:1722,column:30}},"599":{start:{line:1725,column:4},end:{line:1725,column:17}},"600":{start:{line:1735,column:4},end:{line:1736,column:16}},"601":{start:{line:1736,column:6},end:{line:1736,column:16}},"602":{start:{line:1738,column:20},end:{line:1738,column:50}},"603":{start:{line:1739,column:18},end:{line:1739,column:20}},"604":{start:{line:1741,column:4},end:{line:1748,column:5}},"605":{start:{line:1742,column:6},end:{line:1745,column:7}},"606":{start:{line:1743,column:8},end:{line:1743,column:25}},"607":{start:{line:1744,column:8},end:{line:1744,column:17}},"608":{start:{line:1747,column:6},end:{line:1747,column:30}},"609":{start:{line:1750,column:4},end:{line:1750,column:17}},"610":{start:{line:1760,column:17},end:{line:1760,column:31}},"611":{start:{line:1762,column:4},end:{line:1763,column:18}},"612":{start:{line:1763,column:6},end:{line:1763,column:18}},"613":{start:{line:1765,column:4},end:{line:1773,column:5}},"614":{start:{line:1766,column:28},end:{line:1766,column:35}},"615":{start:{line:1767,column:19},end:{line:1767,column:50}},"616":{start:{line:1769,column:6},end:{line:1770,column:17}},"617":{start:{line:1770,column:8},end:{line:1770,column:17}},"618":{start:{line:1772,column:6},end:{line:1772,column:25}},"619":{start:{line:1775,column:4},end:{line:1775,column:16}},"620":{start:{line:1785,column:17},end:{line:1785,column:31}},"621":{start:{line:1787,column:4},end:{line:1788,column:18}},"622":{start:{line:1788,column:6},end:{line:1788,column:18}},"623":{start:{line:1790,column:18},end:{line:1790,column:46}},"624":{start:{line:1792,column:4},end:{line:1797,column:5}},"625":{start:{line:1793,column:6},end:{line:1794,column:17}},"626":{start:{line:1794,column:8},end:{line:1794,column:17}},"627":{start:{line:1796,column:6},end:{line:1796,column:25}},"628":{start:{line:1799,column:4},end:{line:1799,column:16}},"629":{start:{line:1809,column:16},end:{line:1809,column:60}},"630":{start:{line:1811,column:4},end:{line:1812,column:18}},"631":{start:{line:1812,column:6},end:{line:1812,column:18}},"632":{start:{line:1814,column:4},end:{line:1814,column:33}},"633":{start:{line:1824,column:16},end:{line:1824,column:38}},"634":{start:{line:1826,column:4},end:{line:1827,column:18}},"635":{start:{line:1827,column:6},end:{line:1827,column:18}},"636":{start:{line:1829,column:4},end:{line:1829,column:31}},"637":{start:{line:1839,column:16},end:{line:1839,column:18}},"638":{start:{line:1841,column:4},end:{line:1842,column:35}},"639":{start:{line:1842,column:6},end:{line:1842,column:35}},"640":{start:{line:1844,column:4},end:{line:1851,column:5}},"641":{start:{line:1845,column:22},end:{line:1845,column:48}},"642":{start:{line:1847,column:6},end:{line:1848,column:17}},"643":{start:{line:1848,column:8},end:{line:1848,column:17}},"644":{start:{line:1850,column:6},end:{line:1850,column:24}},"645":{start:{line:1853,column:4},end:{line:1853,column:15}},"646":{start:{line:1864,column:15},end:{line:1864,column:21}},"647":{start:{line:1865,column:18},end:{line:1865,column:32}},"648":{start:{line:1866,column:20},end:{line:1866,column:43}},"649":{start:{line:1867,column:18},end:{line:1867,column:46}},"650":{start:{line:1869,column:4},end:{line:1878,column:5}},"651":{start:{line:1869,column:17},end:{line:1869,column:18}},"652":{start:{line:1870,column:19},end:{line:1870,column:27}},"653":{start:{line:1872,column:17},end:{line:1872,column:21}},"654":{start:{line:1874,column:6},end:{line:1875,column:40}},"655":{start:{line:1875,column:8},end:{line:1875,column:40}},"656":{start:{line:1877,column:6},end:{line:1877,column:38}},"657":{start:{line:1880,column:4},end:{line:1884,column:5}},"658":{start:{line:1880,column:17},end:{line:1880,column:18}},"659":{start:{line:1881,column:21},end:{line:1881,column:34}},"660":{start:{line:1882,column:19},end:{line:1882,column:45}},"661":{start:{line:1883,column:6},end:{line:1883,column:33}},"662":{start:{line:1886,column:4},end:{line:1886,column:19}},"663":{start:{line:1896,column:4},end:{line:1896,column:50}},"664":{start:{line:1907,column:19},end:{line:1907,column:52}},"665":{start:{line:1909,column:4},end:{line:1910,column:18}},"666":{start:{line:1910,column:6},end:{line:1910,column:18}},"667":{start:{line:1912,column:4},end:{line:1912,column:23}},"668":{start:{line:1923,column:17},end:{line:1923,column:68}},"669":{start:{line:1925,column:4},end:{line:1926,column:18}},"670":{start:{line:1926,column:6},end:{line:1926,column:18}},"671":{start:{line:1928,column:19},end:{line:1928,column:39}},"672":{start:{line:1929,column:4},end:{line:1929,column:28}},"673":{start:{line:1930,column:4},end:{line:1930,column:30}},"674":{start:{line:1932,column:4},end:{line:1932,column:18}},"675":{start:{line:1943,column:17},end:{line:1946,column:6}},"676":{start:{line:1948,column:4},end:{line:1949,column:18}},"677":{start:{line:1949,column:6},end:{line:1949,column:18}},"678":{start:{line:1951,column:17},end:{line:1951,column:35}},"679":{start:{line:1952,column:4},end:{line:1952,column:29}},"680":{start:{line:1953,column:4},end:{line:1953,column:31}},"681":{start:{line:1955,column:4},end:{line:1955,column:16}},"682":{start:{line:1965,column:4},end:{line:1965,column:69}},"683":{start:{line:1977,column:20},end:{line:1977,column:46}},"684":{start:{line:1978,column:18},end:{line:1978,column:66}},"685":{start:{line:1980,column:4},end:{line:1981,column:13}},"686":{start:{line:1981,column:6},end:{line:1981,column:13}},"687":{start:{line:1983,column:17},end:{line:1983,column:56}},"688":{start:{line:1985,column:4},end:{line:1986,column:13}},"689":{start:{line:1986,column:6},end:{line:1986,column:13}},"690":{start:{line:1988,column:4},end:{line:1988,column:25}},"691":{start:{line:1990,column:4},end:{line:1990,column:66}},"692":{start:{line:2000,column:4},end:{line:2000,column:57}},"693":{start:{line:2010,column:4},end:{line:2010,column:37}},"694":{start:{line:2012,column:4},end:{line:2013,column:42}},"695":{start:{line:2013,column:6},end:{line:2013,column:42}},"696":{start:{line:2015,column:4},end:{line:2015,column:35}},"697":{start:{line:2024,column:17},end:{line:2024,column:57}},"698":{start:{line:2026,column:4},end:{line:2027,column:27}},"699":{start:{line:2027,column:6},end:{line:2027,column:27}},"700":{start:{line:2029,column:4},end:{line:2029,column:37}},"701":{start:{line:2039,column:17},end:{line:2039,column:61}},"702":{start:{line:2041,column:4},end:{line:2042,column:31}},"703":{start:{line:2042,column:6},end:{line:2042,column:31}},"704":{start:{line:2044,column:4},end:{line:2044,column:39}},"705":{start:{line:2055,column:4},end:{line:2055,column:32}},"706":{start:{line:2057,column:16},end:{line:2057,column:26}},"707":{start:{line:2059,column:16},end:{line:2062,column:6}},"708":{start:{line:2064,column:19},end:{line:2064,column:21}},"709":{start:{line:2066,column:4},end:{line:2078,column:5}},"710":{start:{line:2067,column:6},end:{line:2068,column:17}},"711":{start:{line:2068,column:8},end:{line:2068,column:17}},"712":{start:{line:2070,column:6},end:{line:2070,column:37}},"713":{start:{line:2072,column:6},end:{line:2073,column:33}},"714":{start:{line:2075,column:6},end:{line:2075,column:34}},"715":{start:{line:2077,column:6},end:{line:2077,column:28}},"716":{start:{line:2080,column:4},end:{line:2080,column:18}},"717":{start:{line:2090,column:19},end:{line:2090,column:63}},"718":{start:{line:2092,column:4},end:{line:2093,column:42}},"719":{start:{line:2093,column:6},end:{line:2093,column:42}},"720":{start:{line:2095,column:4},end:{line:2095,column:29}},"721":{start:{line:2112,column:4},end:{line:2112,column:37}},"722":{start:{line:2114,column:4},end:{line:2114,column:24}},"723":{start:{line:2115,column:4},end:{line:2115,column:16}},"724":{start:{line:2116,column:4},end:{line:2116,column:18}},"725":{start:{line:2117,column:4},end:{line:2117,column:25}},"726":{start:{line:2118,column:4},end:{line:2118,column:23}},"727":{start:{line:2127,column:4},end:{line:2127,column:26}},"728":{start:{line:2128,column:4},end:{line:2128,column:30}},"729":{start:{line:2129,column:4},end:{line:2129,column:44}},"730":{start:{line:2130,column:4},end:{line:2130,column:40}},"731":{start:{line:2132,column:4},end:{line:2132,column:28}},"732":{start:{line:2133,column:4},end:{line:2133,column:30}},"733":{start:{line:2134,column:4},end:{line:2134,column:37}},"734":{start:{line:2135,column:4},end:{line:2135,column:35}},"735":{start:{line:2144,column:15},end:{line:2144,column:28}},"736":{start:{line:2146,column:4},end:{line:2146,column:25}},"737":{start:{line:2147,column:4},end:{line:2147,column:27}},"738":{start:{line:2148,column:4},end:{line:2148,column:34}},"739":{start:{line:2149,column:4},end:{line:2149,column:32}},"740":{start:{line:2151,column:4},end:{line:2151,column:23}},"741":{start:{line:2162,column:15},end:{line:2162,column:29}},"742":{start:{line:2163,column:4},end:{line:2163,column:27}},"743":{start:{line:2164,column:4},end:{line:2164,column:29}},"744":{start:{line:2165,column:4},end:{line:2165,column:36}},"745":{start:{line:2166,column:4},end:{line:2166,column:34}},"746":{start:{line:2167,column:4},end:{line:2167,column:16}},"747":{start:{line:2178,column:4},end:{line:2178,column:40}},"748":{start:{line:2188,column:4},end:{line:2194,column:6}},"749":{start:{line:2203,column:4},end:{line:2208,column:12}},"750":{start:{line:2224,column:4},end:{line:2224,column:32}},"751":{start:{line:2225,column:4},end:{line:2225,column:30}},"752":{start:{line:2229,column:4},end:{line:2229,column:32}},"753":{start:{line:2233,column:4},end:{line:2233,column:33}},"754":{start:{line:2237,column:4},end:{line:2238,column:53}},"755":{start:{line:2238,column:6},end:{line:2238,column:53}},"756":{start:{line:2240,column:4},end:{line:2240,column:43}},"757":{start:{line:2244,column:20},end:{line:2244,column:34}},"758":{start:{line:2245,column:4},end:{line:2245,column:23}},"759":{start:{line:2246,column:4},end:{line:2246,column:27}},"760":{start:{line:2250,column:20},end:{line:2250,column:34}},"761":{start:{line:2251,column:4},end:{line:2251,column:26}},"762":{start:{line:2252,column:4},end:{line:2252,column:30}},"763":{start:{line:2256,column:20},end:{line:2256,column:34}},"764":{start:{line:2257,column:4},end:{line:2257,column:33}},"765":{start:{line:2258,column:4},end:{line:2258,column:37}},"766":{start:{line:2262,column:20},end:{line:2262,column:34}},"767":{start:{line:2263,column:4},end:{line:2263,column:31}},"768":{start:{line:2264,column:4},end:{line:2264,column:35}},"769":{start:{line:2284,column:4},end:{line:2284,column:35}},"770":{start:{line:2285,column:4},end:{line:2285,column:32}},"771":{start:{line:2286,column:4},end:{line:2286,column:21}},"772":{start:{line:2296,column:15},end:{line:2296,column:29}},"773":{start:{line:2297,column:4},end:{line:2297,column:29}},"774":{start:{line:2298,column:4},end:{line:2298,column:35}},"775":{start:{line:2299,column:4},end:{line:2299,column:33}},"776":{start:{line:2300,column:4},end:{line:2300,column:16}},"777":{start:{line:2310,column:4},end:{line:2310,column:36}},"778":{start:{line:2319,column:4},end:{line:2319,column:35}},"779":{start:{line:2328,column:17},end:{line:2328,column:31}},"780":{start:{line:2329,column:15},end:{line:2329,column:30}},"781":{start:{line:2330,column:4},end:{line:2330,column:27}},"782":{start:{line:2331,column:4},end:{line:2331,column:35}},"783":{start:{line:2332,column:4},end:{line:2332,column:33}},"784":{start:{line:2333,column:4},end:{line:2333,column:23}},"785":{start:{line:2345,column:4},end:{line:2345,column:40}},"786":{start:{line:2346,column:4},end:{line:2346,column:23}},"787":{start:{line:2347,column:4},end:{line:2347,column:21}},"788":{start:{line:2348,column:4},end:{line:2348,column:16}},"789":{start:{line:2359,column:4},end:{line:2359,column:48}},"790":{start:{line:2377,column:4},end:{line:2377,column:25}},"791":{start:{line:2378,column:4},end:{line:2378,column:21}},"792":{start:{line:2379,column:4},end:{line:2379,column:27}},"793":{start:{line:2380,column:4},end:{line:2380,column:34}},"794":{start:{line:2381,column:4},end:{line:2381,column:42}},"795":{start:{line:2383,column:4},end:{line:2383,column:22}},"796":{start:{line:2384,column:4},end:{line:2384,column:21}},"797":{start:{line:2385,column:4},end:{line:2385,column:18}},"798":{start:{line:2387,column:4},end:{line:2391,column:5}},"799":{start:{line:2388,column:6},end:{line:2388,column:30}},"800":{start:{line:2389,column:6},end:{line:2389,column:33}},"801":{start:{line:2390,column:6},end:{line:2390,column:29}},"802":{start:{line:2393,column:4},end:{line:2393,column:21}},"803":{start:{line:2394,column:4},end:{line:2394,column:22}},"804":{start:{line:2396,column:4},end:{line:2396,column:16}},"805":{start:{line:2405,column:4},end:{line:2409,column:5}},"806":{start:{line:2406,column:21},end:{line:2406,column:40}},"807":{start:{line:2407,column:6},end:{line:2407,column:42}},"808":{start:{line:2408,column:6},end:{line:2408,column:31}},"809":{start:{line:2411,column:4},end:{line:2416,column:5}},"810":{start:{line:2412,column:21},end:{line:2412,column:40}},"811":{start:{line:2413,column:6},end:{line:2413,column:34}},"812":{start:{line:2414,column:6},end:{line:2414,column:43}},"813":{start:{line:2415,column:6},end:{line:2415,column:32}},"814":{start:{line:2427,column:19},end:{line:2427,column:33}},"815":{start:{line:2429,column:4},end:{line:2432,column:5}},"816":{start:{line:2430,column:6},end:{line:2430,column:32}},"817":{start:{line:2431,column:6},end:{line:2431,column:41}},"818":{start:{line:2434,column:4},end:{line:2435,column:25}},"819":{start:{line:2435,column:6},end:{line:2435,column:25}},"820":{start:{line:2445,column:19},end:{line:2445,column:34}},"821":{start:{line:2447,column:4},end:{line:2448,column:25}},"822":{start:{line:2448,column:6},end:{line:2448,column:25}},"823":{start:{line:2457,column:4},end:{line:2458,column:15}},"824":{start:{line:2458,column:6},end:{line:2458,column:15}},"825":{start:{line:2460,column:4},end:{line:2461,column:15}},"826":{start:{line:2461,column:6},end:{line:2461,column:15}},"827":{start:{line:2463,column:18},end:{line:2463,column:38}},"828":{start:{line:2465,column:4},end:{line:2466,column:15}},"829":{start:{line:2466,column:6},end:{line:2466,column:15}},"830":{start:{line:2468,column:4},end:{line:2468,column:21}},"831":{start:{line:2478,column:21},end:{line:2478,column:22}},"832":{start:{line:2479,column:22},end:{line:2479,column:23}},"833":{start:{line:2481,column:4},end:{line:2486,column:5}},"834":{start:{line:2482,column:6},end:{line:2483,column:17}},"835":{start:{line:2483,column:8},end:{line:2483,column:17}},"836":{start:{line:2485,column:6},end:{line:2485,column:32}},"837":{start:{line:2488,column:4},end:{line:2489,column:34}},"838":{start:{line:2489,column:6},end:{line:2489,column:34}},"839":{start:{line:2491,column:4},end:{line:2491,column:36}},"840":{start:{line:2502,column:4},end:{line:2502,column:43}},"841":{start:{line:2511,column:16},end:{line:2511,column:29}},"842":{start:{line:2512,column:17},end:{line:2512,column:34}},"843":{start:{line:2514,column:4},end:{line:2534,column:6}},"844":{start:{line:2528,column:8},end:{line:2528,column:38}},"845":{start:{line:2531,column:8},end:{line:2531,column:39}},"846":{start:{line:2552,column:4},end:{line:2552,column:19}},"847":{start:{line:2553,column:4},end:{line:2553,column:24}},"848":{start:{line:2554,column:4},end:{line:2554,column:21}},"849":{start:{line:2563,column:4},end:{line:2563,column:26}},"850":{start:{line:2573,column:4},end:{line:2581,column:6}},"851":{start:{line:2600,column:4},end:{line:2600,column:44}},"852":{start:{line:2601,column:4},end:{line:2601,column:47}},"853":{start:{line:2602,column:4},end:{line:2602,column:26}},"854":{start:{line:2603,column:4},end:{line:2603,column:34}},"855":{start:{line:2613,column:4},end:{line:2614,column:19}},"856":{start:{line:2614,column:6},end:{line:2614,column:19}},"857":{start:{line:2616,column:4},end:{line:2616,column:26}},"858":{start:{line:2618,column:4},end:{line:2618,column:16}},"859":{start:{line:2628,column:4},end:{line:2628,column:36}},"860":{start:{line:2638,column:15},end:{line:2638,column:29}},"861":{start:{line:2640,column:4},end:{line:2640,column:30}},"862":{start:{line:2641,column:4},end:{line:2641,column:31}},"863":{start:{line:2642,column:4},end:{line:2642,column:29}},"864":{start:{line:2644,column:18},end:{line:2644,column:30}},"865":{start:{line:2646,column:4},end:{line:2649,column:5}},"866":{start:{line:2646,column:17},end:{line:2646,column:18}},"867":{start:{line:2647,column:19},end:{line:2647,column:32}},"868":{start:{line:2648,column:6},end:{line:2648,column:28}},"869":{start:{line:2651,column:4},end:{line:2651,column:16}},"870":{start:{line:2661,column:4},end:{line:2661,column:36}},"871":{start:{line:2670,column:4},end:{line:2670,column:38}},"872":{start:{line:2679,column:17},end:{line:2679,column:31}},"873":{start:{line:2680,column:15},end:{line:2680,column:30}},"874":{start:{line:2682,column:4},end:{line:2682,column:28}},"875":{start:{line:2683,column:4},end:{line:2683,column:29}},"876":{start:{line:2684,column:4},end:{line:2684,column:27}},"877":{start:{line:2686,column:4},end:{line:2686,column:34}},"878":{start:{line:2688,column:4},end:{line:2689,column:25}},"879":{start:{line:2689,column:6},end:{line:2689,column:25}},"880":{start:{line:2691,column:4},end:{line:2691,column:23}},"881":{start:{line:2700,column:19},end:{line:2700,column:21}},"882":{start:{line:2701,column:4},end:{line:2702,column:24}},"883":{start:{line:2702,column:6},end:{line:2702,column:24}},"884":{start:{line:2703,column:4},end:{line:2703,column:18}},"885":{start:{line:2712,column:4},end:{line:2717,column:6}},"886":{start:{line:2727,column:4},end:{line:2727,column:27}},"887":{start:{line:2728,column:4},end:{line:2728,column:31}},"888":{start:{line:2729,column:4},end:{line:2729,column:27}},"889":{start:{line:2730,column:4},end:{line:2730,column:16}},"890":{start:{line:2740,column:4},end:{line:2740,column:38}},"891":{start:{line:2748,column:0},end:{line:2748,column:22}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:37,column:2},end:{line:37,column:3}},loc:{start:{line:37,column:24},end:{line:46,column:3}},line:37},"1":{name:"(anonymous_1)",decl:{start:{line:53,column:2},end:{line:53,column:3}},loc:{start:{line:53,column:21},end:{line:59,column:3}},line:53},"2":{name:"(anonymous_2)",decl:{start:{line:69,column:2},end:{line:69,column:3}},loc:{start:{line:69,column:29},end:{line:72,column:3}},line:69},"3":{name:"(anonymous_3)",decl:{start:{line:80,column:2},end:{line:80,column:3}},loc:{start:{line:80,column:18},end:{line:87,column:3}},line:80},"4":{name:"(anonymous_4)",decl:{start:{line:95,column:2},end:{line:95,column:3}},loc:{start:{line:95,column:18},end:{line:102,column:3}},line:95},"5":{name:"(anonymous_5)",decl:{start:{line:110,column:2},end:{line:110,column:3}},loc:{start:{line:110,column:36},end:{line:117,column:3}},line:110},"6":{name:"(anonymous_6)",decl:{start:{line:125,column:2},end:{line:125,column:3}},loc:{start:{line:125,column:38},end:{line:132,column:3}},line:125},"7":{name:"(anonymous_7)",decl:{start:{line:141,column:2},end:{line:141,column:3}},loc:{start:{line:141,column:36},end:{line:146,column:3}},line:141},"8":{name:"(anonymous_8)",decl:{start:{line:154,column:2},end:{line:154,column:3}},loc:{start:{line:154,column:30},end:{line:159,column:3}},line:154},"9":{name:"(anonymous_9)",decl:{start:{line:167,column:2},end:{line:167,column:3}},loc:{start:{line:167,column:33},end:{line:172,column:3}},line:167},"10":{name:"(anonymous_10)",decl:{start:{line:180,column:2},end:{line:180,column:3}},loc:{start:{line:180,column:34},end:{line:184,column:3}},line:180},"11":{name:"(anonymous_11)",decl:{start:{line:191,column:2},end:{line:191,column:3}},loc:{start:{line:191,column:32},end:{line:196,column:3}},line:191},"12":{name:"(anonymous_12)",decl:{start:{line:204,column:2},end:{line:204,column:3}},loc:{start:{line:204,column:45},end:{line:209,column:3}},line:204},"13":{name:"(anonymous_13)",decl:{start:{line:218,column:2},end:{line:218,column:3}},loc:{start:{line:218,column:30},end:{line:225,column:3}},line:218},"14":{name:"(anonymous_14)",decl:{start:{line:234,column:2},end:{line:234,column:3}},loc:{start:{line:234,column:23},end:{line:236,column:3}},line:234},"15":{name:"(anonymous_15)",decl:{start:{line:244,column:2},end:{line:244,column:3}},loc:{start:{line:244,column:25},end:{line:246,column:3}},line:244},"16":{name:"(anonymous_16)",decl:{start:{line:254,column:2},end:{line:254,column:3}},loc:{start:{line:254,column:28},end:{line:256,column:3}},line:254},"17":{name:"(anonymous_17)",decl:{start:{line:264,column:2},end:{line:264,column:3}},loc:{start:{line:264,column:20},end:{line:266,column:3}},line:264},"18":{name:"(anonymous_18)",decl:{start:{line:274,column:2},end:{line:274,column:3}},loc:{start:{line:274,column:23},end:{line:276,column:3}},line:274},"19":{name:"(anonymous_19)",decl:{start:{line:285,column:2},end:{line:285,column:3}},loc:{start:{line:285,column:33},end:{line:287,column:3}},line:285},"20":{name:"(anonymous_20)",decl:{start:{line:296,column:2},end:{line:296,column:3}},loc:{start:{line:296,column:36},end:{line:298,column:3}},line:296},"21":{name:"(anonymous_21)",decl:{start:{line:305,column:2},end:{line:305,column:3}},loc:{start:{line:305,column:14},end:{line:311,column:3}},line:305},"22":{name:"(anonymous_22)",decl:{start:{line:309,column:13},end:{line:309,column:14}},loc:{start:{line:309,column:20},end:{line:309,column:43}},line:309},"23":{name:"(anonymous_23)",decl:{start:{line:319,column:2},end:{line:319,column:3}},loc:{start:{line:319,column:25},end:{line:326,column:3}},line:319},"24":{name:"(anonymous_24)",decl:{start:{line:335,column:2},end:{line:335,column:3}},loc:{start:{line:335,column:33},end:{line:354,column:3}},line:335},"25":{name:"(anonymous_25)",decl:{start:{line:363,column:2},end:{line:363,column:3}},loc:{start:{line:363,column:37},end:{line:384,column:3}},line:363},"26":{name:"(anonymous_26)",decl:{start:{line:393,column:2},end:{line:393,column:3}},loc:{start:{line:393,column:37},end:{line:408,column:3}},line:393},"27":{name:"(anonymous_27)",decl:{start:{line:417,column:2},end:{line:417,column:3}},loc:{start:{line:417,column:23},end:{line:451,column:3}},line:417},"28":{name:"(anonymous_28)",decl:{start:{line:461,column:2},end:{line:461,column:3}},loc:{start:{line:461,column:27},end:{line:607,column:3}},line:461},"29":{name:"(anonymous_29)",decl:{start:{line:617,column:2},end:{line:617,column:3}},loc:{start:{line:617,column:28},end:{line:756,column:3}},line:617},"30":{name:"(anonymous_30)",decl:{start:{line:765,column:2},end:{line:765,column:3}},loc:{start:{line:765,column:21},end:{line:772,column:3}},line:765},"31":{name:"(anonymous_31)",decl:{start:{line:782,column:2},end:{line:782,column:3}},loc:{start:{line:782,column:26},end:{line:892,column:3}},line:782},"32":{name:"(anonymous_32)",decl:{start:{line:902,column:2},end:{line:902,column:3}},loc:{start:{line:902,column:29},end:{line:924,column:3}},line:902},"33":{name:"(anonymous_33)",decl:{start:{line:932,column:2},end:{line:932,column:3}},loc:{start:{line:932,column:23},end:{line:947,column:3}},line:932},"34":{name:"(anonymous_34)",decl:{start:{line:956,column:2},end:{line:956,column:3}},loc:{start:{line:956,column:24},end:{line:966,column:3}},line:956},"35":{name:"(anonymous_35)",decl:{start:{line:974,column:2},end:{line:974,column:3}},loc:{start:{line:974,column:31},end:{line:1075,column:3}},line:974},"36":{name:"(anonymous_36)",decl:{start:{line:1089,column:2},end:{line:1089,column:3}},loc:{start:{line:1089,column:28},end:{line:1105,column:3}},line:1089},"37":{name:"(anonymous_37)",decl:{start:{line:1115,column:2},end:{line:1115,column:3}},loc:{start:{line:1115,column:34},end:{line:1154,column:3}},line:1115},"38":{name:"(anonymous_38)",decl:{start:{line:1161,column:2},end:{line:1161,column:3}},loc:{start:{line:1161,column:13},end:{line:1167,column:3}},line:1161},"39":{name:"(anonymous_39)",decl:{start:{line:1174,column:2},end:{line:1174,column:3}},loc:{start:{line:1174,column:15},end:{line:1180,column:3}},line:1174},"40":{name:"(anonymous_40)",decl:{start:{line:1187,column:2},end:{line:1187,column:3}},loc:{start:{line:1187,column:17},end:{line:1190,column:3}},line:1187},"41":{name:"(anonymous_41)",decl:{start:{line:1197,column:2},end:{line:1197,column:3}},loc:{start:{line:1197,column:19},end:{line:1200,column:3}},line:1197},"42":{name:"(anonymous_42)",decl:{start:{line:1206,column:2},end:{line:1206,column:3}},loc:{start:{line:1206,column:16},end:{line:1209,column:3}},line:1206},"43":{name:"(anonymous_43)",decl:{start:{line:1216,column:2},end:{line:1216,column:3}},loc:{start:{line:1216,column:17},end:{line:1219,column:3}},line:1216},"44":{name:"(anonymous_44)",decl:{start:{line:1228,column:2},end:{line:1228,column:3}},loc:{start:{line:1228,column:22},end:{line:1237,column:3}},line:1228},"45":{name:"(anonymous_45)",decl:{start:{line:1244,column:2},end:{line:1244,column:3}},loc:{start:{line:1244,column:14},end:{line:1251,column:3}},line:1244},"46":{name:"(anonymous_46)",decl:{start:{line:1259,column:2},end:{line:1259,column:3}},loc:{start:{line:1259,column:32},end:{line:1269,column:3}},line:1259},"47":{name:"(anonymous_47)",decl:{start:{line:1264,column:13},end:{line:1264,column:14}},loc:{start:{line:1264,column:22},end:{line:1267,column:7}},line:1264},"48":{name:"(anonymous_48)",decl:{start:{line:1277,column:2},end:{line:1277,column:3}},loc:{start:{line:1277,column:25},end:{line:1288,column:3}},line:1277},"49":{name:"(anonymous_49)",decl:{start:{line:1286,column:13},end:{line:1286,column:14}},loc:{start:{line:1286,column:20},end:{line:1286,column:43}},line:1286},"50":{name:"(anonymous_50)",decl:{start:{line:1296,column:2},end:{line:1296,column:3}},loc:{start:{line:1296,column:32},end:{line:1306,column:3}},line:1296},"51":{name:"(anonymous_51)",decl:{start:{line:1301,column:13},end:{line:1301,column:14}},loc:{start:{line:1301,column:22},end:{line:1304,column:7}},line:1301},"52":{name:"(anonymous_52)",decl:{start:{line:1314,column:2},end:{line:1314,column:3}},loc:{start:{line:1314,column:25},end:{line:1325,column:3}},line:1314},"53":{name:"(anonymous_53)",decl:{start:{line:1323,column:13},end:{line:1323,column:14}},loc:{start:{line:1323,column:20},end:{line:1323,column:43}},line:1323},"54":{name:"(anonymous_54)",decl:{start:{line:1333,column:2},end:{line:1333,column:3}},loc:{start:{line:1333,column:25},end:{line:1335,column:3}},line:1333},"55":{name:"(anonymous_55)",decl:{start:{line:1343,column:2},end:{line:1343,column:3}},loc:{start:{line:1343,column:28},end:{line:1353,column:3}},line:1343},"56":{name:"(anonymous_56)",decl:{start:{line:1348,column:13},end:{line:1348,column:14}},loc:{start:{line:1348,column:22},end:{line:1351,column:7}},line:1348},"57":{name:"(anonymous_57)",decl:{start:{line:1361,column:2},end:{line:1361,column:3}},loc:{start:{line:1361,column:21},end:{line:1375,column:3}},line:1361},"58":{name:"(anonymous_58)",decl:{start:{line:1370,column:13},end:{line:1370,column:14}},loc:{start:{line:1370,column:22},end:{line:1373,column:7}},line:1370},"59":{name:"(anonymous_59)",decl:{start:{line:1388,column:2},end:{line:1388,column:3}},loc:{start:{line:1388,column:45},end:{line:1404,column:3}},line:1388},"60":{name:"(anonymous_60)",decl:{start:{line:1399,column:13},end:{line:1399,column:14}},loc:{start:{line:1399,column:22},end:{line:1402,column:7}},line:1399},"61":{name:"(anonymous_61)",decl:{start:{line:1417,column:2},end:{line:1417,column:3}},loc:{start:{line:1417,column:38},end:{line:1436,column:3}},line:1417},"62":{name:"(anonymous_62)",decl:{start:{line:1431,column:13},end:{line:1431,column:14}},loc:{start:{line:1431,column:22},end:{line:1434,column:7}},line:1431},"63":{name:"(anonymous_63)",decl:{start:{line:1444,column:2},end:{line:1444,column:3}},loc:{start:{line:1444,column:26},end:{line:1446,column:3}},line:1444},"64":{name:"(anonymous_64)",decl:{start:{line:1459,column:2},end:{line:1459,column:3}},loc:{start:{line:1459,column:39},end:{line:1475,column:3}},line:1459},"65":{name:"(anonymous_65)",decl:{start:{line:1470,column:13},end:{line:1470,column:14}},loc:{start:{line:1470,column:22},end:{line:1473,column:7}},line:1470},"66":{name:"(anonymous_66)",decl:{start:{line:1488,column:2},end:{line:1488,column:3}},loc:{start:{line:1488,column:32},end:{line:1507,column:3}},line:1488},"67":{name:"(anonymous_67)",decl:{start:{line:1502,column:13},end:{line:1502,column:14}},loc:{start:{line:1502,column:22},end:{line:1505,column:7}},line:1502},"68":{name:"(anonymous_68)",decl:{start:{line:1520,column:2},end:{line:1520,column:3}},loc:{start:{line:1520,column:32},end:{line:1531,column:3}},line:1520},"69":{name:"(anonymous_69)",decl:{start:{line:1540,column:2},end:{line:1540,column:3}},loc:{start:{line:1540,column:23},end:{line:1547,column:3}},line:1540},"70":{name:"(anonymous_70)",decl:{start:{line:1555,column:2},end:{line:1555,column:3}},loc:{start:{line:1555,column:19},end:{line:1568,column:3}},line:1555},"71":{name:"(anonymous_71)",decl:{start:{line:1566,column:13},end:{line:1566,column:14}},loc:{start:{line:1566,column:21},end:{line:1566,column:43}},line:1566},"72":{name:"(anonymous_72)",decl:{start:{line:1576,column:2},end:{line:1576,column:3}},loc:{start:{line:1576,column:32},end:{line:1587,column:3}},line:1576},"73":{name:"(anonymous_73)",decl:{start:{line:1595,column:2},end:{line:1595,column:3}},loc:{start:{line:1595,column:25},end:{line:1606,column:3}},line:1595},"74":{name:"(anonymous_74)",decl:{start:{line:1614,column:2},end:{line:1614,column:3}},loc:{start:{line:1614,column:19},end:{line:1633,column:3}},line:1614},"75":{name:"(anonymous_75)",decl:{start:{line:1625,column:13},end:{line:1625,column:14}},loc:{start:{line:1625,column:29},end:{line:1631,column:7}},line:1625},"76":{name:"(anonymous_76)",decl:{start:{line:1641,column:2},end:{line:1641,column:3}},loc:{start:{line:1641,column:32},end:{line:1653,column:3}},line:1641},"77":{name:"(anonymous_77)",decl:{start:{line:1661,column:2},end:{line:1661,column:3}},loc:{start:{line:1661,column:28},end:{line:1686,column:3}},line:1661},"78":{name:"(anonymous_78)",decl:{start:{line:1674,column:13},end:{line:1674,column:14}},loc:{start:{line:1674,column:29},end:{line:1682,column:7}},line:1674},"79":{name:"(anonymous_79)",decl:{start:{line:1694,column:2},end:{line:1694,column:3}},loc:{start:{line:1694,column:23},end:{line:1706,column:3}},line:1694},"80":{name:"(anonymous_80)",decl:{start:{line:1714,column:2},end:{line:1714,column:3}},loc:{start:{line:1714,column:30},end:{line:1726,column:3}},line:1714},"81":{name:"(anonymous_81)",decl:{start:{line:1734,column:2},end:{line:1734,column:3}},loc:{start:{line:1734,column:26},end:{line:1751,column:3}},line:1734},"82":{name:"(anonymous_82)",decl:{start:{line:1759,column:2},end:{line:1759,column:3}},loc:{start:{line:1759,column:24},end:{line:1776,column:3}},line:1759},"83":{name:"(anonymous_83)",decl:{start:{line:1784,column:2},end:{line:1784,column:3}},loc:{start:{line:1784,column:25},end:{line:1800,column:3}},line:1784},"84":{name:"(anonymous_84)",decl:{start:{line:1808,column:2},end:{line:1808,column:3}},loc:{start:{line:1808,column:20},end:{line:1815,column:3}},line:1808},"85":{name:"(anonymous_85)",decl:{start:{line:1823,column:2},end:{line:1823,column:3}},loc:{start:{line:1823,column:25},end:{line:1830,column:3}},line:1823},"86":{name:"(anonymous_86)",decl:{start:{line:1838,column:2},end:{line:1838,column:3}},loc:{start:{line:1838,column:24},end:{line:1854,column:3}},line:1838},"87":{name:"(anonymous_87)",decl:{start:{line:1863,column:2},end:{line:1863,column:3}},loc:{start:{line:1863,column:24},end:{line:1887,column:3}},line:1863},"88":{name:"(anonymous_88)",decl:{start:{line:1895,column:2},end:{line:1895,column:3}},loc:{start:{line:1895,column:14},end:{line:1897,column:3}},line:1895},"89":{name:"(anonymous_89)",decl:{start:{line:1906,column:2},end:{line:1906,column:3}},loc:{start:{line:1906,column:29},end:{line:1913,column:3}},line:1906},"90":{name:"(anonymous_90)",decl:{start:{line:1922,column:2},end:{line:1922,column:3}},loc:{start:{line:1922,column:31},end:{line:1933,column:3}},line:1922},"91":{name:"(anonymous_91)",decl:{start:{line:1942,column:2},end:{line:1942,column:3}},loc:{start:{line:1942,column:37},end:{line:1956,column:3}},line:1942},"92":{name:"(anonymous_92)",decl:{start:{line:1964,column:2},end:{line:1964,column:3}},loc:{start:{line:1964,column:22},end:{line:1966,column:3}},line:1964},"93":{name:"(anonymous_93)",decl:{start:{line:1976,column:2},end:{line:1976,column:3}},loc:{start:{line:1976,column:46},end:{line:1991,column:3}},line:1976},"94":{name:"(anonymous_94)",decl:{start:{line:1999,column:2},end:{line:1999,column:3}},loc:{start:{line:1999,column:29},end:{line:2001,column:3}},line:1999},"95":{name:"(anonymous_95)",decl:{start:{line:2009,column:2},end:{line:2009,column:3}},loc:{start:{line:2009,column:25},end:{line:2016,column:3}},line:2009},"96":{name:"(anonymous_96)",decl:{start:{line:2023,column:2},end:{line:2023,column:3}},loc:{start:{line:2023,column:27},end:{line:2030,column:3}},line:2023},"97":{name:"(anonymous_97)",decl:{start:{line:2038,column:2},end:{line:2038,column:3}},loc:{start:{line:2038,column:32},end:{line:2045,column:3}},line:2038},"98":{name:"(anonymous_98)",decl:{start:{line:2054,column:2},end:{line:2054,column:3}},loc:{start:{line:2054,column:23},end:{line:2081,column:3}},line:2054},"99":{name:"(anonymous_99)",decl:{start:{line:2089,column:2},end:{line:2089,column:3}},loc:{start:{line:2089,column:22},end:{line:2096,column:3}},line:2089},"100":{name:"(anonymous_100)",decl:{start:{line:2111,column:2},end:{line:2111,column:3}},loc:{start:{line:2111,column:25},end:{line:2119,column:3}},line:2111},"101":{name:"(anonymous_101)",decl:{start:{line:2126,column:2},end:{line:2126,column:3}},loc:{start:{line:2126,column:19},end:{line:2136,column:3}},line:2126},"102":{name:"(anonymous_102)",decl:{start:{line:2143,column:2},end:{line:2143,column:3}},loc:{start:{line:2143,column:10},end:{line:2152,column:3}},line:2143},"103":{name:"(anonymous_103)",decl:{start:{line:2161,column:2},end:{line:2161,column:3}},loc:{start:{line:2161,column:16},end:{line:2168,column:3}},line:2161},"104":{name:"(anonymous_104)",decl:{start:{line:2177,column:2},end:{line:2177,column:3}},loc:{start:{line:2177,column:29},end:{line:2179,column:3}},line:2177},"105":{name:"(anonymous_105)",decl:{start:{line:2187,column:2},end:{line:2187,column:3}},loc:{start:{line:2187,column:18},end:{line:2195,column:3}},line:2187},"106":{name:"(anonymous_106)",decl:{start:{line:2202,column:2},end:{line:2202,column:3}},loc:{start:{line:2202,column:20},end:{line:2209,column:3}},line:2202},"107":{name:"(anonymous_107)",decl:{start:{line:2223,column:2},end:{line:2223,column:3}},loc:{start:{line:2223,column:16},end:{line:2226,column:3}},line:2223},"108":{name:"(anonymous_108)",decl:{start:{line:2228,column:2},end:{line:2228,column:3}},loc:{start:{line:2228,column:12},end:{line:2230,column:3}},line:2228},"109":{name:"(anonymous_109)",decl:{start:{line:2232,column:2},end:{line:2232,column:3}},loc:{start:{line:2232,column:19},end:{line:2234,column:3}},line:2232},"110":{name:"(anonymous_110)",decl:{start:{line:2236,column:2},end:{line:2236,column:3}},loc:{start:{line:2236,column:12},end:{line:2241,column:3}},line:2236},"111":{name:"(anonymous_111)",decl:{start:{line:2243,column:2},end:{line:2243,column:3}},loc:{start:{line:2243,column:18},end:{line:2247,column:3}},line:2243},"112":{name:"(anonymous_112)",decl:{start:{line:2249,column:2},end:{line:2249,column:3}},loc:{start:{line:2249,column:20},end:{line:2253,column:3}},line:2249},"113":{name:"(anonymous_113)",decl:{start:{line:2255,column:2},end:{line:2255,column:3}},loc:{start:{line:2255,column:27},end:{line:2259,column:3}},line:2255},"114":{name:"(anonymous_114)",decl:{start:{line:2261,column:2},end:{line:2261,column:3}},loc:{start:{line:2261,column:25},end:{line:2265,column:3}},line:2261},"115":{name:"(anonymous_115)",decl:{start:{line:2283,column:2},end:{line:2283,column:3}},loc:{start:{line:2283,column:27},end:{line:2287,column:3}},line:2283},"116":{name:"(anonymous_116)",decl:{start:{line:2295,column:2},end:{line:2295,column:3}},loc:{start:{line:2295,column:16},end:{line:2301,column:3}},line:2295},"117":{name:"(anonymous_117)",decl:{start:{line:2309,column:2},end:{line:2309,column:3}},loc:{start:{line:2309,column:23},end:{line:2311,column:3}},line:2309},"118":{name:"(anonymous_118)",decl:{start:{line:2318,column:2},end:{line:2318,column:3}},loc:{start:{line:2318,column:12},end:{line:2320,column:3}},line:2318},"119":{name:"(anonymous_119)",decl:{start:{line:2327,column:2},end:{line:2327,column:3}},loc:{start:{line:2327,column:10},end:{line:2334,column:3}},line:2327},"120":{name:"(anonymous_120)",decl:{start:{line:2344,column:2},end:{line:2344,column:3}},loc:{start:{line:2344,column:28},end:{line:2349,column:3}},line:2344},"121":{name:"(anonymous_121)",decl:{start:{line:2358,column:2},end:{line:2358,column:3}},loc:{start:{line:2358,column:35},end:{line:2360,column:3}},line:2358},"122":{name:"(anonymous_122)",decl:{start:{line:2376,column:2},end:{line:2376,column:3}},loc:{start:{line:2376,column:26},end:{line:2397,column:3}},line:2376},"123":{name:"(anonymous_123)",decl:{start:{line:2404,column:2},end:{line:2404,column:3}},loc:{start:{line:2404,column:9},end:{line:2417,column:3}},line:2404},"124":{name:"(anonymous_124)",decl:{start:{line:2426,column:2},end:{line:2426,column:3}},loc:{start:{line:2426,column:26},end:{line:2436,column:3}},line:2426},"125":{name:"(anonymous_125)",decl:{start:{line:2444,column:2},end:{line:2444,column:3}},loc:{start:{line:2444,column:21},end:{line:2449,column:3}},line:2444},"126":{name:"(anonymous_126)",decl:{start:{line:2456,column:2},end:{line:2456,column:3}},loc:{start:{line:2456,column:19},end:{line:2469,column:3}},line:2456},"127":{name:"(anonymous_127)",decl:{start:{line:2477,column:2},end:{line:2477,column:3}},loc:{start:{line:2477,column:11},end:{line:2492,column:3}},line:2477},"128":{name:"(anonymous_128)",decl:{start:{line:2501,column:2},end:{line:2501,column:3}},loc:{start:{line:2501,column:15},end:{line:2503,column:3}},line:2501},"129":{name:"(anonymous_129)",decl:{start:{line:2510,column:2},end:{line:2510,column:3}},loc:{start:{line:2510,column:26},end:{line:2535,column:3}},line:2510},"130":{name:"(anonymous_130)",decl:{start:{line:2527,column:30},end:{line:2527,column:31}},loc:{start:{line:2527,column:41},end:{line:2529,column:7}},line:2527},"131":{name:"(anonymous_131)",decl:{start:{line:2530,column:32},end:{line:2530,column:33}},loc:{start:{line:2530,column:44},end:{line:2532,column:7}},line:2530},"132":{name:"(anonymous_132)",decl:{start:{line:2551,column:2},end:{line:2551,column:3}},loc:{start:{line:2551,column:16},end:{line:2555,column:3}},line:2551},"133":{name:"(anonymous_133)",decl:{start:{line:2562,column:2},end:{line:2562,column:3}},loc:{start:{line:2562,column:11},end:{line:2564,column:3}},line:2562},"134":{name:"(anonymous_134)",decl:{start:{line:2572,column:2},end:{line:2572,column:3}},loc:{start:{line:2572,column:19},end:{line:2582,column:3}},line:2572},"135":{name:"(anonymous_135)",decl:{start:{line:2599,column:2},end:{line:2599,column:3}},loc:{start:{line:2599,column:34},end:{line:2604,column:3}},line:2599},"136":{name:"(anonymous_136)",decl:{start:{line:2612,column:2},end:{line:2612,column:3}},loc:{start:{line:2612,column:12},end:{line:2619,column:3}},line:2612},"137":{name:"(anonymous_137)",decl:{start:{line:2627,column:2},end:{line:2627,column:3}},loc:{start:{line:2627,column:15},end:{line:2629,column:3}},line:2627},"138":{name:"(anonymous_138)",decl:{start:{line:2637,column:2},end:{line:2637,column:3}},loc:{start:{line:2637,column:16},end:{line:2652,column:3}},line:2637},"139":{name:"(anonymous_139)",decl:{start:{line:2660,column:2},end:{line:2660,column:3}},loc:{start:{line:2660,column:23},end:{line:2662,column:3}},line:2660},"140":{name:"(anonymous_140)",decl:{start:{line:2669,column:2},end:{line:2669,column:3}},loc:{start:{line:2669,column:12},end:{line:2671,column:3}},line:2669},"141":{name:"(anonymous_141)",decl:{start:{line:2678,column:2},end:{line:2678,column:3}},loc:{start:{line:2678,column:10},end:{line:2692,column:3}},line:2678},"142":{name:"(anonymous_142)",decl:{start:{line:2699,column:2},end:{line:2699,column:3}},loc:{start:{line:2699,column:12},end:{line:2704,column:3}},line:2699},"143":{name:"(anonymous_143)",decl:{start:{line:2711,column:2},end:{line:2711,column:3}},loc:{start:{line:2711,column:11},end:{line:2718,column:3}},line:2711},"144":{name:"(anonymous_144)",decl:{start:{line:2726,column:2},end:{line:2726,column:3}},loc:{start:{line:2726,column:18},end:{line:2731,column:3}},line:2726},"145":{name:"(anonymous_145)",decl:{start:{line:2739,column:2},end:{line:2739,column:3}},loc:{start:{line:2739,column:25},end:{line:2741,column:3}},line:2739}},branchMap:{"0":{loc:{start:{line:42,column:15},end:{line:42,column:23}},type:"binary-expr",locations:[{start:{line:42,column:15},end:{line:42,column:18}},{start:{line:42,column:22},end:{line:42,column:23}}],line:42},"1":{loc:{start:{line:83,column:4},end:{line:84,column:18}},type:"if",locations:[{start:{line:83,column:4},end:{line:84,column:18}},{start:{line:83,column:4},end:{line:84,column:18}}],line:83},"2":{loc:{start:{line:98,column:4},end:{line:99,column:19}},type:"if",locations:[{start:{line:98,column:4},end:{line:99,column:19}},{start:{line:98,column:4},end:{line:99,column:19}}],line:98},"3":{loc:{start:{line:221,column:4},end:{line:222,column:18}},type:"if",locations:[{start:{line:221,column:4},end:{line:222,column:18}},{start:{line:221,column:4},end:{line:222,column:18}}],line:221},"4":{loc:{start:{line:322,column:4},end:{line:323,column:18}},type:"if",locations:[{start:{line:322,column:4},end:{line:323,column:18}},{start:{line:322,column:4},end:{line:323,column:18}}],line:322},"5":{loc:{start:{line:339,column:4},end:{line:344,column:5}},type:"if",locations:[{start:{line:339,column:4},end:{line:344,column:5}},{start:{line:339,column:4},end:{line:344,column:5}}],line:339},"6":{loc:{start:{line:367,column:4},end:{line:368,column:13}},type:"if",locations:[{start:{line:367,column:4},end:{line:368,column:13}},{start:{line:367,column:4},end:{line:368,column:13}}],line:367},"7":{loc:{start:{line:375,column:4},end:{line:378,column:5}},type:"if",locations:[{start:{line:375,column:4},end:{line:378,column:5}},{start:{line:375,column:4},end:{line:378,column:5}}],line:375},"8":{loc:{start:{line:396,column:4},end:{line:397,column:13}},type:"if",locations:[{start:{line:396,column:4},end:{line:397,column:13}},{start:{line:396,column:4},end:{line:397,column:13}}],line:396},"9":{loc:{start:{line:399,column:4},end:{line:400,column:13}},type:"if",locations:[{start:{line:399,column:4},end:{line:400,column:13}},{start:{line:399,column:4},end:{line:400,column:13}}],line:399},"10":{loc:{start:{line:402,column:4},end:{line:405,column:5}},type:"if",locations:[{start:{line:402,column:4},end:{line:405,column:5}},{start:{line:402,column:4},end:{line:405,column:5}}],line:402},"11":{loc:{start:{line:423,column:4},end:{line:435,column:5}},type:"if",locations:[{start:{line:423,column:4},end:{line:435,column:5}},{start:{line:423,column:4},end:{line:435,column:5}}],line:423},"12":{loc:{start:{line:425,column:6},end:{line:426,column:20}},type:"if",locations:[{start:{line:425,column:6},end:{line:426,column:20}},{start:{line:425,column:6},end:{line:426,column:20}}],line:425},"13":{loc:{start:{line:430,column:6},end:{line:431,column:20}},type:"if",locations:[{start:{line:430,column:6},end:{line:431,column:20}},{start:{line:430,column:6},end:{line:431,column:20}}],line:430},"14":{loc:{start:{line:439,column:4},end:{line:447,column:5}},type:"if",locations:[{start:{line:439,column:4},end:{line:447,column:5}},{start:{line:439,column:4},end:{line:447,column:5}}],line:439},"15":{loc:{start:{line:442,column:6},end:{line:443,column:20}},type:"if",locations:[{start:{line:442,column:6},end:{line:443,column:20}},{start:{line:442,column:6},end:{line:443,column:20}}],line:442},"16":{loc:{start:{line:464,column:19},end:{line:464,column:44}},type:"cond-expr",locations:[{start:{line:464,column:27},end:{line:464,column:39}},{start:{line:464,column:42},end:{line:464,column:44}}],line:464},"17":{loc:{start:{line:470,column:4},end:{line:528,column:5}},type:"if",locations:[{start:{line:470,column:4},end:{line:528,column:5}},{start:{line:470,column:4},end:{line:528,column:5}}],line:470},"18":{loc:{start:{line:477,column:8},end:{line:483,column:9}},type:"if",locations:[{start:{line:477,column:8},end:{line:483,column:9}},{start:{line:477,column:8},end:{line:483,column:9}}],line:477},"19":{loc:{start:{line:480,column:10},end:{line:481,column:44}},type:"if",locations:[{start:{line:480,column:10},end:{line:481,column:44}},{start:{line:480,column:10},end:{line:481,column:44}}],line:480},"20":{loc:{start:{line:505,column:8},end:{line:524,column:9}},type:"if",locations:[{start:{line:505,column:8},end:{line:524,column:9}},{start:{line:505,column:8},end:{line:524,column:9}}],line:505},"21":{loc:{start:{line:535,column:6},end:{line:536,column:17}},type:"if",locations:[{start:{line:535,column:6},end:{line:536,column:17}},{start:{line:535,column:6},end:{line:536,column:17}}],line:535},"22":{loc:{start:{line:547,column:6},end:{line:548,column:44}},type:"if",locations:[{start:{line:547,column:6},end:{line:548,column:44}},{start:{line:547,column:6},end:{line:548,column:44}}],line:547},"23":{loc:{start:{line:555,column:4},end:{line:556,column:18}},type:"if",locations:[{start:{line:555,column:4},end:{line:556,column:18}},{start:{line:555,column:4},end:{line:556,column:18}}],line:555},"24":{loc:{start:{line:562,column:4},end:{line:565,column:49}},type:"if",locations:[{start:{line:562,column:4},end:{line:565,column:49}},{start:{line:562,column:4},end:{line:565,column:49}}],line:562},"25":{loc:{start:{line:576,column:6},end:{line:579,column:57}},type:"if",locations:[{start:{line:576,column:6},end:{line:579,column:57}},{start:{line:576,column:6},end:{line:579,column:57}}],line:576},"26":{loc:{start:{line:583,column:4},end:{line:588,column:5}},type:"if",locations:[{start:{line:583,column:4},end:{line:588,column:5}},{start:{line:583,column:4},end:{line:588,column:5}}],line:583},"27":{loc:{start:{line:627,column:4},end:{line:683,column:5}},type:"if",locations:[{start:{line:627,column:4},end:{line:683,column:5}},{start:{line:627,column:4},end:{line:683,column:5}}],line:627},"28":{loc:{start:{line:641,column:8},end:{line:658,column:9}},type:"if",locations:[{start:{line:641,column:8},end:{line:658,column:9}},{start:{line:641,column:8},end:{line:658,column:9}}],line:641},"29":{loc:{start:{line:646,column:10},end:{line:647,column:21}},type:"if",locations:[{start:{line:646,column:10},end:{line:647,column:21}},{start:{line:646,column:10},end:{line:647,column:21}}],line:646},"30":{loc:{start:{line:671,column:8},end:{line:674,column:9}},type:"if",locations:[{start:{line:671,column:8},end:{line:674,column:9}},{start:{line:671,column:8},end:{line:674,column:9}}],line:671},"31":{loc:{start:{line:690,column:6},end:{line:691,column:17}},type:"if",locations:[{start:{line:690,column:6},end:{line:691,column:17}},{start:{line:690,column:6},end:{line:691,column:17}}],line:690},"32":{loc:{start:{line:697,column:6},end:{line:710,column:7}},type:"if",locations:[{start:{line:697,column:6},end:{line:710,column:7}},{start:{line:697,column:6},end:{line:710,column:7}}],line:697},"33":{loc:{start:{line:716,column:6},end:{line:717,column:53}},type:"if",locations:[{start:{line:716,column:6},end:{line:717,column:53}},{start:{line:716,column:6},end:{line:717,column:53}}],line:716},"34":{loc:{start:{line:768,column:4},end:{line:769,column:18}},type:"if",locations:[{start:{line:768,column:4},end:{line:769,column:18}},{start:{line:768,column:4},end:{line:769,column:18}}],line:768},"35":{loc:{start:{line:785,column:19},end:{line:785,column:44}},type:"cond-expr",locations:[{start:{line:785,column:27},end:{line:785,column:39}},{start:{line:785,column:42},end:{line:785,column:44}}],line:785},"36":{loc:{start:{line:789,column:4},end:{line:825,column:5}},type:"if",locations:[{start:{line:789,column:4},end:{line:825,column:5}},{start:{line:789,column:4},end:{line:825,column:5}}],line:789},"37":{loc:{start:{line:798,column:8},end:{line:802,column:9}},type:"if",locations:[{start:{line:798,column:8},end:{line:802,column:9}},{start:{line:798,column:8},end:{line:802,column:9}}],line:798},"38":{loc:{start:{line:799,column:10},end:{line:800,column:45}},type:"if",locations:[{start:{line:799,column:10},end:{line:800,column:45}},{start:{line:799,column:10},end:{line:800,column:45}}],line:799},"39":{loc:{start:{line:817,column:8},end:{line:818,column:44}},type:"if",locations:[{start:{line:817,column:8},end:{line:818,column:44}},{start:{line:817,column:8},end:{line:818,column:44}}],line:817},"40":{loc:{start:{line:833,column:6},end:{line:834,column:17}},type:"if",locations:[{start:{line:833,column:6},end:{line:834,column:17}},{start:{line:833,column:6},end:{line:834,column:17}}],line:833},"41":{loc:{start:{line:844,column:6},end:{line:845,column:45}},type:"if",locations:[{start:{line:844,column:6},end:{line:845,column:45}},{start:{line:844,column:6},end:{line:845,column:45}}],line:844},"42":{loc:{start:{line:855,column:4},end:{line:858,column:43}},type:"if",locations:[{start:{line:855,column:4},end:{line:858,column:43}},{start:{line:855,column:4},end:{line:858,column:43}}],line:855},"43":{loc:{start:{line:867,column:6},end:{line:870,column:51}},type:"if",locations:[{start:{line:867,column:6},end:{line:870,column:51}},{start:{line:867,column:6},end:{line:870,column:51}}],line:867},"44":{loc:{start:{line:874,column:4},end:{line:879,column:5}},type:"if",locations:[{start:{line:874,column:4},end:{line:879,column:5}},{start:{line:874,column:4},end:{line:879,column:5}}],line:874},"45":{loc:{start:{line:905,column:4},end:{line:906,column:18}},type:"if",locations:[{start:{line:905,column:4},end:{line:906,column:18}},{start:{line:905,column:4},end:{line:906,column:18}}],line:905},"46":{loc:{start:{line:911,column:6},end:{line:912,column:17}},type:"if",locations:[{start:{line:911,column:6},end:{line:912,column:17}},{start:{line:911,column:6},end:{line:912,column:17}}],line:911},"47":{loc:{start:{line:935,column:4},end:{line:936,column:15}},type:"if",locations:[{start:{line:935,column:4},end:{line:936,column:15}},{start:{line:935,column:4},end:{line:936,column:15}}],line:935},"48":{loc:{start:{line:959,column:4},end:{line:960,column:18}},type:"if",locations:[{start:{line:959,column:4},end:{line:960,column:18}},{start:{line:959,column:4},end:{line:960,column:18}}],line:959},"49":{loc:{start:{line:962,column:4},end:{line:963,column:18}},type:"if",locations:[{start:{line:962,column:4},end:{line:963,column:18}},{start:{line:962,column:4},end:{line:963,column:18}}],line:962},"50":{loc:{start:{line:984,column:4},end:{line:1014,column:5}},type:"if",locations:[{start:{line:984,column:4},end:{line:1014,column:5}},{start:{line:984,column:4},end:{line:1014,column:5}}],line:984},"51":{loc:{start:{line:993,column:8},end:{line:996,column:9}},type:"if",locations:[{start:{line:993,column:8},end:{line:996,column:9}},{start:{line:993,column:8},end:{line:996,column:9}}],line:993},"52":{loc:{start:{line:1022,column:6},end:{line:1023,column:17}},type:"if",locations:[{start:{line:1022,column:6},end:{line:1023,column:17}},{start:{line:1022,column:6},end:{line:1023,column:17}}],line:1022},"53":{loc:{start:{line:1028,column:6},end:{line:1031,column:7}},type:"if",locations:[{start:{line:1028,column:6},end:{line:1031,column:7}},{start:{line:1028,column:6},end:{line:1031,column:7}}],line:1028},"54":{loc:{start:{line:1033,column:6},end:{line:1034,column:53}},type:"if",locations:[{start:{line:1033,column:6},end:{line:1034,column:53}},{start:{line:1033,column:6},end:{line:1034,column:53}}],line:1033},"55":{loc:{start:{line:1096,column:4},end:{line:1097,column:18}},type:"if",locations:[{start:{line:1096,column:4},end:{line:1097,column:18}},{start:{line:1096,column:4},end:{line:1097,column:18}}],line:1096},"56":{loc:{start:{line:1116,column:4},end:{line:1117,column:18}},type:"if",locations:[{start:{line:1116,column:4},end:{line:1117,column:18}},{start:{line:1116,column:4},end:{line:1117,column:18}}],line:1116},"57":{loc:{start:{line:1129,column:6},end:{line:1130,column:17}},type:"if",locations:[{start:{line:1129,column:6},end:{line:1130,column:17}},{start:{line:1129,column:6},end:{line:1130,column:17}}],line:1129},"58":{loc:{start:{line:1133,column:6},end:{line:1134,column:17}},type:"if",locations:[{start:{line:1133,column:6},end:{line:1134,column:17}},{start:{line:1133,column:6},end:{line:1134,column:17}}],line:1133},"59":{loc:{start:{line:1139,column:6},end:{line:1140,column:21}},type:"if",locations:[{start:{line:1139,column:6},end:{line:1140,column:21}},{start:{line:1139,column:6},end:{line:1140,column:21}}],line:1139},"60":{loc:{start:{line:1139,column:10},end:{line:1139,column:39}},type:"binary-expr",locations:[{start:{line:1139,column:10},end:{line:1139,column:14}},{start:{line:1139,column:18},end:{line:1139,column:39}}],line:1139},"61":{loc:{start:{line:1162,column:4},end:{line:1163,column:13}},type:"if",locations:[{start:{line:1162,column:4},end:{line:1163,column:13}},{start:{line:1162,column:4},end:{line:1163,column:13}}],line:1162},"62":{loc:{start:{line:1175,column:4},end:{line:1176,column:13}},type:"if",locations:[{start:{line:1175,column:4},end:{line:1176,column:13}},{start:{line:1175,column:4},end:{line:1176,column:13}}],line:1175},"63":{loc:{start:{line:1232,column:6},end:{line:1233,column:23}},type:"if",locations:[{start:{line:1232,column:6},end:{line:1233,column:23}},{start:{line:1232,column:6},end:{line:1233,column:23}}],line:1232},"64":{loc:{start:{line:1280,column:4},end:{line:1281,column:48}},type:"if",locations:[{start:{line:1280,column:4},end:{line:1281,column:48}},{start:{line:1280,column:4},end:{line:1281,column:48}}],line:1280},"65":{loc:{start:{line:1317,column:4},end:{line:1318,column:48}},type:"if",locations:[{start:{line:1317,column:4},end:{line:1318,column:48}},{start:{line:1317,column:4},end:{line:1318,column:48}}],line:1317},"66":{loc:{start:{line:1364,column:4},end:{line:1365,column:44}},type:"if",locations:[{start:{line:1364,column:4},end:{line:1365,column:44}},{start:{line:1364,column:4},end:{line:1365,column:44}}],line:1364},"67":{loc:{start:{line:1391,column:18},end:{line:1391,column:36}},type:"binary-expr",locations:[{start:{line:1391,column:18},end:{line:1391,column:31}},{start:{line:1391,column:35},end:{line:1391,column:36}}],line:1391},"68":{loc:{start:{line:1392,column:16},end:{line:1392,column:41}},type:"binary-expr",locations:[{start:{line:1392,column:16},end:{line:1392,column:27}},{start:{line:1392,column:31},end:{line:1392,column:41}}],line:1392},"69":{loc:{start:{line:1420,column:4},end:{line:1421,column:61}},type:"if",locations:[{start:{line:1420,column:4},end:{line:1421,column:61}},{start:{line:1420,column:4},end:{line:1421,column:61}}],line:1420},"70":{loc:{start:{line:1423,column:18},end:{line:1423,column:36}},type:"binary-expr",locations:[{start:{line:1423,column:18},end:{line:1423,column:31}},{start:{line:1423,column:35},end:{line:1423,column:36}}],line:1423},"71":{loc:{start:{line:1424,column:16},end:{line:1424,column:41}},type:"binary-expr",locations:[{start:{line:1424,column:16},end:{line:1424,column:27}},{start:{line:1424,column:31},end:{line:1424,column:41}}],line:1424},"72":{loc:{start:{line:1462,column:18},end:{line:1462,column:36}},type:"binary-expr",locations:[{start:{line:1462,column:18},end:{line:1462,column:31}},{start:{line:1462,column:35},end:{line:1462,column:36}}],line:1462},"73":{loc:{start:{line:1463,column:16},end:{line:1463,column:41}},type:"binary-expr",locations:[{start:{line:1463,column:16},end:{line:1463,column:27}},{start:{line:1463,column:31},end:{line:1463,column:41}}],line:1463},"74":{loc:{start:{line:1491,column:4},end:{line:1492,column:55}},type:"if",locations:[{start:{line:1491,column:4},end:{line:1492,column:55}},{start:{line:1491,column:4},end:{line:1492,column:55}}],line:1491},"75":{loc:{start:{line:1494,column:18},end:{line:1494,column:36}},type:"binary-expr",locations:[{start:{line:1494,column:18},end:{line:1494,column:31}},{start:{line:1494,column:35},end:{line:1494,column:36}}],line:1494},"76":{loc:{start:{line:1495,column:16},end:{line:1495,column:41}},type:"binary-expr",locations:[{start:{line:1495,column:16},end:{line:1495,column:27}},{start:{line:1495,column:31},end:{line:1495,column:41}}],line:1495},"77":{loc:{start:{line:1545,column:13},end:{line:1545,column:24}},type:"binary-expr",locations:[{start:{line:1545,column:13},end:{line:1545,column:18}},{start:{line:1545,column:22},end:{line:1545,column:24}}],line:1545},"78":{loc:{start:{line:1559,column:4},end:{line:1560,column:42}},type:"if",locations:[{start:{line:1559,column:4},end:{line:1560,column:42}},{start:{line:1559,column:4},end:{line:1560,column:42}}],line:1559},"79":{loc:{start:{line:1618,column:4},end:{line:1619,column:42}},type:"if",locations:[{start:{line:1618,column:4},end:{line:1619,column:42}},{start:{line:1618,column:4},end:{line:1619,column:42}}],line:1618},"80":{loc:{start:{line:1647,column:6},end:{line:1648,column:17}},type:"if",locations:[{start:{line:1647,column:6},end:{line:1648,column:17}},{start:{line:1647,column:6},end:{line:1648,column:17}}],line:1647},"81":{loc:{start:{line:1662,column:4},end:{line:1663,column:16}},type:"if",locations:[{start:{line:1662,column:4},end:{line:1663,column:16}},{start:{line:1662,column:4},end:{line:1663,column:16}}],line:1662},"82":{loc:{start:{line:1699,column:6},end:{line:1700,column:17}},type:"if",locations:[{start:{line:1699,column:6},end:{line:1700,column:17}},{start:{line:1699,column:6},end:{line:1700,column:17}}],line:1699},"83":{loc:{start:{line:1719,column:6},end:{line:1720,column:17}},type:"if",locations:[{start:{line:1719,column:6},end:{line:1720,column:17}},{start:{line:1719,column:6},end:{line:1720,column:17}}],line:1719},"84":{loc:{start:{line:1735,column:4},end:{line:1736,column:16}},type:"if",locations:[{start:{line:1735,column:4},end:{line:1736,column:16}},{start:{line:1735,column:4},end:{line:1736,column:16}}],line:1735},"85":{loc:{start:{line:1742,column:6},end:{line:1745,column:7}},type:"if",locations:[{start:{line:1742,column:6},end:{line:1745,column:7}},{start:{line:1742,column:6},end:{line:1745,column:7}}],line:1742},"86":{loc:{start:{line:1762,column:4},end:{line:1763,column:18}},type:"if",locations:[{start:{line:1762,column:4},end:{line:1763,column:18}},{start:{line:1762,column:4},end:{line:1763,column:18}}],line:1762},"87":{loc:{start:{line:1769,column:6},end:{line:1770,column:17}},type:"if",locations:[{start:{line:1769,column:6},end:{line:1770,column:17}},{start:{line:1769,column:6},end:{line:1770,column:17}}],line:1769},"88":{loc:{start:{line:1787,column:4},end:{line:1788,column:18}},type:"if",locations:[{start:{line:1787,column:4},end:{line:1788,column:18}},{start:{line:1787,column:4},end:{line:1788,column:18}}],line:1787},"89":{loc:{start:{line:1793,column:6},end:{line:1794,column:17}},type:"if",locations:[{start:{line:1793,column:6},end:{line:1794,column:17}},{start:{line:1793,column:6},end:{line:1794,column:17}}],line:1793},"90":{loc:{start:{line:1811,column:4},end:{line:1812,column:18}},type:"if",locations:[{start:{line:1811,column:4},end:{line:1812,column:18}},{start:{line:1811,column:4},end:{line:1812,column:18}}],line:1811},"91":{loc:{start:{line:1826,column:4},end:{line:1827,column:18}},type:"if",locations:[{start:{line:1826,column:4},end:{line:1827,column:18}},{start:{line:1826,column:4},end:{line:1827,column:18}}],line:1826},"92":{loc:{start:{line:1841,column:4},end:{line:1842,column:35}},type:"if",locations:[{start:{line:1841,column:4},end:{line:1842,column:35}},{start:{line:1841,column:4},end:{line:1842,column:35}}],line:1841},"93":{loc:{start:{line:1847,column:6},end:{line:1848,column:17}},type:"if",locations:[{start:{line:1847,column:6},end:{line:1848,column:17}},{start:{line:1847,column:6},end:{line:1848,column:17}}],line:1847},"94":{loc:{start:{line:1874,column:6},end:{line:1875,column:40}},type:"if",locations:[{start:{line:1874,column:6},end:{line:1875,column:40}},{start:{line:1874,column:6},end:{line:1875,column:40}}],line:1874},"95":{loc:{start:{line:1909,column:4},end:{line:1910,column:18}},type:"if",locations:[{start:{line:1909,column:4},end:{line:1910,column:18}},{start:{line:1909,column:4},end:{line:1910,column:18}}],line:1909},"96":{loc:{start:{line:1925,column:4},end:{line:1926,column:18}},type:"if",locations:[{start:{line:1925,column:4},end:{line:1926,column:18}},{start:{line:1925,column:4},end:{line:1926,column:18}}],line:1925},"97":{loc:{start:{line:1948,column:4},end:{line:1949,column:18}},type:"if",locations:[{start:{line:1948,column:4},end:{line:1949,column:18}},{start:{line:1948,column:4},end:{line:1949,column:18}}],line:1948},"98":{loc:{start:{line:1980,column:4},end:{line:1981,column:13}},type:"if",locations:[{start:{line:1980,column:4},end:{line:1981,column:13}},{start:{line:1980,column:4},end:{line:1981,column:13}}],line:1980},"99":{loc:{start:{line:1985,column:4},end:{line:1986,column:13}},type:"if",locations:[{start:{line:1985,column:4},end:{line:1986,column:13}},{start:{line:1985,column:4},end:{line:1986,column:13}}],line:1985},"100":{loc:{start:{line:2012,column:4},end:{line:2013,column:42}},type:"if",locations:[{start:{line:2012,column:4},end:{line:2013,column:42}},{start:{line:2012,column:4},end:{line:2013,column:42}}],line:2012},"101":{loc:{start:{line:2026,column:4},end:{line:2027,column:27}},type:"if",locations:[{start:{line:2026,column:4},end:{line:2027,column:27}},{start:{line:2026,column:4},end:{line:2027,column:27}}],line:2026},"102":{loc:{start:{line:2041,column:4},end:{line:2042,column:31}},type:"if",locations:[{start:{line:2041,column:4},end:{line:2042,column:31}},{start:{line:2041,column:4},end:{line:2042,column:31}}],line:2041},"103":{loc:{start:{line:2067,column:6},end:{line:2068,column:17}},type:"if",locations:[{start:{line:2067,column:6},end:{line:2068,column:17}},{start:{line:2067,column:6},end:{line:2068,column:17}}],line:2067},"104":{loc:{start:{line:2092,column:4},end:{line:2093,column:42}},type:"if",locations:[{start:{line:2092,column:4},end:{line:2093,column:42}},{start:{line:2092,column:4},end:{line:2093,column:42}}],line:2092},"105":{loc:{start:{line:2111,column:14},end:{line:2111,column:23}},type:"default-arg",locations:[{start:{line:2111,column:21},end:{line:2111,column:23}}],line:2111},"106":{loc:{start:{line:2189,column:15},end:{line:2189,column:50}},type:"cond-expr",locations:[{start:{line:2189,column:26},end:{line:2189,column:38}},{start:{line:2189,column:41},end:{line:2189,column:50}}],line:2189},"107":{loc:{start:{line:2237,column:4},end:{line:2238,column:53}},type:"if",locations:[{start:{line:2237,column:4},end:{line:2238,column:53}},{start:{line:2237,column:4},end:{line:2238,column:53}}],line:2237},"108":{loc:{start:{line:2284,column:16},end:{line:2284,column:34}},type:"binary-expr",locations:[{start:{line:2284,column:16},end:{line:2284,column:20}},{start:{line:2284,column:24},end:{line:2284,column:34}}],line:2284},"109":{loc:{start:{line:2285,column:17},end:{line:2285,column:31}},type:"binary-expr",locations:[{start:{line:2285,column:17},end:{line:2285,column:22}},{start:{line:2285,column:26},end:{line:2285,column:31}}],line:2285},"110":{loc:{start:{line:2331,column:15},end:{line:2331,column:33}},type:"cond-expr",locations:[{start:{line:2331,column:28},end:{line:2331,column:29}},{start:{line:2331,column:32},end:{line:2331,column:33}}],line:2331},"111":{loc:{start:{line:2332,column:15},end:{line:2332,column:31}},type:"cond-expr",locations:[{start:{line:2332,column:26},end:{line:2332,column:27}},{start:{line:2332,column:30},end:{line:2332,column:31}}],line:2332},"112":{loc:{start:{line:2387,column:4},end:{line:2391,column:5}},type:"if",locations:[{start:{line:2387,column:4},end:{line:2391,column:5}},{start:{line:2387,column:4},end:{line:2391,column:5}}],line:2387},"113":{loc:{start:{line:2429,column:4},end:{line:2432,column:5}},type:"if",locations:[{start:{line:2429,column:4},end:{line:2432,column:5}},{start:{line:2429,column:4},end:{line:2432,column:5}}],line:2429},"114":{loc:{start:{line:2434,column:4},end:{line:2435,column:25}},type:"if",locations:[{start:{line:2434,column:4},end:{line:2435,column:25}},{start:{line:2434,column:4},end:{line:2435,column:25}}],line:2434},"115":{loc:{start:{line:2447,column:4},end:{line:2448,column:25}},type:"if",locations:[{start:{line:2447,column:4},end:{line:2448,column:25}},{start:{line:2447,column:4},end:{line:2448,column:25}}],line:2447},"116":{loc:{start:{line:2457,column:4},end:{line:2458,column:15}},type:"if",locations:[{start:{line:2457,column:4},end:{line:2458,column:15}},{start:{line:2457,column:4},end:{line:2458,column:15}}],line:2457},"117":{loc:{start:{line:2460,column:4},end:{line:2461,column:15}},type:"if",locations:[{start:{line:2460,column:4},end:{line:2461,column:15}},{start:{line:2460,column:4},end:{line:2461,column:15}}],line:2460},"118":{loc:{start:{line:2465,column:4},end:{line:2466,column:15}},type:"if",locations:[{start:{line:2465,column:4},end:{line:2466,column:15}},{start:{line:2465,column:4},end:{line:2466,column:15}}],line:2465},"119":{loc:{start:{line:2482,column:6},end:{line:2483,column:17}},type:"if",locations:[{start:{line:2482,column:6},end:{line:2483,column:17}},{start:{line:2482,column:6},end:{line:2483,column:17}}],line:2482},"120":{loc:{start:{line:2517,column:13},end:{line:2517,column:56}},type:"cond-expr",locations:[{start:{line:2517,column:26},end:{line:2517,column:49}},{start:{line:2517,column:52},end:{line:2517,column:56}}],line:2517},"121":{loc:{start:{line:2575,column:15},end:{line:2577,column:14}},type:"cond-expr",locations:[{start:{line:2576,column:10},end:{line:2576,column:40}},{start:{line:2577,column:10},end:{line:2577,column:14}}],line:2575},"122":{loc:{start:{line:2578,column:12},end:{line:2580,column:14}},type:"cond-expr",locations:[{start:{line:2579,column:10},end:{line:2579,column:28}},{start:{line:2580,column:10},end:{line:2580,column:14}}],line:2578},"123":{loc:{start:{line:2600,column:16},end:{line:2600,column:43}},type:"binary-expr",locations:[{start:{line:2600,column:16},end:{line:2600,column:20}},{start:{line:2600,column:24},end:{line:2600,column:43}}],line:2600},"124":{loc:{start:{line:2601,column:18},end:{line:2601,column:46}},type:"cond-expr",locations:[{start:{line:2601,column:35},end:{line:2601,column:41}},{start:{line:2601,column:44},end:{line:2601,column:46}}],line:2601},"125":{loc:{start:{line:2602,column:16},end:{line:2602,column:25}},type:"binary-expr",locations:[{start:{line:2602,column:16},end:{line:2602,column:20}},{start:{line:2602,column:24},end:{line:2602,column:25}}],line:2602},"126":{loc:{start:{line:2613,column:4},end:{line:2614,column:19}},type:"if",locations:[{start:{line:2613,column:4},end:{line:2614,column:19}},{start:{line:2613,column:4},end:{line:2614,column:19}}],line:2613}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":0,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":0,"820":0,"821":0,"822":0,"823":0,"824":0,"825":0,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"836":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":0,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"866":0,"867":0,"868":0,"869":0,"870":0,"871":0,"872":0,"873":0,"874":0,"875":0,"876":0,"877":0,"878":0,"879":0,"880":0,"881":0,"882":0,"883":0,"884":0,"885":0,"886":0,"887":0,"888":0,"889":0,"890":0,"891":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"93a6b3f1f1795e1886da9733d949badfbdaafda2"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2dlk6kh4um=function(){return actualCoverage;};}return actualCoverage;}cov_2dlk6kh4um();const assert=(cov_2dlk6kh4um().s[0]++,require('bsert'));const bio=(cov_2dlk6kh4um().s[1]++,require('bufio'));const{BufferSet}=(cov_2dlk6kh4um().s[2]++,require('buffer-map'));const util=(cov_2dlk6kh4um().s[3]++,require('../utils/util'));const Amount=(cov_2dlk6kh4um().s[4]++,require('../btc/amount'));const CoinView=(cov_2dlk6kh4um().s[5]++,require('../coins/coinview'));const Coin=(cov_2dlk6kh4um().s[6]++,require('../primitives/coin'));const Outpoint=(cov_2dlk6kh4um().s[7]++,require('../primitives/outpoint'));const records=(cov_2dlk6kh4um().s[8]++,require('./records'));const layout=(cov_2dlk6kh4um().s[9]++,require('./layout').txdb);const consensus=(cov_2dlk6kh4um().s[10]++,require('../protocol/consensus'));const policy=(cov_2dlk6kh4um().s[11]++,require('../protocol/policy'));const{TXRecord}=(cov_2dlk6kh4um().s[12]++,records);const{inspectSymbol}=(cov_2dlk6kh4um().s[13]++,require('../utils'));/**
 * TXDB
 * @alias module:wallet.TXDB
 */class TXDB{/**
   * Create a TXDB.
   * @constructor
   * @param {WalletDB} wdb
   */constructor(wdb,wid){cov_2dlk6kh4um().f[0]++;cov_2dlk6kh4um().s[14]++;this.wdb=wdb;cov_2dlk6kh4um().s[15]++;this.db=wdb.db;cov_2dlk6kh4um().s[16]++;this.logger=wdb.logger;cov_2dlk6kh4um().s[17]++;this.wid=(cov_2dlk6kh4um().b[0][0]++,wid)||(cov_2dlk6kh4um().b[0][1]++,0);cov_2dlk6kh4um().s[18]++;this.bucket=null;cov_2dlk6kh4um().s[19]++;this.wallet=null;cov_2dlk6kh4um().s[20]++;this.locked=new BufferSet();}/**
   * Open TXDB.
   * @returns {Promise}
   */async open(wallet){cov_2dlk6kh4um().f[1]++;const prefix=(cov_2dlk6kh4um().s[21]++,layout.prefix.encode(wallet.wid));cov_2dlk6kh4um().s[22]++;this.wid=wallet.wid;cov_2dlk6kh4um().s[23]++;this.bucket=this.db.bucket(prefix);cov_2dlk6kh4um().s[24]++;this.wallet=wallet;}/**
   * Emit transaction event.
   * @private
   * @param {String} event
   * @param {Object} data
   * @param {Details} details
   */emit(event,data,details){cov_2dlk6kh4um().f[2]++;cov_2dlk6kh4um().s[25]++;this.wdb.emit(event,this.wallet,data,details);cov_2dlk6kh4um().s[26]++;this.wallet.emit(event,data,details);}/**
   * Get wallet path for output.
   * @param {Output} output
   * @returns {Promise} - Returns {@link Path}.
   */getPath(output){cov_2dlk6kh4um().f[3]++;const hash=(cov_2dlk6kh4um().s[27]++,output.getHash());cov_2dlk6kh4um().s[28]++;if(!hash){cov_2dlk6kh4um().b[1][0]++;cov_2dlk6kh4um().s[29]++;return null;}else{cov_2dlk6kh4um().b[1][1]++;}cov_2dlk6kh4um().s[30]++;return this.wdb.getPath(this.wid,hash);}/**
   * Test whether path exists for output.
   * @param {Output} output
   * @returns {Promise} - Returns Boolean.
   */hasPath(output){cov_2dlk6kh4um().f[4]++;const hash=(cov_2dlk6kh4um().s[31]++,output.getHash());cov_2dlk6kh4um().s[32]++;if(!hash){cov_2dlk6kh4um().b[2][0]++;cov_2dlk6kh4um().s[33]++;return false;}else{cov_2dlk6kh4um().b[2][1]++;}cov_2dlk6kh4um().s[34]++;return this.wdb.hasPath(this.wid,hash);}/**
   * Save credit.
   * @param {Credit} credit
   * @param {Path} path
   */async saveCredit(b,credit,path){cov_2dlk6kh4um().f[5]++;const{coin}=(cov_2dlk6kh4um().s[35]++,credit);cov_2dlk6kh4um().s[36]++;b.put(layout.c.encode(coin.hash,coin.index),credit.toRaw());cov_2dlk6kh4um().s[37]++;b.put(layout.C.encode(path.account,coin.hash,coin.index),null);cov_2dlk6kh4um().s[38]++;return this.addOutpointMap(b,coin.hash,coin.index);}/**
   * Remove credit.
   * @param {Credit} credit
   * @param {Path} path
   */async removeCredit(b,credit,path){cov_2dlk6kh4um().f[6]++;const{coin}=(cov_2dlk6kh4um().s[39]++,credit);cov_2dlk6kh4um().s[40]++;b.del(layout.c.encode(coin.hash,coin.index));cov_2dlk6kh4um().s[41]++;b.del(layout.C.encode(path.account,coin.hash,coin.index));cov_2dlk6kh4um().s[42]++;return this.removeOutpointMap(b,coin.hash,coin.index);}/**
   * Spend credit.
   * @param {Credit} credit
   * @param {TX} tx
   * @param {Number} index
   */spendCredit(b,credit,tx,index){cov_2dlk6kh4um().f[7]++;const prevout=(cov_2dlk6kh4um().s[43]++,tx.inputs[index].prevout);const spender=(cov_2dlk6kh4um().s[44]++,Outpoint.fromTX(tx,index));cov_2dlk6kh4um().s[45]++;b.put(layout.s.encode(prevout.hash,prevout.index),spender.toRaw());cov_2dlk6kh4um().s[46]++;b.put(layout.d.encode(spender.hash,spender.index),credit.coin.toRaw());}/**
   * Unspend credit.
   * @param {TX} tx
   * @param {Number} index
   */unspendCredit(b,tx,index){cov_2dlk6kh4um().f[8]++;const prevout=(cov_2dlk6kh4um().s[47]++,tx.inputs[index].prevout);const spender=(cov_2dlk6kh4um().s[48]++,Outpoint.fromTX(tx,index));cov_2dlk6kh4um().s[49]++;b.del(layout.s.encode(prevout.hash,prevout.index));cov_2dlk6kh4um().s[50]++;b.del(layout.d.encode(spender.hash,spender.index));}/**
   * Write input record.
   * @param {TX} tx
   * @param {Number} index
   */async writeInput(b,tx,index){cov_2dlk6kh4um().f[9]++;const prevout=(cov_2dlk6kh4um().s[51]++,tx.inputs[index].prevout);const spender=(cov_2dlk6kh4um().s[52]++,Outpoint.fromTX(tx,index));cov_2dlk6kh4um().s[53]++;b.put(layout.s.encode(prevout.hash,prevout.index),spender.toRaw());cov_2dlk6kh4um().s[54]++;return this.addOutpointMap(b,prevout.hash,prevout.index);}/**
   * Remove input record.
   * @param {TX} tx
   * @param {Number} index
   */async removeInput(b,tx,index){cov_2dlk6kh4um().f[10]++;const prevout=(cov_2dlk6kh4um().s[55]++,tx.inputs[index].prevout);cov_2dlk6kh4um().s[56]++;b.del(layout.s.encode(prevout.hash,prevout.index));cov_2dlk6kh4um().s[57]++;return this.removeOutpointMap(b,prevout.hash,prevout.index);}/**
   * Update wallet balance.
   * @param {BalanceDelta} state
   */async updateBalance(b,state){cov_2dlk6kh4um().f[11]++;const balance=(cov_2dlk6kh4um().s[58]++,await this.getWalletBalance());cov_2dlk6kh4um().s[59]++;state.applyTo(balance);cov_2dlk6kh4um().s[60]++;b.put(layout.R.encode(),balance.toRaw());cov_2dlk6kh4um().s[61]++;return balance;}/**
   * Update account balance.
   * @param {Number} acct
   * @param {Balance} delta
   */async updateAccountBalance(b,acct,delta){cov_2dlk6kh4um().f[12]++;const balance=(cov_2dlk6kh4um().s[62]++,await this.getAccountBalance(acct));cov_2dlk6kh4um().s[63]++;delta.applyTo(balance);cov_2dlk6kh4um().s[64]++;b.put(layout.r.encode(acct),balance.toRaw());cov_2dlk6kh4um().s[65]++;return balance;}/**
   * Test a whether a coin has been spent.
   * @param {Hash} hash
   * @param {Number} index
   * @returns {Promise} - Returns Boolean.
   */async getSpent(hash,index){cov_2dlk6kh4um().f[13]++;const data=(cov_2dlk6kh4um().s[66]++,await this.bucket.get(layout.s.encode(hash,index)));cov_2dlk6kh4um().s[67]++;if(!data){cov_2dlk6kh4um().b[3][0]++;cov_2dlk6kh4um().s[68]++;return null;}else{cov_2dlk6kh4um().b[3][1]++;}cov_2dlk6kh4um().s[69]++;return Outpoint.fromRaw(data);}/**
   * Test a whether a coin has been spent.
   * @param {Hash} hash
   * @param {Number} index
   * @returns {Promise} - Returns Boolean.
   */isSpent(hash,index){cov_2dlk6kh4um().f[14]++;cov_2dlk6kh4um().s[70]++;return this.bucket.has(layout.s.encode(hash,index));}/**
   * Append to global map.
   * @param {Number} height
   * @returns {Promise}
   */addBlockMap(b,height){cov_2dlk6kh4um().f[15]++;cov_2dlk6kh4um().s[71]++;return this.wdb.addBlockMap(b.root(),height,this.wid);}/**
   * Remove from global map.
   * @param {Number} height
   * @returns {Promise}
   */removeBlockMap(b,height){cov_2dlk6kh4um().f[16]++;cov_2dlk6kh4um().s[72]++;return this.wdb.removeBlockMap(b.root(),height,this.wid);}/**
   * Append to global map.
   * @param {Hash} hash
   * @returns {Promise}
   */addTXMap(b,hash){cov_2dlk6kh4um().f[17]++;cov_2dlk6kh4um().s[73]++;return this.wdb.addTXMap(b.root(),hash,this.wid);}/**
   * Remove from global map.
   * @param {Hash} hash
   * @returns {Promise}
   */removeTXMap(b,hash){cov_2dlk6kh4um().f[18]++;cov_2dlk6kh4um().s[74]++;return this.wdb.removeTXMap(b.root(),hash,this.wid);}/**
   * Append to global map.
   * @param {Hash} hash
   * @param {Number} index
   * @returns {Promise}
   */addOutpointMap(b,hash,index){cov_2dlk6kh4um().f[19]++;cov_2dlk6kh4um().s[75]++;return this.wdb.addOutpointMap(b.root(),hash,index,this.wid);}/**
   * Remove from global map.
   * @param {Hash} hash
   * @param {Number} index
   * @returns {Promise}
   */removeOutpointMap(b,hash,index){cov_2dlk6kh4um().f[20]++;cov_2dlk6kh4um().s[76]++;return this.wdb.removeOutpointMap(b.root(),hash,index,this.wid);}/**
   * List block records.
   * @returns {Promise}
   */getBlocks(){cov_2dlk6kh4um().f[21]++;cov_2dlk6kh4um().s[77]++;return this.bucket.keys({gte:layout.b.min(),lte:layout.b.max(),parse:key=>{cov_2dlk6kh4um().f[22]++;cov_2dlk6kh4um().s[78]++;return layout.b.decode(key)[0];}});}/**
   * Get block record.
   * @param {Number} height
   * @returns {Promise}
   */async getBlock(height){cov_2dlk6kh4um().f[23]++;const data=(cov_2dlk6kh4um().s[79]++,await this.bucket.get(layout.b.encode(height)));cov_2dlk6kh4um().s[80]++;if(!data){cov_2dlk6kh4um().b[4][0]++;cov_2dlk6kh4um().s[81]++;return null;}else{cov_2dlk6kh4um().b[4][1]++;}cov_2dlk6kh4um().s[82]++;return BlockRecord.fromRaw(data);}/**
   * Append to the global block record.
   * @param {Hash} hash
   * @param {BlockMeta} block
   * @returns {Promise}
   */async addBlock(b,hash,block){cov_2dlk6kh4um().f[24]++;const key=(cov_2dlk6kh4um().s[83]++,layout.b.encode(block.height));const data=(cov_2dlk6kh4um().s[84]++,await this.bucket.get(key));cov_2dlk6kh4um().s[85]++;if(!data){cov_2dlk6kh4um().b[5][0]++;const blk=(cov_2dlk6kh4um().s[86]++,BlockRecord.fromMeta(block));cov_2dlk6kh4um().s[87]++;blk.add(hash);cov_2dlk6kh4um().s[88]++;b.put(key,blk.toRaw());cov_2dlk6kh4um().s[89]++;return;}else{cov_2dlk6kh4um().b[5][1]++;}const raw=(cov_2dlk6kh4um().s[90]++,Buffer.allocUnsafe(data.length+32));cov_2dlk6kh4um().s[91]++;data.copy(raw,0);const size=(cov_2dlk6kh4um().s[92]++,raw.readUInt32LE(40,true));cov_2dlk6kh4um().s[93]++;raw.writeUInt32LE(size+1,40,true);cov_2dlk6kh4um().s[94]++;hash.copy(raw,data.length);cov_2dlk6kh4um().s[95]++;b.put(key,raw);}/**
   * Remove from the global block record.
   * @param {Hash} hash
   * @param {Number} height
   * @returns {Promise}
   */async removeBlock(b,hash,height){cov_2dlk6kh4um().f[25]++;const key=(cov_2dlk6kh4um().s[96]++,layout.b.encode(height));const data=(cov_2dlk6kh4um().s[97]++,await this.bucket.get(key));cov_2dlk6kh4um().s[98]++;if(!data){cov_2dlk6kh4um().b[6][0]++;cov_2dlk6kh4um().s[99]++;return;}else{cov_2dlk6kh4um().b[6][1]++;}const size=(cov_2dlk6kh4um().s[100]++,data.readUInt32LE(40,true));cov_2dlk6kh4um().s[101]++;assert(size>0);cov_2dlk6kh4um().s[102]++;assert(data.slice(-32).equals(hash));cov_2dlk6kh4um().s[103]++;if(size===1){cov_2dlk6kh4um().b[7][0]++;cov_2dlk6kh4um().s[104]++;b.del(key);cov_2dlk6kh4um().s[105]++;return;}else{cov_2dlk6kh4um().b[7][1]++;}const raw=(cov_2dlk6kh4um().s[106]++,data.slice(0,-32));cov_2dlk6kh4um().s[107]++;raw.writeUInt32LE(size-1,40,true);cov_2dlk6kh4um().s[108]++;b.put(key,raw);}/**
   * Remove from the global block record.
   * @param {Hash} hash
   * @param {Number} height
   * @returns {Promise}
   */async spliceBlock(b,hash,height){cov_2dlk6kh4um().f[26]++;const block=(cov_2dlk6kh4um().s[109]++,await this.getBlock(height));cov_2dlk6kh4um().s[110]++;if(!block){cov_2dlk6kh4um().b[8][0]++;cov_2dlk6kh4um().s[111]++;return;}else{cov_2dlk6kh4um().b[8][1]++;}cov_2dlk6kh4um().s[112]++;if(!block.remove(hash)){cov_2dlk6kh4um().b[9][0]++;cov_2dlk6kh4um().s[113]++;return;}else{cov_2dlk6kh4um().b[9][1]++;}cov_2dlk6kh4um().s[114]++;if(block.hashes.size===0){cov_2dlk6kh4um().b[10][0]++;cov_2dlk6kh4um().s[115]++;b.del(layout.b.encode(height));cov_2dlk6kh4um().s[116]++;return;}else{cov_2dlk6kh4um().b[10][1]++;}cov_2dlk6kh4um().s[117]++;b.put(layout.b.encode(height),block.toRaw());}/**
   * Add transaction without a batch.
   * @private
   * @param {TX} tx
   * @returns {Promise}
   */async add(tx,block){cov_2dlk6kh4um().f[27]++;const hash=(cov_2dlk6kh4um().s[118]++,tx.hash());const existing=(cov_2dlk6kh4um().s[119]++,await this.getTX(hash));cov_2dlk6kh4um().s[120]++;assert(!tx.mutable,'Cannot add mutable TX to wallet.');cov_2dlk6kh4um().s[121]++;if(existing){cov_2dlk6kh4um().b[11][0]++;cov_2dlk6kh4um().s[122]++;// Existing tx is already confirmed. Ignore.
if(existing.height!==-1){cov_2dlk6kh4um().b[12][0]++;cov_2dlk6kh4um().s[123]++;return null;}else{cov_2dlk6kh4um().b[12][1]++;}// The incoming tx won't confirm the
// existing one anyway. Ignore.
cov_2dlk6kh4um().s[124]++;if(!block){cov_2dlk6kh4um().b[13][0]++;cov_2dlk6kh4um().s[125]++;return null;}else{cov_2dlk6kh4um().b[13][1]++;}// Confirm transaction.
cov_2dlk6kh4um().s[126]++;return this.confirm(existing,block);}else{cov_2dlk6kh4um().b[11][1]++;}const wtx=(cov_2dlk6kh4um().s[127]++,TXRecord.fromTX(tx,block));cov_2dlk6kh4um().s[128]++;if(!block){cov_2dlk6kh4um().b[14][0]++;cov_2dlk6kh4um().s[129]++;// Potentially remove double-spenders.
// Only remove if they're not confirmed.
if(!(await this.removeConflicts(tx,true))){cov_2dlk6kh4um().b[15][0]++;cov_2dlk6kh4um().s[130]++;return null;}else{cov_2dlk6kh4um().b[15][1]++;}}else{cov_2dlk6kh4um().b[14][1]++;cov_2dlk6kh4um().s[131]++;// Potentially remove double-spenders.
await this.removeConflicts(tx,false);}// Finally we can do a regular insertion.
cov_2dlk6kh4um().s[132]++;return this.insert(wtx,block);}/**
   * Insert transaction.
   * @private
   * @param {TXRecord} wtx
   * @param {BlockMeta} block
   * @returns {Promise}
   */async insert(wtx,block){cov_2dlk6kh4um().f[28]++;const b=(cov_2dlk6kh4um().s[133]++,this.bucket.batch());const{tx,hash}=(cov_2dlk6kh4um().s[134]++,wtx);const height=(cov_2dlk6kh4um().s[135]++,block?(cov_2dlk6kh4um().b[16][0]++,block.height):(cov_2dlk6kh4um().b[16][1]++,-1));const details=(cov_2dlk6kh4um().s[136]++,new Details(wtx,block));const state=(cov_2dlk6kh4um().s[137]++,new BalanceDelta());let own=(cov_2dlk6kh4um().s[138]++,false);cov_2dlk6kh4um().s[139]++;if(!tx.isCoinbase()){cov_2dlk6kh4um().b[17][0]++;cov_2dlk6kh4um().s[140]++;// We need to potentially spend some coins here.
for(let i=(cov_2dlk6kh4um().s[141]++,0);i<tx.inputs.length;i++){const input=(cov_2dlk6kh4um().s[142]++,tx.inputs[i]);const{hash,index}=(cov_2dlk6kh4um().s[143]++,input.prevout);const credit=(cov_2dlk6kh4um().s[144]++,await this.getCredit(hash,index));cov_2dlk6kh4um().s[145]++;if(!credit){cov_2dlk6kh4um().b[18][0]++;cov_2dlk6kh4um().s[146]++;// Watch all inputs for incoming txs.
// This allows us to check for double spends.
if(!block){cov_2dlk6kh4um().b[19][0]++;cov_2dlk6kh4um().s[147]++;await this.writeInput(b,tx,i);}else{cov_2dlk6kh4um().b[19][1]++;}cov_2dlk6kh4um().s[148]++;continue;}else{cov_2dlk6kh4um().b[18][1]++;}const coin=(cov_2dlk6kh4um().s[149]++,credit.coin);const path=(cov_2dlk6kh4um().s[150]++,await this.getPath(coin));cov_2dlk6kh4um().s[151]++;assert(path);// Build the tx details object
// as we go, for speed.
cov_2dlk6kh4um().s[152]++;details.setInput(i,path,coin);// Write an undo coin for the credit
// and add it to the stxo set.
cov_2dlk6kh4um().s[153]++;this.spendCredit(b,credit,tx,i);// Unconfirmed balance should always
// be updated as it reflects the on-chain
// balance _and_ mempool balance assuming
// everything in the mempool were to confirm.
cov_2dlk6kh4um().s[154]++;state.tx(path,1);cov_2dlk6kh4um().s[155]++;state.coin(path,-1);cov_2dlk6kh4um().s[156]++;state.unconfirmed(path,-coin.value);cov_2dlk6kh4um().s[157]++;if(!block){cov_2dlk6kh4um().b[20][0]++;cov_2dlk6kh4um().s[158]++;// If the tx is not mined, we do not
// disconnect the coin, we simply mark
// a `spent` flag on the credit. This
// effectively prevents the mempool
// from altering our utxo state
// permanently. It also makes it
// possible to compare the on-chain
// state vs. the mempool state.
credit.spent=true;cov_2dlk6kh4um().s[159]++;await this.saveCredit(b,credit,path);}else{cov_2dlk6kh4um().b[20][1]++;cov_2dlk6kh4um().s[160]++;// If the tx is mined, we can safely
// remove the coin being spent. This
// coin will be indexed as an undo
// coin so it can be reconnected
// later during a reorg.
state.confirmed(path,-coin.value);cov_2dlk6kh4um().s[161]++;await this.removeCredit(b,credit,path);}cov_2dlk6kh4um().s[162]++;own=true;}}else{cov_2dlk6kh4um().b[17][1]++;}// Potentially add coins to the utxo set.
cov_2dlk6kh4um().s[163]++;for(let i=(cov_2dlk6kh4um().s[164]++,0);i<tx.outputs.length;i++){const output=(cov_2dlk6kh4um().s[165]++,tx.outputs[i]);const path=(cov_2dlk6kh4um().s[166]++,await this.getPath(output));cov_2dlk6kh4um().s[167]++;if(!path){cov_2dlk6kh4um().b[21][0]++;cov_2dlk6kh4um().s[168]++;continue;}else{cov_2dlk6kh4um().b[21][1]++;}cov_2dlk6kh4um().s[169]++;details.setOutput(i,path);const credit=(cov_2dlk6kh4um().s[170]++,Credit.fromTX(tx,i,height));cov_2dlk6kh4um().s[171]++;credit.own=own;cov_2dlk6kh4um().s[172]++;state.tx(path,1);cov_2dlk6kh4um().s[173]++;state.coin(path,1);cov_2dlk6kh4um().s[174]++;state.unconfirmed(path,output.value);cov_2dlk6kh4um().s[175]++;if(block){cov_2dlk6kh4um().b[22][0]++;cov_2dlk6kh4um().s[176]++;state.confirmed(path,output.value);}else{cov_2dlk6kh4um().b[22][1]++;}cov_2dlk6kh4um().s[177]++;await this.saveCredit(b,credit,path);}// If this didn't update any coins,
// it's not our transaction.
cov_2dlk6kh4um().s[178]++;if(!state.updated()){cov_2dlk6kh4um().b[23][0]++;cov_2dlk6kh4um().s[179]++;return null;}else{cov_2dlk6kh4um().b[23][1]++;}// Save and index the transaction record.
cov_2dlk6kh4um().s[180]++;b.put(layout.t.encode(hash),wtx.toRaw());cov_2dlk6kh4um().s[181]++;b.put(layout.m.encode(wtx.mtime,hash),null);cov_2dlk6kh4um().s[182]++;if(!block){cov_2dlk6kh4um().b[24][0]++;cov_2dlk6kh4um().s[183]++;b.put(layout.p.encode(hash),null);}else{cov_2dlk6kh4um().b[24][1]++;cov_2dlk6kh4um().s[184]++;b.put(layout.h.encode(height,hash),null);}// Do some secondary indexing for account-based
// queries. This saves us a lot of time for
// queries later.
cov_2dlk6kh4um().s[185]++;for(const[acct,delta]of state.accounts){cov_2dlk6kh4um().s[186]++;await this.updateAccountBalance(b,acct,delta);cov_2dlk6kh4um().s[187]++;b.put(layout.T.encode(acct,hash),null);cov_2dlk6kh4um().s[188]++;b.put(layout.M.encode(acct,wtx.mtime,hash),null);cov_2dlk6kh4um().s[189]++;if(!block){cov_2dlk6kh4um().b[25][0]++;cov_2dlk6kh4um().s[190]++;b.put(layout.P.encode(acct,hash),null);}else{cov_2dlk6kh4um().b[25][1]++;cov_2dlk6kh4um().s[191]++;b.put(layout.H.encode(acct,height,hash),null);}}// Update block records.
cov_2dlk6kh4um().s[192]++;if(block){cov_2dlk6kh4um().b[26][0]++;cov_2dlk6kh4um().s[193]++;await this.addBlockMap(b,height);cov_2dlk6kh4um().s[194]++;await this.addBlock(b,tx.hash(),block);}else{cov_2dlk6kh4um().b[26][1]++;cov_2dlk6kh4um().s[195]++;await this.addTXMap(b,hash);}// Commit the new state.
const balance=(cov_2dlk6kh4um().s[196]++,await this.updateBalance(b,state));cov_2dlk6kh4um().s[197]++;await b.write();// This transaction may unlock some
// coins now that we've seen it.
cov_2dlk6kh4um().s[198]++;this.unlockTX(tx);// Emit events for potential local and
// websocket listeners. Note that these
// will only be emitted if the batch is
// successfully written to disk.
cov_2dlk6kh4um().s[199]++;this.emit('tx',tx,details);cov_2dlk6kh4um().s[200]++;this.emit('balance',balance);cov_2dlk6kh4um().s[201]++;return details;}/**
   * Attempt to confirm a transaction.
   * @private
   * @param {TXRecord} wtx
   * @param {BlockMeta} block
   * @returns {Promise}
   */async confirm(wtx,block){cov_2dlk6kh4um().f[29]++;const b=(cov_2dlk6kh4um().s[202]++,this.bucket.batch());const{tx,hash}=(cov_2dlk6kh4um().s[203]++,wtx);const height=(cov_2dlk6kh4um().s[204]++,block.height);const details=(cov_2dlk6kh4um().s[205]++,new Details(wtx,block));const state=(cov_2dlk6kh4um().s[206]++,new BalanceDelta());let own=(cov_2dlk6kh4um().s[207]++,false);cov_2dlk6kh4um().s[208]++;wtx.setBlock(block);cov_2dlk6kh4um().s[209]++;if(!tx.isCoinbase()){cov_2dlk6kh4um().b[27][0]++;const credits=(cov_2dlk6kh4um().s[210]++,await this.getSpentCredits(tx));// Potentially spend coins. Now that the tx
// is mined, we can actually _remove_ coins
// from the utxo state.
cov_2dlk6kh4um().s[211]++;for(let i=(cov_2dlk6kh4um().s[212]++,0);i<tx.inputs.length;i++){const input=(cov_2dlk6kh4um().s[213]++,tx.inputs[i]);const{hash,index}=(cov_2dlk6kh4um().s[214]++,input.prevout);let resolved=(cov_2dlk6kh4um().s[215]++,false);// There may be new credits available
// that we haven't seen yet.
cov_2dlk6kh4um().s[216]++;if(!credits[i]){cov_2dlk6kh4um().b[28][0]++;cov_2dlk6kh4um().s[217]++;await this.removeInput(b,tx,i);const credit=(cov_2dlk6kh4um().s[218]++,await this.getCredit(hash,index));cov_2dlk6kh4um().s[219]++;if(!credit){cov_2dlk6kh4um().b[29][0]++;cov_2dlk6kh4um().s[220]++;continue;}else{cov_2dlk6kh4um().b[29][1]++;}// Add a spend record and undo coin
// for the coin we now know is ours.
// We don't need to remove the coin
// since it was never added in the
// first place.
cov_2dlk6kh4um().s[221]++;this.spendCredit(b,credit,tx,i);cov_2dlk6kh4um().s[222]++;credits[i]=credit;cov_2dlk6kh4um().s[223]++;resolved=true;}else{cov_2dlk6kh4um().b[28][1]++;}const credit=(cov_2dlk6kh4um().s[224]++,credits[i]);const coin=(cov_2dlk6kh4um().s[225]++,credit.coin);cov_2dlk6kh4um().s[226]++;assert(coin.height!==-1);const path=(cov_2dlk6kh4um().s[227]++,await this.getPath(coin));cov_2dlk6kh4um().s[228]++;assert(path);cov_2dlk6kh4um().s[229]++;own=true;cov_2dlk6kh4um().s[230]++;details.setInput(i,path,coin);cov_2dlk6kh4um().s[231]++;if(resolved){cov_2dlk6kh4um().b[30][0]++;cov_2dlk6kh4um().s[232]++;state.coin(path,-1);cov_2dlk6kh4um().s[233]++;state.unconfirmed(path,-coin.value);}else{cov_2dlk6kh4um().b[30][1]++;}// We can now safely remove the credit
// entirely, now that we know it's also
// been removed on-chain.
cov_2dlk6kh4um().s[234]++;state.confirmed(path,-coin.value);cov_2dlk6kh4um().s[235]++;await this.removeCredit(b,credit,path);}}else{cov_2dlk6kh4um().b[27][1]++;}// Update credit heights, including undo coins.
cov_2dlk6kh4um().s[236]++;for(let i=(cov_2dlk6kh4um().s[237]++,0);i<tx.outputs.length;i++){const output=(cov_2dlk6kh4um().s[238]++,tx.outputs[i]);const path=(cov_2dlk6kh4um().s[239]++,await this.getPath(output));cov_2dlk6kh4um().s[240]++;if(!path){cov_2dlk6kh4um().b[31][0]++;cov_2dlk6kh4um().s[241]++;continue;}else{cov_2dlk6kh4um().b[31][1]++;}cov_2dlk6kh4um().s[242]++;details.setOutput(i,path);let credit=(cov_2dlk6kh4um().s[243]++,await this.getCredit(hash,i));cov_2dlk6kh4um().s[244]++;if(!credit){cov_2dlk6kh4um().b[32][0]++;cov_2dlk6kh4um().s[245]++;// This credit didn't belong to us the first time we
// saw the transaction (before confirmation or rescan).
// Create new credit for database.
credit=Credit.fromTX(tx,i,height);// If this tx spent any of our own coins, we "own" this output,
// meaning if it becomes unconfirmed, we can still confidently spend it.
cov_2dlk6kh4um().s[246]++;credit.own=own;// Add coin to "unconfirmed" balance (which includes confirmed coins)
cov_2dlk6kh4um().s[247]++;state.coin(path,1);cov_2dlk6kh4um().s[248]++;state.unconfirmed(path,credit.coin.value);}else{cov_2dlk6kh4um().b[32][1]++;}// Credits spent in the mempool add an
// undo coin for ease. If this credit is
// spent in the mempool, we need to
// update the undo coin's height.
cov_2dlk6kh4um().s[249]++;if(credit.spent){cov_2dlk6kh4um().b[33][0]++;cov_2dlk6kh4um().s[250]++;await this.updateSpentCoin(b,tx,i,height);}else{cov_2dlk6kh4um().b[33][1]++;}// Update coin height and confirmed
// balance. Save once again.
cov_2dlk6kh4um().s[251]++;state.confirmed(path,output.value);cov_2dlk6kh4um().s[252]++;credit.coin.height=height;cov_2dlk6kh4um().s[253]++;await this.saveCredit(b,credit,path);}// Save the new serialized transaction as
// the block-related properties have been
// updated. Also reindex for height.
cov_2dlk6kh4um().s[254]++;b.put(layout.t.encode(hash),wtx.toRaw());cov_2dlk6kh4um().s[255]++;b.del(layout.p.encode(hash));cov_2dlk6kh4um().s[256]++;b.put(layout.h.encode(height,hash),null);// Secondary indexing also needs to change.
cov_2dlk6kh4um().s[257]++;for(const[acct,delta]of state.accounts){cov_2dlk6kh4um().s[258]++;await this.updateAccountBalance(b,acct,delta);cov_2dlk6kh4um().s[259]++;b.del(layout.P.encode(acct,hash));cov_2dlk6kh4um().s[260]++;b.put(layout.H.encode(acct,height,hash),null);}cov_2dlk6kh4um().s[261]++;await this.removeTXMap(b,hash);cov_2dlk6kh4um().s[262]++;await this.addBlockMap(b,height);cov_2dlk6kh4um().s[263]++;await this.addBlock(b,tx.hash(),block);// Commit the new state. The balance has updated.
const balance=(cov_2dlk6kh4um().s[264]++,await this.updateBalance(b,state));cov_2dlk6kh4um().s[265]++;await b.write();cov_2dlk6kh4um().s[266]++;this.unlockTX(tx);cov_2dlk6kh4um().s[267]++;this.emit('confirmed',tx,details);cov_2dlk6kh4um().s[268]++;this.emit('balance',balance);cov_2dlk6kh4um().s[269]++;return details;}/**
   * Recursively remove a transaction
   * from the database.
   * @param {Hash} hash
   * @returns {Promise}
   */async remove(hash){cov_2dlk6kh4um().f[30]++;const wtx=(cov_2dlk6kh4um().s[270]++,await this.getTX(hash));cov_2dlk6kh4um().s[271]++;if(!wtx){cov_2dlk6kh4um().b[34][0]++;cov_2dlk6kh4um().s[272]++;return null;}else{cov_2dlk6kh4um().b[34][1]++;}cov_2dlk6kh4um().s[273]++;return this.removeRecursive(wtx);}/**
   * Remove a transaction from the
   * database. Disconnect inputs.
   * @private
   * @param {TXRecord} wtx
   * @returns {Promise}
   */async erase(wtx,block){cov_2dlk6kh4um().f[31]++;const b=(cov_2dlk6kh4um().s[274]++,this.bucket.batch());const{tx,hash}=(cov_2dlk6kh4um().s[275]++,wtx);const height=(cov_2dlk6kh4um().s[276]++,block?(cov_2dlk6kh4um().b[35][0]++,block.height):(cov_2dlk6kh4um().b[35][1]++,-1));const details=(cov_2dlk6kh4um().s[277]++,new Details(wtx,block));const state=(cov_2dlk6kh4um().s[278]++,new BalanceDelta());cov_2dlk6kh4um().s[279]++;if(!tx.isCoinbase()){cov_2dlk6kh4um().b[36][0]++;// We need to undo every part of the
// state this transaction ever touched.
// Start by getting the undo coins.
const credits=(cov_2dlk6kh4um().s[280]++,await this.getSpentCredits(tx));cov_2dlk6kh4um().s[281]++;for(let i=(cov_2dlk6kh4um().s[282]++,0);i<tx.inputs.length;i++){const credit=(cov_2dlk6kh4um().s[283]++,credits[i]);cov_2dlk6kh4um().s[284]++;if(!credit){cov_2dlk6kh4um().b[37][0]++;cov_2dlk6kh4um().s[285]++;if(!block){cov_2dlk6kh4um().b[38][0]++;cov_2dlk6kh4um().s[286]++;await this.removeInput(b,tx,i);}else{cov_2dlk6kh4um().b[38][1]++;}cov_2dlk6kh4um().s[287]++;continue;}else{cov_2dlk6kh4um().b[37][1]++;}const coin=(cov_2dlk6kh4um().s[288]++,credit.coin);const path=(cov_2dlk6kh4um().s[289]++,await this.getPath(coin));cov_2dlk6kh4um().s[290]++;assert(path);cov_2dlk6kh4um().s[291]++;details.setInput(i,path,coin);// Recalculate the balance, remove
// from stxo set, remove the undo
// coin, and resave the credit.
cov_2dlk6kh4um().s[292]++;state.tx(path,-1);cov_2dlk6kh4um().s[293]++;state.coin(path,1);cov_2dlk6kh4um().s[294]++;state.unconfirmed(path,coin.value);cov_2dlk6kh4um().s[295]++;if(block){cov_2dlk6kh4um().b[39][0]++;cov_2dlk6kh4um().s[296]++;state.confirmed(path,coin.value);}else{cov_2dlk6kh4um().b[39][1]++;}cov_2dlk6kh4um().s[297]++;this.unspendCredit(b,tx,i);cov_2dlk6kh4um().s[298]++;credit.spent=false;cov_2dlk6kh4um().s[299]++;await this.saveCredit(b,credit,path);}}else{cov_2dlk6kh4um().b[36][1]++;}// We need to remove all credits
// this transaction created.
cov_2dlk6kh4um().s[300]++;for(let i=(cov_2dlk6kh4um().s[301]++,0);i<tx.outputs.length;i++){const output=(cov_2dlk6kh4um().s[302]++,tx.outputs[i]);const path=(cov_2dlk6kh4um().s[303]++,await this.getPath(output));cov_2dlk6kh4um().s[304]++;if(!path){cov_2dlk6kh4um().b[40][0]++;cov_2dlk6kh4um().s[305]++;continue;}else{cov_2dlk6kh4um().b[40][1]++;}cov_2dlk6kh4um().s[306]++;details.setOutput(i,path);const credit=(cov_2dlk6kh4um().s[307]++,Credit.fromTX(tx,i,height));cov_2dlk6kh4um().s[308]++;state.tx(path,-1);cov_2dlk6kh4um().s[309]++;state.coin(path,-1);cov_2dlk6kh4um().s[310]++;state.unconfirmed(path,-output.value);cov_2dlk6kh4um().s[311]++;if(block){cov_2dlk6kh4um().b[41][0]++;cov_2dlk6kh4um().s[312]++;state.confirmed(path,-output.value);}else{cov_2dlk6kh4um().b[41][1]++;}cov_2dlk6kh4um().s[313]++;await this.removeCredit(b,credit,path);}// Remove the transaction data
// itself as well as unindex.
cov_2dlk6kh4um().s[314]++;b.del(layout.t.encode(hash));cov_2dlk6kh4um().s[315]++;b.del(layout.m.encode(wtx.mtime,hash));cov_2dlk6kh4um().s[316]++;if(!block){cov_2dlk6kh4um().b[42][0]++;cov_2dlk6kh4um().s[317]++;b.del(layout.p.encode(hash));}else{cov_2dlk6kh4um().b[42][1]++;cov_2dlk6kh4um().s[318]++;b.del(layout.h.encode(height,hash));}// Remove all secondary indexing.
cov_2dlk6kh4um().s[319]++;for(const[acct,delta]of state.accounts){cov_2dlk6kh4um().s[320]++;await this.updateAccountBalance(b,acct,delta);cov_2dlk6kh4um().s[321]++;b.del(layout.T.encode(acct,hash));cov_2dlk6kh4um().s[322]++;b.del(layout.M.encode(acct,wtx.mtime,hash));cov_2dlk6kh4um().s[323]++;if(!block){cov_2dlk6kh4um().b[43][0]++;cov_2dlk6kh4um().s[324]++;b.del(layout.P.encode(acct,hash));}else{cov_2dlk6kh4um().b[43][1]++;cov_2dlk6kh4um().s[325]++;b.del(layout.H.encode(acct,height,hash));}}// Update block records.
cov_2dlk6kh4um().s[326]++;if(block){cov_2dlk6kh4um().b[44][0]++;cov_2dlk6kh4um().s[327]++;await this.removeBlockMap(b,height);cov_2dlk6kh4um().s[328]++;await this.spliceBlock(b,hash,height);}else{cov_2dlk6kh4um().b[44][1]++;cov_2dlk6kh4um().s[329]++;await this.removeTXMap(b,hash);}// Update the transaction counter
// and commit new state due to
// balance change.
const balance=(cov_2dlk6kh4um().s[330]++,await this.updateBalance(b,state));cov_2dlk6kh4um().s[331]++;await b.write();cov_2dlk6kh4um().s[332]++;this.emit('remove tx',tx,details);cov_2dlk6kh4um().s[333]++;this.emit('balance',balance);cov_2dlk6kh4um().s[334]++;return details;}/**
   * Remove a transaction and recursively
   * remove all of its spenders.
   * @private
   * @param {TXRecord} wtx
   * @returns {Promise}
   */async removeRecursive(wtx){cov_2dlk6kh4um().f[32]++;const{tx,hash}=(cov_2dlk6kh4um().s[335]++,wtx);cov_2dlk6kh4um().s[336]++;if(!(await this.hasTX(hash))){cov_2dlk6kh4um().b[45][0]++;cov_2dlk6kh4um().s[337]++;return null;}else{cov_2dlk6kh4um().b[45][1]++;}cov_2dlk6kh4um().s[338]++;for(let i=(cov_2dlk6kh4um().s[339]++,0);i<tx.outputs.length;i++){const spent=(cov_2dlk6kh4um().s[340]++,await this.getSpent(hash,i));cov_2dlk6kh4um().s[341]++;if(!spent){cov_2dlk6kh4um().b[46][0]++;cov_2dlk6kh4um().s[342]++;continue;}else{cov_2dlk6kh4um().b[46][1]++;}// Remove all of the spender's spenders first.
const stx=(cov_2dlk6kh4um().s[343]++,await this.getTX(spent.hash));cov_2dlk6kh4um().s[344]++;assert(stx);cov_2dlk6kh4um().s[345]++;await this.removeRecursive(stx);}// Remove the spender.
cov_2dlk6kh4um().s[346]++;return this.erase(wtx,wtx.getBlock());}/**
   * Revert a block.
   * @param {Number} height
   * @returns {Promise}
   */async revert(height){cov_2dlk6kh4um().f[33]++;const block=(cov_2dlk6kh4um().s[347]++,await this.getBlock(height));cov_2dlk6kh4um().s[348]++;if(!block){cov_2dlk6kh4um().b[47][0]++;cov_2dlk6kh4um().s[349]++;return 0;}else{cov_2dlk6kh4um().b[47][1]++;}cov_2dlk6kh4um().s[350]++;this.logger.debug('Rescan: reverting block %d',height);const hashes=(cov_2dlk6kh4um().s[351]++,block.toArray());cov_2dlk6kh4um().s[352]++;for(let i=(cov_2dlk6kh4um().s[353]++,hashes.length-1);i>=0;i--){const hash=(cov_2dlk6kh4um().s[354]++,hashes[i]);cov_2dlk6kh4um().s[355]++;await this.unconfirm(hash);}cov_2dlk6kh4um().s[356]++;return hashes.length;}/**
   * Unconfirm a transaction without a batch.
   * @private
   * @param {Hash} hash
   * @returns {Promise}
   */async unconfirm(hash){cov_2dlk6kh4um().f[34]++;const wtx=(cov_2dlk6kh4um().s[357]++,await this.getTX(hash));cov_2dlk6kh4um().s[358]++;if(!wtx){cov_2dlk6kh4um().b[48][0]++;cov_2dlk6kh4um().s[359]++;return null;}else{cov_2dlk6kh4um().b[48][1]++;}cov_2dlk6kh4um().s[360]++;if(wtx.height===-1){cov_2dlk6kh4um().b[49][0]++;cov_2dlk6kh4um().s[361]++;return null;}else{cov_2dlk6kh4um().b[49][1]++;}cov_2dlk6kh4um().s[362]++;return this.disconnect(wtx,wtx.getBlock());}/**
   * Unconfirm a transaction. Necessary after a reorg.
   * @param {TXRecord} wtx
   * @returns {Promise}
   */async disconnect(wtx,block){cov_2dlk6kh4um().f[35]++;const b=(cov_2dlk6kh4um().s[363]++,this.bucket.batch());const{tx,hash,height}=(cov_2dlk6kh4um().s[364]++,wtx);const details=(cov_2dlk6kh4um().s[365]++,new Details(wtx,block));const state=(cov_2dlk6kh4um().s[366]++,new BalanceDelta());cov_2dlk6kh4um().s[367]++;assert(block);cov_2dlk6kh4um().s[368]++;wtx.unsetBlock();cov_2dlk6kh4um().s[369]++;if(!tx.isCoinbase()){cov_2dlk6kh4um().b[50][0]++;// We need to reconnect the coins. Start
// by getting all of the undo coins we know
// about.
const credits=(cov_2dlk6kh4um().s[370]++,await this.getSpentCredits(tx));cov_2dlk6kh4um().s[371]++;for(let i=(cov_2dlk6kh4um().s[372]++,0);i<tx.inputs.length;i++){const credit=(cov_2dlk6kh4um().s[373]++,credits[i]);cov_2dlk6kh4um().s[374]++;if(!credit){cov_2dlk6kh4um().b[51][0]++;cov_2dlk6kh4um().s[375]++;await this.writeInput(b,tx,i);cov_2dlk6kh4um().s[376]++;continue;}else{cov_2dlk6kh4um().b[51][1]++;}const coin=(cov_2dlk6kh4um().s[377]++,credit.coin);cov_2dlk6kh4um().s[378]++;assert(coin.height!==-1);const path=(cov_2dlk6kh4um().s[379]++,await this.getPath(coin));cov_2dlk6kh4um().s[380]++;assert(path);cov_2dlk6kh4um().s[381]++;details.setInput(i,path,coin);cov_2dlk6kh4um().s[382]++;state.confirmed(path,coin.value);// Resave the credit and mark it
// as spent in the mempool instead.
cov_2dlk6kh4um().s[383]++;credit.spent=true;cov_2dlk6kh4um().s[384]++;await this.saveCredit(b,credit,path);}}else{cov_2dlk6kh4um().b[50][1]++;}// We need to remove heights on
// the credits and undo coins.
cov_2dlk6kh4um().s[385]++;for(let i=(cov_2dlk6kh4um().s[386]++,0);i<tx.outputs.length;i++){const output=(cov_2dlk6kh4um().s[387]++,tx.outputs[i]);const path=(cov_2dlk6kh4um().s[388]++,await this.getPath(output));cov_2dlk6kh4um().s[389]++;if(!path){cov_2dlk6kh4um().b[52][0]++;cov_2dlk6kh4um().s[390]++;continue;}else{cov_2dlk6kh4um().b[52][1]++;}const credit=(cov_2dlk6kh4um().s[391]++,await this.getCredit(hash,i));// Potentially update undo coin height.
cov_2dlk6kh4um().s[392]++;if(!credit){cov_2dlk6kh4um().b[53][0]++;cov_2dlk6kh4um().s[393]++;await this.updateSpentCoin(b,tx,i,height);cov_2dlk6kh4um().s[394]++;continue;}else{cov_2dlk6kh4um().b[53][1]++;}cov_2dlk6kh4um().s[395]++;if(credit.spent){cov_2dlk6kh4um().b[54][0]++;cov_2dlk6kh4um().s[396]++;await this.updateSpentCoin(b,tx,i,height);}else{cov_2dlk6kh4um().b[54][1]++;}cov_2dlk6kh4um().s[397]++;details.setOutput(i,path);// Update coin height and confirmed
// balance. Save once again.
cov_2dlk6kh4um().s[398]++;credit.coin.height=-1;cov_2dlk6kh4um().s[399]++;state.confirmed(path,-output.value);cov_2dlk6kh4um().s[400]++;await this.saveCredit(b,credit,path);}cov_2dlk6kh4um().s[401]++;await this.addTXMap(b,hash);cov_2dlk6kh4um().s[402]++;await this.removeBlockMap(b,height);cov_2dlk6kh4um().s[403]++;await this.removeBlock(b,tx.hash(),height);// We need to update the now-removed
// block properties and reindex due
// to the height change.
cov_2dlk6kh4um().s[404]++;b.put(layout.t.encode(hash),wtx.toRaw());cov_2dlk6kh4um().s[405]++;b.put(layout.p.encode(hash),null);cov_2dlk6kh4um().s[406]++;b.del(layout.h.encode(height,hash));// Secondary indexing also needs to change.
cov_2dlk6kh4um().s[407]++;for(const[acct,delta]of state.accounts){cov_2dlk6kh4um().s[408]++;await this.updateAccountBalance(b,acct,delta);cov_2dlk6kh4um().s[409]++;b.put(layout.P.encode(acct,hash),null);cov_2dlk6kh4um().s[410]++;b.del(layout.H.encode(acct,height,hash));}// Commit state due to unconfirmed
// vs. confirmed balance change.
const balance=(cov_2dlk6kh4um().s[411]++,await this.updateBalance(b,state));cov_2dlk6kh4um().s[412]++;await b.write();cov_2dlk6kh4um().s[413]++;this.emit('unconfirmed',tx,details);cov_2dlk6kh4um().s[414]++;this.emit('balance',balance);cov_2dlk6kh4um().s[415]++;return details;}/**
   * Remove spenders that have not been confirmed. We do this in the
   * odd case of stuck transactions or when a coin is double-spent
   * by a newer transaction. All previously-spending transactions
   * of that coin that are _not_ confirmed will be removed from
   * the database.
   * @private
   * @param {Hash} hash
   * @param {TX} ref - Reference tx, the tx that double-spent.
   * @returns {Promise} - Returns Boolean.
   */async removeConflict(wtx){cov_2dlk6kh4um().f[36]++;const tx=(cov_2dlk6kh4um().s[416]++,wtx.tx);cov_2dlk6kh4um().s[417]++;this.logger.warning('Handling conflicting tx: %h.',tx.hash());const details=(cov_2dlk6kh4um().s[418]++,await this.removeRecursive(wtx));cov_2dlk6kh4um().s[419]++;if(!details){cov_2dlk6kh4um().b[55][0]++;cov_2dlk6kh4um().s[420]++;return null;}else{cov_2dlk6kh4um().b[55][1]++;}cov_2dlk6kh4um().s[421]++;this.logger.warning('Removed conflict: %h.',tx.hash());// Emit the _removed_ transaction.
cov_2dlk6kh4um().s[422]++;this.emit('conflict',tx,details);cov_2dlk6kh4um().s[423]++;return details;}/**
   * Retrieve coins for own inputs, remove
   * double spenders, and verify inputs.
   * @private
   * @param {TX} tx
   * @returns {Promise}
   */async removeConflicts(tx,conf){cov_2dlk6kh4um().f[37]++;cov_2dlk6kh4um().s[424]++;if(tx.isCoinbase()){cov_2dlk6kh4um().b[56][0]++;cov_2dlk6kh4um().s[425]++;return true;}else{cov_2dlk6kh4um().b[56][1]++;}const txid=(cov_2dlk6kh4um().s[426]++,tx.hash());const spends=(cov_2dlk6kh4um().s[427]++,[]);// Gather all spent records first.
cov_2dlk6kh4um().s[428]++;for(const{prevout}of tx.inputs){const{hash,index}=(cov_2dlk6kh4um().s[429]++,prevout);// Is it already spent?
const spent=(cov_2dlk6kh4um().s[430]++,await this.getSpent(hash,index));cov_2dlk6kh4um().s[431]++;if(!spent){cov_2dlk6kh4um().b[57][0]++;cov_2dlk6kh4um().s[432]++;continue;}else{cov_2dlk6kh4um().b[57][1]++;}// Did _we_ spend it?
cov_2dlk6kh4um().s[433]++;if(spent.hash.equals(txid)){cov_2dlk6kh4um().b[58][0]++;cov_2dlk6kh4um().s[434]++;continue;}else{cov_2dlk6kh4um().b[58][1]++;}const spender=(cov_2dlk6kh4um().s[435]++,await this.getTX(spent.hash));cov_2dlk6kh4um().s[436]++;assert(spender);cov_2dlk6kh4um().s[437]++;if((cov_2dlk6kh4um().b[60][0]++,conf)&&(cov_2dlk6kh4um().b[60][1]++,spender.height!==-1)){cov_2dlk6kh4um().b[59][0]++;cov_2dlk6kh4um().s[438]++;return false;}else{cov_2dlk6kh4um().b[59][1]++;}cov_2dlk6kh4um().s[439]++;spends.push(spender);}// Once we know we're not going to
// screw things up, remove the double
// spenders.
cov_2dlk6kh4um().s[440]++;for(const spender of spends){cov_2dlk6kh4um().s[441]++;// Remove the double spender.
await this.removeConflict(spender);}cov_2dlk6kh4um().s[442]++;return true;}/**
   * Lock all coins in a transaction.
   * @param {TX} tx
   */lockTX(tx){cov_2dlk6kh4um().f[38]++;cov_2dlk6kh4um().s[443]++;if(tx.isCoinbase()){cov_2dlk6kh4um().b[61][0]++;cov_2dlk6kh4um().s[444]++;return;}else{cov_2dlk6kh4um().b[61][1]++;}cov_2dlk6kh4um().s[445]++;for(const input of tx.inputs){cov_2dlk6kh4um().s[446]++;this.lockCoin(input.prevout);}}/**
   * Unlock all coins in a transaction.
   * @param {TX} tx
   */unlockTX(tx){cov_2dlk6kh4um().f[39]++;cov_2dlk6kh4um().s[447]++;if(tx.isCoinbase()){cov_2dlk6kh4um().b[62][0]++;cov_2dlk6kh4um().s[448]++;return;}else{cov_2dlk6kh4um().b[62][1]++;}cov_2dlk6kh4um().s[449]++;for(const input of tx.inputs){cov_2dlk6kh4um().s[450]++;this.unlockCoin(input.prevout);}}/**
   * Lock a single coin.
   * @param {Coin|Outpoint} coin
   */lockCoin(coin){cov_2dlk6kh4um().f[40]++;const key=(cov_2dlk6kh4um().s[451]++,coin.toKey());cov_2dlk6kh4um().s[452]++;this.locked.add(key);}/**
   * Unlock a single coin.
   * @param {Coin|Outpoint} coin
   */unlockCoin(coin){cov_2dlk6kh4um().f[41]++;const key=(cov_2dlk6kh4um().s[453]++,coin.toKey());cov_2dlk6kh4um().s[454]++;return this.locked.delete(key);}/**
   * Unlock all coins.
   */unlockCoins(){cov_2dlk6kh4um().f[42]++;cov_2dlk6kh4um().s[455]++;for(const coin of this.getLocked()){cov_2dlk6kh4um().s[456]++;this.unlockCoin(coin);}}/**
   * Test locked status of a single coin.
   * @param {Coin|Outpoint} coin
   */isLocked(coin){cov_2dlk6kh4um().f[43]++;const key=(cov_2dlk6kh4um().s[457]++,coin.toKey());cov_2dlk6kh4um().s[458]++;return this.locked.has(key);}/**
   * Filter array of coins or outpoints
   * for only unlocked ones.
   * @param {Coin[]|Outpoint[]}
   * @returns {Array}
   */filterLocked(coins){cov_2dlk6kh4um().f[44]++;const out=(cov_2dlk6kh4um().s[459]++,[]);cov_2dlk6kh4um().s[460]++;for(const coin of coins){cov_2dlk6kh4um().s[461]++;if(!this.isLocked(coin)){cov_2dlk6kh4um().b[63][0]++;cov_2dlk6kh4um().s[462]++;out.push(coin);}else{cov_2dlk6kh4um().b[63][1]++;}}cov_2dlk6kh4um().s[463]++;return out;}/**
   * Return an array of all locked outpoints.
   * @returns {Outpoint[]}
   */getLocked(){cov_2dlk6kh4um().f[45]++;const outpoints=(cov_2dlk6kh4um().s[464]++,[]);cov_2dlk6kh4um().s[465]++;for(const key of this.locked.keys()){cov_2dlk6kh4um().s[466]++;outpoints.push(Outpoint.fromKey(key));}cov_2dlk6kh4um().s[467]++;return outpoints;}/**
   * Get hashes of all transactions in the database.
   * @param {Number} acct
   * @returns {Promise} - Returns {@link Hash}[].
   */getAccountHistoryHashes(acct){cov_2dlk6kh4um().f[46]++;cov_2dlk6kh4um().s[468]++;assert(typeof acct==='number');cov_2dlk6kh4um().s[469]++;return this.bucket.keys({gte:layout.T.min(acct),lte:layout.T.max(acct),parse:key=>{cov_2dlk6kh4um().f[47]++;const[,hash]=(cov_2dlk6kh4um().s[470]++,layout.T.decode(key));cov_2dlk6kh4um().s[471]++;return hash;}});}/**
   * Get hashes of all transactions in the database.
   * @param {Number} acct
   * @returns {Promise} - Returns {@link Hash}[].
   */getHistoryHashes(acct){cov_2dlk6kh4um().f[48]++;cov_2dlk6kh4um().s[472]++;assert(typeof acct==='number');cov_2dlk6kh4um().s[473]++;if(acct!==-1){cov_2dlk6kh4um().b[64][0]++;cov_2dlk6kh4um().s[474]++;return this.getAccountHistoryHashes(acct);}else{cov_2dlk6kh4um().b[64][1]++;}cov_2dlk6kh4um().s[475]++;return this.bucket.keys({gte:layout.t.min(),lte:layout.t.max(),parse:key=>{cov_2dlk6kh4um().f[49]++;cov_2dlk6kh4um().s[476]++;return layout.t.decode(key)[0];}});}/**
   * Get hashes of all unconfirmed transactions in the database.
   * @param {Number} acct
   * @returns {Promise} - Returns {@link Hash}[].
   */getAccountPendingHashes(acct){cov_2dlk6kh4um().f[50]++;cov_2dlk6kh4um().s[477]++;assert(typeof acct==='number');cov_2dlk6kh4um().s[478]++;return this.bucket.keys({gte:layout.P.min(acct),lte:layout.P.max(acct),parse:key=>{cov_2dlk6kh4um().f[51]++;const[,hash]=(cov_2dlk6kh4um().s[479]++,layout.P.decode(key));cov_2dlk6kh4um().s[480]++;return hash;}});}/**
   * Get hashes of all unconfirmed transactions in the database.
   * @param {Number} acct
   * @returns {Promise} - Returns {@link Hash}[].
   */getPendingHashes(acct){cov_2dlk6kh4um().f[52]++;cov_2dlk6kh4um().s[481]++;assert(typeof acct==='number');cov_2dlk6kh4um().s[482]++;if(acct!==-1){cov_2dlk6kh4um().b[65][0]++;cov_2dlk6kh4um().s[483]++;return this.getAccountPendingHashes(acct);}else{cov_2dlk6kh4um().b[65][1]++;}cov_2dlk6kh4um().s[484]++;return this.bucket.keys({gte:layout.p.min(),lte:layout.p.max(),parse:key=>{cov_2dlk6kh4um().f[53]++;cov_2dlk6kh4um().s[485]++;return layout.p.decode(key)[0];}});}/**
   * Test whether the database has a pending transaction.
   * @param {Hash} hash
   * @returns {Promise} - Returns Boolean.
   */async hasPending(hash){cov_2dlk6kh4um().f[54]++;cov_2dlk6kh4um().s[486]++;return this.bucket.has(layout.p.encode(hash));}/**
   * Get all coin hashes in the database.
   * @param {Number} acct
   * @returns {Promise} - Returns {@link Hash}[].
   */getAccountOutpoints(acct){cov_2dlk6kh4um().f[55]++;cov_2dlk6kh4um().s[487]++;assert(typeof acct==='number');cov_2dlk6kh4um().s[488]++;return this.bucket.keys({gte:layout.C.min(acct),lte:layout.C.max(acct),parse:key=>{cov_2dlk6kh4um().f[56]++;const[,hash,index]=(cov_2dlk6kh4um().s[489]++,layout.C.decode(key));cov_2dlk6kh4um().s[490]++;return new Outpoint(hash,index);}});}/**
   * Get all coin hashes in the database.
   * @param {Number} acct
   * @returns {Promise} - Returns {@link Hash}[].
   */getOutpoints(acct){cov_2dlk6kh4um().f[57]++;cov_2dlk6kh4um().s[491]++;assert(typeof acct==='number');cov_2dlk6kh4um().s[492]++;if(acct!==-1){cov_2dlk6kh4um().b[66][0]++;cov_2dlk6kh4um().s[493]++;return this.getAccountOutpoints(acct);}else{cov_2dlk6kh4um().b[66][1]++;}cov_2dlk6kh4um().s[494]++;return this.bucket.keys({gte:layout.c.min(),lte:layout.c.max(),parse:key=>{cov_2dlk6kh4um().f[58]++;const[hash,index]=(cov_2dlk6kh4um().s[495]++,layout.c.decode(key));cov_2dlk6kh4um().s[496]++;return new Outpoint(hash,index);}});}/**
   * Get TX hashes by height range.
   * @param {Number} acct
   * @param {Object} options
   * @param {Number} options.start - Start height.
   * @param {Number} options.end - End height.
   * @param {Number?} options.limit - Max number of records.
   * @param {Boolean?} options.reverse - Reverse order.
   * @returns {Promise} - Returns {@link Hash}[].
   */getAccountHeightRangeHashes(acct,options){cov_2dlk6kh4um().f[59]++;cov_2dlk6kh4um().s[497]++;assert(typeof acct==='number');const start=(cov_2dlk6kh4um().s[498]++,(cov_2dlk6kh4um().b[67][0]++,options.start)||(cov_2dlk6kh4um().b[67][1]++,0));const end=(cov_2dlk6kh4um().s[499]++,(cov_2dlk6kh4um().b[68][0]++,options.end)||(cov_2dlk6kh4um().b[68][1]++,0xffffffff));cov_2dlk6kh4um().s[500]++;return this.bucket.keys({gte:layout.H.min(acct,start),lte:layout.H.max(acct,end),limit:options.limit,reverse:options.reverse,parse:key=>{cov_2dlk6kh4um().f[60]++;const[,,hash]=(cov_2dlk6kh4um().s[501]++,layout.H.decode(key));cov_2dlk6kh4um().s[502]++;return hash;}});}/**
   * Get TX hashes by height range.
   * @param {Number} acct
   * @param {Object} options
   * @param {Number} options.start - Start height.
   * @param {Number} options.end - End height.
   * @param {Number?} options.limit - Max number of records.
   * @param {Boolean?} options.reverse - Reverse order.
   * @returns {Promise} - Returns {@link Hash}[].
   */getHeightRangeHashes(acct,options){cov_2dlk6kh4um().f[61]++;cov_2dlk6kh4um().s[503]++;assert(typeof acct==='number');cov_2dlk6kh4um().s[504]++;if(acct!==-1){cov_2dlk6kh4um().b[69][0]++;cov_2dlk6kh4um().s[505]++;return this.getAccountHeightRangeHashes(acct,options);}else{cov_2dlk6kh4um().b[69][1]++;}const start=(cov_2dlk6kh4um().s[506]++,(cov_2dlk6kh4um().b[70][0]++,options.start)||(cov_2dlk6kh4um().b[70][1]++,0));const end=(cov_2dlk6kh4um().s[507]++,(cov_2dlk6kh4um().b[71][0]++,options.end)||(cov_2dlk6kh4um().b[71][1]++,0xffffffff));cov_2dlk6kh4um().s[508]++;return this.bucket.keys({gte:layout.h.min(start),lte:layout.h.max(end),limit:options.limit,reverse:options.reverse,parse:key=>{cov_2dlk6kh4um().f[62]++;const[,hash]=(cov_2dlk6kh4um().s[509]++,layout.h.decode(key));cov_2dlk6kh4um().s[510]++;return hash;}});}/**
   * Get TX hashes by height.
   * @param {Number} height
   * @returns {Promise} - Returns {@link Hash}[].
   */getHeightHashes(height){cov_2dlk6kh4um().f[63]++;cov_2dlk6kh4um().s[511]++;return this.getHeightRangeHashes({start:height,end:height});}/**
   * Get TX hashes by timestamp range.
   * @param {Number} acct
   * @param {Object} options
   * @param {Number} options.start - Start height.
   * @param {Number} options.end - End height.
   * @param {Number?} options.limit - Max number of records.
   * @param {Boolean?} options.reverse - Reverse order.
   * @returns {Promise} - Returns {@link Hash}[].
   */getAccountRangeHashes(acct,options){cov_2dlk6kh4um().f[64]++;cov_2dlk6kh4um().s[512]++;assert(typeof acct==='number');const start=(cov_2dlk6kh4um().s[513]++,(cov_2dlk6kh4um().b[72][0]++,options.start)||(cov_2dlk6kh4um().b[72][1]++,0));const end=(cov_2dlk6kh4um().s[514]++,(cov_2dlk6kh4um().b[73][0]++,options.end)||(cov_2dlk6kh4um().b[73][1]++,0xffffffff));cov_2dlk6kh4um().s[515]++;return this.bucket.keys({gte:layout.M.min(acct,start),lte:layout.M.max(acct,end),limit:options.limit,reverse:options.reverse,parse:key=>{cov_2dlk6kh4um().f[65]++;const[,,hash]=(cov_2dlk6kh4um().s[516]++,layout.M.decode(key));cov_2dlk6kh4um().s[517]++;return hash;}});}/**
   * Get TX hashes by timestamp range.
   * @param {Number} acct
   * @param {Object} options
   * @param {Number} options.start - Start height.
   * @param {Number} options.end - End height.
   * @param {Number?} options.limit - Max number of records.
   * @param {Boolean?} options.reverse - Reverse order.
   * @returns {Promise} - Returns {@link Hash}[].
   */getRangeHashes(acct,options){cov_2dlk6kh4um().f[66]++;cov_2dlk6kh4um().s[518]++;assert(typeof acct==='number');cov_2dlk6kh4um().s[519]++;if(acct!==-1){cov_2dlk6kh4um().b[74][0]++;cov_2dlk6kh4um().s[520]++;return this.getAccountRangeHashes(acct,options);}else{cov_2dlk6kh4um().b[74][1]++;}const start=(cov_2dlk6kh4um().s[521]++,(cov_2dlk6kh4um().b[75][0]++,options.start)||(cov_2dlk6kh4um().b[75][1]++,0));const end=(cov_2dlk6kh4um().s[522]++,(cov_2dlk6kh4um().b[76][0]++,options.end)||(cov_2dlk6kh4um().b[76][1]++,0xffffffff));cov_2dlk6kh4um().s[523]++;return this.bucket.keys({gte:layout.m.min(start),lte:layout.m.max(end),limit:options.limit,reverse:options.reverse,parse:key=>{cov_2dlk6kh4um().f[67]++;const[,hash]=(cov_2dlk6kh4um().s[524]++,layout.m.decode(key));cov_2dlk6kh4um().s[525]++;return hash;}});}/**
   * Get transactions by timestamp range.
   * @param {Number} acct
   * @param {Object} options
   * @param {Number} options.start - Start time.
   * @param {Number} options.end - End time.
   * @param {Number?} options.limit - Max number of records.
   * @param {Boolean?} options.reverse - Reverse order.
   * @returns {Promise} - Returns {@link TX}[].
   */async getRange(acct,options){cov_2dlk6kh4um().f[68]++;const hashes=(cov_2dlk6kh4um().s[526]++,await this.getRangeHashes(acct,options));const txs=(cov_2dlk6kh4um().s[527]++,[]);cov_2dlk6kh4um().s[528]++;for(const hash of hashes){const tx=(cov_2dlk6kh4um().s[529]++,await this.getTX(hash));cov_2dlk6kh4um().s[530]++;assert(tx);cov_2dlk6kh4um().s[531]++;txs.push(tx);}cov_2dlk6kh4um().s[532]++;return txs;}/**
   * Get last N transactions.
   * @param {Number} acct
   * @param {Number} limit - Max number of transactions.
   * @returns {Promise} - Returns {@link TX}[].
   */getLast(acct,limit){cov_2dlk6kh4um().f[69]++;cov_2dlk6kh4um().s[533]++;return this.getRange(acct,{start:0,end:0xffffffff,reverse:true,limit:(cov_2dlk6kh4um().b[77][0]++,limit)||(cov_2dlk6kh4um().b[77][1]++,10)});}/**
   * Get all transactions.
   * @param {Number} acct
   * @returns {Promise} - Returns {@link TX}[].
   */getHistory(acct){cov_2dlk6kh4um().f[70]++;cov_2dlk6kh4um().s[534]++;assert(typeof acct==='number');// Slow case
cov_2dlk6kh4um().s[535]++;if(acct!==-1){cov_2dlk6kh4um().b[78][0]++;cov_2dlk6kh4um().s[536]++;return this.getAccountHistory(acct);}else{cov_2dlk6kh4um().b[78][1]++;}// Fast case
cov_2dlk6kh4um().s[537]++;return this.bucket.values({gte:layout.t.min(),lte:layout.t.max(),parse:data=>{cov_2dlk6kh4um().f[71]++;cov_2dlk6kh4um().s[538]++;return TXRecord.fromRaw(data);}});}/**
   * Get all acct transactions.
   * @param {Number} acct
   * @returns {Promise} - Returns {@link TX}[].
   */async getAccountHistory(acct){cov_2dlk6kh4um().f[72]++;const hashes=(cov_2dlk6kh4um().s[539]++,await this.getHistoryHashes(acct));const txs=(cov_2dlk6kh4um().s[540]++,[]);cov_2dlk6kh4um().s[541]++;for(const hash of hashes){const tx=(cov_2dlk6kh4um().s[542]++,await this.getTX(hash));cov_2dlk6kh4um().s[543]++;assert(tx);cov_2dlk6kh4um().s[544]++;txs.push(tx);}cov_2dlk6kh4um().s[545]++;return txs;}/**
   * Get unconfirmed transactions.
   * @param {Number} acct
   * @returns {Promise} - Returns {@link TX}[].
   */async getPending(acct){cov_2dlk6kh4um().f[73]++;const hashes=(cov_2dlk6kh4um().s[546]++,await this.getPendingHashes(acct));const txs=(cov_2dlk6kh4um().s[547]++,[]);cov_2dlk6kh4um().s[548]++;for(const hash of hashes){const tx=(cov_2dlk6kh4um().s[549]++,await this.getTX(hash));cov_2dlk6kh4um().s[550]++;assert(tx);cov_2dlk6kh4um().s[551]++;txs.push(tx);}cov_2dlk6kh4um().s[552]++;return txs;}/**
   * Get coins.
   * @param {Number} acct
   * @returns {Promise} - Returns {@link Coin}[].
   */getCredits(acct){cov_2dlk6kh4um().f[74]++;cov_2dlk6kh4um().s[553]++;assert(typeof acct==='number');// Slow case
cov_2dlk6kh4um().s[554]++;if(acct!==-1){cov_2dlk6kh4um().b[79][0]++;cov_2dlk6kh4um().s[555]++;return this.getAccountCredits(acct);}else{cov_2dlk6kh4um().b[79][1]++;}// Fast case
cov_2dlk6kh4um().s[556]++;return this.bucket.range({gte:layout.c.min(),lte:layout.c.max(),parse:(key,value)=>{cov_2dlk6kh4um().f[75]++;const[hash,index]=(cov_2dlk6kh4um().s[557]++,layout.c.decode(key));const credit=(cov_2dlk6kh4um().s[558]++,Credit.fromRaw(value));cov_2dlk6kh4um().s[559]++;credit.coin.hash=hash;cov_2dlk6kh4um().s[560]++;credit.coin.index=index;cov_2dlk6kh4um().s[561]++;return credit;}});}/**
   * Get coins by account.
   * @param {Number} acct
   * @returns {Promise} - Returns {@link Coin}[].
   */async getAccountCredits(acct){cov_2dlk6kh4um().f[76]++;const outpoints=(cov_2dlk6kh4um().s[562]++,await this.getOutpoints(acct));const credits=(cov_2dlk6kh4um().s[563]++,[]);cov_2dlk6kh4um().s[564]++;for(const{hash,index}of outpoints){const credit=(cov_2dlk6kh4um().s[565]++,await this.getCredit(hash,index));cov_2dlk6kh4um().s[566]++;if(!credit){cov_2dlk6kh4um().b[80][0]++;cov_2dlk6kh4um().s[567]++;continue;}else{cov_2dlk6kh4um().b[80][1]++;}cov_2dlk6kh4um().s[568]++;credits.push(credit);}cov_2dlk6kh4um().s[569]++;return credits;}/**
   * Fill a transaction with coins (all historical coins).
   * @param {TX} tx
   * @returns {Promise} - Returns {@link TX}.
   */async getSpentCredits(tx){cov_2dlk6kh4um().f[77]++;cov_2dlk6kh4um().s[570]++;if(tx.isCoinbase()){cov_2dlk6kh4um().b[81][0]++;cov_2dlk6kh4um().s[571]++;return[];}else{cov_2dlk6kh4um().b[81][1]++;}const hash=(cov_2dlk6kh4um().s[572]++,tx.hash());const credits=(cov_2dlk6kh4um().s[573]++,[]);cov_2dlk6kh4um().s[574]++;for(let i=(cov_2dlk6kh4um().s[575]++,0);i<tx.inputs.length;i++){cov_2dlk6kh4um().s[576]++;credits.push(null);}cov_2dlk6kh4um().s[577]++;await this.bucket.range({gte:layout.d.min(hash),lte:layout.d.max(hash),parse:(key,value)=>{cov_2dlk6kh4um().f[78]++;const[,index]=(cov_2dlk6kh4um().s[578]++,layout.d.decode(key));const coin=(cov_2dlk6kh4um().s[579]++,Coin.fromRaw(value));const input=(cov_2dlk6kh4um().s[580]++,tx.inputs[index]);cov_2dlk6kh4um().s[581]++;assert(input);cov_2dlk6kh4um().s[582]++;coin.hash=input.prevout.hash;cov_2dlk6kh4um().s[583]++;coin.index=input.prevout.index;cov_2dlk6kh4um().s[584]++;credits[index]=new Credit(coin);}});cov_2dlk6kh4um().s[585]++;return credits;}/**
   * Get coins.
   * @param {Number} acct
   * @returns {Promise} - Returns {@link Coin}[].
   */async getCoins(acct){cov_2dlk6kh4um().f[79]++;const credits=(cov_2dlk6kh4um().s[586]++,await this.getCredits(acct));const coins=(cov_2dlk6kh4um().s[587]++,[]);cov_2dlk6kh4um().s[588]++;for(const credit of credits){cov_2dlk6kh4um().s[589]++;if(credit.spent){cov_2dlk6kh4um().b[82][0]++;cov_2dlk6kh4um().s[590]++;continue;}else{cov_2dlk6kh4um().b[82][1]++;}cov_2dlk6kh4um().s[591]++;coins.push(credit.coin);}cov_2dlk6kh4um().s[592]++;return coins;}/**
   * Get coins by account.
   * @param {Number} acct
   * @returns {Promise} - Returns {@link Coin}[].
   */async getAccountCoins(acct){cov_2dlk6kh4um().f[80]++;const credits=(cov_2dlk6kh4um().s[593]++,await this.getAccountCredits(acct));const coins=(cov_2dlk6kh4um().s[594]++,[]);cov_2dlk6kh4um().s[595]++;for(const credit of credits){cov_2dlk6kh4um().s[596]++;if(credit.spent){cov_2dlk6kh4um().b[83][0]++;cov_2dlk6kh4um().s[597]++;continue;}else{cov_2dlk6kh4um().b[83][1]++;}cov_2dlk6kh4um().s[598]++;coins.push(credit.coin);}cov_2dlk6kh4um().s[599]++;return coins;}/**
   * Get historical coins for a transaction.
   * @param {TX} tx
   * @returns {Promise} - Returns {@link TX}.
   */async getSpentCoins(tx){cov_2dlk6kh4um().f[81]++;cov_2dlk6kh4um().s[600]++;if(tx.isCoinbase()){cov_2dlk6kh4um().b[84][0]++;cov_2dlk6kh4um().s[601]++;return[];}else{cov_2dlk6kh4um().b[84][1]++;}const credits=(cov_2dlk6kh4um().s[602]++,await this.getSpentCredits(tx));const coins=(cov_2dlk6kh4um().s[603]++,[]);cov_2dlk6kh4um().s[604]++;for(const credit of credits){cov_2dlk6kh4um().s[605]++;if(!credit){cov_2dlk6kh4um().b[85][0]++;cov_2dlk6kh4um().s[606]++;coins.push(null);cov_2dlk6kh4um().s[607]++;continue;}else{cov_2dlk6kh4um().b[85][1]++;}cov_2dlk6kh4um().s[608]++;coins.push(credit.coin);}cov_2dlk6kh4um().s[609]++;return coins;}/**
   * Get a coin viewpoint.
   * @param {TX} tx
   * @returns {Promise} - Returns {@link CoinView}.
   */async getCoinView(tx){cov_2dlk6kh4um().f[82]++;const view=(cov_2dlk6kh4um().s[610]++,new CoinView());cov_2dlk6kh4um().s[611]++;if(tx.isCoinbase()){cov_2dlk6kh4um().b[86][0]++;cov_2dlk6kh4um().s[612]++;return view;}else{cov_2dlk6kh4um().b[86][1]++;}cov_2dlk6kh4um().s[613]++;for(const{prevout}of tx.inputs){const{hash,index}=(cov_2dlk6kh4um().s[614]++,prevout);const coin=(cov_2dlk6kh4um().s[615]++,await this.getCoin(hash,index));cov_2dlk6kh4um().s[616]++;if(!coin){cov_2dlk6kh4um().b[87][0]++;cov_2dlk6kh4um().s[617]++;continue;}else{cov_2dlk6kh4um().b[87][1]++;}cov_2dlk6kh4um().s[618]++;view.addCoin(coin);}cov_2dlk6kh4um().s[619]++;return view;}/**
   * Get historical coin viewpoint.
   * @param {TX} tx
   * @returns {Promise} - Returns {@link CoinView}.
   */async getSpentView(tx){cov_2dlk6kh4um().f[83]++;const view=(cov_2dlk6kh4um().s[620]++,new CoinView());cov_2dlk6kh4um().s[621]++;if(tx.isCoinbase()){cov_2dlk6kh4um().b[88][0]++;cov_2dlk6kh4um().s[622]++;return view;}else{cov_2dlk6kh4um().b[88][1]++;}const coins=(cov_2dlk6kh4um().s[623]++,await this.getSpentCoins(tx));cov_2dlk6kh4um().s[624]++;for(const coin of coins){cov_2dlk6kh4um().s[625]++;if(!coin){cov_2dlk6kh4um().b[89][0]++;cov_2dlk6kh4um().s[626]++;continue;}else{cov_2dlk6kh4um().b[89][1]++;}cov_2dlk6kh4um().s[627]++;view.addCoin(coin);}cov_2dlk6kh4um().s[628]++;return view;}/**
   * Get transaction.
   * @param {Hash} hash
   * @returns {Promise} - Returns {@link TX}.
   */async getTX(hash){cov_2dlk6kh4um().f[84]++;const raw=(cov_2dlk6kh4um().s[629]++,await this.bucket.get(layout.t.encode(hash)));cov_2dlk6kh4um().s[630]++;if(!raw){cov_2dlk6kh4um().b[90][0]++;cov_2dlk6kh4um().s[631]++;return null;}else{cov_2dlk6kh4um().b[90][1]++;}cov_2dlk6kh4um().s[632]++;return TXRecord.fromRaw(raw);}/**
   * Get transaction details.
   * @param {Hash} hash
   * @returns {Promise} - Returns {@link TXDetails}.
   */async getDetails(hash){cov_2dlk6kh4um().f[85]++;const wtx=(cov_2dlk6kh4um().s[633]++,await this.getTX(hash));cov_2dlk6kh4um().s[634]++;if(!wtx){cov_2dlk6kh4um().b[91][0]++;cov_2dlk6kh4um().s[635]++;return null;}else{cov_2dlk6kh4um().b[91][1]++;}cov_2dlk6kh4um().s[636]++;return this.toDetails(wtx);}/**
   * Convert transaction to transaction details.
   * @param {TXRecord[]} wtxs
   * @returns {Promise}
   */async toDetails(wtxs){cov_2dlk6kh4um().f[86]++;const out=(cov_2dlk6kh4um().s[637]++,[]);cov_2dlk6kh4um().s[638]++;if(!Array.isArray(wtxs)){cov_2dlk6kh4um().b[92][0]++;cov_2dlk6kh4um().s[639]++;return this._toDetails(wtxs);}else{cov_2dlk6kh4um().b[92][1]++;}cov_2dlk6kh4um().s[640]++;for(const wtx of wtxs){const details=(cov_2dlk6kh4um().s[641]++,await this._toDetails(wtx));cov_2dlk6kh4um().s[642]++;if(!details){cov_2dlk6kh4um().b[93][0]++;cov_2dlk6kh4um().s[643]++;continue;}else{cov_2dlk6kh4um().b[93][1]++;}cov_2dlk6kh4um().s[644]++;out.push(details);}cov_2dlk6kh4um().s[645]++;return out;}/**
   * Convert transaction to transaction details.
   * @private
   * @param {TXRecord} wtx
   * @returns {Promise}
   */async _toDetails(wtx){cov_2dlk6kh4um().f[87]++;const tx=(cov_2dlk6kh4um().s[646]++,wtx.tx);const block=(cov_2dlk6kh4um().s[647]++,wtx.getBlock());const details=(cov_2dlk6kh4um().s[648]++,new Details(wtx,block));const coins=(cov_2dlk6kh4um().s[649]++,await this.getSpentCoins(tx));cov_2dlk6kh4um().s[650]++;for(let i=(cov_2dlk6kh4um().s[651]++,0);i<tx.inputs.length;i++){const coin=(cov_2dlk6kh4um().s[652]++,coins[i]);let path=(cov_2dlk6kh4um().s[653]++,null);cov_2dlk6kh4um().s[654]++;if(coin){cov_2dlk6kh4um().b[94][0]++;cov_2dlk6kh4um().s[655]++;path=await this.getPath(coin);}else{cov_2dlk6kh4um().b[94][1]++;}cov_2dlk6kh4um().s[656]++;details.setInput(i,path,coin);}cov_2dlk6kh4um().s[657]++;for(let i=(cov_2dlk6kh4um().s[658]++,0);i<tx.outputs.length;i++){const output=(cov_2dlk6kh4um().s[659]++,tx.outputs[i]);const path=(cov_2dlk6kh4um().s[660]++,await this.getPath(output));cov_2dlk6kh4um().s[661]++;details.setOutput(i,path);}cov_2dlk6kh4um().s[662]++;return details;}/**
   * Test whether the database has a transaction.
   * @param {Hash} hash
   * @returns {Promise} - Returns Boolean.
   */hasTX(hash){cov_2dlk6kh4um().f[88]++;cov_2dlk6kh4um().s[663]++;return this.bucket.has(layout.t.encode(hash));}/**
   * Get coin.
   * @param {Hash} hash
   * @param {Number} index
   * @returns {Promise} - Returns {@link Coin}.
   */async getCoin(hash,index){cov_2dlk6kh4um().f[89]++;const credit=(cov_2dlk6kh4um().s[664]++,await this.getCredit(hash,index));cov_2dlk6kh4um().s[665]++;if(!credit){cov_2dlk6kh4um().b[95][0]++;cov_2dlk6kh4um().s[666]++;return null;}else{cov_2dlk6kh4um().b[95][1]++;}cov_2dlk6kh4um().s[667]++;return credit.coin;}/**
   * Get coin.
   * @param {Hash} hash
   * @param {Number} index
   * @returns {Promise} - Returns {@link Coin}.
   */async getCredit(hash,index){cov_2dlk6kh4um().f[90]++;const data=(cov_2dlk6kh4um().s[668]++,await this.bucket.get(layout.c.encode(hash,index)));cov_2dlk6kh4um().s[669]++;if(!data){cov_2dlk6kh4um().b[96][0]++;cov_2dlk6kh4um().s[670]++;return null;}else{cov_2dlk6kh4um().b[96][1]++;}const credit=(cov_2dlk6kh4um().s[671]++,Credit.fromRaw(data));cov_2dlk6kh4um().s[672]++;credit.coin.hash=hash;cov_2dlk6kh4um().s[673]++;credit.coin.index=index;cov_2dlk6kh4um().s[674]++;return credit;}/**
   * Get spender coin.
   * @param {Outpoint} spent
   * @param {Outpoint} prevout
   * @returns {Promise} - Returns {@link Coin}.
   */async getSpentCoin(spent,prevout){cov_2dlk6kh4um().f[91]++;const data=(cov_2dlk6kh4um().s[675]++,await this.bucket.get(layout.d.encode(spent.hash,spent.index)));cov_2dlk6kh4um().s[676]++;if(!data){cov_2dlk6kh4um().b[97][0]++;cov_2dlk6kh4um().s[677]++;return null;}else{cov_2dlk6kh4um().b[97][1]++;}const coin=(cov_2dlk6kh4um().s[678]++,Coin.fromRaw(data));cov_2dlk6kh4um().s[679]++;coin.hash=prevout.hash;cov_2dlk6kh4um().s[680]++;coin.index=prevout.index;cov_2dlk6kh4um().s[681]++;return coin;}/**
   * Test whether the database has a spent coin.
   * @param {Outpoint} spent
   * @returns {Promise} - Returns {@link Coin}.
   */hasSpentCoin(spent){cov_2dlk6kh4um().f[92]++;cov_2dlk6kh4um().s[682]++;return this.bucket.has(layout.d.encode(spent.hash,spent.index));}/**
   * Update spent coin height in storage.
   * @param {TX} tx - Sending transaction.
   * @param {Number} index
   * @param {Number} height
   * @returns {Promise}
   */async updateSpentCoin(b,tx,index,height){cov_2dlk6kh4um().f[93]++;const prevout=(cov_2dlk6kh4um().s[683]++,Outpoint.fromTX(tx,index));const spent=(cov_2dlk6kh4um().s[684]++,await this.getSpent(prevout.hash,prevout.index));cov_2dlk6kh4um().s[685]++;if(!spent){cov_2dlk6kh4um().b[98][0]++;cov_2dlk6kh4um().s[686]++;return;}else{cov_2dlk6kh4um().b[98][1]++;}const coin=(cov_2dlk6kh4um().s[687]++,await this.getSpentCoin(spent,prevout));cov_2dlk6kh4um().s[688]++;if(!coin){cov_2dlk6kh4um().b[99][0]++;cov_2dlk6kh4um().s[689]++;return;}else{cov_2dlk6kh4um().b[99][1]++;}cov_2dlk6kh4um().s[690]++;coin.height=height;cov_2dlk6kh4um().s[691]++;b.put(layout.d.encode(spent.hash,spent.index),coin.toRaw());}/**
   * Test whether the database has a transaction.
   * @param {Hash} hash
   * @returns {Promise} - Returns Boolean.
   */async hasCoin(hash,index){cov_2dlk6kh4um().f[94]++;cov_2dlk6kh4um().s[692]++;return this.bucket.has(layout.c.encode(hash,index));}/**
   * Calculate balance.
   * @param {Number?} account
   * @returns {Promise} - Returns {@link Balance}.
   */async getBalance(acct){cov_2dlk6kh4um().f[95]++;cov_2dlk6kh4um().s[693]++;assert(typeof acct==='number');cov_2dlk6kh4um().s[694]++;if(acct!==-1){cov_2dlk6kh4um().b[100][0]++;cov_2dlk6kh4um().s[695]++;return this.getAccountBalance(acct);}else{cov_2dlk6kh4um().b[100][1]++;}cov_2dlk6kh4um().s[696]++;return this.getWalletBalance();}/**
   * Calculate balance.
   * @returns {Promise} - Returns {@link Balance}.
   */async getWalletBalance(){cov_2dlk6kh4um().f[96]++;const data=(cov_2dlk6kh4um().s[697]++,await this.bucket.get(layout.R.encode()));cov_2dlk6kh4um().s[698]++;if(!data){cov_2dlk6kh4um().b[101][0]++;cov_2dlk6kh4um().s[699]++;return new Balance();}else{cov_2dlk6kh4um().b[101][1]++;}cov_2dlk6kh4um().s[700]++;return Balance.fromRaw(-1,data);}/**
   * Calculate balance by account.
   * @param {Number} acct
   * @returns {Promise} - Returns {@link Balance}.
   */async getAccountBalance(acct){cov_2dlk6kh4um().f[97]++;const data=(cov_2dlk6kh4um().s[701]++,await this.bucket.get(layout.r.encode(acct)));cov_2dlk6kh4um().s[702]++;if(!data){cov_2dlk6kh4um().b[102][0]++;cov_2dlk6kh4um().s[703]++;return new Balance(acct);}else{cov_2dlk6kh4um().b[102][1]++;}cov_2dlk6kh4um().s[704]++;return Balance.fromRaw(acct,data);}/**
   * Zap pending transactions older than `age`.
   * @param {Number} acct
   * @param {Number} age - Age delta.
   * @returns {Promise}
   */async zap(acct,age){cov_2dlk6kh4um().f[98]++;cov_2dlk6kh4um().s[705]++;assert(age>>>0===age);const now=(cov_2dlk6kh4um().s[706]++,util.now());const txs=(cov_2dlk6kh4um().s[707]++,await this.getRange(acct,{start:0,end:now-age}));const hashes=(cov_2dlk6kh4um().s[708]++,[]);cov_2dlk6kh4um().s[709]++;for(const wtx of txs){cov_2dlk6kh4um().s[710]++;if(wtx.height!==-1){cov_2dlk6kh4um().b[103][0]++;cov_2dlk6kh4um().s[711]++;continue;}else{cov_2dlk6kh4um().b[103][1]++;}cov_2dlk6kh4um().s[712]++;assert(now-wtx.mtime>=age);cov_2dlk6kh4um().s[713]++;this.logger.debug('Zapping TX: %h (%d)',wtx.tx.hash(),this.wid);cov_2dlk6kh4um().s[714]++;await this.remove(wtx.hash);cov_2dlk6kh4um().s[715]++;hashes.push(wtx.hash);}cov_2dlk6kh4um().s[716]++;return hashes;}/**
   * Abandon transaction.
   * @param {Hash} hash
   * @returns {Promise}
   */async abandon(hash){cov_2dlk6kh4um().f[99]++;const result=(cov_2dlk6kh4um().s[717]++,await this.bucket.has(layout.p.encode(hash)));cov_2dlk6kh4um().s[718]++;if(!result){cov_2dlk6kh4um().b[104][0]++;cov_2dlk6kh4um().s[719]++;throw new Error('TX not eligible.');}else{cov_2dlk6kh4um().b[104][1]++;}cov_2dlk6kh4um().s[720]++;return this.remove(hash);}}/**
 * Balance
 * @alias module:wallet.Balance
 */class Balance{/**
   * Create a balance.
   * @constructor
   * @param {Number} account
   */constructor(acct=(cov_2dlk6kh4um().b[105][0]++,-1)){cov_2dlk6kh4um().f[100]++;cov_2dlk6kh4um().s[721]++;assert(typeof acct==='number');cov_2dlk6kh4um().s[722]++;this.account=acct;cov_2dlk6kh4um().s[723]++;this.tx=0;cov_2dlk6kh4um().s[724]++;this.coin=0;cov_2dlk6kh4um().s[725]++;this.unconfirmed=0;cov_2dlk6kh4um().s[726]++;this.confirmed=0;}/**
   * Apply delta.
   * @param {Balance} balance
   */applyTo(balance){cov_2dlk6kh4um().f[101]++;cov_2dlk6kh4um().s[727]++;balance.tx+=this.tx;cov_2dlk6kh4um().s[728]++;balance.coin+=this.coin;cov_2dlk6kh4um().s[729]++;balance.unconfirmed+=this.unconfirmed;cov_2dlk6kh4um().s[730]++;balance.confirmed+=this.confirmed;cov_2dlk6kh4um().s[731]++;assert(balance.tx>=0);cov_2dlk6kh4um().s[732]++;assert(balance.coin>=0);cov_2dlk6kh4um().s[733]++;assert(balance.unconfirmed>=0);cov_2dlk6kh4um().s[734]++;assert(balance.confirmed>=0);}/**
   * Serialize balance.
   * @returns {Buffer}
   */toRaw(){cov_2dlk6kh4um().f[102]++;const bw=(cov_2dlk6kh4um().s[735]++,bio.write(32));cov_2dlk6kh4um().s[736]++;bw.writeU64(this.tx);cov_2dlk6kh4um().s[737]++;bw.writeU64(this.coin);cov_2dlk6kh4um().s[738]++;bw.writeU64(this.unconfirmed);cov_2dlk6kh4um().s[739]++;bw.writeU64(this.confirmed);cov_2dlk6kh4um().s[740]++;return bw.render();}/**
   * Inject properties from serialized data.
   * @private
   * @param {Buffer} data
   * @returns {TXDBState}
   */fromRaw(data){cov_2dlk6kh4um().f[103]++;const br=(cov_2dlk6kh4um().s[741]++,bio.read(data));cov_2dlk6kh4um().s[742]++;this.tx=br.readU64();cov_2dlk6kh4um().s[743]++;this.coin=br.readU64();cov_2dlk6kh4um().s[744]++;this.unconfirmed=br.readU64();cov_2dlk6kh4um().s[745]++;this.confirmed=br.readU64();cov_2dlk6kh4um().s[746]++;return this;}/**
   * Instantiate balance from serialized data.
   * @param {Number} acct
   * @param {Buffer} data
   * @returns {TXDBState}
   */static fromRaw(acct,data){cov_2dlk6kh4um().f[104]++;cov_2dlk6kh4um().s[747]++;return new this(acct).fromRaw(data);}/**
   * Convert balance to a more json-friendly object.
   * @param {Boolean?} minimal
   * @returns {Object}
   */toJSON(minimal){cov_2dlk6kh4um().f[105]++;cov_2dlk6kh4um().s[748]++;return{account:!minimal?(cov_2dlk6kh4um().b[106][0]++,this.account):(cov_2dlk6kh4um().b[106][1]++,undefined),tx:this.tx,coin:this.coin,unconfirmed:this.unconfirmed,confirmed:this.confirmed};}/**
   * Inspect balance.
   * @param {String}
   */[inspectSymbol](){cov_2dlk6kh4um().f[106]++;cov_2dlk6kh4um().s[749]++;return'<Balance'+` tx=${this.tx}`+` coin=${this.coin}`+` unconfirmed=${Amount.btc(this.unconfirmed)}`+` confirmed=${Amount.btc(this.confirmed)}`+'>';}}/**
 * Balance Delta
 * @ignore
 */class BalanceDelta{/**
   * Create a balance delta.
   * @constructor
   */constructor(){cov_2dlk6kh4um().f[107]++;cov_2dlk6kh4um().s[750]++;this.wallet=new Balance();cov_2dlk6kh4um().s[751]++;this.accounts=new Map();}updated(){cov_2dlk6kh4um().f[108]++;cov_2dlk6kh4um().s[752]++;return this.wallet.tx!==0;}applyTo(balance){cov_2dlk6kh4um().f[109]++;cov_2dlk6kh4um().s[753]++;this.wallet.applyTo(balance);}get(path){cov_2dlk6kh4um().f[110]++;cov_2dlk6kh4um().s[754]++;if(!this.accounts.has(path.account)){cov_2dlk6kh4um().b[107][0]++;cov_2dlk6kh4um().s[755]++;this.accounts.set(path.account,new Balance());}else{cov_2dlk6kh4um().b[107][1]++;}cov_2dlk6kh4um().s[756]++;return this.accounts.get(path.account);}tx(path,value){cov_2dlk6kh4um().f[111]++;const account=(cov_2dlk6kh4um().s[757]++,this.get(path));cov_2dlk6kh4um().s[758]++;account.tx=value;cov_2dlk6kh4um().s[759]++;this.wallet.tx=value;}coin(path,value){cov_2dlk6kh4um().f[112]++;const account=(cov_2dlk6kh4um().s[760]++,this.get(path));cov_2dlk6kh4um().s[761]++;account.coin+=value;cov_2dlk6kh4um().s[762]++;this.wallet.coin+=value;}unconfirmed(path,value){cov_2dlk6kh4um().f[113]++;const account=(cov_2dlk6kh4um().s[763]++,this.get(path));cov_2dlk6kh4um().s[764]++;account.unconfirmed+=value;cov_2dlk6kh4um().s[765]++;this.wallet.unconfirmed+=value;}confirmed(path,value){cov_2dlk6kh4um().f[114]++;const account=(cov_2dlk6kh4um().s[766]++,this.get(path));cov_2dlk6kh4um().s[767]++;account.confirmed+=value;cov_2dlk6kh4um().s[768]++;this.wallet.confirmed+=value;}}/**
 * Credit (wrapped coin)
 * @alias module:wallet.Credit
 * @property {Coin} coin
 * @property {Boolean} spent
 */class Credit{/**
   * Create a credit.
   * @constructor
   * @param {Coin} coin
   * @param {Boolean?} spent
   */constructor(coin,spent){cov_2dlk6kh4um().f[115]++;cov_2dlk6kh4um().s[769]++;this.coin=(cov_2dlk6kh4um().b[108][0]++,coin)||(cov_2dlk6kh4um().b[108][1]++,new Coin());cov_2dlk6kh4um().s[770]++;this.spent=(cov_2dlk6kh4um().b[109][0]++,spent)||(cov_2dlk6kh4um().b[109][1]++,false);cov_2dlk6kh4um().s[771]++;this.own=false;}/**
   * Inject properties from serialized data.
   * @private
   * @param {Buffer} data
   */fromRaw(data){cov_2dlk6kh4um().f[116]++;const br=(cov_2dlk6kh4um().s[772]++,bio.read(data));cov_2dlk6kh4um().s[773]++;this.coin.fromReader(br);cov_2dlk6kh4um().s[774]++;this.spent=br.readU8()===1;cov_2dlk6kh4um().s[775]++;this.own=br.readU8()===1;cov_2dlk6kh4um().s[776]++;return this;}/**
   * Instantiate credit from serialized data.
   * @param {Buffer} data
   * @returns {Credit}
   */static fromRaw(data){cov_2dlk6kh4um().f[117]++;cov_2dlk6kh4um().s[777]++;return new this().fromRaw(data);}/**
   * Get serialization size.
   * @returns {Number}
   */getSize(){cov_2dlk6kh4um().f[118]++;cov_2dlk6kh4um().s[778]++;return this.coin.getSize()+2;}/**
   * Serialize credit.
   * @returns {Buffer}
   */toRaw(){cov_2dlk6kh4um().f[119]++;const size=(cov_2dlk6kh4um().s[779]++,this.getSize());const bw=(cov_2dlk6kh4um().s[780]++,bio.write(size));cov_2dlk6kh4um().s[781]++;this.coin.toWriter(bw);cov_2dlk6kh4um().s[782]++;bw.writeU8(this.spent?(cov_2dlk6kh4um().b[110][0]++,1):(cov_2dlk6kh4um().b[110][1]++,0));cov_2dlk6kh4um().s[783]++;bw.writeU8(this.own?(cov_2dlk6kh4um().b[111][0]++,1):(cov_2dlk6kh4um().b[111][1]++,0));cov_2dlk6kh4um().s[784]++;return bw.render();}/**
   * Inject properties from tx object.
   * @private
   * @param {TX} tx
   * @param {Number} index
   * @returns {Credit}
   */fromTX(tx,index,height){cov_2dlk6kh4um().f[120]++;cov_2dlk6kh4um().s[785]++;this.coin.fromTX(tx,index,height);cov_2dlk6kh4um().s[786]++;this.spent=false;cov_2dlk6kh4um().s[787]++;this.own=false;cov_2dlk6kh4um().s[788]++;return this;}/**
   * Instantiate credit from transaction.
   * @param {TX} tx
   * @param {Number} index
   * @returns {Credit}
   */static fromTX(tx,index,height){cov_2dlk6kh4um().f[121]++;cov_2dlk6kh4um().s[789]++;return new this().fromTX(tx,index,height);}}/**
 * Transaction Details
 * @alias module:wallet.Details
 */class Details{/**
   * Create transaction details.
   * @constructor
   * @param {TXRecord} wtx
   * @param {BlockMeta} block
   */constructor(wtx,block){cov_2dlk6kh4um().f[122]++;cov_2dlk6kh4um().s[790]++;this.hash=wtx.hash;cov_2dlk6kh4um().s[791]++;this.tx=wtx.tx;cov_2dlk6kh4um().s[792]++;this.mtime=wtx.mtime;cov_2dlk6kh4um().s[793]++;this.size=this.tx.getSize();cov_2dlk6kh4um().s[794]++;this.vsize=this.tx.getVirtualSize();cov_2dlk6kh4um().s[795]++;this.block=null;cov_2dlk6kh4um().s[796]++;this.height=-1;cov_2dlk6kh4um().s[797]++;this.time=0;cov_2dlk6kh4um().s[798]++;if(block){cov_2dlk6kh4um().b[112][0]++;cov_2dlk6kh4um().s[799]++;this.block=block.hash;cov_2dlk6kh4um().s[800]++;this.height=block.height;cov_2dlk6kh4um().s[801]++;this.time=block.time;}else{cov_2dlk6kh4um().b[112][1]++;}cov_2dlk6kh4um().s[802]++;this.inputs=[];cov_2dlk6kh4um().s[803]++;this.outputs=[];cov_2dlk6kh4um().s[804]++;this.init();}/**
   * Initialize transaction details.
   * @private
   */init(){cov_2dlk6kh4um().f[123]++;cov_2dlk6kh4um().s[805]++;for(const input of this.tx.inputs){const member=(cov_2dlk6kh4um().s[806]++,new DetailsMember());cov_2dlk6kh4um().s[807]++;member.address=input.getAddress();cov_2dlk6kh4um().s[808]++;this.inputs.push(member);}cov_2dlk6kh4um().s[809]++;for(const output of this.tx.outputs){const member=(cov_2dlk6kh4um().s[810]++,new DetailsMember());cov_2dlk6kh4um().s[811]++;member.value=output.value;cov_2dlk6kh4um().s[812]++;member.address=output.getAddress();cov_2dlk6kh4um().s[813]++;this.outputs.push(member);}}/**
   * Add necessary info to input member.
   * @param {Number} i
   * @param {Path} path
   * @param {Coin} coin
   */setInput(i,path,coin){cov_2dlk6kh4um().f[124]++;const member=(cov_2dlk6kh4um().s[814]++,this.inputs[i]);cov_2dlk6kh4um().s[815]++;if(coin){cov_2dlk6kh4um().b[113][0]++;cov_2dlk6kh4um().s[816]++;member.value=coin.value;cov_2dlk6kh4um().s[817]++;member.address=coin.getAddress();}else{cov_2dlk6kh4um().b[113][1]++;}cov_2dlk6kh4um().s[818]++;if(path){cov_2dlk6kh4um().b[114][0]++;cov_2dlk6kh4um().s[819]++;member.path=path;}else{cov_2dlk6kh4um().b[114][1]++;}}/**
   * Add necessary info to output member.
   * @param {Number} i
   * @param {Path} path
   */setOutput(i,path){cov_2dlk6kh4um().f[125]++;const member=(cov_2dlk6kh4um().s[820]++,this.outputs[i]);cov_2dlk6kh4um().s[821]++;if(path){cov_2dlk6kh4um().b[115][0]++;cov_2dlk6kh4um().s[822]++;member.path=path;}else{cov_2dlk6kh4um().b[115][1]++;}}/**
   * Calculate confirmations.
   * @returns {Number}
   */getDepth(height){cov_2dlk6kh4um().f[126]++;cov_2dlk6kh4um().s[823]++;if(this.height===-1){cov_2dlk6kh4um().b[116][0]++;cov_2dlk6kh4um().s[824]++;return 0;}else{cov_2dlk6kh4um().b[116][1]++;}cov_2dlk6kh4um().s[825]++;if(height==null){cov_2dlk6kh4um().b[117][0]++;cov_2dlk6kh4um().s[826]++;return 0;}else{cov_2dlk6kh4um().b[117][1]++;}const depth=(cov_2dlk6kh4um().s[827]++,height-this.height);cov_2dlk6kh4um().s[828]++;if(depth<0){cov_2dlk6kh4um().b[118][0]++;cov_2dlk6kh4um().s[829]++;return 0;}else{cov_2dlk6kh4um().b[118][1]++;}cov_2dlk6kh4um().s[830]++;return depth+1;}/**
   * Calculate fee. Only works if wallet
   * owns all inputs. Returns 0 otherwise.
   * @returns {Amount}
   */getFee(){cov_2dlk6kh4um().f[127]++;let inputValue=(cov_2dlk6kh4um().s[831]++,0);let outputValue=(cov_2dlk6kh4um().s[832]++,0);cov_2dlk6kh4um().s[833]++;for(const input of this.inputs){cov_2dlk6kh4um().s[834]++;if(!input.path){cov_2dlk6kh4um().b[119][0]++;cov_2dlk6kh4um().s[835]++;return 0;}else{cov_2dlk6kh4um().b[119][1]++;}cov_2dlk6kh4um().s[836]++;inputValue+=input.value;}cov_2dlk6kh4um().s[837]++;for(const output of this.outputs){cov_2dlk6kh4um().s[838]++;outputValue+=output.value;}cov_2dlk6kh4um().s[839]++;return inputValue-outputValue;}/**
   * Calculate fee rate. Only works if wallet
   * owns all inputs. Returns 0 otherwise.
   * @param {Amount} fee
   * @returns {Rate}
   */getRate(fee){cov_2dlk6kh4um().f[128]++;cov_2dlk6kh4um().s[840]++;return policy.getRate(this.vsize,fee);}/**
   * Convert details to a more json-friendly object.
   * @returns {Object}
   */toJSON(network,height){cov_2dlk6kh4um().f[129]++;const fee=(cov_2dlk6kh4um().s[841]++,this.getFee());const rate=(cov_2dlk6kh4um().s[842]++,this.getRate(fee));cov_2dlk6kh4um().s[843]++;return{hash:util.revHex(this.hash),height:this.height,block:this.block?(cov_2dlk6kh4um().b[120][0]++,util.revHex(this.block)):(cov_2dlk6kh4um().b[120][1]++,null),time:this.time,mtime:this.mtime,date:util.date(this.time),mdate:util.date(this.mtime),size:this.size,virtualSize:this.vsize,fee:fee,rate:rate,confirmations:this.getDepth(height),inputs:this.inputs.map(input=>{cov_2dlk6kh4um().f[130]++;cov_2dlk6kh4um().s[844]++;return input.getJSON(network);}),outputs:this.outputs.map(output=>{cov_2dlk6kh4um().f[131]++;cov_2dlk6kh4um().s[845]++;return output.getJSON(network);}),tx:this.tx.toRaw().toString('hex')};}}/**
 * Transaction Details Member
 * @property {Number} value
 * @property {Address} address
 * @property {Path} path
 */class DetailsMember{/**
   * Create details member.
   * @constructor
   */constructor(){cov_2dlk6kh4um().f[132]++;cov_2dlk6kh4um().s[846]++;this.value=0;cov_2dlk6kh4um().s[847]++;this.address=null;cov_2dlk6kh4um().s[848]++;this.path=null;}/**
   * Convert the member to a more json-friendly object.
   * @returns {Object}
   */toJSON(){cov_2dlk6kh4um().f[133]++;cov_2dlk6kh4um().s[849]++;return this.getJSON();}/**
   * Convert the member to a more json-friendly object.
   * @param {Network} network
   * @returns {Object}
   */getJSON(network){cov_2dlk6kh4um().f[134]++;cov_2dlk6kh4um().s[850]++;return{value:this.value,address:this.address?(cov_2dlk6kh4um().b[121][0]++,this.address.toString(network)):(cov_2dlk6kh4um().b[121][1]++,null),path:this.path?(cov_2dlk6kh4um().b[122][0]++,this.path.toJSON()):(cov_2dlk6kh4um().b[122][1]++,null)};}}/**
 * Block Record
 * @alias module:wallet.BlockRecord
 */class BlockRecord{/**
   * Create a block record.
   * @constructor
   * @param {Hash} hash
   * @param {Number} height
   * @param {Number} time
   */constructor(hash,height,time){cov_2dlk6kh4um().f[135]++;cov_2dlk6kh4um().s[851]++;this.hash=(cov_2dlk6kh4um().b[123][0]++,hash)||(cov_2dlk6kh4um().b[123][1]++,consensus.ZERO_HASH);cov_2dlk6kh4um().s[852]++;this.height=height!=null?(cov_2dlk6kh4um().b[124][0]++,height):(cov_2dlk6kh4um().b[124][1]++,-1);cov_2dlk6kh4um().s[853]++;this.time=(cov_2dlk6kh4um().b[125][0]++,time)||(cov_2dlk6kh4um().b[125][1]++,0);cov_2dlk6kh4um().s[854]++;this.hashes=new BufferSet();}/**
   * Add transaction to block record.
   * @param {Hash} hash
   * @returns {Boolean}
   */add(hash){cov_2dlk6kh4um().f[136]++;cov_2dlk6kh4um().s[855]++;if(this.hashes.has(hash)){cov_2dlk6kh4um().b[126][0]++;cov_2dlk6kh4um().s[856]++;return false;}else{cov_2dlk6kh4um().b[126][1]++;}cov_2dlk6kh4um().s[857]++;this.hashes.add(hash);cov_2dlk6kh4um().s[858]++;return true;}/**
   * Remove transaction from block record.
   * @param {Hash} hash
   * @returns {Boolean}
   */remove(hash){cov_2dlk6kh4um().f[137]++;cov_2dlk6kh4um().s[859]++;return this.hashes.delete(hash);}/**
   * Instantiate wallet block from serialized tip data.
   * @private
   * @param {Buffer} data
   */fromRaw(data){cov_2dlk6kh4um().f[138]++;const br=(cov_2dlk6kh4um().s[860]++,bio.read(data));cov_2dlk6kh4um().s[861]++;this.hash=br.readHash();cov_2dlk6kh4um().s[862]++;this.height=br.readU32();cov_2dlk6kh4um().s[863]++;this.time=br.readU32();const count=(cov_2dlk6kh4um().s[864]++,br.readU32());cov_2dlk6kh4um().s[865]++;for(let i=(cov_2dlk6kh4um().s[866]++,0);i<count;i++){const hash=(cov_2dlk6kh4um().s[867]++,br.readHash());cov_2dlk6kh4um().s[868]++;this.hashes.add(hash);}cov_2dlk6kh4um().s[869]++;return this;}/**
   * Instantiate wallet block from serialized data.
   * @param {Buffer} data
   * @returns {BlockRecord}
   */static fromRaw(data){cov_2dlk6kh4um().f[139]++;cov_2dlk6kh4um().s[870]++;return new this().fromRaw(data);}/**
   * Get serialization size.
   * @returns {Number}
   */getSize(){cov_2dlk6kh4um().f[140]++;cov_2dlk6kh4um().s[871]++;return 44+this.hashes.size*32;}/**
   * Serialize the wallet block as a tip (hash and height).
   * @returns {Buffer}
   */toRaw(){cov_2dlk6kh4um().f[141]++;const size=(cov_2dlk6kh4um().s[872]++,this.getSize());const bw=(cov_2dlk6kh4um().s[873]++,bio.write(size));cov_2dlk6kh4um().s[874]++;bw.writeHash(this.hash);cov_2dlk6kh4um().s[875]++;bw.writeU32(this.height);cov_2dlk6kh4um().s[876]++;bw.writeU32(this.time);cov_2dlk6kh4um().s[877]++;bw.writeU32(this.hashes.size);cov_2dlk6kh4um().s[878]++;for(const hash of this.hashes){cov_2dlk6kh4um().s[879]++;bw.writeHash(hash);}cov_2dlk6kh4um().s[880]++;return bw.render();}/**
   * Convert hashes set to an array.
   * @returns {Hash[]}
   */toArray(){cov_2dlk6kh4um().f[142]++;const hashes=(cov_2dlk6kh4um().s[881]++,[]);cov_2dlk6kh4um().s[882]++;for(const hash of this.hashes){cov_2dlk6kh4um().s[883]++;hashes.push(hash);}cov_2dlk6kh4um().s[884]++;return hashes;}/**
   * Convert the block to a more json-friendly object.
   * @returns {Object}
   */toJSON(){cov_2dlk6kh4um().f[143]++;cov_2dlk6kh4um().s[885]++;return{hash:util.revHex(this.hash),height:this.height,time:this.time,hashes:this.toArray().map(util.revHex)};}/**
   * Instantiate wallet block from block meta.
   * @private
   * @param {BlockMeta} block
   */fromMeta(block){cov_2dlk6kh4um().f[144]++;cov_2dlk6kh4um().s[886]++;this.hash=block.hash;cov_2dlk6kh4um().s[887]++;this.height=block.height;cov_2dlk6kh4um().s[888]++;this.time=block.time;cov_2dlk6kh4um().s[889]++;return this;}/**
   * Instantiate wallet block from block meta.
   * @param {BlockMeta} block
   * @returns {BlockRecord}
   */static fromMeta(block){cov_2dlk6kh4um().f[145]++;cov_2dlk6kh4um().s[890]++;return new this().fromMeta(block);}}/*
 * Expose
 */cov_2dlk6kh4um().s[891]++;module.exports=TXDB;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
/*!
 * wallet.js - http wallet client for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */'use strict';function cov_1kpooy2wni(){var path="E:\\Projects\\Test\\bcoin\\lib\\client\\wallet.js";var hash="65cd0a35952f41544c25c7ba9008f38f01a8b95a";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\Projects\\Test\\bcoin\\lib\\client\\wallet.js",statementMap:{"0":{start:{line:9,column:15},end:{line:9,column:31}},"1":{start:{line:10,column:21},end:{line:10,column:38}},"2":{start:{line:11,column:17},end:{line:11,column:33}},"3":{start:{line:25,column:4},end:{line:25,column:19}},"4":{start:{line:26,column:4},end:{line:26,column:29}},"5":{start:{line:36,column:4},end:{line:38,column:7}},"6":{start:{line:37,column:6},end:{line:37,column:39}},"7":{start:{line:40,column:4},end:{line:42,column:7}},"8":{start:{line:41,column:6},end:{line:41,column:46}},"9":{start:{line:44,column:4},end:{line:46,column:7}},"10":{start:{line:45,column:6},end:{line:45,column:48}},"11":{start:{line:48,column:4},end:{line:50,column:7}},"12":{start:{line:49,column:6},end:{line:49,column:45}},"13":{start:{line:52,column:4},end:{line:54,column:7}},"14":{start:{line:53,column:6},end:{line:53,column:44}},"15":{start:{line:56,column:4},end:{line:58,column:7}},"16":{start:{line:57,column:6},end:{line:57,column:44}},"17":{start:{line:60,column:4},end:{line:62,column:7}},"18":{start:{line:61,column:6},end:{line:61,column:44}},"19":{start:{line:73,column:19},end:{line:73,column:39}},"20":{start:{line:75,column:4},end:{line:76,column:34}},"21":{start:{line:76,column:6},end:{line:76,column:34}},"22":{start:{line:85,column:4},end:{line:85,column:23}},"23":{start:{line:86,column:4},end:{line:86,column:16}},"24":{start:{line:95,column:4},end:{line:95,column:24}},"25":{start:{line:96,column:4},end:{line:96,column:29}},"26":{start:{line:105,column:4},end:{line:105,column:43}},"27":{start:{line:114,column:4},end:{line:114,column:44}},"28":{start:{line:124,column:4},end:{line:124,column:39}},"29":{start:{line:133,column:4},end:{line:133,column:41}},"30":{start:{line:141,column:4},end:{line:141,column:35}},"31":{start:{line:151,column:4},end:{line:151,column:40}},"32":{start:{line:160,column:4},end:{line:160,column:34}},"33":{start:{line:170,column:4},end:{line:170,column:44}},"34":{start:{line:179,column:4},end:{line:179,column:32}},"35":{start:{line:189,column:4},end:{line:189,column:42}},"36":{start:{line:198,column:4},end:{line:198,column:31}},"37":{start:{line:209,column:4},end:{line:209,column:46}},"38":{start:{line:220,column:4},end:{line:220,column:61}},"39":{start:{line:231,column:4},end:{line:231,column:55}},"40":{start:{line:242,column:4},end:{line:242,column:65}},"41":{start:{line:253,column:4},end:{line:253,column:58}},"42":{start:{line:265,column:4},end:{line:265,column:65}},"43":{start:{line:281,column:4},end:{line:287,column:7}},"44":{start:{line:299,column:4},end:{line:299,column:48}},"45":{start:{line:309,column:4},end:{line:309,column:43}},"46":{start:{line:320,column:4},end:{line:320,column:53}},"47":{start:{line:333,column:4},end:{line:333,column:59}},"48":{start:{line:344,column:4},end:{line:344,column:60}},"49":{start:{line:354,column:4},end:{line:354,column:48}},"50":{start:{line:365,column:4},end:{line:365,column:54}},"51":{start:{line:378,column:4},end:{line:378,column:52}},"52":{start:{line:389,column:4},end:{line:389,column:52}},"53":{start:{line:399,column:4},end:{line:399,column:37}},"54":{start:{line:409,column:4},end:{line:409,column:45}},"55":{start:{line:419,column:4},end:{line:419,column:44}},"56":{start:{line:430,column:4},end:{line:430,column:56}},"57":{start:{line:442,column:4},end:{line:442,column:62}},"58":{start:{line:453,column:4},end:{line:453,column:59}},"59":{start:{line:464,column:4},end:{line:464,column:58}},"60":{start:{line:475,column:4},end:{line:475,column:58}},"61":{start:{line:487,column:4},end:{line:487,column:70}},"62":{start:{line:498,column:4},end:{line:500,column:7}},"63":{start:{line:512,column:4},end:{line:516,column:7}},"64":{start:{line:528,column:4},end:{line:531,column:7}},"65":{start:{line:543,column:4},end:{line:543,column:67}},"66":{start:{line:554,column:4},end:{line:554,column:61}},"67":{start:{line:566,column:4},end:{line:566,column:61}},"68":{start:{line:576,column:4},end:{line:576,column:44}},"69":{start:{line:586,column:4},end:{line:586,column:43}},"70":{start:{line:598,column:4},end:{line:598,column:70}},"71":{start:{line:609,column:4},end:{line:609,column:52}},"72":{start:{line:621,column:4},end:{line:621,column:68}},"73":{start:{line:633,column:4},end:{line:633,column:73}},"74":{start:{line:645,column:4},end:{line:645,column:73}},"75":{start:{line:655,column:4},end:{line:655,column:45}},"76":{start:{line:671,column:4},end:{line:671,column:12}},"77":{start:{line:672,column:4},end:{line:672,column:25}},"78":{start:{line:673,column:4},end:{line:673,column:33}},"79":{start:{line:674,column:4},end:{line:674,column:30}},"80":{start:{line:675,column:4},end:{line:675,column:17}},"81":{start:{line:676,column:4},end:{line:676,column:23}},"82":{start:{line:685,column:4},end:{line:685,column:48}},"83":{start:{line:686,column:4},end:{line:686,column:43}},"84":{start:{line:695,column:4},end:{line:695,column:37}},"85":{start:{line:696,column:4},end:{line:696,column:40}},"86":{start:{line:706,column:4},end:{line:706,column:52}},"87":{start:{line:716,column:4},end:{line:716,column:50}},"88":{start:{line:726,column:4},end:{line:726,column:52}},"89":{start:{line:736,column:4},end:{line:736,column:52}},"90":{start:{line:747,column:4},end:{line:747,column:56}},"91":{start:{line:762,column:4},end:{line:762,column:59}},"92":{start:{line:773,column:4},end:{line:773,column:44}},"93":{start:{line:783,column:4},end:{line:783,column:42}},"94":{start:{line:793,column:4},end:{line:793,column:49}},"95":{start:{line:805,column:4},end:{line:805,column:53}},"96":{start:{line:815,column:4},end:{line:815,column:50}},"97":{start:{line:827,column:4},end:{line:827,column:46}},"98":{start:{line:837,column:4},end:{line:837,column:50}},"99":{start:{line:849,column:4},end:{line:849,column:46}},"100":{start:{line:859,column:4},end:{line:859,column:46}},"101":{start:{line:868,column:4},end:{line:868,column:40}},"102":{start:{line:877,column:4},end:{line:877,column:44}},"103":{start:{line:886,column:4},end:{line:886,column:42}},"104":{start:{line:896,column:4},end:{line:896,column:52}},"105":{start:{line:907,column:4},end:{line:907,column:61}},"106":{start:{line:917,column:4},end:{line:917,column:55}},"107":{start:{line:927,column:4},end:{line:927,column:54}},"108":{start:{line:937,column:4},end:{line:937,column:54}},"109":{start:{line:948,column:4},end:{line:948,column:63}},"110":{start:{line:958,column:19},end:{line:958,column:65}},"111":{start:{line:960,column:4},end:{line:960,column:19}},"112":{start:{line:961,column:4},end:{line:961,column:45}},"113":{start:{line:963,column:4},end:{line:963,column:30}},"114":{start:{line:965,column:4},end:{line:965,column:18}},"115":{start:{line:977,column:4},end:{line:977,column:79}},"116":{start:{line:988,column:4},end:{line:988,column:65}},"117":{start:{line:999,column:4},end:{line:999,column:64}},"118":{start:{line:1010,column:4},end:{line:1010,column:54}},"119":{start:{line:1021,column:4},end:{line:1021,column:56}},"120":{start:{line:1030,column:4},end:{line:1030,column:42}},"121":{start:{line:1039,column:4},end:{line:1039,column:37}},"122":{start:{line:1050,column:4},end:{line:1050,column:60}},"123":{start:{line:1060,column:4},end:{line:1060,column:48}},"124":{start:{line:1071,column:4},end:{line:1071,column:60}},"125":{start:{line:1082,column:4},end:{line:1082,column:66}},"126":{start:{line:1093,column:4},end:{line:1093,column:69}},"127":{start:{line:1102,column:4},end:{line:1102,column:45}},"128":{start:{line:1110,column:0},end:{line:1110,column:30}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:24,column:2},end:{line:24,column:3}},loc:{start:{line:24,column:23},end:{line:27,column:3}},line:24},"1":{name:"(anonymous_1)",decl:{start:{line:35,column:2},end:{line:35,column:3}},loc:{start:{line:35,column:9},end:{line:63,column:3}},line:35},"2":{name:"(anonymous_2)",decl:{start:{line:36,column:20},end:{line:36,column:21}},loc:{start:{line:36,column:37},end:{line:38,column:5}},line:36},"3":{name:"(anonymous_3)",decl:{start:{line:40,column:27},end:{line:40,column:28}},loc:{start:{line:40,column:44},end:{line:42,column:5}},line:40},"4":{name:"(anonymous_4)",decl:{start:{line:44,column:29},end:{line:44,column:30}},loc:{start:{line:44,column:46},end:{line:46,column:5}},line:44},"5":{name:"(anonymous_5)",decl:{start:{line:48,column:26},end:{line:48,column:27}},loc:{start:{line:48,column:43},end:{line:50,column:5}},line:48},"6":{name:"(anonymous_6)",decl:{start:{line:52,column:25},end:{line:52,column:26}},loc:{start:{line:52,column:42},end:{line:54,column:5}},line:52},"7":{name:"(anonymous_7)",decl:{start:{line:56,column:25},end:{line:56,column:26}},loc:{start:{line:56,column:42},end:{line:58,column:5}},line:56},"8":{name:"(anonymous_8)",decl:{start:{line:60,column:25},end:{line:60,column:26}},loc:{start:{line:60,column:42},end:{line:62,column:5}},line:60},"9":{name:"(anonymous_9)",decl:{start:{line:72,column:2},end:{line:72,column:3}},loc:{start:{line:72,column:31},end:{line:77,column:3}},line:72},"10":{name:"(anonymous_10)",decl:{start:{line:84,column:2},end:{line:84,column:3}},loc:{start:{line:84,column:15},end:{line:87,column:3}},line:84},"11":{name:"(anonymous_11)",decl:{start:{line:94,column:2},end:{line:94,column:3}},loc:{start:{line:94,column:16},end:{line:97,column:3}},line:94},"12":{name:"(anonymous_12)",decl:{start:{line:104,column:2},end:{line:104,column:3}},loc:{start:{line:104,column:15},end:{line:106,column:3}},line:104},"13":{name:"(anonymous_13)",decl:{start:{line:113,column:2},end:{line:113,column:3}},loc:{start:{line:113,column:24},end:{line:115,column:3}},line:113},"14":{name:"(anonymous_14)",decl:{start:{line:123,column:2},end:{line:123,column:3}},loc:{start:{line:123,column:20},end:{line:125,column:3}},line:123},"15":{name:"(anonymous_15)",decl:{start:{line:132,column:2},end:{line:132,column:3}},loc:{start:{line:132,column:13},end:{line:134,column:3}},line:132},"16":{name:"(anonymous_16)",decl:{start:{line:140,column:2},end:{line:140,column:3}},loc:{start:{line:140,column:9},end:{line:142,column:3}},line:140},"17":{name:"(anonymous_17)",decl:{start:{line:150,column:2},end:{line:150,column:3}},loc:{start:{line:150,column:18},end:{line:152,column:3}},line:150},"18":{name:"(anonymous_18)",decl:{start:{line:159,column:2},end:{line:159,column:3}},loc:{start:{line:159,column:12},end:{line:161,column:3}},line:159},"19":{name:"(anonymous_19)",decl:{start:{line:169,column:2},end:{line:169,column:3}},loc:{start:{line:169,column:17},end:{line:171,column:3}},line:169},"20":{name:"(anonymous_20)",decl:{start:{line:178,column:2},end:{line:178,column:3}},loc:{start:{line:178,column:11},end:{line:180,column:3}},line:178},"21":{name:"(anonymous_21)",decl:{start:{line:188,column:2},end:{line:188,column:3}},loc:{start:{line:188,column:15},end:{line:190,column:3}},line:188},"22":{name:"(anonymous_22)",decl:{start:{line:197,column:2},end:{line:197,column:3}},loc:{start:{line:197,column:15},end:{line:199,column:3}},line:197},"23":{name:"(anonymous_23)",decl:{start:{line:208,column:2},end:{line:208,column:3}},loc:{start:{line:208,column:28},end:{line:210,column:3}},line:208},"24":{name:"(anonymous_24)",decl:{start:{line:219,column:2},end:{line:219,column:3}},loc:{start:{line:219,column:26},end:{line:221,column:3}},line:219},"25":{name:"(anonymous_25)",decl:{start:{line:230,column:2},end:{line:230,column:3}},loc:{start:{line:230,column:24},end:{line:232,column:3}},line:230},"26":{name:"(anonymous_26)",decl:{start:{line:241,column:2},end:{line:241,column:3}},loc:{start:{line:241,column:26},end:{line:243,column:3}},line:241},"27":{name:"(anonymous_27)",decl:{start:{line:252,column:2},end:{line:252,column:3}},loc:{start:{line:252,column:26},end:{line:254,column:3}},line:252},"28":{name:"(anonymous_28)",decl:{start:{line:264,column:2},end:{line:264,column:3}},loc:{start:{line:264,column:30},end:{line:266,column:3}},line:264},"29":{name:"(anonymous_29)",decl:{start:{line:280,column:2},end:{line:280,column:3}},loc:{start:{line:280,column:33},end:{line:288,column:3}},line:280},"30":{name:"(anonymous_30)",decl:{start:{line:298,column:2},end:{line:298,column:3}},loc:{start:{line:298,column:18},end:{line:300,column:3}},line:298},"31":{name:"(anonymous_31)",decl:{start:{line:308,column:2},end:{line:308,column:3}},loc:{start:{line:308,column:16},end:{line:310,column:3}},line:308},"32":{name:"(anonymous_32)",decl:{start:{line:319,column:2},end:{line:319,column:3}},loc:{start:{line:319,column:23},end:{line:321,column:3}},line:319},"33":{name:"(anonymous_33)",decl:{start:{line:332,column:2},end:{line:332,column:3}},loc:{start:{line:332,column:27},end:{line:334,column:3}},line:332},"34":{name:"(anonymous_34)",decl:{start:{line:343,column:2},end:{line:343,column:3}},loc:{start:{line:343,column:24},end:{line:345,column:3}},line:343},"35":{name:"(anonymous_35)",decl:{start:{line:353,column:2},end:{line:353,column:3}},loc:{start:{line:353,column:20},end:{line:355,column:3}},line:353},"36":{name:"(anonymous_36)",decl:{start:{line:364,column:2},end:{line:364,column:3}},loc:{start:{line:364,column:24},end:{line:366,column:3}},line:364},"37":{name:"(anonymous_37)",decl:{start:{line:377,column:2},end:{line:377,column:3}},loc:{start:{line:377,column:20},end:{line:379,column:3}},line:377},"38":{name:"(anonymous_38)",decl:{start:{line:388,column:2},end:{line:388,column:3}},loc:{start:{line:388,column:20},end:{line:390,column:3}},line:388},"39":{name:"(anonymous_39)",decl:{start:{line:398,column:2},end:{line:398,column:3}},loc:{start:{line:398,column:14},end:{line:400,column:3}},line:398},"40":{name:"(anonymous_40)",decl:{start:{line:408,column:2},end:{line:408,column:3}},loc:{start:{line:408,column:18},end:{line:410,column:3}},line:408},"41":{name:"(anonymous_41)",decl:{start:{line:418,column:2},end:{line:418,column:3}},loc:{start:{line:418,column:16},end:{line:420,column:3}},line:418},"42":{name:"(anonymous_42)",decl:{start:{line:429,column:2},end:{line:429,column:3}},loc:{start:{line:429,column:26},end:{line:431,column:3}},line:429},"43":{name:"(anonymous_43)",decl:{start:{line:441,column:2},end:{line:441,column:3}},loc:{start:{line:441,column:35},end:{line:443,column:3}},line:441},"44":{name:"(anonymous_44)",decl:{start:{line:452,column:2},end:{line:452,column:3}},loc:{start:{line:452,column:29},end:{line:454,column:3}},line:452},"45":{name:"(anonymous_45)",decl:{start:{line:463,column:2},end:{line:463,column:3}},loc:{start:{line:463,column:28},end:{line:465,column:3}},line:463},"46":{name:"(anonymous_46)",decl:{start:{line:474,column:2},end:{line:474,column:3}},loc:{start:{line:474,column:28},end:{line:476,column:3}},line:474},"47":{name:"(anonymous_47)",decl:{start:{line:486,column:2},end:{line:486,column:3}},loc:{start:{line:486,column:37},end:{line:488,column:3}},line:486},"48":{name:"(anonymous_48)",decl:{start:{line:497,column:2},end:{line:497,column:3}},loc:{start:{line:497,column:26},end:{line:501,column:3}},line:497},"49":{name:"(anonymous_49)",decl:{start:{line:511,column:2},end:{line:511,column:3}},loc:{start:{line:511,column:53},end:{line:517,column:3}},line:511},"50":{name:"(anonymous_50)",decl:{start:{line:527,column:2},end:{line:527,column:3}},loc:{start:{line:527,column:39},end:{line:532,column:3}},line:527},"51":{name:"(anonymous_51)",decl:{start:{line:542,column:2},end:{line:542,column:3}},loc:{start:{line:542,column:38},end:{line:544,column:3}},line:542},"52":{name:"(anonymous_52)",decl:{start:{line:553,column:2},end:{line:553,column:3}},loc:{start:{line:553,column:28},end:{line:555,column:3}},line:553},"53":{name:"(anonymous_53)",decl:{start:{line:565,column:2},end:{line:565,column:3}},loc:{start:{line:565,column:30},end:{line:567,column:3}},line:565},"54":{name:"(anonymous_54)",decl:{start:{line:575,column:2},end:{line:575,column:3}},loc:{start:{line:575,column:16},end:{line:577,column:3}},line:575},"55":{name:"(anonymous_55)",decl:{start:{line:585,column:2},end:{line:585,column:3}},loc:{start:{line:585,column:11},end:{line:587,column:3}},line:585},"56":{name:"(anonymous_56)",decl:{start:{line:597,column:2},end:{line:597,column:3}},loc:{start:{line:597,column:34},end:{line:599,column:3}},line:597},"57":{name:"(anonymous_57)",decl:{start:{line:608,column:2},end:{line:608,column:3}},loc:{start:{line:608,column:22},end:{line:610,column:3}},line:608},"58":{name:"(anonymous_58)",decl:{start:{line:620,column:2},end:{line:620,column:3}},loc:{start:{line:620,column:34},end:{line:622,column:3}},line:620},"59":{name:"(anonymous_59)",decl:{start:{line:632,column:2},end:{line:632,column:3}},loc:{start:{line:632,column:40},end:{line:634,column:3}},line:632},"60":{name:"(anonymous_60)",decl:{start:{line:644,column:2},end:{line:644,column:3}},loc:{start:{line:644,column:43},end:{line:646,column:3}},line:644},"61":{name:"(anonymous_61)",decl:{start:{line:654,column:2},end:{line:654,column:3}},loc:{start:{line:654,column:19},end:{line:656,column:3}},line:654},"62":{name:"(anonymous_62)",decl:{start:{line:670,column:2},end:{line:670,column:3}},loc:{start:{line:670,column:33},end:{line:677,column:3}},line:670},"63":{name:"(anonymous_63)",decl:{start:{line:684,column:2},end:{line:684,column:3}},loc:{start:{line:684,column:15},end:{line:687,column:3}},line:684},"64":{name:"(anonymous_64)",decl:{start:{line:694,column:2},end:{line:694,column:3}},loc:{start:{line:694,column:16},end:{line:697,column:3}},line:694},"65":{name:"(anonymous_65)",decl:{start:{line:705,column:2},end:{line:705,column:3}},loc:{start:{line:705,column:22},end:{line:707,column:3}},line:705},"66":{name:"(anonymous_66)",decl:{start:{line:715,column:2},end:{line:715,column:3}},loc:{start:{line:715,column:20},end:{line:717,column:3}},line:715},"67":{name:"(anonymous_67)",decl:{start:{line:725,column:2},end:{line:725,column:3}},loc:{start:{line:725,column:22},end:{line:727,column:3}},line:725},"68":{name:"(anonymous_68)",decl:{start:{line:735,column:2},end:{line:735,column:3}},loc:{start:{line:735,column:22},end:{line:737,column:3}},line:735},"69":{name:"(anonymous_69)",decl:{start:{line:746,column:2},end:{line:746,column:3}},loc:{start:{line:746,column:26},end:{line:748,column:3}},line:746},"70":{name:"(anonymous_70)",decl:{start:{line:761,column:2},end:{line:761,column:3}},loc:{start:{line:761,column:29},end:{line:763,column:3}},line:761},"71":{name:"(anonymous_71)",decl:{start:{line:772,column:2},end:{line:772,column:3}},loc:{start:{line:772,column:14},end:{line:774,column:3}},line:772},"72":{name:"(anonymous_72)",decl:{start:{line:782,column:2},end:{line:782,column:3}},loc:{start:{line:782,column:14},end:{line:784,column:3}},line:782},"73":{name:"(anonymous_73)",decl:{start:{line:792,column:2},end:{line:792,column:3}},loc:{start:{line:792,column:19},end:{line:794,column:3}},line:792},"74":{name:"(anonymous_74)",decl:{start:{line:804,column:2},end:{line:804,column:3}},loc:{start:{line:804,column:23},end:{line:806,column:3}},line:804},"75":{name:"(anonymous_75)",decl:{start:{line:814,column:2},end:{line:814,column:3}},loc:{start:{line:814,column:20},end:{line:816,column:3}},line:814},"76":{name:"(anonymous_76)",decl:{start:{line:826,column:2},end:{line:826,column:3}},loc:{start:{line:826,column:16},end:{line:828,column:3}},line:826},"77":{name:"(anonymous_77)",decl:{start:{line:836,column:2},end:{line:836,column:3}},loc:{start:{line:836,column:20},end:{line:838,column:3}},line:836},"78":{name:"(anonymous_78)",decl:{start:{line:848,column:2},end:{line:848,column:3}},loc:{start:{line:848,column:16},end:{line:850,column:3}},line:848},"79":{name:"(anonymous_79)",decl:{start:{line:858,column:2},end:{line:858,column:3}},loc:{start:{line:858,column:16},end:{line:860,column:3}},line:858},"80":{name:"(anonymous_80)",decl:{start:{line:867,column:2},end:{line:867,column:3}},loc:{start:{line:867,column:12},end:{line:869,column:3}},line:867},"81":{name:"(anonymous_81)",decl:{start:{line:876,column:2},end:{line:876,column:3}},loc:{start:{line:876,column:16},end:{line:878,column:3}},line:876},"82":{name:"(anonymous_82)",decl:{start:{line:885,column:2},end:{line:885,column:3}},loc:{start:{line:885,column:14},end:{line:887,column:3}},line:885},"83":{name:"(anonymous_83)",decl:{start:{line:895,column:2},end:{line:895,column:3}},loc:{start:{line:895,column:22},end:{line:897,column:3}},line:895},"84":{name:"(anonymous_84)",decl:{start:{line:906,column:2},end:{line:906,column:3}},loc:{start:{line:906,column:31},end:{line:908,column:3}},line:906},"85":{name:"(anonymous_85)",decl:{start:{line:916,column:2},end:{line:916,column:3}},loc:{start:{line:916,column:25},end:{line:918,column:3}},line:916},"86":{name:"(anonymous_86)",decl:{start:{line:926,column:2},end:{line:926,column:3}},loc:{start:{line:926,column:24},end:{line:928,column:3}},line:926},"87":{name:"(anonymous_87)",decl:{start:{line:936,column:2},end:{line:936,column:3}},loc:{start:{line:936,column:24},end:{line:938,column:3}},line:936},"88":{name:"(anonymous_88)",decl:{start:{line:947,column:2},end:{line:947,column:3}},loc:{start:{line:947,column:33},end:{line:949,column:3}},line:947},"89":{name:"(anonymous_89)",decl:{start:{line:957,column:2},end:{line:957,column:3}},loc:{start:{line:957,column:28},end:{line:966,column:3}},line:957},"90":{name:"(anonymous_90)",decl:{start:{line:976,column:2},end:{line:976,column:3}},loc:{start:{line:976,column:49},end:{line:978,column:3}},line:976},"91":{name:"(anonymous_91)",decl:{start:{line:987,column:2},end:{line:987,column:3}},loc:{start:{line:987,column:35},end:{line:989,column:3}},line:987},"92":{name:"(anonymous_92)",decl:{start:{line:998,column:2},end:{line:998,column:3}},loc:{start:{line:998,column:34},end:{line:1000,column:3}},line:998},"93":{name:"(anonymous_93)",decl:{start:{line:1009,column:2},end:{line:1009,column:3}},loc:{start:{line:1009,column:24},end:{line:1011,column:3}},line:1009},"94":{name:"(anonymous_94)",decl:{start:{line:1020,column:2},end:{line:1020,column:3}},loc:{start:{line:1020,column:26},end:{line:1022,column:3}},line:1020},"95":{name:"(anonymous_95)",decl:{start:{line:1029,column:2},end:{line:1029,column:3}},loc:{start:{line:1029,column:14},end:{line:1031,column:3}},line:1029},"96":{name:"(anonymous_96)",decl:{start:{line:1038,column:2},end:{line:1038,column:3}},loc:{start:{line:1038,column:9},end:{line:1040,column:3}},line:1038},"97":{name:"(anonymous_97)",decl:{start:{line:1049,column:2},end:{line:1049,column:3}},loc:{start:{line:1049,column:30},end:{line:1051,column:3}},line:1049},"98":{name:"(anonymous_98)",decl:{start:{line:1059,column:2},end:{line:1059,column:3}},loc:{start:{line:1059,column:18},end:{line:1061,column:3}},line:1059},"99":{name:"(anonymous_99)",decl:{start:{line:1070,column:2},end:{line:1070,column:3}},loc:{start:{line:1070,column:30},end:{line:1072,column:3}},line:1070},"100":{name:"(anonymous_100)",decl:{start:{line:1081,column:2},end:{line:1081,column:3}},loc:{start:{line:1081,column:36},end:{line:1083,column:3}},line:1081},"101":{name:"(anonymous_101)",decl:{start:{line:1092,column:2},end:{line:1092,column:3}},loc:{start:{line:1092,column:39},end:{line:1094,column:3}},line:1092},"102":{name:"(anonymous_102)",decl:{start:{line:1101,column:2},end:{line:1101,column:3}},loc:{start:{line:1101,column:11},end:{line:1103,column:3}},line:1101}},branchMap:{"0":{loc:{start:{line:75,column:4},end:{line:76,column:34}},type:"if",locations:[{start:{line:75,column:4},end:{line:76,column:34}},{start:{line:75,column:4},end:{line:76,column:34}}],line:75}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"65cd0a35952f41544c25c7ba9008f38f01a8b95a"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1kpooy2wni=function(){return actualCoverage;};}return actualCoverage;}cov_1kpooy2wni();const assert=(cov_1kpooy2wni().s[0]++,require('bsert'));const EventEmitter=(cov_1kpooy2wni().s[1]++,require('events'));const{Client}=(cov_1kpooy2wni().s[2]++,require('bcurl'));/**
 * Wallet Client
 * @extends {bcurl.Client}
 */class WalletClient extends Client{/**
   * Create a wallet client.
   * @param {Object?} options
   */constructor(options){cov_1kpooy2wni().f[0]++;cov_1kpooy2wni().s[3]++;super(options);cov_1kpooy2wni().s[4]++;this.wallets=new Map();}/**
   * Open the client.
   * @private
   * @returns {Promise}
   */init(){cov_1kpooy2wni().f[1]++;cov_1kpooy2wni().s[5]++;this.bind('tx',(id,details)=>{cov_1kpooy2wni().f[2]++;cov_1kpooy2wni().s[6]++;this.dispatch(id,'tx',details);});cov_1kpooy2wni().s[7]++;this.bind('confirmed',(id,details)=>{cov_1kpooy2wni().f[3]++;cov_1kpooy2wni().s[8]++;this.dispatch(id,'confirmed',details);});cov_1kpooy2wni().s[9]++;this.bind('unconfirmed',(id,details)=>{cov_1kpooy2wni().f[4]++;cov_1kpooy2wni().s[10]++;this.dispatch(id,'unconfirmed',details);});cov_1kpooy2wni().s[11]++;this.bind('conflict',(id,details)=>{cov_1kpooy2wni().f[5]++;cov_1kpooy2wni().s[12]++;this.dispatch(id,'conflict',details);});cov_1kpooy2wni().s[13]++;this.bind('updated',(id,details)=>{cov_1kpooy2wni().f[6]++;cov_1kpooy2wni().s[14]++;this.dispatch(id,'updated',details);});cov_1kpooy2wni().s[15]++;this.bind('address',(id,receive)=>{cov_1kpooy2wni().f[7]++;cov_1kpooy2wni().s[16]++;this.dispatch(id,'address',receive);});cov_1kpooy2wni().s[17]++;this.bind('balance',(id,balance)=>{cov_1kpooy2wni().f[8]++;cov_1kpooy2wni().s[18]++;this.dispatch(id,'balance',balance);});}/**
   * Dispatch event.
   * @param {Number} id
   * @param {String} event
   * @private
   */dispatch(id,event,...args){cov_1kpooy2wni().f[9]++;const wallet=(cov_1kpooy2wni().s[19]++,this.wallets.get(id));cov_1kpooy2wni().s[20]++;if(wallet){cov_1kpooy2wni().b[0][0]++;cov_1kpooy2wni().s[21]++;wallet.emit(event,...args);}else{cov_1kpooy2wni().b[0][1]++;}}/**
   * Open the client.
   * @returns {Promise}
   */async open(){cov_1kpooy2wni().f[10]++;cov_1kpooy2wni().s[22]++;await super.open();cov_1kpooy2wni().s[23]++;this.init();}/**
   * Close the client.
   * @returns {Promise}
   */async close(){cov_1kpooy2wni().f[11]++;cov_1kpooy2wni().s[24]++;await super.close();cov_1kpooy2wni().s[25]++;this.wallets=new Map();}/**
   * Auth with server.
   * @returns {Promise}
   */async auth(){cov_1kpooy2wni().f[12]++;cov_1kpooy2wni().s[26]++;await this.call('auth',this.password);}/**
   * Make an RPC call.
   * @returns {Promise}
   */execute(name,params){cov_1kpooy2wni().f[13]++;cov_1kpooy2wni().s[27]++;return super.execute('/',name,params);}/**
   * Create a wallet object.
   * @param {Number} id
   * @param {String} token
   */wallet(id,token){cov_1kpooy2wni().f[14]++;cov_1kpooy2wni().s[28]++;return new Wallet(this,id,token);}/**
   * Join a wallet.
   * @param {String} token
   */all(token){cov_1kpooy2wni().f[15]++;cov_1kpooy2wni().s[29]++;return this.call('join','*',token);}/**
   * Leave a wallet.
   */none(){cov_1kpooy2wni().f[16]++;cov_1kpooy2wni().s[30]++;return this.call('leave','*');}/**
   * Join a wallet.
   * @param {Number} id
   * @param {String} token
   */join(id,token){cov_1kpooy2wni().f[17]++;cov_1kpooy2wni().s[31]++;return this.call('join',id,token);}/**
   * Leave a wallet.
   * @param {Number} id
   */leave(id){cov_1kpooy2wni().f[18]++;cov_1kpooy2wni().s[32]++;return this.call('leave',id);}/**
   * Rescan the chain.
   * @param {Number} height
   * @returns {Promise}
   */rescan(height){cov_1kpooy2wni().f[19]++;cov_1kpooy2wni().s[33]++;return this.post('/rescan',{height});}/**
   * Resend pending transactions.
   * @returns {Promise}
   */resend(){cov_1kpooy2wni().f[20]++;cov_1kpooy2wni().s[34]++;return this.post('/resend');}/**
   * Backup the walletdb.
   * @param {String} path
   * @returns {Promise}
   */backup(path){cov_1kpooy2wni().f[21]++;cov_1kpooy2wni().s[35]++;return this.post('/backup',{path});}/**
   * Get list of all wallet IDs.
   * @returns {Promise}
   */getWallets(){cov_1kpooy2wni().f[22]++;cov_1kpooy2wni().s[36]++;return this.get('/wallet');}/**
   * Create a wallet.
   * @param {Number} id
   * @param {Object} options
   * @returns {Promise}
   */createWallet(id,options){cov_1kpooy2wni().f[23]++;cov_1kpooy2wni().s[37]++;return this.put(`/wallet/${id}`,options);}/**
   * Get wallet transaction history.
   * @param {Number} id
   * @param {String} account
   * @returns {Promise}
   */getHistory(id,account){cov_1kpooy2wni().f[24]++;cov_1kpooy2wni().s[38]++;return this.get(`/wallet/${id}/tx/history`,{account});}/**
   * Get wallet coins.
   * @param {Number} id
   * @param {String} account
   * @returns {Promise}
   */getCoins(id,account){cov_1kpooy2wni().f[25]++;cov_1kpooy2wni().s[39]++;return this.get(`/wallet/${id}/coin`,{account});}/**
   * Get all unconfirmed transactions.
   * @param {Number} id
   * @param {String} account
   * @returns {Promise}
   */getPending(id,account){cov_1kpooy2wni().f[26]++;cov_1kpooy2wni().s[40]++;return this.get(`/wallet/${id}/tx/unconfirmed`,{account});}/**
   * Calculate wallet balance.
   * @param {Number} id
   * @param {String} account
   * @returns {Promise}
   */getBalance(id,account){cov_1kpooy2wni().f[27]++;cov_1kpooy2wni().s[41]++;return this.get(`/wallet/${id}/balance`,{account});}/**
   * Get last N wallet transactions.
   * @param {Number} id
   * @param {String} account
   * @param {Number} limit - Max number of transactions.
   * @returns {Promise}
   */getLast(id,account,limit){cov_1kpooy2wni().f[28]++;cov_1kpooy2wni().s[42]++;return this.get(`/wallet/${id}/tx/last`,{account,limit});}/**
   * Get wallet transactions by timestamp range.
   * @param {Number} id
   * @param {String} account
   * @param {Object} options
   * @param {Number} options.start - Start time.
   * @param {Number} options.end - End time.
   * @param {Number?} options.limit - Max number of records.
   * @param {Boolean?} options.reverse - Reverse order.
   * @returns {Promise}
   */getRange(id,account,options){cov_1kpooy2wni().f[29]++;cov_1kpooy2wni().s[43]++;return this.get(`/wallet/${id}/tx/range`,{account:account,start:options.start,end:options.end,limit:options.limit,reverse:options.reverse});}/**
   * Get transaction (only possible if the transaction
   * is available in the wallet history).
   * @param {Number} id
   * @param {Hash} hash
   * @returns {Promise}
   */getTX(id,hash){cov_1kpooy2wni().f[30]++;cov_1kpooy2wni().s[44]++;return this.get(`/wallet/${id}/tx/${hash}`);}/**
   * Get wallet blocks.
   * @param {Number} id
   * @returns {Promise}
   */getBlocks(id){cov_1kpooy2wni().f[31]++;cov_1kpooy2wni().s[45]++;return this.get(`/wallet/${id}/block`);}/**
   * Get wallet block.
   * @param {Number} id
   * @param {Number} height
   * @returns {Promise}
   */getBlock(id,height){cov_1kpooy2wni().f[32]++;cov_1kpooy2wni().s[46]++;return this.get(`/wallet/${id}/block/${height}`);}/**
   * Get unspent coin (only possible if the transaction
   * is available in the wallet history).
   * @param {Number} id
   * @param {Hash} hash
   * @param {Number} index
   * @returns {Promise}
   */getCoin(id,hash,index){cov_1kpooy2wni().f[33]++;cov_1kpooy2wni().s[47]++;return this.get(`/wallet/${id}/coin/${hash}/${index}`);}/**
   * @param {Number} id
   * @param {String} account
   * @param {Number} age - Age delta.
   * @returns {Promise}
   */zap(id,account,age){cov_1kpooy2wni().f[34]++;cov_1kpooy2wni().s[48]++;return this.post(`/wallet/${id}/zap`,{account,age});}/**
   * @param {Number} id
   * @param {Hash} hash
   * @returns {Promise}
   */abandon(id,hash){cov_1kpooy2wni().f[35]++;cov_1kpooy2wni().s[49]++;return this.del(`/wallet/${id}/tx/${hash}`);}/**
   * Create a transaction, fill.
   * @param {Number} id
   * @param {Object} options
   * @returns {Promise}
   */createTX(id,options){cov_1kpooy2wni().f[36]++;cov_1kpooy2wni().s[50]++;return this.post(`/wallet/${id}/create`,options);}/**
   * Create a transaction, fill, sign, and broadcast.
   * @param {Number} id
   * @param {Object} options
   * @param {String} options.address
   * @param {Amount} options.value
   * @returns {Promise}
   */send(id,options){cov_1kpooy2wni().f[37]++;cov_1kpooy2wni().s[51]++;return this.post(`/wallet/${id}/send`,options);}/**
   * Sign a transaction.
   * @param {Number} id
   * @param {Object} options
   * @returns {Promise}
   */sign(id,options){cov_1kpooy2wni().f[38]++;cov_1kpooy2wni().s[52]++;return this.post(`/wallet/${id}/sign`,options);}/**
   * Get the raw wallet JSON.
   * @param {Number} id
   * @returns {Promise}
   */getInfo(id){cov_1kpooy2wni().f[39]++;cov_1kpooy2wni().s[53]++;return this.get(`/wallet/${id}`);}/**
   * Get wallet accounts.
   * @param {Number} id
   * @returns {Promise} - Returns Array.
   */getAccounts(id){cov_1kpooy2wni().f[40]++;cov_1kpooy2wni().s[54]++;return this.get(`/wallet/${id}/account`);}/**
   * Get wallet master key.
   * @param {Number} id
   * @returns {Promise}
   */getMaster(id){cov_1kpooy2wni().f[41]++;cov_1kpooy2wni().s[55]++;return this.get(`/wallet/${id}/master`);}/**
   * Get wallet account.
   * @param {Number} id
   * @param {String} account
   * @returns {Promise}
   */getAccount(id,account){cov_1kpooy2wni().f[42]++;cov_1kpooy2wni().s[56]++;return this.get(`/wallet/${id}/account/${account}`);}/**
   * Create account.
   * @param {Number} id
   * @param {String} name
   * @param {Object} options
   * @returns {Promise}
   */createAccount(id,name,options){cov_1kpooy2wni().f[43]++;cov_1kpooy2wni().s[57]++;return this.put(`/wallet/${id}/account/${name}`,options);}/**
   * Create address.
   * @param {Number} id
   * @param {Object} options
   * @returns {Promise}
   */createAddress(id,account){cov_1kpooy2wni().f[44]++;cov_1kpooy2wni().s[58]++;return this.post(`/wallet/${id}/address`,{account});}/**
   * Create change address.
   * @param {Number} id
   * @param {Object} options
   * @returns {Promise}
   */createChange(id,account){cov_1kpooy2wni().f[45]++;cov_1kpooy2wni().s[59]++;return this.post(`/wallet/${id}/change`,{account});}/**
   * Create nested address.
   * @param {Number} id
   * @param {String} account
   * @returns {Promise}
   */createNested(id,account){cov_1kpooy2wni().f[46]++;cov_1kpooy2wni().s[60]++;return this.post(`/wallet/${id}/nested`,{account});}/**
   * Change or set master key`s passphrase.
   * @param {Number} id
   * @param {String|Buffer} passphrase
   * @param {(String|Buffer)?} old
   * @returns {Promise}
   */setPassphrase(id,passphrase,old){cov_1kpooy2wni().f[47]++;cov_1kpooy2wni().s[61]++;return this.post(`/wallet/${id}/passphrase`,{passphrase,old});}/**
   * Generate a new token.
   * @param {Number} id
   * @param {(String|Buffer)?} passphrase
   * @returns {Promise}
   */retoken(id,passphrase){cov_1kpooy2wni().f[48]++;cov_1kpooy2wni().s[62]++;return this.post(`/wallet/${id}/retoken`,{passphrase});}/**
   * Import private key.
   * @param {Number} id
   * @param {String} account
   * @param {String} key
   * @returns {Promise}
   */importPrivate(id,account,privateKey,passphrase){cov_1kpooy2wni().f[49]++;cov_1kpooy2wni().s[63]++;return this.post(`/wallet/${id}/import`,{account,privateKey,passphrase});}/**
   * Import public key.
   * @param {Number} id
   * @param {Number|String} account
   * @param {String} publicKey
   * @returns {Promise}
   */importPublic(id,account,publicKey){cov_1kpooy2wni().f[50]++;cov_1kpooy2wni().s[64]++;return this.post(`/wallet/${id}/import`,{account,publicKey});}/**
   * Import address.
   * @param {Number} id
   * @param {String} account
   * @param {String} address
   * @returns {Promise}
   */importAddress(id,account,address){cov_1kpooy2wni().f[51]++;cov_1kpooy2wni().s[65]++;return this.post(`/wallet/${id}/import`,{account,address});}/**
   * Lock a coin.
   * @param {String} hash
   * @param {Number} index
   * @returns {Promise}
   */lockCoin(id,hash,index){cov_1kpooy2wni().f[52]++;cov_1kpooy2wni().s[66]++;return this.put(`/wallet/${id}/locked/${hash}/${index}`);}/**
   * Unlock a coin.
   * @param {Number} id
   * @param {String} hash
   * @param {Number} index
   * @returns {Promise}
   */unlockCoin(id,hash,index){cov_1kpooy2wni().f[53]++;cov_1kpooy2wni().s[67]++;return this.del(`/wallet/${id}/locked/${hash}/${index}`);}/**
   * Get locked coins.
   * @param {Number} id
   * @returns {Promise}
   */getLocked(id){cov_1kpooy2wni().f[54]++;cov_1kpooy2wni().s[68]++;return this.get(`/wallet/${id}/locked`);}/**
   * Lock wallet.
   * @param {Number} id
   * @returns {Promise}
   */lock(id){cov_1kpooy2wni().f[55]++;cov_1kpooy2wni().s[69]++;return this.post(`/wallet/${id}/lock`);}/**
   * Unlock wallet.
   * @param {Number} id
   * @param {String} passphrase
   * @param {Number} timeout
   * @returns {Promise}
   */unlock(id,passphrase,timeout){cov_1kpooy2wni().f[56]++;cov_1kpooy2wni().s[70]++;return this.post(`/wallet/${id}/unlock`,{passphrase,timeout});}/**
   * Get wallet key.
   * @param {Number} id
   * @param {String} address
   * @returns {Promise}
   */getKey(id,address){cov_1kpooy2wni().f[57]++;cov_1kpooy2wni().s[71]++;return this.get(`/wallet/${id}/key/${address}`);}/**
   * Get wallet key WIF dump.
   * @param {Number} id
   * @param {String} address
   * @param {String?} passphrase
   * @returns {Promise}
   */getWIF(id,address,passphrase){cov_1kpooy2wni().f[58]++;cov_1kpooy2wni().s[72]++;return this.get(`/wallet/${id}/wif/${address}`,{passphrase});}/**
   * Add a public account key to the wallet for multisig.
   * @param {Number} id
   * @param {String} account
   * @param {String} key - Account (bip44) key (base58).
   * @returns {Promise}
   */addSharedKey(id,account,accountKey){cov_1kpooy2wni().f[59]++;cov_1kpooy2wni().s[73]++;return this.put(`/wallet/${id}/shared-key`,{account,accountKey});}/**
   * Remove a public account key to the wallet for multisig.
   * @param {Number} id
   * @param {String} account
   * @param {String} accountKey - Account (bip44) key (base58).
   * @returns {Promise}
   */removeSharedKey(id,account,accountKey){cov_1kpooy2wni().f[60]++;cov_1kpooy2wni().s[74]++;return this.del(`/wallet/${id}/shared-key`,{account,accountKey});}/**
   * Resend wallet transactions.
   * @param {Number} id
   * @returns {Promise}
   */resendWallet(id){cov_1kpooy2wni().f[61]++;cov_1kpooy2wni().s[75]++;return this.post(`/wallet/${id}/resend`);}}/**
 * Wallet Instance
 * @extends {EventEmitter}
 */class Wallet extends EventEmitter{/**
   * Create a wallet client.
   * @param {Object?} options
   */constructor(parent,id,token){cov_1kpooy2wni().f[62]++;cov_1kpooy2wni().s[76]++;super();cov_1kpooy2wni().s[77]++;this.parent=parent;cov_1kpooy2wni().s[78]++;this.client=parent.clone();cov_1kpooy2wni().s[79]++;this.client.token=token;cov_1kpooy2wni().s[80]++;this.id=id;cov_1kpooy2wni().s[81]++;this.token=token;}/**
   * Open wallet.
   * @returns {Promise}
   */async open(){cov_1kpooy2wni().f[63]++;cov_1kpooy2wni().s[82]++;await this.parent.join(this.id,this.token);cov_1kpooy2wni().s[83]++;this.parent.wallets.set(this.id,this);}/**
   * Close wallet.
   * @returns {Promise}
   */async close(){cov_1kpooy2wni().f[64]++;cov_1kpooy2wni().s[84]++;await this.parent.leave(this.id);cov_1kpooy2wni().s[85]++;this.parent.wallets.delete(this.id);}/**
   * Get wallet transaction history.
   * @param {String} account
   * @returns {Promise}
   */getHistory(account){cov_1kpooy2wni().f[65]++;cov_1kpooy2wni().s[86]++;return this.client.getHistory(this.id,account);}/**
   * Get wallet coins.
   * @param {String} account
   * @returns {Promise}
   */getCoins(account){cov_1kpooy2wni().f[66]++;cov_1kpooy2wni().s[87]++;return this.client.getCoins(this.id,account);}/**
   * Get all unconfirmed transactions.
   * @param {String} account
   * @returns {Promise}
   */getPending(account){cov_1kpooy2wni().f[67]++;cov_1kpooy2wni().s[88]++;return this.client.getPending(this.id,account);}/**
   * Calculate wallet balance.
   * @param {String} account
   * @returns {Promise}
   */getBalance(account){cov_1kpooy2wni().f[68]++;cov_1kpooy2wni().s[89]++;return this.client.getBalance(this.id,account);}/**
   * Get last N wallet transactions.
   * @param {String} account
   * @param {Number} limit - Max number of transactions.
   * @returns {Promise}
   */getLast(account,limit){cov_1kpooy2wni().f[69]++;cov_1kpooy2wni().s[90]++;return this.client.getLast(this.id,account,limit);}/**
   * Get wallet transactions by timestamp range.
   * @param {String} account
   * @param {Object} options
   * @param {Number} options.start - Start time.
   * @param {Number} options.end - End time.
   * @param {Number?} options.limit - Max number of records.
   * @param {Boolean?} options.reverse - Reverse order.
   * @returns {Promise}
   */getRange(account,options){cov_1kpooy2wni().f[70]++;cov_1kpooy2wni().s[91]++;return this.client.getRange(this.id,account,options);}/**
   * Get transaction (only possible if the transaction
   * is available in the wallet history).
   * @param {Hash} hash
   * @returns {Promise}
   */getTX(hash){cov_1kpooy2wni().f[71]++;cov_1kpooy2wni().s[92]++;return this.client.getTX(this.id,hash);}/**
   * Get wallet blocks.
   * @param {Number} height
   * @returns {Promise}
   */getBlocks(){cov_1kpooy2wni().f[72]++;cov_1kpooy2wni().s[93]++;return this.client.getBlocks(this.id);}/**
   * Get wallet block.
   * @param {Number} height
   * @returns {Promise}
   */getBlock(height){cov_1kpooy2wni().f[73]++;cov_1kpooy2wni().s[94]++;return this.client.getBlock(this.id,height);}/**
   * Get unspent coin (only possible if the transaction
   * is available in the wallet history).
   * @param {Hash} hash
   * @param {Number} index
   * @returns {Promise}
   */getCoin(hash,index){cov_1kpooy2wni().f[74]++;cov_1kpooy2wni().s[95]++;return this.client.getCoin(this.id,hash,index);}/**
   * @param {String} account
   * @param {Number} age - Age delta.
   * @returns {Promise}
   */zap(account,age){cov_1kpooy2wni().f[75]++;cov_1kpooy2wni().s[96]++;return this.client.zap(this.id,account,age);}/**
   * Used to remove a pending transaction from the wallet.
   * That is likely the case if it has a policy or low fee
   * that prevents it from proper network propagation.
   * @param {Hash} hash
   * @returns {Promise}
   */abandon(hash){cov_1kpooy2wni().f[76]++;cov_1kpooy2wni().s[97]++;return this.client.abandon(this.id,hash);}/**
   * Create a transaction, fill.
   * @param {Object} options
   * @returns {Promise}
   */createTX(options){cov_1kpooy2wni().f[77]++;cov_1kpooy2wni().s[98]++;return this.client.createTX(this.id,options);}/**
   * Create a transaction, fill, sign, and broadcast.
   * @param {Object} options
   * @param {String} options.address
   * @param {Amount} options.value
   * @returns {Promise}
   */send(options){cov_1kpooy2wni().f[78]++;cov_1kpooy2wni().s[99]++;return this.client.send(this.id,options);}/**
   * Sign a transaction.
   * @param {Object} options
   * @returns {Promise}
   */sign(options){cov_1kpooy2wni().f[79]++;cov_1kpooy2wni().s[100]++;return this.client.sign(this.id,options);}/**
   * Get the raw wallet JSON.
   * @returns {Promise}
   */getInfo(){cov_1kpooy2wni().f[80]++;cov_1kpooy2wni().s[101]++;return this.client.getInfo(this.id);}/**
   * Get wallet accounts.
   * @returns {Promise} - Returns Array.
   */getAccounts(){cov_1kpooy2wni().f[81]++;cov_1kpooy2wni().s[102]++;return this.client.getAccounts(this.id);}/**
   * Get wallet master key.
   * @returns {Promise}
   */getMaster(){cov_1kpooy2wni().f[82]++;cov_1kpooy2wni().s[103]++;return this.client.getMaster(this.id);}/**
   * Get wallet account.
   * @param {String} account
   * @returns {Promise}
   */getAccount(account){cov_1kpooy2wni().f[83]++;cov_1kpooy2wni().s[104]++;return this.client.getAccount(this.id,account);}/**
   * Create account.
   * @param {String} name
   * @param {Object} options
   * @returns {Promise}
   */createAccount(name,options){cov_1kpooy2wni().f[84]++;cov_1kpooy2wni().s[105]++;return this.client.createAccount(this.id,name,options);}/**
   * Create address.
   * @param {String} account
   * @returns {Promise}
   */createAddress(account){cov_1kpooy2wni().f[85]++;cov_1kpooy2wni().s[106]++;return this.client.createAddress(this.id,account);}/**
   * Create change address.
   * @param {String} account
   * @returns {Promise}
   */createChange(account){cov_1kpooy2wni().f[86]++;cov_1kpooy2wni().s[107]++;return this.client.createChange(this.id,account);}/**
   * Create nested address.
   * @param {String} account
   * @returns {Promise}
   */createNested(account){cov_1kpooy2wni().f[87]++;cov_1kpooy2wni().s[108]++;return this.client.createNested(this.id,account);}/**
   * Change or set master key`s passphrase.
   * @param {String|Buffer} passphrase
   * @param {(String|Buffer)?} old
   * @returns {Promise}
   */setPassphrase(passphrase,old){cov_1kpooy2wni().f[88]++;cov_1kpooy2wni().s[109]++;return this.client.setPassphrase(this.id,passphrase,old);}/**
   * Generate a new token.
   * @param {(String|Buffer)?} passphrase
   * @returns {Promise}
   */async retoken(passphrase){cov_1kpooy2wni().f[89]++;const result=(cov_1kpooy2wni().s[110]++,await this.client.retoken(this.id,passphrase));cov_1kpooy2wni().s[111]++;assert(result);cov_1kpooy2wni().s[112]++;assert(typeof result.token==='string');cov_1kpooy2wni().s[113]++;this.token=result.token;cov_1kpooy2wni().s[114]++;return result;}/**
   * Import private key.
   * @param {Number|String} account
   * @param {String} privateKey
   * @param {String} passphrase
   * @returns {Promise}
   */importPrivate(account,privateKey,passphrase){cov_1kpooy2wni().f[90]++;cov_1kpooy2wni().s[115]++;return this.client.importPrivate(this.id,account,privateKey,passphrase);}/**
   * Import public key.
   * @param {Number|String} account
   * @param {String} publicKey
   * @returns {Promise}
   */importPublic(account,publicKey){cov_1kpooy2wni().f[91]++;cov_1kpooy2wni().s[116]++;return this.client.importPublic(this.id,account,publicKey);}/**
   * Import address.
   * @param {Number|String} account
   * @param {String} address
   * @returns {Promise}
   */importAddress(account,address){cov_1kpooy2wni().f[92]++;cov_1kpooy2wni().s[117]++;return this.client.importAddress(this.id,account,address);}/**
   * Lock a coin.
   * @param {String} hash
   * @param {Number} index
   * @returns {Promise}
   */lockCoin(hash,index){cov_1kpooy2wni().f[93]++;cov_1kpooy2wni().s[118]++;return this.client.lockCoin(this.id,hash,index);}/**
   * Unlock a coin.
   * @param {String} hash
   * @param {Number} index
   * @returns {Promise}
   */unlockCoin(hash,index){cov_1kpooy2wni().f[94]++;cov_1kpooy2wni().s[119]++;return this.client.unlockCoin(this.id,hash,index);}/**
   * Get locked coins.
   * @returns {Promise}
   */getLocked(){cov_1kpooy2wni().f[95]++;cov_1kpooy2wni().s[120]++;return this.client.getLocked(this.id);}/**
   * Lock wallet.
   * @returns {Promise}
   */lock(){cov_1kpooy2wni().f[96]++;cov_1kpooy2wni().s[121]++;return this.client.lock(this.id);}/**
   * Unlock wallet.
   * @param {String} passphrase
   * @param {Number} timeout
   * @returns {Promise}
   */unlock(passphrase,timeout){cov_1kpooy2wni().f[97]++;cov_1kpooy2wni().s[122]++;return this.client.unlock(this.id,passphrase,timeout);}/**
   * Get wallet key.
   * @param {String} address
   * @returns {Promise}
   */getKey(address){cov_1kpooy2wni().f[98]++;cov_1kpooy2wni().s[123]++;return this.client.getKey(this.id,address);}/**
   * Get wallet key WIF dump.
   * @param {String} address
   * @param {String?} passphrase
   * @returns {Promise}
   */getWIF(address,passphrase){cov_1kpooy2wni().f[99]++;cov_1kpooy2wni().s[124]++;return this.client.getWIF(this.id,address,passphrase);}/**
   * Add a public account key to the wallet for multisig.
   * @param {String} account
   * @param {String} accountKey - Account (bip44) key (base58).
   * @returns {Promise}
   */addSharedKey(account,accountKey){cov_1kpooy2wni().f[100]++;cov_1kpooy2wni().s[125]++;return this.client.addSharedKey(this.id,account,accountKey);}/**
   * Remove a public account key to the wallet for multisig.
   * @param {String} account
   * @param {String} accountKey - Account (bip44) key (base58).
   * @returns {Promise}
   */removeSharedKey(account,accountKey){cov_1kpooy2wni().f[101]++;cov_1kpooy2wni().s[126]++;return this.client.removeSharedKey(this.id,account,accountKey);}/**
   * Resend wallet transactions.
   * @returns {Promise}
   */resend(){cov_1kpooy2wni().f[102]++;cov_1kpooy2wni().s[127]++;return this.client.resendWallet(this.id);}}/*
 * Expose
 */cov_1kpooy2wni().s[128]++;module.exports=WalletClient;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
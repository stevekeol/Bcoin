/*!
 * coin.js - coin object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */'use strict';function cov_1v6gfoymgm(){var path="E:\\Projects\\Test\\bcoin\\lib\\primitives\\coin.js";var hash="2fd335eec655e6229a9537718a348a6d629aa9f8";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\Projects\\Test\\bcoin\\lib\\primitives\\coin.js",statementMap:{"0":{start:{line:10,column:15},end:{line:10,column:31}},"1":{start:{line:11,column:12},end:{line:11,column:28}},"2":{start:{line:12,column:13},end:{line:12,column:37}},"3":{start:{line:13,column:15},end:{line:13,column:39}},"4":{start:{line:14,column:15},end:{line:14,column:34}},"5":{start:{line:15,column:16},end:{line:15,column:46}},"6":{start:{line:16,column:18},end:{line:16,column:50}},"7":{start:{line:17,column:17},end:{line:17,column:38}},"8":{start:{line:18,column:24},end:{line:18,column:43}},"9":{start:{line:42,column:4},end:{line:42,column:12}},"10":{start:{line:44,column:4},end:{line:44,column:21}},"11":{start:{line:45,column:4},end:{line:45,column:21}},"12":{start:{line:46,column:4},end:{line:46,column:26}},"13":{start:{line:47,column:4},end:{line:47,column:36}},"14":{start:{line:48,column:4},end:{line:48,column:19}},"15":{start:{line:50,column:4},end:{line:51,column:32}},"16":{start:{line:51,column:6},end:{line:51,column:32}},"17":{start:{line:61,column:4},end:{line:61,column:46}},"18":{start:{line:63,column:4},end:{line:67,column:5}},"19":{start:{line:64,column:6},end:{line:65,column:37}},"20":{start:{line:66,column:6},end:{line:66,column:37}},"21":{start:{line:69,column:4},end:{line:77,column:5}},"22":{start:{line:70,column:6},end:{line:76,column:7}},"23":{start:{line:71,column:8},end:{line:72,column:38}},"24":{start:{line:73,column:8},end:{line:73,column:37}},"25":{start:{line:75,column:8},end:{line:75,column:25}},"26":{start:{line:79,column:4},end:{line:83,column:5}},"27":{start:{line:80,column:6},end:{line:81,column:35}},"28":{start:{line:82,column:6},end:{line:82,column:33}},"29":{start:{line:85,column:4},end:{line:86,column:46}},"30":{start:{line:86,column:6},end:{line:86,column:46}},"31":{start:{line:88,column:4},end:{line:92,column:5}},"32":{start:{line:89,column:6},end:{line:90,column:39}},"33":{start:{line:91,column:6},end:{line:91,column:39}},"34":{start:{line:94,column:4},end:{line:97,column:5}},"35":{start:{line:95,column:6},end:{line:95,column:44}},"36":{start:{line:96,column:6},end:{line:96,column:31}},"37":{start:{line:99,column:4},end:{line:103,column:5}},"38":{start:{line:100,column:6},end:{line:101,column:35}},"39":{start:{line:102,column:6},end:{line:102,column:33}},"40":{start:{line:105,column:4},end:{line:105,column:16}},"41":{start:{line:115,column:4},end:{line:115,column:43}},"42":{start:{line:125,column:4},end:{line:125,column:46}},"43":{start:{line:136,column:4},end:{line:136,column:62}},"44":{start:{line:138,column:4},end:{line:139,column:15}},"45":{start:{line:139,column:6},end:{line:139,column:15}},"46":{start:{line:141,column:4},end:{line:142,column:15}},"47":{start:{line:142,column:6},end:{line:142,column:15}},"48":{start:{line:144,column:4},end:{line:145,column:15}},"49":{start:{line:145,column:6},end:{line:145,column:15}},"50":{start:{line:147,column:4},end:{line:147,column:36}},"51":{start:{line:157,column:4},end:{line:157,column:49}},"52":{start:{line:168,column:26},end:{line:168,column:47}},"53":{start:{line:169,column:4},end:{line:169,column:21}},"54":{start:{line:170,column:4},end:{line:170,column:23}},"55":{start:{line:171,column:4},end:{line:171,column:16}},"56":{start:{line:181,column:4},end:{line:181,column:35}},"57":{start:{line:190,column:4},end:{line:190,column:34}},"58":{start:{line:199,column:4},end:{line:199,column:24}},"59":{start:{line:208,column:4},end:{line:218,column:6}},"60":{start:{line:228,column:4},end:{line:228,column:26}},"61":{start:{line:242,column:15},end:{line:242,column:32}},"62":{start:{line:244,column:4},end:{line:244,column:35}},"63":{start:{line:246,column:4},end:{line:247,column:36}},"64":{start:{line:247,column:6},end:{line:247,column:36}},"65":{start:{line:249,column:4},end:{line:258,column:6}},"66":{start:{line:268,column:4},end:{line:268,column:40}},"67":{start:{line:269,column:4},end:{line:269,column:79}},"68":{start:{line:270,column:4},end:{line:271,column:34}},"69":{start:{line:272,column:4},end:{line:273,column:33}},"70":{start:{line:274,column:4},end:{line:274,column:78}},"71":{start:{line:276,column:4},end:{line:276,column:32}},"72":{start:{line:277,column:4},end:{line:277,column:30}},"73":{start:{line:278,column:4},end:{line:278,column:28}},"74":{start:{line:279,column:4},end:{line:279,column:38}},"75":{start:{line:280,column:4},end:{line:280,column:34}},"76":{start:{line:282,column:4},end:{line:288,column:5}},"77":{start:{line:283,column:6},end:{line:283,column:70}},"78":{start:{line:284,column:6},end:{line:284,column:64}},"79":{start:{line:285,column:6},end:{line:285,column:75}},"80":{start:{line:286,column:6},end:{line:286,column:42}},"81":{start:{line:287,column:6},end:{line:287,column:30}},"82":{start:{line:290,column:4},end:{line:290,column:16}},"83":{start:{line:300,column:4},end:{line:300,column:37}},"84":{start:{line:309,column:4},end:{line:309,column:41}},"85":{start:{line:318,column:17},end:{line:318,column:28}},"86":{start:{line:320,column:4},end:{line:321,column:26}},"87":{start:{line:321,column:6},end:{line:321,column:26}},"88":{start:{line:323,column:4},end:{line:323,column:30}},"89":{start:{line:324,column:4},end:{line:324,column:24}},"90":{start:{line:325,column:4},end:{line:325,column:28}},"91":{start:{line:326,column:4},end:{line:326,column:42}},"92":{start:{line:327,column:4},end:{line:327,column:38}},"93":{start:{line:329,column:4},end:{line:329,column:14}},"94":{start:{line:338,column:17},end:{line:338,column:31}},"95":{start:{line:339,column:4},end:{line:339,column:51}},"96":{start:{line:349,column:4},end:{line:349,column:32}},"97":{start:{line:350,column:4},end:{line:350,column:31}},"98":{start:{line:351,column:4},end:{line:351,column:30}},"99":{start:{line:352,column:4},end:{line:352,column:43}},"100":{start:{line:353,column:4},end:{line:353,column:38}},"101":{start:{line:355,column:4},end:{line:356,column:23}},"102":{start:{line:356,column:6},end:{line:356,column:23}},"103":{start:{line:358,column:4},end:{line:358,column:16}},"104":{start:{line:368,column:4},end:{line:368,column:43}},"105":{start:{line:378,column:4},end:{line:378,column:37}},"106":{start:{line:389,column:4},end:{line:390,column:36}},"107":{start:{line:390,column:6},end:{line:390,column:36}},"108":{start:{line:391,column:4},end:{line:391,column:36}},"109":{start:{line:401,column:4},end:{line:401,column:38}},"110":{start:{line:402,column:4},end:{line:402,column:39}},"111":{start:{line:403,column:4},end:{line:403,column:52}},"112":{start:{line:404,column:4},end:{line:404,column:30}},"113":{start:{line:405,column:4},end:{line:405,column:25}},"114":{start:{line:406,column:4},end:{line:406,column:41}},"115":{start:{line:407,column:4},end:{line:407,column:43}},"116":{start:{line:408,column:4},end:{line:408,column:36}},"117":{start:{line:409,column:4},end:{line:409,column:26}},"118":{start:{line:410,column:4},end:{line:410,column:23}},"119":{start:{line:411,column:4},end:{line:411,column:16}},"120":{start:{line:422,column:4},end:{line:422,column:48}},"121":{start:{line:432,column:4},end:{line:432,column:31}},"122":{start:{line:440,column:0},end:{line:440,column:22}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:41,column:2},end:{line:41,column:3}},loc:{start:{line:41,column:23},end:{line:52,column:3}},line:41},"1":{name:"(anonymous_1)",decl:{start:{line:60,column:2},end:{line:60,column:3}},loc:{start:{line:60,column:23},end:{line:106,column:3}},line:60},"2":{name:"(anonymous_2)",decl:{start:{line:114,column:2},end:{line:114,column:3}},loc:{start:{line:114,column:30},end:{line:116,column:3}},line:114},"3":{name:"(anonymous_3)",decl:{start:{line:124,column:2},end:{line:124,column:3}},loc:{start:{line:124,column:10},end:{line:126,column:3}},line:124},"4":{name:"(anonymous_4)",decl:{start:{line:135,column:2},end:{line:135,column:3}},loc:{start:{line:135,column:19},end:{line:148,column:3}},line:135},"5":{name:"(anonymous_5)",decl:{start:{line:156,column:2},end:{line:156,column:3}},loc:{start:{line:156,column:10},end:{line:158,column:3}},line:156},"6":{name:"(anonymous_6)",decl:{start:{line:167,column:2},end:{line:167,column:3}},loc:{start:{line:167,column:15},end:{line:172,column:3}},line:167},"7":{name:"(anonymous_7)",decl:{start:{line:180,column:2},end:{line:180,column:3}},loc:{start:{line:180,column:22},end:{line:182,column:3}},line:180},"8":{name:"(anonymous_8)",decl:{start:{line:189,column:2},end:{line:189,column:3}},loc:{start:{line:189,column:10},end:{line:191,column:3}},line:189},"9":{name:"(anonymous_9)",decl:{start:{line:198,column:2},end:{line:198,column:3}},loc:{start:{line:198,column:9},end:{line:200,column:3}},line:198},"10":{name:"(anonymous_10)",decl:{start:{line:207,column:1},end:{line:207,column:2}},loc:{start:{line:207,column:19},end:{line:219,column:3}},line:207},"11":{name:"(anonymous_11)",decl:{start:{line:227,column:2},end:{line:227,column:3}},loc:{start:{line:227,column:11},end:{line:229,column:3}},line:227},"12":{name:"(anonymous_12)",decl:{start:{line:241,column:2},end:{line:241,column:3}},loc:{start:{line:241,column:28},end:{line:259,column:3}},line:241},"13":{name:"(anonymous_13)",decl:{start:{line:267,column:2},end:{line:267,column:3}},loc:{start:{line:267,column:17},end:{line:291,column:3}},line:267},"14":{name:"(anonymous_14)",decl:{start:{line:299,column:2},end:{line:299,column:3}},loc:{start:{line:299,column:24},end:{line:301,column:3}},line:299},"15":{name:"(anonymous_15)",decl:{start:{line:308,column:2},end:{line:308,column:3}},loc:{start:{line:308,column:12},end:{line:310,column:3}},line:308},"16":{name:"(anonymous_16)",decl:{start:{line:317,column:2},end:{line:317,column:3}},loc:{start:{line:317,column:15},end:{line:330,column:3}},line:317},"17":{name:"(anonymous_17)",decl:{start:{line:337,column:2},end:{line:337,column:3}},loc:{start:{line:337,column:10},end:{line:340,column:3}},line:337},"18":{name:"(anonymous_18)",decl:{start:{line:348,column:2},end:{line:348,column:3}},loc:{start:{line:348,column:17},end:{line:359,column:3}},line:348},"19":{name:"(anonymous_19)",decl:{start:{line:367,column:2},end:{line:367,column:3}},loc:{start:{line:367,column:16},end:{line:369,column:3}},line:367},"20":{name:"(anonymous_20)",decl:{start:{line:377,column:2},end:{line:377,column:3}},loc:{start:{line:377,column:24},end:{line:379,column:3}},line:377},"21":{name:"(anonymous_21)",decl:{start:{line:388,column:2},end:{line:388,column:3}},loc:{start:{line:388,column:28},end:{line:392,column:3}},line:388},"22":{name:"(anonymous_22)",decl:{start:{line:400,column:2},end:{line:400,column:3}},loc:{start:{line:400,column:28},end:{line:412,column:3}},line:400},"23":{name:"(anonymous_23)",decl:{start:{line:421,column:2},end:{line:421,column:3}},loc:{start:{line:421,column:35},end:{line:423,column:3}},line:421},"24":{name:"(anonymous_24)",decl:{start:{line:431,column:2},end:{line:431,column:3}},loc:{start:{line:431,column:21},end:{line:433,column:3}},line:431}},branchMap:{"0":{loc:{start:{line:50,column:4},end:{line:51,column:32}},type:"if",locations:[{start:{line:50,column:4},end:{line:51,column:32}},{start:{line:50,column:4},end:{line:51,column:32}}],line:50},"1":{loc:{start:{line:63,column:4},end:{line:67,column:5}},type:"if",locations:[{start:{line:63,column:4},end:{line:67,column:5}},{start:{line:63,column:4},end:{line:67,column:5}}],line:63},"2":{loc:{start:{line:69,column:4},end:{line:77,column:5}},type:"if",locations:[{start:{line:69,column:4},end:{line:77,column:5}},{start:{line:69,column:4},end:{line:77,column:5}}],line:69},"3":{loc:{start:{line:70,column:6},end:{line:76,column:7}},type:"if",locations:[{start:{line:70,column:6},end:{line:76,column:7}},{start:{line:70,column:6},end:{line:76,column:7}}],line:70},"4":{loc:{start:{line:79,column:4},end:{line:83,column:5}},type:"if",locations:[{start:{line:79,column:4},end:{line:83,column:5}},{start:{line:79,column:4},end:{line:83,column:5}}],line:79},"5":{loc:{start:{line:80,column:13},end:{line:80,column:70}},type:"binary-expr",locations:[{start:{line:80,column:13},end:{line:80,column:48}},{start:{line:80,column:52},end:{line:80,column:70}}],line:80},"6":{loc:{start:{line:85,column:4},end:{line:86,column:46}},type:"if",locations:[{start:{line:85,column:4},end:{line:86,column:46}},{start:{line:85,column:4},end:{line:86,column:46}}],line:85},"7":{loc:{start:{line:88,column:4},end:{line:92,column:5}},type:"if",locations:[{start:{line:88,column:4},end:{line:92,column:5}},{start:{line:88,column:4},end:{line:92,column:5}}],line:88},"8":{loc:{start:{line:94,column:4},end:{line:97,column:5}},type:"if",locations:[{start:{line:94,column:4},end:{line:97,column:5}},{start:{line:94,column:4},end:{line:97,column:5}}],line:94},"9":{loc:{start:{line:99,column:4},end:{line:103,column:5}},type:"if",locations:[{start:{line:99,column:4},end:{line:103,column:5}},{start:{line:99,column:4},end:{line:103,column:5}}],line:99},"10":{loc:{start:{line:138,column:4},end:{line:139,column:15}},type:"if",locations:[{start:{line:138,column:4},end:{line:139,column:15}},{start:{line:138,column:4},end:{line:139,column:15}}],line:138},"11":{loc:{start:{line:141,column:4},end:{line:142,column:15}},type:"if",locations:[{start:{line:141,column:4},end:{line:142,column:15}},{start:{line:141,column:4},end:{line:142,column:15}}],line:141},"12":{loc:{start:{line:144,column:4},end:{line:145,column:15}},type:"if",locations:[{start:{line:144,column:4},end:{line:145,column:15}},{start:{line:144,column:4},end:{line:145,column:15}}],line:144},"13":{loc:{start:{line:215,column:12},end:{line:215,column:53}},type:"cond-expr",locations:[{start:{line:215,column:24},end:{line:215,column:46}},{start:{line:215,column:49},end:{line:215,column:53}}],line:215},"14":{loc:{start:{line:246,column:4},end:{line:247,column:36}},type:"if",locations:[{start:{line:246,column:4},end:{line:247,column:36}},{start:{line:246,column:4},end:{line:247,column:36}}],line:246},"15":{loc:{start:{line:256,column:12},end:{line:256,column:47}},type:"cond-expr",locations:[{start:{line:256,column:23},end:{line:256,column:35}},{start:{line:256,column:38},end:{line:256,column:47}}],line:256},"16":{loc:{start:{line:257,column:13},end:{line:257,column:46}},type:"cond-expr",locations:[{start:{line:257,column:24},end:{line:257,column:34}},{start:{line:257,column:37},end:{line:257,column:46}}],line:257},"17":{loc:{start:{line:270,column:11},end:{line:270,column:68}},type:"binary-expr",locations:[{start:{line:270,column:11},end:{line:270,column:29}},{start:{line:270,column:33},end:{line:270,column:68}}],line:270},"18":{loc:{start:{line:272,column:11},end:{line:272,column:62}},type:"binary-expr",locations:[{start:{line:272,column:11},end:{line:272,column:43}},{start:{line:272,column:47},end:{line:272,column:62}}],line:272},"19":{loc:{start:{line:282,column:4},end:{line:288,column:5}},type:"if",locations:[{start:{line:282,column:4},end:{line:288,column:5}},{start:{line:282,column:4},end:{line:288,column:5}}],line:282},"20":{loc:{start:{line:320,column:4},end:{line:321,column:26}},type:"if",locations:[{start:{line:320,column:4},end:{line:321,column:26}},{start:{line:320,column:4},end:{line:321,column:26}}],line:320},"21":{loc:{start:{line:327,column:15},end:{line:327,column:36}},type:"cond-expr",locations:[{start:{line:327,column:31},end:{line:327,column:32}},{start:{line:327,column:35},end:{line:327,column:36}}],line:327},"22":{loc:{start:{line:355,column:4},end:{line:356,column:23}},type:"if",locations:[{start:{line:355,column:4},end:{line:356,column:23}},{start:{line:355,column:4},end:{line:356,column:23}}],line:355},"23":{loc:{start:{line:389,column:4},end:{line:390,column:36}},type:"if",locations:[{start:{line:389,column:4},end:{line:390,column:36}},{start:{line:389,column:4},end:{line:390,column:36}}],line:389},"24":{loc:{start:{line:403,column:11},end:{line:403,column:50}},type:"binary-expr",locations:[{start:{line:403,column:11},end:{line:403,column:21}},{start:{line:403,column:25},end:{line:403,column:50}}],line:403}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"2fd335eec655e6229a9537718a348a6d629aa9f8"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1v6gfoymgm=function(){return actualCoverage;};}return actualCoverage;}cov_1v6gfoymgm();const assert=(cov_1v6gfoymgm().s[0]++,require('bsert'));const bio=(cov_1v6gfoymgm().s[1]++,require('bufio'));const util=(cov_1v6gfoymgm().s[2]++,require('../utils/util'));const Amount=(cov_1v6gfoymgm().s[3]++,require('../btc/amount'));const Output=(cov_1v6gfoymgm().s[4]++,require('./output'));const Network=(cov_1v6gfoymgm().s[5]++,require('../protocol/network'));const consensus=(cov_1v6gfoymgm().s[6]++,require('../protocol/consensus'));const Outpoint=(cov_1v6gfoymgm().s[7]++,require('./outpoint'));const{inspectSymbol}=(cov_1v6gfoymgm().s[8]++,require('../utils'));/**
 * Coin
 * Represents an unspent output.
 * @alias module:primitives.Coin
 * @extends Output
 * @property {Number} version
 * @property {Number} height
 * @property {Amount} value
 * @property {Script} script
 * @property {Boolean} coinbase
 * @property {Hash} hash
 * @property {Number} index
 */class Coin extends Output{/**
   * Create a coin.
   * @constructor
   * @param {Object} options
   */constructor(options){cov_1v6gfoymgm().f[0]++;cov_1v6gfoymgm().s[9]++;super();cov_1v6gfoymgm().s[10]++;this.version=1;cov_1v6gfoymgm().s[11]++;this.height=-1;cov_1v6gfoymgm().s[12]++;this.coinbase=false;cov_1v6gfoymgm().s[13]++;this.hash=consensus.ZERO_HASH;cov_1v6gfoymgm().s[14]++;this.index=0;cov_1v6gfoymgm().s[15]++;if(options){cov_1v6gfoymgm().b[0][0]++;cov_1v6gfoymgm().s[16]++;this.fromOptions(options);}else{cov_1v6gfoymgm().b[0][1]++;}}/**
   * Inject options into coin.
   * @private
   * @param {Object} options
   */fromOptions(options){cov_1v6gfoymgm().f[1]++;cov_1v6gfoymgm().s[17]++;assert(options,'Coin data is required.');cov_1v6gfoymgm().s[18]++;if(options.version!=null){cov_1v6gfoymgm().b[1][0]++;cov_1v6gfoymgm().s[19]++;assert(options.version>>>0===options.version,'Version must be a uint32.');cov_1v6gfoymgm().s[20]++;this.version=options.version;}else{cov_1v6gfoymgm().b[1][1]++;}cov_1v6gfoymgm().s[21]++;if(options.height!=null){cov_1v6gfoymgm().b[2][0]++;cov_1v6gfoymgm().s[22]++;if(options.height!==-1){cov_1v6gfoymgm().b[3][0]++;cov_1v6gfoymgm().s[23]++;assert(options.height>>>0===options.height,'Height must be a uint32.');cov_1v6gfoymgm().s[24]++;this.height=options.height;}else{cov_1v6gfoymgm().b[3][1]++;cov_1v6gfoymgm().s[25]++;this.height=-1;}}else{cov_1v6gfoymgm().b[2][1]++;}cov_1v6gfoymgm().s[26]++;if(options.value!=null){cov_1v6gfoymgm().b[4][0]++;cov_1v6gfoymgm().s[27]++;assert((cov_1v6gfoymgm().b[5][0]++,Number.isSafeInteger(options.value))&&(cov_1v6gfoymgm().b[5][1]++,options.value>=0),'Value must be a uint64.');cov_1v6gfoymgm().s[28]++;this.value=options.value;}else{cov_1v6gfoymgm().b[4][1]++;}cov_1v6gfoymgm().s[29]++;if(options.script){cov_1v6gfoymgm().b[6][0]++;cov_1v6gfoymgm().s[30]++;this.script.fromOptions(options.script);}else{cov_1v6gfoymgm().b[6][1]++;}cov_1v6gfoymgm().s[31]++;if(options.coinbase!=null){cov_1v6gfoymgm().b[7][0]++;cov_1v6gfoymgm().s[32]++;assert(typeof options.coinbase==='boolean','Coinbase must be a boolean.');cov_1v6gfoymgm().s[33]++;this.coinbase=options.coinbase;}else{cov_1v6gfoymgm().b[7][1]++;}cov_1v6gfoymgm().s[34]++;if(options.hash!=null){cov_1v6gfoymgm().b[8][0]++;cov_1v6gfoymgm().s[35]++;assert(Buffer.isBuffer(options.hash));cov_1v6gfoymgm().s[36]++;this.hash=options.hash;}else{cov_1v6gfoymgm().b[8][1]++;}cov_1v6gfoymgm().s[37]++;if(options.index!=null){cov_1v6gfoymgm().b[9][0]++;cov_1v6gfoymgm().s[38]++;assert(options.index>>>0===options.index,'Index must be a uint32.');cov_1v6gfoymgm().s[39]++;this.index=options.index;}else{cov_1v6gfoymgm().b[9][1]++;}cov_1v6gfoymgm().s[40]++;return this;}/**
   * Instantiate Coin from options object.
   * @private
   * @param {Object} options
   */static fromOptions(options){cov_1v6gfoymgm().f[2]++;cov_1v6gfoymgm().s[41]++;return new this().fromOptions(options);}/**
   * Clone the coin.
   * @private
   * @returns {Coin}
   */clone(){cov_1v6gfoymgm().f[3]++;cov_1v6gfoymgm().s[42]++;assert(false,'Coins are not cloneable.');}/**
   * Calculate number of confirmations since coin was created.
   * @param {Number?} height - Current chain height. Network
   * height is used if not passed in.
   * @return {Number}
   */getDepth(height){cov_1v6gfoymgm().f[4]++;cov_1v6gfoymgm().s[43]++;assert(typeof height==='number','Must pass a height.');cov_1v6gfoymgm().s[44]++;if(this.height===-1){cov_1v6gfoymgm().b[10][0]++;cov_1v6gfoymgm().s[45]++;return 0;}else{cov_1v6gfoymgm().b[10][1]++;}cov_1v6gfoymgm().s[46]++;if(height===-1){cov_1v6gfoymgm().b[11][0]++;cov_1v6gfoymgm().s[47]++;return 0;}else{cov_1v6gfoymgm().b[11][1]++;}cov_1v6gfoymgm().s[48]++;if(height<this.height){cov_1v6gfoymgm().b[12][0]++;cov_1v6gfoymgm().s[49]++;return 0;}else{cov_1v6gfoymgm().b[12][1]++;}cov_1v6gfoymgm().s[50]++;return height-this.height+1;}/**
   * Serialize coin to a key
   * suitable for a hash table.
   * @returns {String}
   */toKey(){cov_1v6gfoymgm().f[5]++;cov_1v6gfoymgm().s[51]++;return Outpoint.toKey(this.hash,this.index);}/**
   * Inject properties from hash table key.
   * @private
   * @param {String} key
   * @returns {Coin}
   */fromKey(key){cov_1v6gfoymgm().f[6]++;const{hash,index}=(cov_1v6gfoymgm().s[52]++,Outpoint.fromKey(key));cov_1v6gfoymgm().s[53]++;this.hash=hash;cov_1v6gfoymgm().s[54]++;this.index=index;cov_1v6gfoymgm().s[55]++;return this;}/**
   * Instantiate coin from hash table key.
   * @param {String} key
   * @returns {Coin}
   */static fromKey(key){cov_1v6gfoymgm().f[7]++;cov_1v6gfoymgm().s[56]++;return new this().fromKey(key);}/**
   * Get little-endian hash.
   * @returns {Hash}
   */rhash(){cov_1v6gfoymgm().f[8]++;cov_1v6gfoymgm().s[57]++;return util.revHex(this.hash);}/**
   * Get little-endian hash.
   * @returns {Hash}
   */txid(){cov_1v6gfoymgm().f[9]++;cov_1v6gfoymgm().s[58]++;return this.rhash();}/**
   * Convert the coin to a more user-friendly object.
   * @returns {Object}
   */[inspectSymbol](){cov_1v6gfoymgm().f[10]++;cov_1v6gfoymgm().s[59]++;return{type:this.getType(),version:this.version,height:this.height,value:Amount.btc(this.value),script:this.script,coinbase:this.coinbase,hash:this.hash?(cov_1v6gfoymgm().b[13][0]++,util.revHex(this.hash)):(cov_1v6gfoymgm().b[13][1]++,null),index:this.index,address:this.getAddress()};}/**
   * Convert the coin to an object suitable
   * for JSON serialization.
   * @returns {Object}
   */toJSON(){cov_1v6gfoymgm().f[11]++;cov_1v6gfoymgm().s[60]++;return this.getJSON();}/**
   * Convert the coin to an object suitable
   * for JSON serialization. Note that the hash
   * will be reversed to abide by bitcoind's legacy
   * of little-endian uint256s.
   * @param {Network} network
   * @param {Boolean} minimal
   * @returns {Object}
   */getJSON(network,minimal){cov_1v6gfoymgm().f[12]++;let addr=(cov_1v6gfoymgm().s[61]++,this.getAddress());cov_1v6gfoymgm().s[62]++;network=Network.get(network);cov_1v6gfoymgm().s[63]++;if(addr){cov_1v6gfoymgm().b[14][0]++;cov_1v6gfoymgm().s[64]++;addr=addr.toString(network);}else{cov_1v6gfoymgm().b[14][1]++;}cov_1v6gfoymgm().s[65]++;return{version:this.version,height:this.height,value:this.value,script:this.script.toJSON(),address:addr,coinbase:this.coinbase,hash:!minimal?(cov_1v6gfoymgm().b[15][0]++,this.rhash()):(cov_1v6gfoymgm().b[15][1]++,undefined),index:!minimal?(cov_1v6gfoymgm().b[16][0]++,this.index):(cov_1v6gfoymgm().b[16][1]++,undefined)};}/**
   * Inject JSON properties into coin.
   * @private
   * @param {Object} json
   */fromJSON(json){cov_1v6gfoymgm().f[13]++;cov_1v6gfoymgm().s[66]++;assert(json,'Coin data required.');cov_1v6gfoymgm().s[67]++;assert(json.version>>>0===json.version,'Version must be a uint32.');cov_1v6gfoymgm().s[68]++;assert((cov_1v6gfoymgm().b[17][0]++,json.height===-1)||(cov_1v6gfoymgm().b[17][1]++,json.height>>>0===json.height),'Height must be a uint32.');cov_1v6gfoymgm().s[69]++;assert((cov_1v6gfoymgm().b[18][0]++,Number.isSafeInteger(json.value))&&(cov_1v6gfoymgm().b[18][1]++,json.value>=0),'Value must be a uint64.');cov_1v6gfoymgm().s[70]++;assert(typeof json.coinbase==='boolean','Coinbase must be a boolean.');cov_1v6gfoymgm().s[71]++;this.version=json.version;cov_1v6gfoymgm().s[72]++;this.height=json.height;cov_1v6gfoymgm().s[73]++;this.value=json.value;cov_1v6gfoymgm().s[74]++;this.script.fromJSON(json.script);cov_1v6gfoymgm().s[75]++;this.coinbase=json.coinbase;cov_1v6gfoymgm().s[76]++;if(json.hash!=null){cov_1v6gfoymgm().b[19][0]++;cov_1v6gfoymgm().s[77]++;assert(typeof json.hash==='string','Hash must be a string.');cov_1v6gfoymgm().s[78]++;assert(json.hash.length===64,'Hash must be a string.');cov_1v6gfoymgm().s[79]++;assert(json.index>>>0===json.index,'Index must be a uint32.');cov_1v6gfoymgm().s[80]++;this.hash=util.fromRev(json.hash);cov_1v6gfoymgm().s[81]++;this.index=json.index;}else{cov_1v6gfoymgm().b[19][1]++;}cov_1v6gfoymgm().s[82]++;return this;}/**
   * Instantiate an Coin from a jsonified coin object.
   * @param {Object} json - The jsonified coin object.
   * @returns {Coin}
   */static fromJSON(json){cov_1v6gfoymgm().f[14]++;cov_1v6gfoymgm().s[83]++;return new this().fromJSON(json);}/**
   * Calculate size of coin.
   * @returns {Number}
   */getSize(){cov_1v6gfoymgm().f[15]++;cov_1v6gfoymgm().s[84]++;return 17+this.script.getVarSize();}/**
   * Write the coin to a buffer writer.
   * @param {BufferWriter} bw
   */toWriter(bw){cov_1v6gfoymgm().f[16]++;let height=(cov_1v6gfoymgm().s[85]++,this.height);cov_1v6gfoymgm().s[86]++;if(height===-1){cov_1v6gfoymgm().b[20][0]++;cov_1v6gfoymgm().s[87]++;height=0x7fffffff;}else{cov_1v6gfoymgm().b[20][1]++;}cov_1v6gfoymgm().s[88]++;bw.writeU32(this.version);cov_1v6gfoymgm().s[89]++;bw.writeU32(height);cov_1v6gfoymgm().s[90]++;bw.writeI64(this.value);cov_1v6gfoymgm().s[91]++;bw.writeVarBytes(this.script.toRaw());cov_1v6gfoymgm().s[92]++;bw.writeU8(this.coinbase?(cov_1v6gfoymgm().b[21][0]++,1):(cov_1v6gfoymgm().b[21][1]++,0));cov_1v6gfoymgm().s[93]++;return bw;}/**
   * Serialize the coin.
   * @returns {Buffer|String}
   */toRaw(){cov_1v6gfoymgm().f[17]++;const size=(cov_1v6gfoymgm().s[94]++,this.getSize());cov_1v6gfoymgm().s[95]++;return this.toWriter(bio.write(size)).render();}/**
   * Inject properties from serialized buffer writer.
   * @private
   * @param {BufferReader} br
   */fromReader(br){cov_1v6gfoymgm().f[18]++;cov_1v6gfoymgm().s[96]++;this.version=br.readU32();cov_1v6gfoymgm().s[97]++;this.height=br.readU32();cov_1v6gfoymgm().s[98]++;this.value=br.readI64();cov_1v6gfoymgm().s[99]++;this.script.fromRaw(br.readVarBytes());cov_1v6gfoymgm().s[100]++;this.coinbase=br.readU8()===1;cov_1v6gfoymgm().s[101]++;if(this.height===0x7fffffff){cov_1v6gfoymgm().b[22][0]++;cov_1v6gfoymgm().s[102]++;this.height=-1;}else{cov_1v6gfoymgm().b[22][1]++;}cov_1v6gfoymgm().s[103]++;return this;}/**
   * Inject properties from serialized data.
   * @private
   * @param {Buffer} data
   */fromRaw(data){cov_1v6gfoymgm().f[19]++;cov_1v6gfoymgm().s[104]++;return this.fromReader(bio.read(data));}/**
   * Instantiate a coin from a buffer reader.
   * @param {BufferReader} br
   * @returns {Coin}
   */static fromReader(br){cov_1v6gfoymgm().f[20]++;cov_1v6gfoymgm().s[105]++;return new this().fromReader(br);}/**
   * Instantiate a coin from a serialized Buffer.
   * @param {Buffer} data
   * @param {String?} enc - Encoding, can be `'hex'` or null.
   * @returns {Coin}
   */static fromRaw(data,enc){cov_1v6gfoymgm().f[21]++;cov_1v6gfoymgm().s[106]++;if(typeof data==='string'){cov_1v6gfoymgm().b[23][0]++;cov_1v6gfoymgm().s[107]++;data=Buffer.from(data,enc);}else{cov_1v6gfoymgm().b[23][1]++;}cov_1v6gfoymgm().s[108]++;return new this().fromRaw(data);}/**
   * Inject properties from TX.
   * @param {TX} tx
   * @param {Number} index
   */fromTX(tx,index,height){cov_1v6gfoymgm().f[22]++;cov_1v6gfoymgm().s[109]++;assert(typeof index==='number');cov_1v6gfoymgm().s[110]++;assert(typeof height==='number');cov_1v6gfoymgm().s[111]++;assert((cov_1v6gfoymgm().b[24][0]++,index>=0)&&(cov_1v6gfoymgm().b[24][1]++,index<tx.outputs.length));cov_1v6gfoymgm().s[112]++;this.version=tx.version;cov_1v6gfoymgm().s[113]++;this.height=height;cov_1v6gfoymgm().s[114]++;this.value=tx.outputs[index].value;cov_1v6gfoymgm().s[115]++;this.script=tx.outputs[index].script;cov_1v6gfoymgm().s[116]++;this.coinbase=tx.isCoinbase();cov_1v6gfoymgm().s[117]++;this.hash=tx.hash();cov_1v6gfoymgm().s[118]++;this.index=index;cov_1v6gfoymgm().s[119]++;return this;}/**
   * Instantiate a coin from a TX
   * @param {TX} tx
   * @param {Number} index - Output index.
   * @returns {Coin}
   */static fromTX(tx,index,height){cov_1v6gfoymgm().f[23]++;cov_1v6gfoymgm().s[120]++;return new this().fromTX(tx,index,height);}/**
   * Test an object to see if it is a Coin.
   * @param {Object} obj
   * @returns {Boolean}
   */static isCoin(obj){cov_1v6gfoymgm().f[24]++;cov_1v6gfoymgm().s[121]++;return obj instanceof Coin;}}/*
 * Expose
 */cov_1v6gfoymgm().s[122]++;module.exports=Coin;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvaW4uanMiXSwibmFtZXMiOlsiYXNzZXJ0IiwicmVxdWlyZSIsImJpbyIsInV0aWwiLCJBbW91bnQiLCJPdXRwdXQiLCJOZXR3b3JrIiwiY29uc2Vuc3VzIiwiT3V0cG9pbnQiLCJpbnNwZWN0U3ltYm9sIiwiQ29pbiIsImNvbnN0cnVjdG9yIiwib3B0aW9ucyIsInZlcnNpb24iLCJoZWlnaHQiLCJjb2luYmFzZSIsImhhc2giLCJaRVJPX0hBU0giLCJpbmRleCIsImZyb21PcHRpb25zIiwidmFsdWUiLCJOdW1iZXIiLCJpc1NhZmVJbnRlZ2VyIiwic2NyaXB0IiwiQnVmZmVyIiwiaXNCdWZmZXIiLCJjbG9uZSIsImdldERlcHRoIiwidG9LZXkiLCJmcm9tS2V5Iiwia2V5Iiwicmhhc2giLCJyZXZIZXgiLCJ0eGlkIiwidHlwZSIsImdldFR5cGUiLCJidGMiLCJhZGRyZXNzIiwiZ2V0QWRkcmVzcyIsInRvSlNPTiIsImdldEpTT04iLCJuZXR3b3JrIiwibWluaW1hbCIsImFkZHIiLCJnZXQiLCJ0b1N0cmluZyIsInVuZGVmaW5lZCIsImZyb21KU09OIiwianNvbiIsImxlbmd0aCIsImZyb21SZXYiLCJnZXRTaXplIiwiZ2V0VmFyU2l6ZSIsInRvV3JpdGVyIiwiYnciLCJ3cml0ZVUzMiIsIndyaXRlSTY0Iiwid3JpdGVWYXJCeXRlcyIsInRvUmF3Iiwid3JpdGVVOCIsInNpemUiLCJ3cml0ZSIsInJlbmRlciIsImZyb21SZWFkZXIiLCJiciIsInJlYWRVMzIiLCJyZWFkSTY0IiwiZnJvbVJhdyIsInJlYWRWYXJCeXRlcyIsInJlYWRVOCIsImRhdGEiLCJyZWFkIiwiZW5jIiwiZnJvbSIsImZyb21UWCIsInR4Iiwib3V0cHV0cyIsImlzQ29pbmJhc2UiLCJpc0NvaW4iLCJvYmoiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FFQSxhLHkxaUJBUVk7MkZBTlosS0FBTUEsQ0FBQUEsTUFB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LEVBQUksQ0FBVCxnQ0FBY0EsS0FBSyxDQUFHeUQsRUFBRSxDQUFDQyxPQUFILENBQVczQixNQUFqQyxDQUFELENBQU4sQ0FId0IsMEJBSXhCLEtBQUtwQyxPQUFMLENBQWU4RCxFQUFFLENBQUM5RCxPQUFsQixDQUp3QiwwQkFLeEIsS0FBS0MsTUFBTCxDQUFjQSxNQUFkLENBTHdCLDBCQU14QixLQUFLTSxLQUFMLENBQWF1RCxFQUFFLENBQUNDLE9BQUgsQ0FBVzFELEtBQVgsRUFBa0JFLEtBQS9CLENBTndCLDBCQU94QixLQUFLRyxNQUFMLENBQWNvRCxFQUFFLENBQUNDLE9BQUgsQ0FBVzFELEtBQVgsRUFBa0JLLE1BQWhDLENBUHdCLDBCQVF4QixLQUFLUixRQUFMLENBQWdCNEQsRUFBRSxDQUFDRSxVQUFILEVBQWhCLENBUndCLDBCQVN4QixLQUFLN0QsSUFBTCxDQUFZMkQsRUFBRSxDQUFDM0QsSUFBSCxFQUFaLENBVHdCLDBCQVV4QixLQUFLRSxLQUFMLENBQWFBLEtBQWIsQ0FWd0IsMEJBV3hCLE1BQU8sS0FBUCxDQUNELENBRUQ7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBRUUsTUFBT3dELENBQUFBLE1BQVAsQ0FBY0MsRUFBZCxDQUFrQnpELEtBQWxCLENBQXlCSixNQUF6QixDQUFpQyxvREFDL0IsTUFBTyxJQUFJLEtBQUosR0FBVzRELE1BQVgsQ0FBa0JDLEVBQWxCLENBQXNCekQsS0FBdEIsQ0FBNkJKLE1BQTdCLENBQVAsQ0FDRCxDQUVEO0FBQ0Y7QUFDQTtBQUNBO0FBQ0EsS0FFRSxNQUFPZ0UsQ0FBQUEsTUFBUCxDQUFjQyxHQUFkLENBQW1CLG9EQUNqQixNQUFPQSxDQUFBQSxHQUFHLFdBQVlyRSxDQUFBQSxJQUF0QixDQUNELENBL1l1QixDQWtaMUI7QUFDQTtBQUNBLEcsMEJBRUFzRSxNQUFNLENBQUNDLE9BQVAsQ0FBaUJ2RSxJQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxyXG4gKiBjb2luLmpzIC0gY29pbiBvYmplY3QgZm9yIGJjb2luXHJcbiAqIENvcHlyaWdodCAoYykgMjAxNC0yMDE1LCBGZWRvciBJbmR1dG55IChNSVQgTGljZW5zZSlcclxuICogQ29weXJpZ2h0IChjKSAyMDE0LTIwMTcsIENocmlzdG9waGVyIEplZmZyZXkgKE1JVCBMaWNlbnNlKS5cclxuICogaHR0cHM6Ly9naXRodWIuY29tL2Jjb2luLW9yZy9iY29pblxyXG4gKi9cclxuXHJcbid1c2Ugc3RyaWN0JztcclxuXHJcbmNvbnN0IGFzc2VydCA9IHJlcXVpcmUoJ2JzZXJ0Jyk7XHJcbmNvbnN0IGJpbyA9IHJlcXVpcmUoJ2J1ZmlvJyk7XHJcbmNvbnN0IHV0aWwgPSByZXF1aXJlKCcuLi91dGlscy91dGlsJyk7XHJcbmNvbnN0IEFtb3VudCA9IHJlcXVpcmUoJy4uL2J0Yy9hbW91bnQnKTtcclxuY29uc3QgT3V0cHV0ID0gcmVxdWlyZSgnLi9vdXRwdXQnKTtcclxuY29uc3QgTmV0d29yayA9IHJlcXVpcmUoJy4uL3Byb3RvY29sL25ldHdvcmsnKTtcclxuY29uc3QgY29uc2Vuc3VzID0gcmVxdWlyZSgnLi4vcHJvdG9jb2wvY29uc2Vuc3VzJyk7XHJcbmNvbnN0IE91dHBvaW50ID0gcmVxdWlyZSgnLi9vdXRwb2ludCcpO1xyXG5jb25zdCB7aW5zcGVjdFN5bWJvbH0gPSByZXF1aXJlKCcuLi91dGlscycpO1xyXG5cclxuLyoqXHJcbiAqIENvaW5cclxuICogUmVwcmVzZW50cyBhbiB1bnNwZW50IG91dHB1dC5cclxuICogQGFsaWFzIG1vZHVsZTpwcmltaXRpdmVzLkNvaW5cclxuICogQGV4dGVuZHMgT3V0cHV0XHJcbiAqIEBwcm9wZXJ0eSB7TnVtYmVyfSB2ZXJzaW9uXHJcbiAqIEBwcm9wZXJ0eSB7TnVtYmVyfSBoZWlnaHRcclxuICogQHByb3BlcnR5IHtBbW91bnR9IHZhbHVlXHJcbiAqIEBwcm9wZXJ0eSB7U2NyaXB0fSBzY3JpcHRcclxuICogQHByb3BlcnR5IHtCb29sZWFufSBjb2luYmFzZVxyXG4gKiBAcHJvcGVydHkge0hhc2h9IGhhc2hcclxuICogQHByb3BlcnR5IHtOdW1iZXJ9IGluZGV4XHJcbiAqL1xyXG5cclxuY2xhc3MgQ29pbiBleHRlbmRzIE91dHB1dCB7XHJcbiAgLyoqXHJcbiAgICogQ3JlYXRlIGEgY29pbi5cclxuICAgKiBAY29uc3RydWN0b3JcclxuICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xyXG4gICAqL1xyXG5cclxuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XHJcbiAgICBzdXBlcigpO1xyXG5cclxuICAgIHRoaXMudmVyc2lvbiA9IDE7XHJcbiAgICB0aGlzLmhlaWdodCA9IC0xO1xyXG4gICAgdGhpcy5jb2luYmFzZSA9IGZhbHNlO1xyXG4gICAgdGhpcy5oYXNoID0gY29uc2Vuc3VzLlpFUk9fSEFTSDtcclxuICAgIHRoaXMuaW5kZXggPSAwO1xyXG5cclxuICAgIGlmIChvcHRpb25zKVxyXG4gICAgICB0aGlzLmZyb21PcHRpb25zKG9wdGlvbnMpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogSW5qZWN0IG9wdGlvbnMgaW50byBjb2luLlxyXG4gICAqIEBwcml2YXRlXHJcbiAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnNcclxuICAgKi9cclxuXHJcbiAgZnJvbU9wdGlvbnMob3B0aW9ucykge1xyXG4gICAgYXNzZXJ0KG9wdGlvbnMsICdDb2luIGRhdGEgaXMgcmVxdWlyZWQuJyk7XHJcblxyXG4gICAgaWYgKG9wdGlvbnMudmVyc2lvbiAhPSBudWxsKSB7XHJcbiAgICAgIGFzc2VydCgob3B0aW9ucy52ZXJzaW9uID4+PiAwKSA9PT0gb3B0aW9ucy52ZXJzaW9uLFxyXG4gICAgICAgICdWZXJzaW9uIG11c3QgYmUgYSB1aW50MzIuJyk7XHJcbiAgICAgIHRoaXMudmVyc2lvbiA9IG9wdGlvbnMudmVyc2lvbjtcclxuICAgIH1cclxuXHJcbiAgICBpZiAob3B0aW9ucy5oZWlnaHQgIT0gbnVsbCkge1xyXG4gICAgICBpZiAob3B0aW9ucy5oZWlnaHQgIT09IC0xKSB7XHJcbiAgICAgICAgYXNzZXJ0KChvcHRpb25zLmhlaWdodCA+Pj4gMCkgPT09IG9wdGlvbnMuaGVpZ2h0LFxyXG4gICAgICAgICAgJ0hlaWdodCBtdXN0IGJlIGEgdWludDMyLicpO1xyXG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gb3B0aW9ucy5oZWlnaHQ7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy5oZWlnaHQgPSAtMTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGlmIChvcHRpb25zLnZhbHVlICE9IG51bGwpIHtcclxuICAgICAgYXNzZXJ0KE51bWJlci5pc1NhZmVJbnRlZ2VyKG9wdGlvbnMudmFsdWUpICYmIG9wdGlvbnMudmFsdWUgPj0gMCxcclxuICAgICAgICAnVmFsdWUgbXVzdCBiZSBhIHVpbnQ2NC4nKTtcclxuICAgICAgdGhpcy52YWx1ZSA9IG9wdGlvbnMudmFsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKG9wdGlvbnMuc2NyaXB0KVxyXG4gICAgICB0aGlzLnNjcmlwdC5mcm9tT3B0aW9ucyhvcHRpb25zLnNjcmlwdCk7XHJcblxyXG4gICAgaWYgKG9wdGlvbnMuY29pbmJhc2UgIT0gbnVsbCkge1xyXG4gICAgICBhc3NlcnQodHlwZW9mIG9wdGlvbnMuY29pbmJhc2UgPT09ICdib29sZWFuJyxcclxuICAgICAgICAnQ29pbmJhc2UgbXVzdCBiZSBhIGJvb2xlYW4uJyk7XHJcbiAgICAgIHRoaXMuY29pbmJhc2UgPSBvcHRpb25zLmNvaW5iYXNlO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChvcHRpb25zLmhhc2ggIT0gbnVsbCkge1xyXG4gICAgICBhc3NlcnQoQnVmZmVyLmlzQnVmZmVyKG9wdGlvbnMuaGFzaCkpO1xyXG4gICAgICB0aGlzLmhhc2ggPSBvcHRpb25zLmhhc2g7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKG9wdGlvbnMuaW5kZXggIT0gbnVsbCkge1xyXG4gICAgICBhc3NlcnQoKG9wdGlvbnMuaW5kZXggPj4+IDApID09PSBvcHRpb25zLmluZGV4LFxyXG4gICAgICAgICdJbmRleCBtdXN0IGJlIGEgdWludDMyLicpO1xyXG4gICAgICB0aGlzLmluZGV4ID0gb3B0aW9ucy5pbmRleDtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEluc3RhbnRpYXRlIENvaW4gZnJvbSBvcHRpb25zIG9iamVjdC5cclxuICAgKiBAcHJpdmF0ZVxyXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zXHJcbiAgICovXHJcblxyXG4gIHN0YXRpYyBmcm9tT3B0aW9ucyhvcHRpb25zKSB7XHJcbiAgICByZXR1cm4gbmV3IHRoaXMoKS5mcm9tT3B0aW9ucyhvcHRpb25zKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIENsb25lIHRoZSBjb2luLlxyXG4gICAqIEBwcml2YXRlXHJcbiAgICogQHJldHVybnMge0NvaW59XHJcbiAgICovXHJcblxyXG4gIGNsb25lKCkge1xyXG4gICAgYXNzZXJ0KGZhbHNlLCAnQ29pbnMgYXJlIG5vdCBjbG9uZWFibGUuJyk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBDYWxjdWxhdGUgbnVtYmVyIG9mIGNvbmZpcm1hdGlvbnMgc2luY2UgY29pbiB3YXMgY3JlYXRlZC5cclxuICAgKiBAcGFyYW0ge051bWJlcj99IGhlaWdodCAtIEN1cnJlbnQgY2hhaW4gaGVpZ2h0LiBOZXR3b3JrXHJcbiAgICogaGVpZ2h0IGlzIHVzZWQgaWYgbm90IHBhc3NlZCBpbi5cclxuICAgKiBAcmV0dXJuIHtOdW1iZXJ9XHJcbiAgICovXHJcblxyXG4gIGdldERlcHRoKGhlaWdodCkge1xyXG4gICAgYXNzZXJ0KHR5cGVvZiBoZWlnaHQgPT09ICdudW1iZXInLCAnTXVzdCBwYXNzIGEgaGVpZ2h0LicpO1xyXG5cclxuICAgIGlmICh0aGlzLmhlaWdodCA9PT0gLTEpXHJcbiAgICAgIHJldHVybiAwO1xyXG5cclxuICAgIGlmIChoZWlnaHQgPT09IC0xKVxyXG4gICAgICByZXR1cm4gMDtcclxuXHJcbiAgICBpZiAoaGVpZ2h0IDwgdGhpcy5oZWlnaHQpXHJcbiAgICAgIHJldHVybiAwO1xyXG5cclxuICAgIHJldHVybiBoZWlnaHQgLSB0aGlzLmhlaWdodCArIDE7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBTZXJpYWxpemUgY29pbiB0byBhIGtleVxyXG4gICAqIHN1aXRhYmxlIGZvciBhIGhhc2ggdGFibGUuXHJcbiAgICogQHJldHVybnMge1N0cmluZ31cclxuICAgKi9cclxuXHJcbiAgdG9LZXkoKSB7XHJcbiAgICByZXR1cm4gT3V0cG9pbnQudG9LZXkodGhpcy5oYXNoLCB0aGlzLmluZGV4KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEluamVjdCBwcm9wZXJ0aWVzIGZyb20gaGFzaCB0YWJsZSBrZXkuXHJcbiAgICogQHByaXZhdGVcclxuICAgKiBAcGFyYW0ge1N0cmluZ30ga2V5XHJcbiAgICogQHJldHVybnMge0NvaW59XHJcbiAgICovXHJcblxyXG4gIGZyb21LZXkoa2V5KSB7XHJcbiAgICBjb25zdCB7aGFzaCwgaW5kZXh9ID0gT3V0cG9pbnQuZnJvbUtleShrZXkpO1xyXG4gICAgdGhpcy5oYXNoID0gaGFzaDtcclxuICAgIHRoaXMuaW5kZXggPSBpbmRleDtcclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogSW5zdGFudGlhdGUgY29pbiBmcm9tIGhhc2ggdGFibGUga2V5LlxyXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBrZXlcclxuICAgKiBAcmV0dXJucyB7Q29pbn1cclxuICAgKi9cclxuXHJcbiAgc3RhdGljIGZyb21LZXkoa2V5KSB7XHJcbiAgICByZXR1cm4gbmV3IHRoaXMoKS5mcm9tS2V5KGtleSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBHZXQgbGl0dGxlLWVuZGlhbiBoYXNoLlxyXG4gICAqIEByZXR1cm5zIHtIYXNofVxyXG4gICAqL1xyXG5cclxuICByaGFzaCgpIHtcclxuICAgIHJldHVybiB1dGlsLnJldkhleCh0aGlzLmhhc2gpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogR2V0IGxpdHRsZS1lbmRpYW4gaGFzaC5cclxuICAgKiBAcmV0dXJucyB7SGFzaH1cclxuICAgKi9cclxuXHJcbiAgdHhpZCgpIHtcclxuICAgIHJldHVybiB0aGlzLnJoYXNoKCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBDb252ZXJ0IHRoZSBjb2luIHRvIGEgbW9yZSB1c2VyLWZyaWVuZGx5IG9iamVjdC5cclxuICAgKiBAcmV0dXJucyB7T2JqZWN0fVxyXG4gICAqL1xyXG5cclxuIFtpbnNwZWN0U3ltYm9sXSgpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHR5cGU6IHRoaXMuZ2V0VHlwZSgpLFxyXG4gICAgICB2ZXJzaW9uOiB0aGlzLnZlcnNpb24sXHJcbiAgICAgIGhlaWdodDogdGhpcy5oZWlnaHQsXHJcbiAgICAgIHZhbHVlOiBBbW91bnQuYnRjKHRoaXMudmFsdWUpLFxyXG4gICAgICBzY3JpcHQ6IHRoaXMuc2NyaXB0LFxyXG4gICAgICBjb2luYmFzZTogdGhpcy5jb2luYmFzZSxcclxuICAgICAgaGFzaDogdGhpcy5oYXNoID8gdXRpbC5yZXZIZXgodGhpcy5oYXNoKSA6IG51bGwsXHJcbiAgICAgIGluZGV4OiB0aGlzLmluZGV4LFxyXG4gICAgICBhZGRyZXNzOiB0aGlzLmdldEFkZHJlc3MoKVxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIENvbnZlcnQgdGhlIGNvaW4gdG8gYW4gb2JqZWN0IHN1aXRhYmxlXHJcbiAgICogZm9yIEpTT04gc2VyaWFsaXphdGlvbi5cclxuICAgKiBAcmV0dXJucyB7T2JqZWN0fVxyXG4gICAqL1xyXG5cclxuICB0b0pTT04oKSB7XHJcbiAgICByZXR1cm4gdGhpcy5nZXRKU09OKCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBDb252ZXJ0IHRoZSBjb2luIHRvIGFuIG9iamVjdCBzdWl0YWJsZVxyXG4gICAqIGZvciBKU09OIHNlcmlhbGl6YXRpb24uIE5vdGUgdGhhdCB0aGUgaGFzaFxyXG4gICAqIHdpbGwgYmUgcmV2ZXJzZWQgdG8gYWJpZGUgYnkgYml0Y29pbmQncyBsZWdhY3lcclxuICAgKiBvZiBsaXR0bGUtZW5kaWFuIHVpbnQyNTZzLlxyXG4gICAqIEBwYXJhbSB7TmV0d29ya30gbmV0d29ya1xyXG4gICAqIEBwYXJhbSB7Qm9vbGVhbn0gbWluaW1hbFxyXG4gICAqIEByZXR1cm5zIHtPYmplY3R9XHJcbiAgICovXHJcblxyXG4gIGdldEpTT04obmV0d29yaywgbWluaW1hbCkge1xyXG4gICAgbGV0IGFkZHIgPSB0aGlzLmdldEFkZHJlc3MoKTtcclxuXHJcbiAgICBuZXR3b3JrID0gTmV0d29yay5nZXQobmV0d29yayk7XHJcblxyXG4gICAgaWYgKGFkZHIpXHJcbiAgICAgIGFkZHIgPSBhZGRyLnRvU3RyaW5nKG5ldHdvcmspO1xyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgIHZlcnNpb246IHRoaXMudmVyc2lvbixcclxuICAgICAgaGVpZ2h0OiB0aGlzLmhlaWdodCxcclxuICAgICAgdmFsdWU6IHRoaXMudmFsdWUsXHJcbiAgICAgIHNjcmlwdDogdGhpcy5zY3JpcHQudG9KU09OKCksXHJcbiAgICAgIGFkZHJlc3M6IGFkZHIsXHJcbiAgICAgIGNvaW5iYXNlOiB0aGlzLmNvaW5iYXNlLFxyXG4gICAgICBoYXNoOiAhbWluaW1hbCA/IHRoaXMucmhhc2goKSA6IHVuZGVmaW5lZCxcclxuICAgICAgaW5kZXg6ICFtaW5pbWFsID8gdGhpcy5pbmRleCA6IHVuZGVmaW5lZFxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEluamVjdCBKU09OIHByb3BlcnRpZXMgaW50byBjb2luLlxyXG4gICAqIEBwcml2YXRlXHJcbiAgICogQHBhcmFtIHtPYmplY3R9IGpzb25cclxuICAgKi9cclxuXHJcbiAgZnJvbUpTT04oanNvbikge1xyXG4gICAgYXNzZXJ0KGpzb24sICdDb2luIGRhdGEgcmVxdWlyZWQuJyk7XHJcbiAgICBhc3NlcnQoKGpzb24udmVyc2lvbiA+Pj4gMCkgPT09IGpzb24udmVyc2lvbiwgJ1ZlcnNpb24gbXVzdCBiZSBhIHVpbnQzMi4nKTtcclxuICAgIGFzc2VydChqc29uLmhlaWdodCA9PT0gLTEgfHwgKGpzb24uaGVpZ2h0ID4+PiAwKSA9PT0ganNvbi5oZWlnaHQsXHJcbiAgICAgICdIZWlnaHQgbXVzdCBiZSBhIHVpbnQzMi4nKTtcclxuICAgIGFzc2VydChOdW1iZXIuaXNTYWZlSW50ZWdlcihqc29uLnZhbHVlKSAmJiBqc29uLnZhbHVlID49IDAsXHJcbiAgICAgICdWYWx1ZSBtdXN0IGJlIGEgdWludDY0LicpO1xyXG4gICAgYXNzZXJ0KHR5cGVvZiBqc29uLmNvaW5iYXNlID09PSAnYm9vbGVhbicsICdDb2luYmFzZSBtdXN0IGJlIGEgYm9vbGVhbi4nKTtcclxuXHJcbiAgICB0aGlzLnZlcnNpb24gPSBqc29uLnZlcnNpb247XHJcbiAgICB0aGlzLmhlaWdodCA9IGpzb24uaGVpZ2h0O1xyXG4gICAgdGhpcy52YWx1ZSA9IGpzb24udmFsdWU7XHJcbiAgICB0aGlzLnNjcmlwdC5mcm9tSlNPTihqc29uLnNjcmlwdCk7XHJcbiAgICB0aGlzLmNvaW5iYXNlID0ganNvbi5jb2luYmFzZTtcclxuXHJcbiAgICBpZiAoanNvbi5oYXNoICE9IG51bGwpIHtcclxuICAgICAgYXNzZXJ0KHR5cGVvZiBqc29uLmhhc2ggPT09ICdzdHJpbmcnLCAnSGFzaCBtdXN0IGJlIGEgc3RyaW5nLicpO1xyXG4gICAgICBhc3NlcnQoanNvbi5oYXNoLmxlbmd0aCA9PT0gNjQsICdIYXNoIG11c3QgYmUgYSBzdHJpbmcuJyk7XHJcbiAgICAgIGFzc2VydCgoanNvbi5pbmRleCA+Pj4gMCkgPT09IGpzb24uaW5kZXgsICdJbmRleCBtdXN0IGJlIGEgdWludDMyLicpO1xyXG4gICAgICB0aGlzLmhhc2ggPSB1dGlsLmZyb21SZXYoanNvbi5oYXNoKTtcclxuICAgICAgdGhpcy5pbmRleCA9IGpzb24uaW5kZXg7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBJbnN0YW50aWF0ZSBhbiBDb2luIGZyb20gYSBqc29uaWZpZWQgY29pbiBvYmplY3QuXHJcbiAgICogQHBhcmFtIHtPYmplY3R9IGpzb24gLSBUaGUganNvbmlmaWVkIGNvaW4gb2JqZWN0LlxyXG4gICAqIEByZXR1cm5zIHtDb2lufVxyXG4gICAqL1xyXG5cclxuICBzdGF0aWMgZnJvbUpTT04oanNvbikge1xyXG4gICAgcmV0dXJuIG5ldyB0aGlzKCkuZnJvbUpTT04oanNvbik7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBDYWxjdWxhdGUgc2l6ZSBvZiBjb2luLlxyXG4gICAqIEByZXR1cm5zIHtOdW1iZXJ9XHJcbiAgICovXHJcblxyXG4gIGdldFNpemUoKSB7XHJcbiAgICByZXR1cm4gMTcgKyB0aGlzLnNjcmlwdC5nZXRWYXJTaXplKCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBXcml0ZSB0aGUgY29pbiB0byBhIGJ1ZmZlciB3cml0ZXIuXHJcbiAgICogQHBhcmFtIHtCdWZmZXJXcml0ZXJ9IGJ3XHJcbiAgICovXHJcblxyXG4gIHRvV3JpdGVyKGJ3KSB7XHJcbiAgICBsZXQgaGVpZ2h0ID0gdGhpcy5oZWlnaHQ7XHJcblxyXG4gICAgaWYgKGhlaWdodCA9PT0gLTEpXHJcbiAgICAgIGhlaWdodCA9IDB4N2ZmZmZmZmY7XHJcblxyXG4gICAgYncud3JpdGVVMzIodGhpcy52ZXJzaW9uKTtcclxuICAgIGJ3LndyaXRlVTMyKGhlaWdodCk7XHJcbiAgICBidy53cml0ZUk2NCh0aGlzLnZhbHVlKTtcclxuICAgIGJ3LndyaXRlVmFyQnl0ZXModGhpcy5zY3JpcHQudG9SYXcoKSk7XHJcbiAgICBidy53cml0ZVU4KHRoaXMuY29pbmJhc2UgPyAxIDogMCk7XHJcblxyXG4gICAgcmV0dXJuIGJ3O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU2VyaWFsaXplIHRoZSBjb2luLlxyXG4gICAqIEByZXR1cm5zIHtCdWZmZXJ8U3RyaW5nfVxyXG4gICAqL1xyXG5cclxuICB0b1JhdygpIHtcclxuICAgIGNvbnN0IHNpemUgPSB0aGlzLmdldFNpemUoKTtcclxuICAgIHJldHVybiB0aGlzLnRvV3JpdGVyKGJpby53cml0ZShzaXplKSkucmVuZGVyKCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBJbmplY3QgcHJvcGVydGllcyBmcm9tIHNlcmlhbGl6ZWQgYnVmZmVyIHdyaXRlci5cclxuICAgKiBAcHJpdmF0ZVxyXG4gICAqIEBwYXJhbSB7QnVmZmVyUmVhZGVyfSBiclxyXG4gICAqL1xyXG5cclxuICBmcm9tUmVhZGVyKGJyKSB7XHJcbiAgICB0aGlzLnZlcnNpb24gPSBici5yZWFkVTMyKCk7XHJcbiAgICB0aGlzLmhlaWdodCA9IGJyLnJlYWRVMzIoKTtcclxuICAgIHRoaXMudmFsdWUgPSBici5yZWFkSTY0KCk7XHJcbiAgICB0aGlzLnNjcmlwdC5mcm9tUmF3KGJyLnJlYWRWYXJCeXRlcygpKTtcclxuICAgIHRoaXMuY29pbmJhc2UgPSBici5yZWFkVTgoKSA9PT0gMTtcclxuXHJcbiAgICBpZiAodGhpcy5oZWlnaHQgPT09IDB4N2ZmZmZmZmYpXHJcbiAgICAgIHRoaXMuaGVpZ2h0ID0gLTE7XHJcblxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBJbmplY3QgcHJvcGVydGllcyBmcm9tIHNlcmlhbGl6ZWQgZGF0YS5cclxuICAgKiBAcHJpdmF0ZVxyXG4gICAqIEBwYXJhbSB7QnVmZmVyfSBkYXRhXHJcbiAgICovXHJcblxyXG4gIGZyb21SYXcoZGF0YSkge1xyXG4gICAgcmV0dXJuIHRoaXMuZnJvbVJlYWRlcihiaW8ucmVhZChkYXRhKSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBJbnN0YW50aWF0ZSBhIGNvaW4gZnJvbSBhIGJ1ZmZlciByZWFkZXIuXHJcbiAgICogQHBhcmFtIHtCdWZmZXJSZWFkZXJ9IGJyXHJcbiAgICogQHJldHVybnMge0NvaW59XHJcbiAgICovXHJcblxyXG4gIHN0YXRpYyBmcm9tUmVhZGVyKGJyKSB7XHJcbiAgICByZXR1cm4gbmV3IHRoaXMoKS5mcm9tUmVhZGVyKGJyKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEluc3RhbnRpYXRlIGEgY29pbiBmcm9tIGEgc2VyaWFsaXplZCBCdWZmZXIuXHJcbiAgICogQHBhcmFtIHtCdWZmZXJ9IGRhdGFcclxuICAgKiBAcGFyYW0ge1N0cmluZz99IGVuYyAtIEVuY29kaW5nLCBjYW4gYmUgYCdoZXgnYCBvciBudWxsLlxyXG4gICAqIEByZXR1cm5zIHtDb2lufVxyXG4gICAqL1xyXG5cclxuICBzdGF0aWMgZnJvbVJhdyhkYXRhLCBlbmMpIHtcclxuICAgIGlmICh0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZycpXHJcbiAgICAgIGRhdGEgPSBCdWZmZXIuZnJvbShkYXRhLCBlbmMpO1xyXG4gICAgcmV0dXJuIG5ldyB0aGlzKCkuZnJvbVJhdyhkYXRhKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEluamVjdCBwcm9wZXJ0aWVzIGZyb20gVFguXHJcbiAgICogQHBhcmFtIHtUWH0gdHhcclxuICAgKiBAcGFyYW0ge051bWJlcn0gaW5kZXhcclxuICAgKi9cclxuXHJcbiAgZnJvbVRYKHR4LCBpbmRleCwgaGVpZ2h0KSB7XHJcbiAgICBhc3NlcnQodHlwZW9mIGluZGV4ID09PSAnbnVtYmVyJyk7XHJcbiAgICBhc3NlcnQodHlwZW9mIGhlaWdodCA9PT0gJ251bWJlcicpO1xyXG4gICAgYXNzZXJ0KGluZGV4ID49IDAgJiYgaW5kZXggPCB0eC5vdXRwdXRzLmxlbmd0aCk7XHJcbiAgICB0aGlzLnZlcnNpb24gPSB0eC52ZXJzaW9uO1xyXG4gICAgdGhpcy5oZWlnaHQgPSBoZWlnaHQ7XHJcbiAgICB0aGlzLnZhbHVlID0gdHgub3V0cHV0c1tpbmRleF0udmFsdWU7XHJcbiAgICB0aGlzLnNjcmlwdCA9IHR4Lm91dHB1dHNbaW5kZXhdLnNjcmlwdDtcclxuICAgIHRoaXMuY29pbmJhc2UgPSB0eC5pc0NvaW5iYXNlKCk7XHJcbiAgICB0aGlzLmhhc2ggPSB0eC5oYXNoKCk7XHJcbiAgICB0aGlzLmluZGV4ID0gaW5kZXg7XHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEluc3RhbnRpYXRlIGEgY29pbiBmcm9tIGEgVFhcclxuICAgKiBAcGFyYW0ge1RYfSB0eFxyXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBpbmRleCAtIE91dHB1dCBpbmRleC5cclxuICAgKiBAcmV0dXJucyB7Q29pbn1cclxuICAgKi9cclxuXHJcbiAgc3RhdGljIGZyb21UWCh0eCwgaW5kZXgsIGhlaWdodCkge1xyXG4gICAgcmV0dXJuIG5ldyB0aGlzKCkuZnJvbVRYKHR4LCBpbmRleCwgaGVpZ2h0KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFRlc3QgYW4gb2JqZWN0IHRvIHNlZSBpZiBpdCBpcyBhIENvaW4uXHJcbiAgICogQHBhcmFtIHtPYmplY3R9IG9ialxyXG4gICAqIEByZXR1cm5zIHtCb29sZWFufVxyXG4gICAqL1xyXG5cclxuICBzdGF0aWMgaXNDb2luKG9iaikge1xyXG4gICAgcmV0dXJuIG9iaiBpbnN0YW5jZW9mIENvaW47XHJcbiAgfVxyXG59XHJcblxyXG4vKlxyXG4gKiBFeHBvc2VcclxuICovXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IENvaW47XHJcbiJdfQ==